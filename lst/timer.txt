; generated by ARM C/C++ Compiler, 5.03 [Build 24]
; commandline ArmCC [--list --debug -c --asm --interleave -o.\obj\timer.o --asm_dir=.\lst\ --list_dir=.\lst\ --depend=.\obj\timer.d --cpu=Cortex-M3 --apcs=interwork -O0 -I.\core -I.\devices -I.\app -I.\boot -I.\app\RES\Num -I.\app\RES\Pic -I"D:\Program Files\Keil\ARM\RV31\INC" -I"D:\Program Files\Keil\ARM\CMSIS\Include" -I"D:\Program Files\Keil\ARM\Inc\ST\STM32F10x" --omf_browse=.\obj\timer.crf devices\timer.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                          REQUIRE _printf_percent
                          REQUIRE _printf_d
                          REQUIRE _printf_int_dec
                  TIM3_IRQHandler PROC
;;;5      //定时器3中断服务程序	 
;;;6      void TIM3_IRQHandler(void)
000000  48fc              LDR      r0,|L1.1012|
;;;7      { 		    		  			    
;;;8      	if ((TIM3->SR & 0x0001)) //检查指定的TIM中断发生与否:TIM 中断源 
000002  8800              LDRH     r0,[r0,#0]
000004  f0100f01          TST      r0,#1
000008  d00d              BEQ      |L1.38|
;;;9      	{
;;;10     		TIM3->SR &= (~0x0001);  //清除TIMx的中断待处理位:TIM 中断源 
00000a  48fa              LDR      r0,|L1.1012|
00000c  8800              LDRH     r0,[r0,#0]
00000e  f0200001          BIC      r0,r0,#1
000012  49f8              LDR      r1,|L1.1012|
000014  8008              STRH     r0,[r1,#0]
;;;11     		LED_G=!LED_G;
000016  48f8              LDR      r0,|L1.1016|
000018  6800              LDR      r0,[r0,#0]
00001a  b908              CBNZ     r0,|L1.32|
00001c  2001              MOVS     r0,#1
00001e  e000              B        |L1.34|
                  |L1.32|
000020  2000              MOVS     r0,#0
                  |L1.34|
000022  49f5              LDR      r1,|L1.1016|
000024  6008              STR      r0,[r1,#0]
                  |L1.38|
;;;12     	}
;;;13     }
000026  4770              BX       lr
;;;14     //通用定时器3中断初始化
                          ENDP

                  TIM3_Int_Init PROC
;;;18     //这里使用的是定时器3!
;;;19     void TIM3_Int_Init(u16 arr,u16 psc)
000028  b570              PUSH     {r4-r6,lr}
;;;20     {
00002a  4605              MOV      r5,r0
00002c  460c              MOV      r4,r1
;;;21     	RCC->APB1ENR |= 1<<1; //时钟使能
00002e  48f3              LDR      r0,|L1.1020|
000030  69c0              LDR      r0,[r0,#0x1c]
000032  f0400002          ORR      r0,r0,#2
000036  49f1              LDR      r1,|L1.1020|
000038  61c8              STR      r0,[r1,#0x1c]
;;;22     
;;;23     	TIM3->ARR = arr; //设置在下一个更新事件装入活动的自动重装载寄存器周期的值	 计数到5000为500ms
00003a  48ee              LDR      r0,|L1.1012|
00003c  301c              ADDS     r0,r0,#0x1c
00003e  8005              STRH     r5,[r0,#0]
;;;24     	TIM3->PSC =psc; //设置用来作为TIMx时钟频率除数的预分频值  10Khz的计数频率  
000040  1f00              SUBS     r0,r0,#4
000042  8004              STRH     r4,[r0,#0]
;;;25     	TIM3->CR1 &= ~(1<<8); //设置时钟分割:TDTS = Tck_tim
000044  48eb              LDR      r0,|L1.1012|
000046  3810              SUBS     r0,r0,#0x10
000048  8800              LDRH     r0,[r0,#0]
00004a  f4207080          BIC      r0,r0,#0x100
00004e  49e9              LDR      r1,|L1.1012|
000050  3910              SUBS     r1,r1,#0x10
000052  8008              STRH     r0,[r1,#0]
;;;26     	TIM3->CR1 &= ~(1<<4) ;  //TIM向上计数模式
000054  4608              MOV      r0,r1
000056  8800              LDRH     r0,[r0,#0]
000058  f0200010          BIC      r0,r0,#0x10
00005c  8008              STRH     r0,[r1,#0]
;;;27     	TIM3->DIER |= 0x0041;
00005e  48e5              LDR      r0,|L1.1012|
000060  1f00              SUBS     r0,r0,#4
000062  8800              LDRH     r0,[r0,#0]
000064  f0400041          ORR      r0,r0,#0x41
000068  49e2              LDR      r1,|L1.1012|
00006a  1f09              SUBS     r1,r1,#4
00006c  8008              STRH     r0,[r1,#0]
;;;28     	
;;;29     	register_nvic(2,0,3,TIM3_IRQChannel);
00006e  231d              MOVS     r3,#0x1d
000070  2203              MOVS     r2,#3
000072  2100              MOVS     r1,#0
000074  2002              MOVS     r0,#2
000076  f7fffffe          BL       register_nvic
;;;30     	//先占优先级0级
;;;31     	//从优先级3级
;;;32     	//IRQ通道被使能
;;;33     	//根据NVIC_InitStruct中指定的参数初始化外设NVIC寄存器
;;;34     	//使能TIMx外设				
;;;35     	TIM3->CR1 |= 1<<0;
00007a  48de              LDR      r0,|L1.1012|
00007c  3810              SUBS     r0,r0,#0x10
00007e  8800              LDRH     r0,[r0,#0]
000080  f0400001          ORR      r0,r0,#1
000084  49db              LDR      r1,|L1.1012|
000086  3910              SUBS     r1,r1,#0x10
000088  8008              STRH     r0,[r1,#0]
;;;36     	
;;;37     }
00008a  bd70              POP      {r4-r6,pc}
;;;38     //TIM3 PWM部分初始化 
                          ENDP

                  TIM3_PWM_Init PROC
;;;41     //psc：时钟预分频数
;;;42     void TIM3_PWM_Init(u16 arr,u16 psc)
00008c  4adb              LDR      r2,|L1.1020|
;;;43     {
;;;44     	RCC->APB1ENR |= 1<<1; //时钟使能
00008e  69d2              LDR      r2,[r2,#0x1c]
000090  f0420202          ORR      r2,r2,#2
000094  4bd9              LDR      r3,|L1.1020|
000096  61da              STR      r2,[r3,#0x1c]
;;;45      	RCC->APB2ENR |= 1<<0 | 1<<3;
000098  461a              MOV      r2,r3
00009a  6992              LDR      r2,[r2,#0x18]
00009c  f0420209          ORR      r2,r2,#9
0000a0  619a              STR      r2,[r3,#0x18]
;;;46     	//GPIO_PinRemapConfig(GPIO_PartialRemap_TIM3, ENABLE); //Timer3部分重映射  TIM3_CH2->PB5 0x001A0800
;;;47     	GPIOB->CRL &= 0xff0fffff;
0000a2  4ad7              LDR      r2,|L1.1024|
0000a4  6812              LDR      r2,[r2,#0]
0000a6  f4220270          BIC      r2,r2,#0xf00000
0000aa  4bd5              LDR      r3,|L1.1024|
0000ac  601a              STR      r2,[r3,#0]
;;;48     	GPIOB->CRL |= 0x00b00000;//设置该引脚为复用输出功能,输出TIM3 CH2的PWM脉冲波形//TIM_CH2 //复用推挽输出
0000ae  461a              MOV      r2,r3
0000b0  6812              LDR      r2,[r2,#0]
0000b2  f4420230          ORR      r2,r2,#0xb00000
0000b6  601a              STR      r2,[r3,#0]
;;;49     	//GPIO_WriteBit(GPIOA, GPIO_Pin_7,Bit_SET); // PA7上拉	
;;;50     	RCC->APB2ENR|=1<<0;     //开启辅助时钟	   
0000b8  4ad0              LDR      r2,|L1.1020|
0000ba  6992              LDR      r2,[r2,#0x18]
0000bc  f0420201          ORR      r2,r2,#1
0000c0  4bce              LDR      r3,|L1.1020|
0000c2  619a              STR      r2,[r3,#0x18]
;;;51     	AFIO->MAPR&=0XFFFFF3FF; //清除MAPR的[11:10]
0000c4  4acf              LDR      r2,|L1.1028|
0000c6  6852              LDR      r2,[r2,#4]
0000c8  f4226240          BIC      r2,r2,#0xc00
0000cc  4bcd              LDR      r3,|L1.1028|
0000ce  605a              STR      r2,[r3,#4]
;;;52     	AFIO->MAPR|=1<<11;      //部分重映像,TIM3_CH2->PB5
0000d0  461a              MOV      r2,r3
0000d2  6852              LDR      r2,[r2,#4]
0000d4  f4426200          ORR      r2,r2,#0x800
0000d8  605a              STR      r2,[r3,#4]
;;;53     	
;;;54     
;;;55     	TIM3->ARR = arr; //设置在下一个更新事件装入活动的自动重装载寄存器周期的值	 80K
0000da  4ac6              LDR      r2,|L1.1012|
0000dc  321c              ADDS     r2,r2,#0x1c
0000de  8010              STRH     r0,[r2,#0]
;;;56     	TIM3->PSC =psc; //设置用来作为TIMx时钟频率除数的预分频值  不分频
0000e0  1f12              SUBS     r2,r2,#4
0000e2  8011              STRH     r1,[r2,#0]
;;;57     	TIM3->CR1 &= ~(1<<8); //设置时钟分割:TDTS = Tck_tim
0000e4  4ac3              LDR      r2,|L1.1012|
0000e6  3a10              SUBS     r2,r2,#0x10
0000e8  8812              LDRH     r2,[r2,#0]
0000ea  f4227280          BIC      r2,r2,#0x100
0000ee  4bc1              LDR      r3,|L1.1012|
0000f0  3b10              SUBS     r3,r3,#0x10
0000f2  801a              STRH     r2,[r3,#0]
;;;58     	TIM3->CR1 &= ~(1<<4) ;  //TIM向上计数模式
0000f4  461a              MOV      r2,r3
0000f6  8812              LDRH     r2,[r2,#0]
0000f8  f0220210          BIC      r2,r2,#0x10
0000fc  801a              STRH     r2,[r3,#0]
;;;59     	 
;;;60     	TIM3->CCMR1 |= 7<<12; //选择定时器模式:TIM脉冲宽度调制模式2
0000fe  4abd              LDR      r2,|L1.1012|
000100  3208              ADDS     r2,r2,#8
000102  8812              LDRH     r2,[r2,#0]
000104  f44242e0          ORR      r2,r2,#0x7000
000108  4bba              LDR      r3,|L1.1012|
00010a  3308              ADDS     r3,r3,#8
00010c  801a              STRH     r2,[r3,#0]
;;;61     	TIM3->CCMR1 |= 1<<11; //比较输出使能
00010e  461a              MOV      r2,r3
000110  8812              LDRH     r2,[r2,#0]
000112  f4426200          ORR      r2,r2,#0x800
000116  801a              STRH     r2,[r3,#0]
;;;62     	TIM3->CCR2 = 0; //设置待装入捕获比较寄存器的脉冲值
000118  2200              MOVS     r2,#0
00011a  4bb6              LDR      r3,|L1.1012|
00011c  3328              ADDS     r3,r3,#0x28
00011e  801a              STRH     r2,[r3,#0]
;;;63     	TIM3->CCER |= (0<<4); //输出极性:TIM输出比较极性高
000120  4ab4              LDR      r2,|L1.1012|
000122  3210              ADDS     r2,r2,#0x10
000124  8812              LDRH     r2,[r2,#0]
000126  4bb3              LDR      r3,|L1.1012|
000128  3310              ADDS     r3,r3,#0x10
00012a  801a              STRH     r2,[r3,#0]
;;;64     	
;;;65     	TIM3->CR1 |= 0x0080;
00012c  4ab1              LDR      r2,|L1.1012|
00012e  3a10              SUBS     r2,r2,#0x10
000130  8812              LDRH     r2,[r2,#0]
000132  f0420280          ORR      r2,r2,#0x80
000136  4baf              LDR      r3,|L1.1012|
000138  3b10              SUBS     r3,r3,#0x10
00013a  801a              STRH     r2,[r3,#0]
;;;66     	TIM3->CR1 |= 0x0001;//使能TIMx外设											  
00013c  461a              MOV      r2,r3
00013e  8812              LDRH     r2,[r2,#0]
000140  f0420201          ORR      r2,r2,#1
000144  801a              STRH     r2,[r3,#0]
;;;67     }
000146  4770              BX       lr
;;;68     //定时器5通道1输入捕获配置
                          ENDP

                  TIM5_Cap_Init PROC
;;;70     //psc：时钟预分频数
;;;71     void TIM5_Cap_Init(u16 arr,u16 psc)
000148  b570              PUSH     {r4-r6,lr}
;;;72     {
00014a  4604              MOV      r4,r0
00014c  460d              MOV      r5,r1
;;;73     	RCC->APB1ENR |= 0x00000008;
00014e  48ab              LDR      r0,|L1.1020|
000150  69c0              LDR      r0,[r0,#0x1c]
000152  f0400008          ORR      r0,r0,#8
000156  49a9              LDR      r1,|L1.1020|
000158  61c8              STR      r0,[r1,#0x1c]
;;;74     	RCC->APB2ENR |= 0x00000004;			//使能GPIO外设和AFIO复用功能模块时钟使能
00015a  4608              MOV      r0,r1
00015c  6980              LDR      r0,[r0,#0x18]
00015e  f0400004          ORR      r0,r0,#4
000162  6188              STR      r0,[r1,#0x18]
;;;75     
;;;76     //*********************************************************************
;;;77     	GPIOA->BRR = 1<<0;//PA0 清除之前设置
000164  2001              MOVS     r0,#1
000166  49a8              LDR      r1,|L1.1032|
000168  6008              STR      r0,[r1,#0]
;;;78     	GPIOA->CRL |= 0;//PA0 输入
00016a  48a7              LDR      r0,|L1.1032|
00016c  3814              SUBS     r0,r0,#0x14
00016e  6800              LDR      r0,[r0,#0]
000170  49a5              LDR      r1,|L1.1032|
000172  3914              SUBS     r1,r1,#0x14
000174  6008              STR      r0,[r1,#0]
;;;79     	GPIOA->BRR = 1<<0;//PA0 下拉
000176  2001              MOVS     r0,#1
000178  49a3              LDR      r1,|L1.1032|
00017a  6008              STR      r0,[r1,#0]
;;;80     //*********************************************************************
;;;81     	//设定计数器自动重装值 最大10ms溢出  //预分频器,1M的计数频率,1us加1. 设置时钟分割:TDTS = Tck_tim//TIM向上计数模式
;;;82     	TIM5->ARR = arr;
00017c  48a3              LDR      r0,|L1.1036|
00017e  8004              STRH     r4,[r0,#0]
;;;83     	TIM5->PSC = psc;
000180  1f00              SUBS     r0,r0,#4
000182  8005              STRH     r5,[r0,#0]
;;;84     	TIM5->CR1 &= ~(1<<8);
000184  48a1              LDR      r0,|L1.1036|
000186  382c              SUBS     r0,r0,#0x2c
000188  8800              LDRH     r0,[r0,#0]
00018a  f4207080          BIC      r0,r0,#0x100
00018e  499f              LDR      r1,|L1.1036|
000190  392c              SUBS     r1,r1,#0x2c
000192  8008              STRH     r0,[r1,#0]
;;;85     	TIM5->CR1 &= ~(1<<4);
000194  4608              MOV      r0,r1
000196  8800              LDRH     r0,[r0,#0]
000198  f0200010          BIC      r0,r0,#0x10
00019c  8008              STRH     r0,[r1,#0]
;;;86     	
;;;87     	TIM5->CCMR1 |= 1<<0;
00019e  489b              LDR      r0,|L1.1036|
0001a0  3814              SUBS     r0,r0,#0x14
0001a2  8800              LDRH     r0,[r0,#0]
0001a4  f0400001          ORR      r0,r0,#1
0001a8  4998              LDR      r1,|L1.1036|
0001aa  3914              SUBS     r1,r1,#0x14
0001ac  8008              STRH     r0,[r1,#0]
;;;88     	TIM5->CCER &= ~(1<<1);
0001ae  4897              LDR      r0,|L1.1036|
0001b0  380c              SUBS     r0,r0,#0xc
0001b2  8800              LDRH     r0,[r0,#0]
0001b4  f0200002          BIC      r0,r0,#2
0001b8  4994              LDR      r1,|L1.1036|
0001ba  390c              SUBS     r1,r1,#0xc
0001bc  8008              STRH     r0,[r1,#0]
;;;89     	TIM5->CCMR1 &= ~(0x3<<2);
0001be  4893              LDR      r0,|L1.1036|
0001c0  3814              SUBS     r0,r0,#0x14
0001c2  8800              LDRH     r0,[r0,#0]
0001c4  f020000c          BIC      r0,r0,#0xc
0001c8  4990              LDR      r1,|L1.1036|
0001ca  3914              SUBS     r1,r1,#0x14
0001cc  8008              STRH     r0,[r1,#0]
;;;90     	TIM5->CCMR1 &= ~(0xf<<4);
0001ce  4608              MOV      r0,r1
0001d0  8800              LDRH     r0,[r0,#0]
0001d2  f02000f0          BIC      r0,r0,#0xf0
0001d6  8008              STRH     r0,[r1,#0]
;;;91     
;;;92       //使能定时器5
;;;93     	TIM5->CR1 |= 1<<0;
0001d8  488c              LDR      r0,|L1.1036|
0001da  382c              SUBS     r0,r0,#0x2c
0001dc  8800              LDRH     r0,[r0,#0]
0001de  f0400001          ORR      r0,r0,#1
0001e2  498a              LDR      r1,|L1.1036|
0001e4  392c              SUBS     r1,r1,#0x2c
0001e6  8008              STRH     r0,[r1,#0]
;;;94       TIM5->DMAR |= 1<<0 | 1<<1;//允许更新中断 ,允许CC1IE捕获中断	
0001e8  4888              LDR      r0,|L1.1036|
0001ea  3020              ADDS     r0,r0,#0x20
0001ec  8800              LDRH     r0,[r0,#0]
0001ee  f0400003          ORR      r0,r0,#3
0001f2  4986              LDR      r1,|L1.1036|
0001f4  3120              ADDS     r1,r1,#0x20
0001f6  8008              STRH     r0,[r1,#0]
;;;95     
;;;96     
;;;97     	//TIM3中断
;;;98     	//先占优先级0级
;;;99     	//从优先级3级
;;;100    	//IRQ通道被使能
;;;101    	register_nvic(2,2,0,TIM5_IRQChannel);
0001f8  2332              MOVS     r3,#0x32
0001fa  2200              MOVS     r2,#0
0001fc  2102              MOVS     r1,#2
0001fe  4608              MOV      r0,r1
000200  f7fffffe          BL       register_nvic
;;;102    	   
;;;103    }
000204  bd70              POP      {r4-r6,pc}
;;;104    
                          ENDP

                  TIM5_IRQHandler PROC
;;;111    //定时器5中断服务程序	 
;;;112    void TIM5_IRQHandler(void)
000206  4882              LDR      r0,|L1.1040|
;;;113    { 		    
;;;114    	if((TIM5CH1_CAPTURE_STA&0X80)==0)//还未成功捕获	
000208  7800              LDRB     r0,[r0,#0]  ; TIM5CH1_CAPTURE_STA
00020a  f0100f80          TST      r0,#0x80
00020e  d161              BNE      |L1.724|
;;;115    	{	  
;;;116    		if ((TIM5->SR & 1) != 0 && (TIM5->DIER & 1) != 0)
000210  487e              LDR      r0,|L1.1036|
000212  381c              SUBS     r0,r0,#0x1c
000214  8800              LDRH     r0,[r0,#0]
000216  f0100f01          TST      r0,#1
00021a  d020              BEQ      |L1.606|
00021c  487b              LDR      r0,|L1.1036|
00021e  3820              SUBS     r0,r0,#0x20
000220  8800              LDRH     r0,[r0,#0]
000222  f0100f01          TST      r0,#1
000226  d01a              BEQ      |L1.606|
;;;117    		{
;;;118    			if(TIM5CH1_CAPTURE_STA&0X40)//已经捕获到高电平了
000228  4879              LDR      r0,|L1.1040|
00022a  7800              LDRB     r0,[r0,#0]  ; TIM5CH1_CAPTURE_STA
00022c  f0100f40          TST      r0,#0x40
000230  d015              BEQ      |L1.606|
;;;119    			{
;;;120    				if((TIM5CH1_CAPTURE_STA&0X3F)==0X3F)//高电平太长了
000232  4877              LDR      r0,|L1.1040|
000234  7800              LDRB     r0,[r0,#0]  ; TIM5CH1_CAPTURE_STA
000236  f000003f          AND      r0,r0,#0x3f
00023a  283f              CMP      r0,#0x3f
00023c  d10a              BNE      |L1.596|
;;;121    				{
;;;122    					TIM5CH1_CAPTURE_STA|=0X80;//标记成功捕获了一次
00023e  4874              LDR      r0,|L1.1040|
000240  7800              LDRB     r0,[r0,#0]  ; TIM5CH1_CAPTURE_STA
000242  f0400080          ORR      r0,r0,#0x80
000246  4972              LDR      r1,|L1.1040|
000248  7008              STRB     r0,[r1,#0]
;;;123    					TIM5CH1_CAPTURE_VAL=0XFFFF;
00024a  f64f70ff          MOV      r0,#0xffff
00024e  4971              LDR      r1,|L1.1044|
000250  8008              STRH     r0,[r1,#0]
000252  e004              B        |L1.606|
                  |L1.596|
;;;124    				}else TIM5CH1_CAPTURE_STA++;
000254  486e              LDR      r0,|L1.1040|
000256  7800              LDRB     r0,[r0,#0]  ; TIM5CH1_CAPTURE_STA
000258  1c40              ADDS     r0,r0,#1
00025a  496d              LDR      r1,|L1.1040|
00025c  7008              STRB     r0,[r1,#0]
                  |L1.606|
;;;125    			}	 
;;;126    		}
;;;127    	if ((TIM5->SR & 1<<1) != 0 && (TIM5->DIER & 1<<1) != 0)//捕获1发生捕获事件
00025e  486b              LDR      r0,|L1.1036|
000260  381c              SUBS     r0,r0,#0x1c
000262  8800              LDRH     r0,[r0,#0]
000264  f0100f02          TST      r0,#2
000268  d034              BEQ      |L1.724|
00026a  4868              LDR      r0,|L1.1036|
00026c  3820              SUBS     r0,r0,#0x20
00026e  8800              LDRH     r0,[r0,#0]
000270  f0100f02          TST      r0,#2
000274  d02e              BEQ      |L1.724|
;;;128    		{	
;;;129    			if(TIM5CH1_CAPTURE_STA&0X40)		//捕获到一个下降沿 		
000276  4866              LDR      r0,|L1.1040|
000278  7800              LDRB     r0,[r0,#0]  ; TIM5CH1_CAPTURE_STA
00027a  f0100f40          TST      r0,#0x40
00027e  d013              BEQ      |L1.680|
;;;130    			{	  			
;;;131    				TIM5CH1_CAPTURE_STA|=0X80;		//标记成功捕获到一次上升沿
000280  4863              LDR      r0,|L1.1040|
000282  7800              LDRB     r0,[r0,#0]  ; TIM5CH1_CAPTURE_STA
000284  f0400080          ORR      r0,r0,#0x80
000288  4961              LDR      r1,|L1.1040|
00028a  7008              STRB     r0,[r1,#0]
;;;132    				TIM5CH1_CAPTURE_VAL= TIM5->CCR1;
00028c  485f              LDR      r0,|L1.1036|
00028e  3008              ADDS     r0,r0,#8
000290  8800              LDRH     r0,[r0,#0]
000292  4960              LDR      r1,|L1.1044|
000294  8008              STRH     r0,[r1,#0]
;;;133    		   	TIM5->CCER &= ~(1<<1); //CC1P=0 设置为上升沿捕获
000296  485d              LDR      r0,|L1.1036|
000298  380c              SUBS     r0,r0,#0xc
00029a  8800              LDRH     r0,[r0,#0]
00029c  f0200002          BIC      r0,r0,#2
0002a0  495a              LDR      r1,|L1.1036|
0002a2  390c              SUBS     r1,r1,#0xc
0002a4  8008              STRH     r0,[r1,#0]
0002a6  e015              B        |L1.724|
                  |L1.680|
;;;134    			}else  								//还未开始,第一次捕获上升沿
;;;135    			{
;;;136    				TIM5CH1_CAPTURE_STA=0;			//清空
0002a8  2000              MOVS     r0,#0
0002aa  4959              LDR      r1,|L1.1040|
0002ac  7008              STRB     r0,[r1,#0]
;;;137    				TIM5CH1_CAPTURE_VAL=0;
0002ae  4959              LDR      r1,|L1.1044|
0002b0  8008              STRH     r0,[r1,#0]
;;;138    	 			TIM5->CNT = 0;
0002b2  4956              LDR      r1,|L1.1036|
0002b4  3908              SUBS     r1,r1,#8
0002b6  8008              STRH     r0,[r1,#0]
;;;139    				TIM5CH1_CAPTURE_STA|=0X40;		//标记捕获到了上升沿
0002b8  4855              LDR      r0,|L1.1040|
0002ba  7800              LDRB     r0,[r0,#0]  ; TIM5CH1_CAPTURE_STA
0002bc  f0400040          ORR      r0,r0,#0x40
0002c0  4953              LDR      r1,|L1.1040|
0002c2  7008              STRB     r0,[r1,#0]
;;;140    		   	TIM5->CCER |= 1<<1;		//CC1P=1 设置为下降沿捕获
0002c4  4851              LDR      r0,|L1.1036|
0002c6  380c              SUBS     r0,r0,#0xc
0002c8  8800              LDRH     r0,[r0,#0]
0002ca  f0400002          ORR      r0,r0,#2
0002ce  494f              LDR      r1,|L1.1036|
0002d0  390c              SUBS     r1,r1,#0xc
0002d2  8008              STRH     r0,[r1,#0]
                  |L1.724|
;;;141    			}
;;;142    		}	     	    					   
;;;143     	}
;;;144    	TIM5->SR = ~(1<<0 | 1<<1);
0002d4  f64f70fc          MOV      r0,#0xfffc
0002d8  494c              LDR      r1,|L1.1036|
0002da  391c              SUBS     r1,r1,#0x1c
0002dc  8008              STRH     r0,[r1,#0]
;;;145    }
0002de  4770              BX       lr
;;;146    //TIM4 CH1 PWM输出设置 
                          ENDP

                  TIM4_PWM_Init PROC
;;;149    //psc：时钟预分频数
;;;150    void TIM4_PWM_Init(u16 arr,u16 psc)
0002e0  4a46              LDR      r2,|L1.1020|
;;;151    {
;;;152    
;;;153    	RCC->APB1ENR |= 1<<2;
0002e2  69d2              LDR      r2,[r2,#0x1c]
0002e4  f0420204          ORR      r2,r2,#4
0002e8  4b44              LDR      r3,|L1.1020|
0002ea  61da              STR      r2,[r3,#0x1c]
;;;154    	RCC->APB2ENR |= 1<<3;
0002ec  461a              MOV      r2,r3
0002ee  6992              LDR      r2,[r2,#0x18]
0002f0  f0420208          ORR      r2,r2,#8
0002f4  619a              STR      r2,[r3,#0x18]
;;;155     
;;;156       //设置该引脚为复用输出功能,输出TIM4 CH1的PWM脉冲波形
;;;157    	GPIOB->CRL |= 0x2<<26;
0002f6  4a42              LDR      r2,|L1.1024|
0002f8  6812              LDR      r2,[r2,#0]
0002fa  f0426200          ORR      r2,r2,#0x8000000
0002fe  4b40              LDR      r3,|L1.1024|
000300  601a              STR      r2,[r3,#0]
;;;158    	GPIOB->CRL |= 0x3<<24;
000302  461a              MOV      r2,r3
000304  6812              LDR      r2,[r2,#0]
000306  f0427240          ORR      r2,r2,#0x3000000
00030a  601a              STR      r2,[r3,#0]
;;;159    	
;;;160    	TIM4->ARR = arr; //设置在下一个更新事件装入活动的自动重装载寄存器周期的值	 80K
00030c  4a42              LDR      r2,|L1.1048|
00030e  8010              STRH     r0,[r2,#0]
;;;161    	TIM4->PSC =psc; //设置用来作为TIMx时钟频率除数的预分频值  不分频
000310  1f12              SUBS     r2,r2,#4
000312  8011              STRH     r1,[r2,#0]
;;;162    	TIM4->CR1 &= ~(1<<8);//设置时钟分割:TDTS = Tck_tim
000314  4a40              LDR      r2,|L1.1048|
000316  3a2c              SUBS     r2,r2,#0x2c
000318  8812              LDRH     r2,[r2,#0]
00031a  f4227280          BIC      r2,r2,#0x100
00031e  4b3e              LDR      r3,|L1.1048|
000320  3b2c              SUBS     r3,r3,#0x2c
000322  801a              STRH     r2,[r3,#0]
;;;163    	TIM4->CR1 &= ~(1<<4);//TIM向上计数模式
000324  461a              MOV      r2,r3
000326  8812              LDRH     r2,[r2,#0]
000328  f0220210          BIC      r2,r2,#0x10
00032c  801a              STRH     r2,[r3,#0]
;;;164    	
;;;165    	TIM4->CCMR1 |= 0x7<<4;//CH1 PWM2模式
00032e  4a3a              LDR      r2,|L1.1048|
000330  3a14              SUBS     r2,r2,#0x14
000332  8812              LDRH     r2,[r2,#0]
000334  f0420270          ORR      r2,r2,#0x70
000338  4b37              LDR      r3,|L1.1048|
00033a  3b14              SUBS     r3,r3,#0x14
00033c  801a              STRH     r2,[r3,#0]
;;;166    	TIM4->CCMR1 |= 1<<3;//比较输出使能
00033e  461a              MOV      r2,r3
000340  8812              LDRH     r2,[r2,#0]
000342  f0420208          ORR      r2,r2,#8
000346  801a              STRH     r2,[r3,#0]
;;;167    	TIM4->CCR1 = 0;//设置待装入捕获比较寄存器的脉冲值
000348  2200              MOVS     r2,#0
00034a  4b33              LDR      r3,|L1.1048|
00034c  3308              ADDS     r3,r3,#8
00034e  801a              STRH     r2,[r3,#0]
;;;168    	TIM4->CCER |= 1<<1;//OC1 低电平有效
000350  4a31              LDR      r2,|L1.1048|
000352  3a0c              SUBS     r2,r2,#0xc
000354  8812              LDRH     r2,[r2,#0]
000356  f0420202          ORR      r2,r2,#2
00035a  4b2f              LDR      r3,|L1.1048|
00035c  3b0c              SUBS     r3,r3,#0xc
00035e  801a              STRH     r2,[r3,#0]
;;;169    	TIM4->CCER |= 1<<0;//使能TIMx外设
000360  461a              MOV      r2,r3
000362  8812              LDRH     r2,[r2,#0]
000364  f0420201          ORR      r2,r2,#1
000368  801a              STRH     r2,[r3,#0]
;;;170    	
;;;171    }
00036a  4770              BX       lr
;;;172    u8 ov_frame; 	//统计帧数
                          ENDP

                  TIM6_IRQHandler PROC
;;;173    //定时器6中断服务程序	 
;;;174    void TIM6_IRQHandler(void)
00036c  b510              PUSH     {r4,lr}
;;;175    {
;;;176    	if (TIM6->SR & 1<<0) //检查指定的TIM中断发生与否:TIM 中断源 
00036e  482b              LDR      r0,|L1.1052|
000370  8a00              LDRH     r0,[r0,#0x10]
000372  f0100f01          TST      r0,#1
000376  d00f              BEQ      |L1.920|
;;;177    	{
;;;178    			LED_R=!LED_R;
000378  4829              LDR      r0,|L1.1056|
00037a  6800              LDR      r0,[r0,#0]
00037c  b908              CBNZ     r0,|L1.898|
00037e  2001              MOVS     r0,#1
000380  e000              B        |L1.900|
                  |L1.898|
000382  2000              MOVS     r0,#0
                  |L1.900|
000384  4926              LDR      r1,|L1.1056|
000386  6008              STR      r0,[r1,#0]
;;;179    			printf("frame:%dfps\r\n",ov_frame);	//打印帧率
000388  4826              LDR      r0,|L1.1060|
00038a  7801              LDRB     r1,[r0,#0]  ; ov_frame
00038c  a026              ADR      r0,|L1.1064|
00038e  f7fffffe          BL       __2printf
;;;180    			ov_frame=0;	
000392  2000              MOVS     r0,#0
000394  4923              LDR      r1,|L1.1060|
000396  7008              STRB     r0,[r1,#0]
                  |L1.920|
;;;181    	} 
;;;182    	TIM6->SR &= ~(1<<0);  //清除TIMx的中断待处理位:TIM 中断源  	    
000398  4820              LDR      r0,|L1.1052|
00039a  8a00              LDRH     r0,[r0,#0x10]
00039c  f0200001          BIC      r0,r0,#1
0003a0  491e              LDR      r1,|L1.1052|
0003a2  8208              STRH     r0,[r1,#0x10]
;;;183    }
0003a4  bd10              POP      {r4,pc}
;;;184    //基本定时器6中断初始化
                          ENDP

                  TIM6_Int_Init PROC
;;;188    //这里使用的是定时器3!
;;;189    void TIM6_Int_Init(u16 arr,u16 psc)
0003a6  b570              PUSH     {r4-r6,lr}
;;;190    {
0003a8  4605              MOV      r5,r0
0003aa  460c              MOV      r4,r1
;;;191    	//时钟使能
;;;192    	RCC->APB1ENR |= 1<<4;
0003ac  4813              LDR      r0,|L1.1020|
0003ae  69c0              LDR      r0,[r0,#0x1c]
0003b0  f0400010          ORR      r0,r0,#0x10
0003b4  4911              LDR      r1,|L1.1020|
0003b6  61c8              STR      r0,[r1,#0x1c]
;;;193    
;;;194    	TIM6->ARR = arr; //设置在下一个更新事件装入活动的自动重装载寄存器周期的值	 计数到5000为500ms
0003b8  4818              LDR      r0,|L1.1052|
0003ba  8585              STRH     r5,[r0,#0x2c]
;;;195    	TIM6->PSC =psc; //设置用来作为TIMx时钟频率除数的预分频值  10Khz的计数频率  
0003bc  8504              STRH     r4,[r0,#0x28]
;;;196    	TIM6->CR1 &= ~(1<<8);//设置时钟分割:TDTS = Tck_tim
0003be  8800              LDRH     r0,[r0,#0]
0003c0  f4207080          BIC      r0,r0,#0x100
0003c4  4915              LDR      r1,|L1.1052|
0003c6  8008              STRH     r0,[r1,#0]
;;;197    	TIM6->CR1 &= ~(1<<4);//TIM向上计数模式
0003c8  4608              MOV      r0,r1
0003ca  8800              LDRH     r0,[r0,#0]
0003cc  f0200010          BIC      r0,r0,#0x10
0003d0  8008              STRH     r0,[r1,#0]
;;;198    
;;;199    	TIM6->DIER |= 1<<0;//使能定时器6更新触发中断
0003d2  4608              MOV      r0,r1
0003d4  8980              LDRH     r0,[r0,#0xc]
0003d6  f0400001          ORR      r0,r0,#1
0003da  8188              STRH     r0,[r1,#0xc]
;;;200     
;;;201    	TIM6->CR1 |= 1<<0; //使能TIMx外设
0003dc  4608              MOV      r0,r1
0003de  8800              LDRH     r0,[r0,#0]
0003e0  f0400001          ORR      r0,r0,#1
0003e4  8008              STRH     r0,[r1,#0]
;;;202     	
;;;203      //TIM3中断
;;;204    	//先占优先级0级
;;;205    	//从优先级3级
;;;206    	//IRQ通道被使能
;;;207    	register_nvic(2,1,3,TIM5_IRQChannel);
0003e6  2332              MOVS     r3,#0x32
0003e8  2203              MOVS     r2,#3
0003ea  2101              MOVS     r1,#1
0003ec  2002              MOVS     r0,#2
0003ee  f7fffffe          BL       register_nvic
;;;208    }
0003f2  bd70              POP      {r4-r6,pc}
                  |L1.1012|
                          DCD      0x40000410
                  |L1.1016|
                          DCD      0x42220184
                  |L1.1020|
                          DCD      0x40021000
                  |L1.1024|
                          DCD      0x40010c00
                  |L1.1028|
                          DCD      0x40010000
                  |L1.1032|
                          DCD      0x40010814
                  |L1.1036|
                          DCD      0x40000c2c
                  |L1.1040|
                          DCD      TIM5CH1_CAPTURE_STA
                  |L1.1044|
                          DCD      TIM5CH1_CAPTURE_VAL
                  |L1.1048|
                          DCD      0x4000082c
                  |L1.1052|
                          DCD      0x40001000
                  |L1.1056|
                          DCD      0x42220188
                  |L1.1060|
                          DCD      ov_frame
                  |L1.1064|
000428  6672616d          DCB      "frame:%dfps\r\n",0
00042c  653a2564
000430  6670730d
000434  0a00    
000436  00                DCB      0
000437  00                DCB      0
                          ENDP

                  LCD_PWM_Init PROC
;;;213    //0,最暗;250,最暗.
;;;214    void LCD_PWM_Init(void)
000438  4827              LDR      r0,|L1.1240|
;;;215    {		 					 
;;;216    	//此部分需手动修改IO口设置
;;;217    	RCC->APB2ENR|=1<<13; 	//TIM8时钟使能    
00043a  6980              LDR      r0,[r0,#0x18]
00043c  f4405000          ORR      r0,r0,#0x2000
000440  4925              LDR      r1,|L1.1240|
000442  6188              STR      r0,[r1,#0x18]
;;;218    	RCC->APB2ENR|=1<<3;    	//使能PORTB时钟	 			 
000444  4608              MOV      r0,r1
000446  6980              LDR      r0,[r0,#0x18]
000448  f0400008          ORR      r0,r0,#8
00044c  6188              STR      r0,[r1,#0x18]
;;;219    	  	
;;;220    	GPIOB->CRL&=0XFFFFFFF0;	//PB0输出
00044e  4823              LDR      r0,|L1.1244|
000450  6800              LDR      r0,[r0,#0]
000452  f020000f          BIC      r0,r0,#0xf
000456  4921              LDR      r1,|L1.1244|
000458  6008              STR      r0,[r1,#0]
;;;221    	GPIOB->CRL|=0X0000000B;	//复用功能输出
00045a  4608              MOV      r0,r1
00045c  6800              LDR      r0,[r0,#0]
00045e  f040000b          ORR      r0,r0,#0xb
000462  6008              STR      r0,[r1,#0]
;;;222    	GPIOB->ODR|=1<<0;		//PB0上拉	 
000464  481d              LDR      r0,|L1.1244|
000466  300c              ADDS     r0,r0,#0xc
000468  6800              LDR      r0,[r0,#0]
00046a  f0400001          ORR      r0,r0,#1
00046e  491b              LDR      r1,|L1.1244|
000470  310c              ADDS     r1,r1,#0xc
000472  6008              STR      r0,[r1,#0]
;;;223    
;;;224    	TIM8->ARR=110;			//设定计数器自动重装值为110.频率为654Khz 
000474  206e              MOVS     r0,#0x6e
000476  491a              LDR      r1,|L1.1248|
000478  8008              STRH     r0,[r1,#0]
;;;225    	TIM8->PSC=0;			//预分频器不分频
00047a  2000              MOVS     r0,#0
00047c  1f09              SUBS     r1,r1,#4
00047e  8008              STRH     r0,[r1,#0]
;;;226    	
;;;227    	TIM8->CCMR1|=7<<12; 	//CH2 PWM2模式		 
000480  4817              LDR      r0,|L1.1248|
000482  3814              SUBS     r0,r0,#0x14
000484  8800              LDRH     r0,[r0,#0]
000486  f44040e0          ORR      r0,r0,#0x7000
00048a  4915              LDR      r1,|L1.1248|
00048c  3914              SUBS     r1,r1,#0x14
00048e  8008              STRH     r0,[r1,#0]
;;;228    	TIM8->CCMR1|=1<<11; 	//CH2预装载使能	   
000490  4608              MOV      r0,r1
000492  8800              LDRH     r0,[r0,#0]
000494  f4406000          ORR      r0,r0,#0x800
000498  8008              STRH     r0,[r1,#0]
;;;229    
;;;230    	TIM8->CCER|=1<<6;   	//OC2互补输出使能	   
00049a  4811              LDR      r0,|L1.1248|
00049c  380c              SUBS     r0,r0,#0xc
00049e  8800              LDRH     r0,[r0,#0]
0004a0  f0400040          ORR      r0,r0,#0x40
0004a4  490e              LDR      r1,|L1.1248|
0004a6  390c              SUBS     r1,r1,#0xc
0004a8  8008              STRH     r0,[r1,#0]
;;;231     	TIM8->CCER|=1<<7;   	//OC2N低电平有效	   
0004aa  4608              MOV      r0,r1
0004ac  8800              LDRH     r0,[r0,#0]
0004ae  f0400080          ORR      r0,r0,#0x80
0004b2  8008              STRH     r0,[r1,#0]
;;;232    	TIM8->BDTR|=1<<15;   	//MOE主输出使能	   
0004b4  480a              LDR      r0,|L1.1248|
0004b6  3018              ADDS     r0,r0,#0x18
0004b8  8800              LDRH     r0,[r0,#0]
0004ba  f4404000          ORR      r0,r0,#0x8000
0004be  4908              LDR      r1,|L1.1248|
0004c0  3118              ADDS     r1,r1,#0x18
0004c2  8008              STRH     r0,[r1,#0]
;;;233    
;;;234    	TIM8->CR1=0x0080;   	//ARPE使能 
0004c4  2080              MOVS     r0,#0x80
0004c6  4906              LDR      r1,|L1.1248|
0004c8  392c              SUBS     r1,r1,#0x2c
0004ca  8008              STRH     r0,[r1,#0]
;;;235    	TIM8->CR1|=0x01;    	//使能定时器8 										  
0004cc  4608              MOV      r0,r1
0004ce  8800              LDRH     r0,[r0,#0]
0004d0  f0400001          ORR      r0,r0,#1
0004d4  8008              STRH     r0,[r1,#0]
;;;236    } 
0004d6  4770              BX       lr
;;;237    
                          ENDP

                  |L1.1240|
                          DCD      0x40021000
                  |L1.1244|
                          DCD      0x40010c00
                  |L1.1248|
                          DCD      0x4001342c

                          AREA ||.data||, DATA, ALIGN=1

                  TIM5CH1_CAPTURE_STA
000000  0000              DCB      0x00,0x00
                  TIM5CH1_CAPTURE_VAL
000002  0000              DCB      0x00,0x00
                  ov_frame
000004  00                DCB      0x00
