; generated by ARM C/C++ Compiler, 5.03 [Build 24]
; commandline ArmCC [--list --debug -c --asm --interleave -o.\obj\led.o --asm_dir=.\lst\ --list_dir=.\lst\ --depend=.\obj\led.d --cpu=Cortex-M3 --apcs=interwork -O0 -I.\core -I.\devices -I.\app -I.\boot -I.\app\RES\Num -I.\app\RES\Pic -I"D:\Program Files\Keil\ARM\RV31\INC" -I"D:\Program Files\Keil\ARM\CMSIS\Include" -I"D:\Program Files\Keil\ARM\Inc\ST\STM32F10x" --omf_browse=.\obj\led.crf devices\led.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  led_setB PROC
;;;37     }
;;;38     extern void led_setB(LED_STAT s)
000000  b918              CBNZ     r0,|L1.10|
;;;39     {
;;;40     	if(LED_ON == s){
;;;41     		PCxOut(0) = VAL_0;
000002  2100              MOVS     r1,#0
000004  4a24              LDR      r2,|L1.152|
000006  6011              STR      r1,[r2,#0]
000008  e002              B        |L1.16|
                  |L1.10|
;;;42     	} else {
;;;43     		PCxOut(0) = VAL_1;
00000a  2101              MOVS     r1,#1
00000c  4a22              LDR      r2,|L1.152|
00000e  6011              STR      r1,[r2,#0]
                  |L1.16|
;;;44     	}
;;;45     }
000010  4770              BX       lr
;;;46     extern void led_col(void)
                          ENDP

                  led_setG PROC
;;;29     }
;;;30     extern void led_setG(LED_STAT s)
000012  b918              CBNZ     r0,|L1.28|
;;;31     {
;;;32     	if(LED_ON == s){
;;;33     		PCxOut(1) = VAL_0;
000014  2100              MOVS     r1,#0
000016  4a21              LDR      r2,|L1.156|
000018  6011              STR      r1,[r2,#0]
00001a  e002              B        |L1.34|
                  |L1.28|
;;;34     	} else {
;;;35     		PCxOut(1) = VAL_1;
00001c  2101              MOVS     r1,#1
00001e  4a1f              LDR      r2,|L1.156|
000020  6011              STR      r1,[r2,#0]
                  |L1.34|
;;;36     	}
;;;37     }
000022  4770              BX       lr
;;;38     extern void led_setB(LED_STAT s)
                          ENDP

                  led_setR PROC
;;;21     }
;;;22     extern void led_setR(LED_STAT s)
000024  b918              CBNZ     r0,|L1.46|
;;;23     {
;;;24     	if(LED_ON == s){
;;;25     		PCxOut(2) = VAL_0;
000026  2100              MOVS     r1,#0
000028  4a1d              LDR      r2,|L1.160|
00002a  6011              STR      r1,[r2,#0]
00002c  e002              B        |L1.52|
                  |L1.46|
;;;26     	} else {
;;;27     		PCxOut(2) = VAL_1;
00002e  2101              MOVS     r1,#1
000030  4a1b              LDR      r2,|L1.160|
000032  6011              STR      r1,[r2,#0]
                  |L1.52|
;;;28     	}
;;;29     }
000034  4770              BX       lr
;;;30     extern void led_setG(LED_STAT s)
                          ENDP

                  led_init PROC
;;;11     
;;;12     extern void led_init()
000036  b510              PUSH     {r4,lr}
;;;13     {
;;;14     	_BD(RCC->APB2ENR, 4) = 1;
000038  2001              MOVS     r0,#1
00003a  491a              LDR      r1,|L1.164|
00003c  6008              STR      r0,[r1,#0]
;;;15     	//PC.1 2 3 ÍÆÍìÊä³ö
;;;16     	config_gpio(PORTC, O_GPPP|OMODE_T50MHz, Pin0|Pin1|Pin2, PULL_UP);
00003e  f04f0300          MOV      r3,#0
000042  f04f0207          MOV      r2,#7
000046  f04f0103          MOV      r1,#3
00004a  f44f6000          MOV      r0,#0x800
00004e  f7fffffe          BL       config_gpio
;;;17     	led_setR(LED_OFF);
000052  2001              MOVS     r0,#1
000054  f7fffffe          BL       led_setR
;;;18     	led_setG(LED_OFF);
000058  2001              MOVS     r0,#1
00005a  f7fffffe          BL       led_setG
;;;19     	led_setB(LED_OFF);
00005e  2001              MOVS     r0,#1
000060  f7fffffe          BL       led_setB
;;;20     
;;;21     }
000064  bd10              POP      {r4,pc}
;;;22     extern void led_setR(LED_STAT s)
                          ENDP

                  led_col PROC
;;;45     }
;;;46     extern void led_col(void)
000066  b510              PUSH     {r4,lr}
;;;47     {
;;;48     	u8	i = 0;
000068  2400              MOVS     r4,#0
;;;49     	for(i=0; i<8; i++){
00006a  bf00              NOP      
00006c  e010              B        |L1.144|
                  |L1.110|
;;;50     		set_PINxs(PORTC, Pin0|Pin1|Pin2, VAL_1);
00006e  2201              MOVS     r2,#1
000070  2107              MOVS     r1,#7
000072  02d0              LSLS     r0,r2,#11
000074  f7fffffe          BL       set_PINxs
;;;51     		set_PINxs(PORTC, i, VAL_0);
000078  2200              MOVS     r2,#0
00007a  4621              MOV      r1,r4
00007c  f44f6000          MOV      r0,#0x800
000080  f7fffffe          BL       set_PINxs
;;;52     		_delay_ms(1000);
000084  f44f707a          MOV      r0,#0x3e8
000088  f7fffffe          BL       _delay_ms
00008c  1c60              ADDS     r0,r4,#1              ;49
00008e  b2c4              UXTB     r4,r0                 ;49
                  |L1.144|
000090  2c08              CMP      r4,#8                 ;49
000092  dbec              BLT      |L1.110|
;;;53     		
;;;54     	}
;;;55     }
000094  bd10              POP      {r4,pc}
                          ENDP

000096  0000              DCW      0x0000
                  |L1.152|
                          DCD      0x42220180
                  |L1.156|
                          DCD      0x42220184
                  |L1.160|
                          DCD      0x42220188
                  |L1.164|
                          DCD      0x42420310
