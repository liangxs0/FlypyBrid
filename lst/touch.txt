; generated by ARM C/C++ Compiler, 5.03 [Build 24]
; commandline ArmCC [--list --debug -c --asm --interleave -o.\obj\touch.o --asm_dir=.\lst\ --list_dir=.\lst\ --depend=.\obj\touch.d --cpu=Cortex-M3 --apcs=interwork -O0 -I.\core -I.\devices -I.\app -I.\boot -I.\app\RES\Num -I.\app\RES\Pic -I"D:\Program Files\Keil\ARM\RV31\INC" -I"D:\Program Files\Keil\ARM\CMSIS\Include" -I"D:\Program Files\Keil\ARM\Inc\ST\STM32F10x" --omf_browse=.\obj\touch.crf devices\touch.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                          REQUIRE _printf_percent
                          REQUIRE _printf_d
                          REQUIRE _printf_int_dec
                  tp_spiWbyte PROC
;;;40      * * * * * * * * * * * * * * * * * * * * * * * * * * * * */
;;;41     void tp_spiWbyte(u8 byte)
000000  2100              MOVS     r1,#0
;;;42     {
;;;43     	u8 count=0;   
;;;44     	for(count=0;count<8;count++)  
000002  bf00              NOP      
000004  e019              B        |L1.58|
                  |L1.6|
;;;45     	{ 	  
;;;46     		if(byte&0x80)
000006  f0100f80          TST      r0,#0x80
00000a  d003              BEQ      |L1.20|
;;;47     		{
;;;48     			TP_IN = 1;
00000c  2201              MOVS     r2,#1
00000e  4bfe              LDR      r3,|L1.1032|
000010  601a              STR      r2,[r3,#0]
000012  e002              B        |L1.26|
                  |L1.20|
;;;49     		}
;;;50     		else
;;;51     		{
;;;52     			TP_IN = 0;
000014  2200              MOVS     r2,#0
000016  4bfc              LDR      r3,|L1.1032|
000018  601a              STR      r2,[r3,#0]
                  |L1.26|
;;;53     		}			   
;;;54     		byte<<=1;    
00001a  ea4f6240          LSL      r2,r0,#25
00001e  ea4f6012          LSR      r0,r2,#24
;;;55     		TP_CLK=0; 	 
000022  f04f0200          MOV      r2,#0
000026  4bf9              LDR      r3,|L1.1036|
000028  601a              STR      r2,[r3,#0]
;;;56     		TP_CLK=1;		//上升沿有效	        
00002a  f04f0201          MOV      r2,#1
00002e  4bf8              LDR      r3,|L1.1040|
000030  f8c32184          STR      r2,[r3,#0x184]
000034  f1010201          ADD      r2,r1,#1              ;44
000038  b2d1              UXTB     r1,r2                 ;44
                  |L1.58|
00003a  2908              CMP      r1,#8                 ;44
00003c  dbe3              BLT      |L1.6|
;;;57     	}		
;;;58     }
00003e  4770              BX       lr
;;;59     
                          ENDP

                  tp_readAD PROC
;;;67      * * * * * * * * * * * * * * * * * * * * * * * * * * * * */
;;;68     u16 tp_readAD(u8 cmd)
000040  b570              PUSH     {r4-r6,lr}
;;;69     {
000042  4606              MOV      r6,r0
;;;70     	u8 count=0; 	  
000044  2500              MOVS     r5,#0
;;;71     	u16 Num=0; 
000046  2400              MOVS     r4,#0
;;;72     	TP_CLK=0;		//先拉低时钟 	 
000048  2000              MOVS     r0,#0
00004a  49f0              LDR      r1,|L1.1036|
00004c  6008              STR      r0,[r1,#0]
;;;73     	TP_IN=0; 	//拉低数据线
00004e  49f1              LDR      r1,|L1.1044|
000050  f8c101a4          STR      r0,[r1,#0x1a4]
;;;74     	TP_CS=0; 		//选中触摸屏IC
000054  49f0              LDR      r1,|L1.1048|
000056  6008              STR      r0,[r1,#0]
;;;75     	tp_spiWbyte(cmd);//发送命令字
000058  4630              MOV      r0,r6
00005a  f7fffffe          BL       tp_spiWbyte
;;;76     	_delay_us(6);//ADS7846的转换时间最长为6us
00005e  2006              MOVS     r0,#6
000060  f7fffffe          BL       _delay_us
;;;77     	TP_CLK=0; 	     	    
000064  2000              MOVS     r0,#0
000066  49ea              LDR      r1,|L1.1040|
000068  f8c10184          STR      r0,[r1,#0x184]
;;;78     	_delay_us(1);    	   
00006c  2001              MOVS     r0,#1
00006e  f7fffffe          BL       _delay_us
;;;79     	TP_CLK=1;		//给1个时钟，清除BUSY	    	    
000072  2001              MOVS     r0,#1
000074  49e5              LDR      r1,|L1.1036|
000076  6008              STR      r0,[r1,#0]
;;;80     	TP_CLK=0; 	     	    
000078  f04f0000          MOV      r0,#0
00007c  49e4              LDR      r1,|L1.1040|
00007e  f8c10184          STR      r0,[r1,#0x184]
;;;81     	for(count=0;count<16;count++)//读出16位数据,只有高12位有效 
000082  bf00              NOP      
000084  e012              B        |L1.172|
                  |L1.134|
;;;82     	{ 				  
;;;83     		Num<<=1; 	 
000086  f64f70ff          MOV      r0,#0xffff
00008a  ea000444          AND      r4,r0,r4,LSL #1
;;;84     		TP_CLK=0;	//下降沿有效  	    	   
00008e  2000              MOVS     r0,#0
000090  49de              LDR      r1,|L1.1036|
000092  6008              STR      r0,[r1,#0]
;;;85     		TP_CLK=1;
000094  f04f0001          MOV      r0,#1
000098  49dd              LDR      r1,|L1.1040|
00009a  f8c10184          STR      r0,[r1,#0x184]
;;;86     		if(TP_OUT)Num++; 		 
00009e  48df              LDR      r0,|L1.1052|
0000a0  6800              LDR      r0,[r0,#0]
0000a2  b108              CBZ      r0,|L1.168|
0000a4  1c60              ADDS     r0,r4,#1
0000a6  b284              UXTH     r4,r0
                  |L1.168|
0000a8  1c68              ADDS     r0,r5,#1              ;81
0000aa  b2c5              UXTB     r5,r0                 ;81
                  |L1.172|
0000ac  2d10              CMP      r5,#0x10              ;81
0000ae  dbea              BLT      |L1.134|
;;;87     	}  	
;;;88     	Num>>=4;   	//只有高12位有效.
0000b0  1124              ASRS     r4,r4,#4
;;;89     	TP_CS=1;		//释放片选	 
0000b2  2001              MOVS     r0,#1
0000b4  49d8              LDR      r1,|L1.1048|
0000b6  6008              STR      r0,[r1,#0]
;;;90     	return(Num);  
0000b8  4620              MOV      r0,r4
;;;91     }
0000ba  bd70              POP      {r4-r6,pc}
;;;92     
                          ENDP

                  tp_readXorY PROC
;;;103    #define LOST_VAL 1	  	//丢弃值
;;;104    u16 tp_readXorY(u8 cmd)
0000bc  e92d43fe          PUSH     {r1-r9,lr}
;;;105    {
0000c0  4680              MOV      r8,r0
;;;106    	u16 i, j;
;;;107    	u16 buf[READ_TIMES];
;;;108    	u16 sum=0;
0000c2  2700              MOVS     r7,#0
;;;109    	u16 temp;
;;;110    
;;;111    	for(i=0;i<READ_TIMES;i++)
0000c4  2400              MOVS     r4,#0
0000c6  e006              B        |L1.214|
                  |L1.200|
;;;112    	{
;;;113    		buf[i]=tp_readAD(cmd);		 		    
0000c8  4640              MOV      r0,r8
0000ca  f7fffffe          BL       tp_readAD
0000ce  f82d0014          STRH     r0,[sp,r4,LSL #1]
0000d2  1c60              ADDS     r0,r4,#1              ;111
0000d4  b284              UXTH     r4,r0                 ;111
                  |L1.214|
0000d6  2c05              CMP      r4,#5                 ;111
0000d8  dbf6              BLT      |L1.200|
;;;114    	}
;;;115    	for(i=0;i<READ_TIMES-1; i++)//排序
0000da  2400              MOVS     r4,#0
0000dc  e016              B        |L1.268|
                  |L1.222|
;;;116    	{
;;;117    		for(j=i+1;j<READ_TIMES;j++)
0000de  1c60              ADDS     r0,r4,#1
0000e0  b285              UXTH     r5,r0
0000e2  e00f              B        |L1.260|
                  |L1.228|
;;;118    		{
;;;119    			if(buf[i]>buf[j])//升序排列
0000e4  f83d0014          LDRH     r0,[sp,r4,LSL #1]
0000e8  f83d1015          LDRH     r1,[sp,r5,LSL #1]
0000ec  4288              CMP      r0,r1
0000ee  dd07              BLE      |L1.256|
;;;120    			{
;;;121    				temp=buf[i];
0000f0  f83d6014          LDRH     r6,[sp,r4,LSL #1]
;;;122    				buf[i]=buf[j];
0000f4  f83d0015          LDRH     r0,[sp,r5,LSL #1]
0000f8  f82d0014          STRH     r0,[sp,r4,LSL #1]
;;;123    				buf[j]=temp;
0000fc  f82d6015          STRH     r6,[sp,r5,LSL #1]
                  |L1.256|
000100  1c68              ADDS     r0,r5,#1              ;117
000102  b285              UXTH     r5,r0                 ;117
                  |L1.260|
000104  2d05              CMP      r5,#5                 ;117
000106  dbed              BLT      |L1.228|
000108  1c60              ADDS     r0,r4,#1              ;115
00010a  b284              UXTH     r4,r0                 ;115
                  |L1.268|
00010c  2c04              CMP      r4,#4                 ;115
00010e  dbe6              BLT      |L1.222|
;;;124    			}
;;;125    		}
;;;126    	}	  
;;;127    	sum=0;
000110  2700              MOVS     r7,#0
;;;128    	for(i=LOST_VAL;i<READ_TIMES-LOST_VAL;i++)
000112  2401              MOVS     r4,#1
000114  e005              B        |L1.290|
                  |L1.278|
;;;129    	{
;;;130    		sum+=buf[i];
000116  f83d0014          LDRH     r0,[sp,r4,LSL #1]
00011a  4438              ADD      r0,r0,r7
00011c  b287              UXTH     r7,r0
00011e  1c60              ADDS     r0,r4,#1              ;128
000120  b284              UXTH     r4,r0                 ;128
                  |L1.290|
000122  2c04              CMP      r4,#4                 ;128
000124  dbf7              BLT      |L1.278|
;;;131    	}
;;;132    
;;;133    	temp=sum/(READ_TIMES-2*LOST_VAL);
000126  2003              MOVS     r0,#3
000128  fb97f0f0          SDIV     r0,r7,r0
00012c  b286              UXTH     r6,r0
;;;134    
;;;135    	return temp;  
00012e  4630              MOV      r0,r6
;;;136    }
000130  e8bd83fe          POP      {r1-r9,pc}
;;;137    /* * * * * * * * * * * * * * * * * * * * * * * * * * * * *
                          ENDP

                  tp_readXandY PROC
;;;144     * * * * * * * * * * * * * * * * * * * * * * * * * * * * */
;;;145    u8 tp_readXandY(u16* x, u16* y)
000134  e92d41f0          PUSH     {r4-r8,lr}
;;;146    {
000138  4604              MOV      r4,r0
00013a  460d              MOV      r5,r1
;;;147    	u16 xtemp,ytemp;			 	 		  
;;;148    	xtemp=tp_readXorY(t_pad.cmdRdx);
00013c  49b8              LDR      r1,|L1.1056|
00013e  f8910025          LDRB     r0,[r1,#0x25]  ; t_pad
000142  f7fffffe          BL       tp_readXorY
000146  4606              MOV      r6,r0
;;;149    	ytemp=tp_readXorY(t_pad.cmdRdy);	  												   
000148  49b5              LDR      r1,|L1.1056|
00014a  f8910026          LDRB     r0,[r1,#0x26]  ; t_pad
00014e  f7fffffe          BL       tp_readXorY
000152  4607              MOV      r7,r0
;;;150    	*x=xtemp;
000154  8026              STRH     r6,[r4,#0]
;;;151    	*y=ytemp;
000156  802f              STRH     r7,[r5,#0]
;;;152    	return 0;//读数成功
000158  2000              MOVS     r0,#0
;;;153    }
00015a  e8bd81f0          POP      {r4-r8,pc}
;;;154    
                          ENDP

                  tp_readXandY2 PROC
;;;165    #define	ERR_RANGE	50	//误差范围
;;;166    u8 tp_readXandY2(u16* x, u16* y)
00015e  b57f              PUSH     {r0-r6,lr}
;;;167    {
000160  4604              MOV      r4,r0
000162  460d              MOV      r5,r1
;;;168    	u16 x1,y1;
;;;169    	u16 x2,y2;
;;;170    	u8 flag;    
;;;171    	flag=tp_readXandY(&x1,&y1);  	
000164  a902              ADD      r1,sp,#8
000166  a803              ADD      r0,sp,#0xc
000168  f7fffffe          BL       tp_readXandY
00016c  4606              MOV      r6,r0
;;;172    	if(flag)
00016e  b116              CBZ      r6,|L1.374|
;;;173    	{
;;;174    		return(1);
000170  2001              MOVS     r0,#1
                  |L1.370|
;;;175    	}
;;;176    	flag=tp_readXandY(&x2,&y2);	   
;;;177    	if(flag)
;;;178    	{
;;;179    		return(2);   
;;;180    	}
;;;181    	if(((x2<=x1&&x1<x2+ERR_RANGE)||(x1<=x2&&x2<x1+ERR_RANGE))//前后两次采样在+-50内
;;;182    			&&((y2<=y1&&y1<y2+ERR_RANGE)||(y1<=y2&&y2<y1+ERR_RANGE)))
;;;183    	{
;;;184    		*x=(x1+x2)/2;
;;;185    		*y=(y1+y2)/2;
;;;186    		return 0;
;;;187    	}
;;;188    	else
;;;189    	{
;;;190    		return 3;
;;;191    	}			
;;;192    }
000172  b004              ADD      sp,sp,#0x10
000174  bd70              POP      {r4-r6,pc}
                  |L1.374|
000176  4669              MOV      r1,sp                 ;176
000178  a801              ADD      r0,sp,#4              ;176
00017a  f7fffffe          BL       tp_readXandY
00017e  4606              MOV      r6,r0                 ;176
000180  b10e              CBZ      r6,|L1.390|
000182  2002              MOVS     r0,#2                 ;179
000184  e7f5              B        |L1.370|
                  |L1.390|
000186  f8bd0004          LDRH     r0,[sp,#4]            ;181
00018a  f8bd100c          LDRH     r1,[sp,#0xc]          ;181
00018e  4288              CMP      r0,r1                 ;181
000190  dc06              BGT      |L1.416|
000192  f8bd100c          LDRH     r1,[sp,#0xc]          ;181
000196  f8bd0004          LDRH     r0,[sp,#4]            ;181
00019a  3032              ADDS     r0,r0,#0x32           ;181
00019c  4281              CMP      r1,r0                 ;181
00019e  db0c              BLT      |L1.442|
                  |L1.416|
0001a0  f8bd000c          LDRH     r0,[sp,#0xc]          ;181
0001a4  f8bd1004          LDRH     r1,[sp,#4]            ;181
0001a8  4288              CMP      r0,r1                 ;181
0001aa  dc36              BGT      |L1.538|
0001ac  f8bd1004          LDRH     r1,[sp,#4]            ;181
0001b0  f8bd000c          LDRH     r0,[sp,#0xc]          ;181
0001b4  3032              ADDS     r0,r0,#0x32           ;181
0001b6  4281              CMP      r1,r0                 ;181
0001b8  da2f              BGE      |L1.538|
                  |L1.442|
0001ba  f8bd0000          LDRH     r0,[sp,#0]            ;182
0001be  f8bd1008          LDRH     r1,[sp,#8]            ;182
0001c2  4288              CMP      r0,r1                 ;182
0001c4  dc06              BGT      |L1.468|
0001c6  f8bd1008          LDRH     r1,[sp,#8]            ;182
0001ca  f8bd0000          LDRH     r0,[sp,#0]            ;182
0001ce  3032              ADDS     r0,r0,#0x32           ;182
0001d0  4281              CMP      r1,r0                 ;182
0001d2  db0c              BLT      |L1.494|
                  |L1.468|
0001d4  f8bd0008          LDRH     r0,[sp,#8]            ;182
0001d8  f8bd1000          LDRH     r1,[sp,#0]            ;182
0001dc  4288              CMP      r0,r1                 ;182
0001de  dc1c              BGT      |L1.538|
0001e0  f8bd1000          LDRH     r1,[sp,#0]            ;182
0001e4  f8bd0008          LDRH     r0,[sp,#8]            ;182
0001e8  3032              ADDS     r0,r0,#0x32           ;182
0001ea  4281              CMP      r1,r0                 ;182
0001ec  da15              BGE      |L1.538|
                  |L1.494|
0001ee  f8bd100c          LDRH     r1,[sp,#0xc]          ;184
0001f2  f8bd2004          LDRH     r2,[sp,#4]            ;184
0001f6  1888              ADDS     r0,r1,r2              ;184
0001f8  eb0071d0          ADD      r1,r0,r0,LSR #31      ;184
0001fc  f3c1014f          UBFX     r1,r1,#1,#16          ;184
000200  8021              STRH     r1,[r4,#0]            ;184
000202  f8bd1008          LDRH     r1,[sp,#8]            ;185
000206  f8bd2000          LDRH     r2,[sp,#0]            ;185
00020a  1888              ADDS     r0,r1,r2              ;185
00020c  eb0071d0          ADD      r1,r0,r0,LSR #31      ;185
000210  f3c1014f          UBFX     r1,r1,#1,#16          ;185
000214  8029              STRH     r1,[r5,#0]            ;185
000216  2000              MOVS     r0,#0                 ;186
000218  e7ab              B        |L1.370|
                  |L1.538|
00021a  2003              MOVS     r0,#3                 ;190
00021c  e7a9              B        |L1.370|
;;;193    
                          ENDP

                  tp_drawAdjustPoint PROC
;;;201     * * * * * * * * * * * * * * * * * * * * * * * * * * * * */
;;;202    void tp_drawAdjustPoint(u16 x, u16 y, u16 color)
00021e  b5fe              PUSH     {r1-r7,lr}
;;;203    {
000220  4604              MOV      r4,r0
000222  460d              MOV      r5,r1
000224  4616              MOV      r6,r2
;;;204    	LcdPen	pen;
;;;205    
;;;206    	pen.color = color;
000226  f8ad6004          STRH     r6,[sp,#4]
;;;207    	pen.brush = P_SET_BRUSH;
00022a  2001              MOVS     r0,#1
00022c  f88d0009          STRB     r0,[sp,#9]
;;;208    	lcdDrawRect(x-1, y-1, 3, 3, &pen);
000230  a801              ADD      r0,sp,#4
000232  1e6a              SUBS     r2,r5,#1
000234  b291              UXTH     r1,r2
000236  1e62              SUBS     r2,r4,#1
000238  9000              STR      r0,[sp,#0]
00023a  b290              UXTH     r0,r2
00023c  2303              MOVS     r3,#3
00023e  461a              MOV      r2,r3
000240  f7fffffe          BL       lcdDrawRect
;;;209    	lcdDrawLine(x-15, y, x+15, y, &pen);
000244  a801              ADD      r0,sp,#4
000246  f104010f          ADD      r1,r4,#0xf
00024a  b28a              UXTH     r2,r1
00024c  391e              SUBS     r1,r1,#0x1e
00024e  9000              STR      r0,[sp,#0]
000250  b288              UXTH     r0,r1
000252  462b              MOV      r3,r5
000254  4629              MOV      r1,r5
000256  f7fffffe          BL       lcdDrawLine
;;;210    	lcdDrawLine(x, y-15, x, y+15, &pen);
00025a  a801              ADD      r0,sp,#4
00025c  9000              STR      r0,[sp,#0]
00025e  f105000f          ADD      r0,r5,#0xf
000262  b283              UXTH     r3,r0
000264  381e              SUBS     r0,r0,#0x1e
000266  b281              UXTH     r1,r0
000268  4622              MOV      r2,r4
00026a  4620              MOV      r0,r4
00026c  f7fffffe          BL       lcdDrawLine
;;;211    	pen.brush = P_SET_NOBRUSH;
000270  2000              MOVS     r0,#0
000272  f88d0009          STRB     r0,[sp,#9]
;;;212    	lcdDrawRect(x-5, y-5, 11, 11, &pen);
000276  a801              ADD      r0,sp,#4
000278  1f6a              SUBS     r2,r5,#5
00027a  b291              UXTH     r1,r2
00027c  1f62              SUBS     r2,r4,#5
00027e  9000              STR      r0,[sp,#0]
000280  b290              UXTH     r0,r2
000282  230b              MOVS     r3,#0xb
000284  461a              MOV      r2,r3
000286  f7fffffe          BL       lcdDrawRect
;;;213    }
00028a  bdfe              POP      {r1-r7,pc}
;;;214    
                          ENDP

                  tp_scan PROC
;;;222     * * * * * * * * * * * * * * * * * * * * * * * * * * * * */
;;;223    u8 tp_scan(u8 tp)
00028c  e92d41f0          PUSH     {r4-r8,lr}
;;;224    {
000290  4604              MOV      r4,r0
;;;225    	if(TP_PEN==0)//有按键按下
000292  4864              LDR      r0,|L1.1060|
000294  6800              LDR      r0,[r0,#0]
000296  2800              CMP      r0,#0
000298  d14c              BNE      |L1.820|
;;;226    	{
;;;227    		if(tp)
00029a  b12c              CBZ      r4,|L1.680|
;;;228    		{
;;;229    			tp_readXandY2(&t_pad.currX, &t_pad.currY);//读取物理坐标
00029c  4960              LDR      r1,|L1.1056|
00029e  3112              ADDS     r1,r1,#0x12
0002a0  1e88              SUBS     r0,r1,#2
0002a2  f7fffffe          BL       tp_readXandY2
0002a6  e036              B        |L1.790|
                  |L1.680|
;;;230    		}
;;;231    		else if(tp_readXandY2(&t_pad.currX, &t_pad.currY))//读取屏幕坐标
0002a8  495d              LDR      r1,|L1.1056|
0002aa  3112              ADDS     r1,r1,#0x12
0002ac  1e88              SUBS     r0,r1,#2
0002ae  f7fffffe          BL       tp_readXandY2
0002b2  b380              CBZ      r0,|L1.790|
;;;232    		{
;;;233    			//将结果转换为屏幕坐标
;;;234    			t_pad.currX = t_pad.xfac*t_pad.currX+t_pad.xoff;
0002b4  495a              LDR      r1,|L1.1056|
0002b6  f9b10020          LDRSH    r0,[r1,#0x20]  ; t_pad
0002ba  f7fffffe          BL       __aeabi_i2f
0002be  4607              MOV      r7,r0
0002c0  4957              LDR      r1,|L1.1056|
0002c2  8a08              LDRH     r0,[r1,#0x10]  ; t_pad
0002c4  f7fffffe          BL       __aeabi_ui2f
0002c8  4680              MOV      r8,r0
0002ca  4855              LDR      r0,|L1.1056|
0002cc  6981              LDR      r1,[r0,#0x18]  ; t_pad
0002ce  4640              MOV      r0,r8
0002d0  f7fffffe          BL       __aeabi_fmul
0002d4  4606              MOV      r6,r0
0002d6  4639              MOV      r1,r7
0002d8  f7fffffe          BL       __aeabi_fadd
0002dc  4605              MOV      r5,r0
0002de  f7fffffe          BL       __aeabi_f2uiz
0002e2  494f              LDR      r1,|L1.1056|
0002e4  8208              STRH     r0,[r1,#0x10]
;;;235    			t_pad.currY = t_pad.yfac*t_pad.currY+t_pad.yoff;
0002e6  f9b10022          LDRSH    r0,[r1,#0x22]  ; t_pad
0002ea  f7fffffe          BL       __aeabi_i2f
0002ee  4607              MOV      r7,r0
0002f0  494b              LDR      r1,|L1.1056|
0002f2  8a48              LDRH     r0,[r1,#0x12]  ; t_pad
0002f4  f7fffffe          BL       __aeabi_ui2f
0002f8  4680              MOV      r8,r0
0002fa  4849              LDR      r0,|L1.1056|
0002fc  69c1              LDR      r1,[r0,#0x1c]  ; t_pad
0002fe  4640              MOV      r0,r8
000300  f7fffffe          BL       __aeabi_fmul
000304  4606              MOV      r6,r0
000306  4639              MOV      r1,r7
000308  f7fffffe          BL       __aeabi_fadd
00030c  4605              MOV      r5,r0
00030e  f7fffffe          BL       __aeabi_f2uiz
000312  4943              LDR      r1,|L1.1056|
000314  8248              STRH     r0,[r1,#0x12]
                  |L1.790|
;;;236    		} 
;;;237    		
;;;238    		if((t_pad.penStat&TP_PRES_DOWN)==0)//之前没有被按下
000316  4842              LDR      r0,|L1.1056|
000318  7d00              LDRB     r0,[r0,#0x14]  ; t_pad
00031a  f0100f80          TST      r0,#0x80
00031e  d11d              BNE      |L1.860|
;;;239    		{			
;;;240    			//按键按下 
;;;241    			t_pad.penStat = TP_PRES_DOWN|TP_CATH_PRES;
000320  20c0              MOVS     r0,#0xc0
000322  493f              LDR      r1,|L1.1056|
000324  7508              STRB     r0,[r1,#0x14]
;;;242    			//记录第一次按下时的坐标 
;;;243    			t_pad.lastX = t_pad.currX;
000326  4608              MOV      r0,r1
000328  8a00              LDRH     r0,[r0,#0x10]  ; t_pad
00032a  8188              STRH     r0,[r1,#0xc]
;;;244    			t_pad.lastY = t_pad.currY;
00032c  4608              MOV      r0,r1
00032e  8a40              LDRH     r0,[r0,#0x12]  ; t_pad
000330  81c8              STRH     r0,[r1,#0xe]
000332  e013              B        |L1.860|
                  |L1.820|
;;;245    
;;;246    		}			   
;;;247    	}
;;;248    	else
;;;249    	{
;;;250    		if(t_pad.penStat&TP_PRES_DOWN)//之前是被按下的
000334  483a              LDR      r0,|L1.1056|
000336  7d00              LDRB     r0,[r0,#0x14]  ; t_pad
000338  f0100f80          TST      r0,#0x80
00033c  d006              BEQ      |L1.844|
;;;251    		{
;;;252    			t_pad.penStat&=0x7F;//标记按键松开	
00033e  4838              LDR      r0,|L1.1056|
000340  7d00              LDRB     r0,[r0,#0x14]  ; t_pad
000342  f000007f          AND      r0,r0,#0x7f
000346  4936              LDR      r1,|L1.1056|
000348  7508              STRB     r0,[r1,#0x14]
00034a  e007              B        |L1.860|
                  |L1.844|
;;;253    		}
;;;254    		else//之前就没有被按下
;;;255    		{
;;;256    			t_pad.lastX = 0;
00034c  2000              MOVS     r0,#0
00034e  4934              LDR      r1,|L1.1056|
000350  8188              STRH     r0,[r1,#0xc]
;;;257    			t_pad.lastY = 0;
000352  81c8              STRH     r0,[r1,#0xe]
;;;258    			t_pad.currX = 0xFFFF;
000354  f64f70ff          MOV      r0,#0xffff
000358  8208              STRH     r0,[r1,#0x10]
;;;259    			t_pad.currY = 0xFFFF;
00035a  8248              STRH     r0,[r1,#0x12]
                  |L1.860|
;;;260    		}	    
;;;261    	}
;;;262    	return t_pad.penStat&TP_PRES_DOWN;//返回当前的触屏状态
00035c  4830              LDR      r0,|L1.1056|
00035e  7d00              LDRB     r0,[r0,#0x14]  ; t_pad
000360  f0000080          AND      r0,r0,#0x80
;;;263    }
000364  e8bd81f0          POP      {r4-r8,pc}
;;;264    
                          ENDP

                  tp_printAdjustInfo PROC
;;;492     * * * * * * * * * * * * * * * * * * * * * * * * * * * * */
;;;493    u8 tp_printAdjustInfo(u16 pos[][2], u16 fac)
000368  b570              PUSH     {r4-r6,lr}
;;;494    {
00036a  4604              MOV      r4,r0
00036c  460d              MOV      r5,r1
;;;495    	printf("x1 = %d, y1 = %d\r\n", pos[0][0], pos[0][1]);
00036e  8862              LDRH     r2,[r4,#2]
000370  8821              LDRH     r1,[r4,#0]
000372  a02d              ADR      r0,|L1.1064|
000374  f7fffffe          BL       __2printf
;;;496    	printf("x2 = %d, y2 = %d\r\n", pos[1][0], pos[1][1]);
000378  88e2              LDRH     r2,[r4,#6]
00037a  88a1              LDRH     r1,[r4,#4]
00037c  a02f              ADR      r0,|L1.1084|
00037e  f7fffffe          BL       __2printf
;;;497    	printf("x3 = %d, y3 = %d\r\n", pos[2][0], pos[2][1]);
000382  8962              LDRH     r2,[r4,#0xa]
000384  8921              LDRH     r1,[r4,#8]
000386  a032              ADR      r0,|L1.1104|
000388  f7fffffe          BL       __2printf
;;;498    	printf("x4 = %d, y4 = %d\r\n", pos[3][0], pos[3][1]);
00038c  89e2              LDRH     r2,[r4,#0xe]
00038e  89a1              LDRH     r1,[r4,#0xc]
000390  a034              ADR      r0,|L1.1124|
000392  f7fffffe          BL       __2printf
;;;499    	printf("fac = %d\r\n", fac);
000396  4629              MOV      r1,r5
000398  a037              ADR      r0,|L1.1144|
00039a  f7fffffe          BL       __2printf
;;;500    	return 0;
00039e  2000              MOVS     r0,#0
;;;501    }
0003a0  bd70              POP      {r4-r6,pc}
;;;502    
                          ENDP

                  tp_adjust PROC
;;;310     * * * * * * * * * * * * * * * * * * * * * * * * * * * * */
;;;311    u8 tp_adjust(void)
0003a2  e92d4ff0          PUSH     {r4-r11,lr}
;;;312    {
0003a6  b089              SUB      sp,sp,#0x24
;;;313    	u16 pos_temp[4][2];//坐标缓存值
;;;314    	u8  cnt=0;	
0003a8  2600              MOVS     r6,#0
;;;315    	u16 d1,d2;
;;;316    	u32 tem1,tem2;
;;;317    	float fac; 	
;;;318    	u16 outtime=0;
0003aa  46b3              MOV      r11,r6
;;;319    				
;;;320    	LcdPen	pen;
;;;321    	pen.color = RED;
0003ac  201f              MOVS     r0,#0x1f
0003ae  f8ad0008          STRH     r0,[sp,#8]
;;;322    	pen.p_size = P_S16EN;
0003b2  2010              MOVS     r0,#0x10
0003b4  f88d000c          STRB     r0,[sp,#0xc]
;;;323    	
;;;324    	cnt=0;
0003b8  bf00              NOP      
;;;325    	
;;;326    	lcdClear(WHITE);//清屏   
0003ba  f64f70ff          MOV      r0,#0xffff
0003be  f7fffffe          BL       lcdClear
;;;327    
;;;328    	tp_drawAdjustPoint(20, 20, RED);
0003c2  221f              MOVS     r2,#0x1f
0003c4  2114              MOVS     r1,#0x14
0003c6  4608              MOV      r0,r1
0003c8  f7fffffe          BL       tp_drawAdjustPoint
;;;329    	
;;;330    	lcdDrawStr(100, 120, (u8*)"请依次点击屏幕上的校准点进行屏幕校准!", &pen);
0003cc  ab02              ADD      r3,sp,#8
0003ce  a22d              ADR      r2,|L1.1156|
0003d0  2178              MOVS     r1,#0x78
0003d2  2064              MOVS     r0,#0x64
0003d4  f7fffffe          BL       lcdDrawStr
;;;331    
;;;332    	t_pad.penStat = 0;//消除触发信号 
0003d8  2000              MOVS     r0,#0
0003da  4911              LDR      r1,|L1.1056|
0003dc  7508              STRB     r0,[r1,#0x14]
;;;333    	t_pad.xfac = 0;//xfac用来标记是否校准过,所以校准之前必须清掉!以免错误	 
0003de  6188              STR      r0,[r1,#0x18]  ; t_pad
;;;334    
;;;335    	while(1)//如果连续10秒钟没有按下,则自动退出
0003e0  e30a              B        |L1.2552|
                  |L1.994|
;;;336    	{
;;;337    		//扫描物理坐标
;;;338    		t_pad.scan(1);
0003e2  480f              LDR      r0,|L1.1056|
0003e4  6841              LDR      r1,[r0,#4]  ; t_pad
0003e6  2001              MOVS     r0,#1
0003e8  4788              BLX      r1
;;;339    		if((t_pad.penStat&0xc0)==TP_CATH_PRES)//按键按下了一次(此时按键松开了.)
0003ea  480d              LDR      r0,|L1.1056|
0003ec  7d00              LDRB     r0,[r0,#0x14]  ; t_pad
0003ee  f00000c0          AND      r0,r0,#0xc0
0003f2  2840              CMP      r0,#0x40
0003f4  d16f              BNE      |L1.1238|
;;;340    		{	
;;;341    			outtime=0;		
0003f6  f04f0b00          MOV      r11,#0
;;;342    			t_pad.penStat&=~(1<<6);//标记按键已经被处理过了.
0003fa  4809              LDR      r0,|L1.1056|
0003fc  7d00              LDRB     r0,[r0,#0x14]  ; t_pad
0003fe  f0200040          BIC      r0,r0,#0x40
000402  4907              LDR      r1,|L1.1056|
000404  7508              STRB     r0,[r1,#0x14]
;;;343    
;;;344    			pos_temp[cnt][0]=t_pad.currX;
000406  e051              B        |L1.1196|
                  |L1.1032|
                          DCD      0x422381a4
                  |L1.1036|
                          DCD      0x42218184
                  |L1.1040|
                          DCD      0x42218000
                  |L1.1044|
                          DCD      0x42238000
                  |L1.1048|
                          DCD      0x42218188
                  |L1.1052|
                          DCD      0x42238120
                  |L1.1056|
                          DCD      t_pad
                  |L1.1060|
                          DCD      0x42238128
                  |L1.1064|
000428  7831203d          DCB      "x1 = %d, y1 = %d\r\n",0
00042c  2025642c
000430  20793120
000434  3d202564
000438  0d0a00  
00043b  00                DCB      0
                  |L1.1084|
00043c  7832203d          DCB      "x2 = %d, y2 = %d\r\n",0
000440  2025642c
000444  20793220
000448  3d202564
00044c  0d0a00  
00044f  00                DCB      0
                  |L1.1104|
000450  7833203d          DCB      "x3 = %d, y3 = %d\r\n",0
000454  2025642c
000458  20793320
00045c  3d202564
000460  0d0a00  
000463  00                DCB      0
                  |L1.1124|
000464  7834203d          DCB      "x4 = %d, y4 = %d\r\n",0
000468  2025642c
00046c  20793420
000470  3d202564
000474  0d0a00  
000477  00                DCB      0
                  |L1.1144|
000478  66616320          DCB      "fac = %d\r\n",0
00047c  3d202564
000480  0d0a00  
000483  00                DCB      0
                  |L1.1156|
000484  c7ebd2c0          DCB      199,235,210,192,180,206,181,227,187,247,198,193,196,187,201
000488  b4ceb5e3
00048c  bbf7c6c1
000490  c4bbc9  
000493  cfb5c4d0          DCB      207,181,196,208,163,215,188,181,227,189,248,208,208,198,193
000497  a3d7bcb5
00049b  e3bdf8d0
00049f  d0c6c1  
0004a2  c4bbd0a3          DCB      196,187,208,163,215,188,"!",0
0004a6  d7bc2100
0004aa  00                DCB      0
0004ab  00                DCB      0
                  |L1.1196|
0004ac  4608              MOV      r0,r1
0004ae  8a00              LDRH     r0,[r0,#0x10]  ; t_pad
0004b0  a905              ADD      r1,sp,#0x14
0004b2  f8210026          STRH     r0,[r1,r6,LSL #2]
;;;345    			pos_temp[cnt][1]=t_pad.currY;
0004b6  48fe              LDR      r0,|L1.2224|
0004b8  8a40              LDRH     r0,[r0,#0x12]  ; t_pad
0004ba  eb010186          ADD      r1,r1,r6,LSL #2
0004be  8048              STRH     r0,[r1,#2]
;;;346    			cnt++;	  
0004c0  1c70              ADDS     r0,r6,#1
0004c2  b2c6              UXTB     r6,r0
;;;347    			switch(cnt)
0004c4  2e01              CMP      r6,#1
0004c6  d007              BEQ      |L1.1240|
0004c8  2e02              CMP      r6,#2
0004ca  d012              BEQ      |L1.1266|
0004cc  2e03              CMP      r6,#3
0004ce  d01e              BEQ      |L1.1294|
0004d0  2e04              CMP      r6,#4
0004d2  d10d              BNE      |L1.1264|
0004d4  e02a              B        |L1.1324|
                  |L1.1238|
0004d6  e271              B        |L1.2492|
                  |L1.1240|
;;;348    			{			   
;;;349    				case 1:						 
;;;350    					//清除点1 
;;;351    					tp_drawAdjustPoint(20,20,WHITE);
0004d8  f64f72ff          MOV      r2,#0xffff
0004dc  2114              MOVS     r1,#0x14
0004de  4608              MOV      r0,r1
0004e0  f7fffffe          BL       tp_drawAdjustPoint
;;;352    					//画点2
;;;353    					tp_drawAdjustPoint(LCD_WIDTH-20,20,RED);
0004e4  221f              MOVS     r2,#0x1f
0004e6  2114              MOVS     r1,#0x14
0004e8  f44f70e6          MOV      r0,#0x1cc
0004ec  f7fffffe          BL       tp_drawAdjustPoint
                  |L1.1264|
;;;354    					break;
0004f0  e263              B        |L1.2490|
                  |L1.1266|
;;;355    				case 2:
;;;356    					//清除点2 
;;;357    					tp_drawAdjustPoint(LCD_WIDTH-20,20,WHITE);
0004f2  f64f72ff          MOV      r2,#0xffff
0004f6  2114              MOVS     r1,#0x14
0004f8  f44f70e6          MOV      r0,#0x1cc
0004fc  f7fffffe          BL       tp_drawAdjustPoint
;;;358    					//画点3
;;;359    					tp_drawAdjustPoint(20,LCD_HEIGHT-20,RED);
000500  221f              MOVS     r2,#0x1f
000502  f44f7196          MOV      r1,#0x12c
000506  2014              MOVS     r0,#0x14
000508  f7fffffe          BL       tp_drawAdjustPoint
;;;360    					break;
00050c  e255              B        |L1.2490|
                  |L1.1294|
;;;361    				case 3:
;;;362    					//清除点3 
;;;363    					tp_drawAdjustPoint(20,LCD_HEIGHT-20,WHITE);
00050e  f64f72ff          MOV      r2,#0xffff
000512  f44f7196          MOV      r1,#0x12c
000516  2014              MOVS     r0,#0x14
000518  f7fffffe          BL       tp_drawAdjustPoint
;;;364    					//画点4
;;;365    					tp_drawAdjustPoint(LCD_WIDTH-20,LCD_HEIGHT-20,RED);
00051c  221f              MOVS     r2,#0x1f
00051e  f44f7196          MOV      r1,#0x12c
000522  f44f70e6          MOV      r0,#0x1cc
000526  f7fffffe          BL       tp_drawAdjustPoint
;;;366    					break;
00052a  e246              B        |L1.2490|
                  |L1.1324|
;;;367    				case 4:	 //全部四个点已经得到
;;;368    					//对边相等
;;;369    					tem1=abs(pos_temp[0][0]-pos_temp[1][0]);//x1-x2
00052c  f8bd1014          LDRH     r1,[sp,#0x14]
000530  f8bd2018          LDRH     r2,[sp,#0x18]
000534  1a88              SUBS     r0,r1,r2
000536  d401              BMI      |L1.1340|
000538  4601              MOV      r1,r0
00053a  e000              B        |L1.1342|
                  |L1.1340|
00053c  4241              RSBS     r1,r0,#0
                  |L1.1342|
00053e  460c              MOV      r4,r1
;;;370    					tem2=abs(pos_temp[0][1]-pos_temp[1][1]);//y1-y2
000540  f8bd2016          LDRH     r2,[sp,#0x16]
000544  f8bd101a          LDRH     r1,[sp,#0x1a]
000548  1a50              SUBS     r0,r2,r1
00054a  d401              BMI      |L1.1360|
00054c  4601              MOV      r1,r0
00054e  e000              B        |L1.1362|
                  |L1.1360|
000550  4241              RSBS     r1,r0,#0
                  |L1.1362|
000552  460d              MOV      r5,r1
;;;371    					tem1*=tem1;
000554  4364              MULS     r4,r4,r4
;;;372    					tem2*=tem2;
000556  436d              MULS     r5,r5,r5
;;;373    					d1=sqrt(tem1+tem2);//得到1,2的距离
000558  1960              ADDS     r0,r4,r5
00055a  f7fffffe          BL       __aeabi_ui2d
00055e  e9cd0100          STRD     r0,r1,[sp,#0]
000562  f7fffffe          BL       sqrt
000566  4607              MOV      r7,r0
000568  f7fffffe          BL       __aeabi_d2uiz
00056c  fa1ff980          UXTH     r9,r0
;;;374    
;;;375    					tem1=abs(pos_temp[2][0]-pos_temp[3][0]);//x3-x4
000570  f8bd101c          LDRH     r1,[sp,#0x1c]
000574  f8bd2020          LDRH     r2,[sp,#0x20]
000578  1a88              SUBS     r0,r1,r2
00057a  d401              BMI      |L1.1408|
00057c  4601              MOV      r1,r0
00057e  e000              B        |L1.1410|
                  |L1.1408|
000580  4241              RSBS     r1,r0,#0
                  |L1.1410|
000582  460c              MOV      r4,r1
;;;376    					tem2=abs(pos_temp[2][1]-pos_temp[3][1]);//y3-y4
000584  f8bd201e          LDRH     r2,[sp,#0x1e]
000588  f8bd1022          LDRH     r1,[sp,#0x22]
00058c  1a50              SUBS     r0,r2,r1
00058e  d401              BMI      |L1.1428|
000590  4601              MOV      r1,r0
000592  e000              B        |L1.1430|
                  |L1.1428|
000594  4241              RSBS     r1,r0,#0
                  |L1.1430|
000596  460d              MOV      r5,r1
;;;377    					tem1*=tem1;
000598  4364              MULS     r4,r4,r4
;;;378    					tem2*=tem2;
00059a  436d              MULS     r5,r5,r5
;;;379    					d2=sqrt(tem1+tem2);//得到3,4的距离
00059c  1960              ADDS     r0,r4,r5
00059e  f7fffffe          BL       __aeabi_ui2d
0005a2  e9cd0100          STRD     r0,r1,[sp,#0]
0005a6  f7fffffe          BL       sqrt
0005aa  4607              MOV      r7,r0
0005ac  f7fffffe          BL       __aeabi_d2uiz
0005b0  fa1ffa80          UXTH     r10,r0
;;;380    					fac=(float)d1/d2;
0005b4  4650              MOV      r0,r10
0005b6  f7fffffe          BL       __aeabi_ui2f
0005ba  4607              MOV      r7,r0
0005bc  4648              MOV      r0,r9
0005be  f7fffffe          BL       __aeabi_ui2f
0005c2  4680              MOV      r8,r0
0005c4  4639              MOV      r1,r7
0005c6  f7fffffe          BL       __aeabi_fdiv
0005ca  9004              STR      r0,[sp,#0x10]
;;;381    					if(fac<0.95||fac>1.05||d1==0||d2==0)//不合格
0005cc  9804              LDR      r0,[sp,#0x10]
0005ce  f7fffffe          BL       __aeabi_f2d
0005d2  4607              MOV      r7,r0
0005d4  f04f3266          MOV      r2,#0x66666666
0005d8  4bb6              LDR      r3,|L1.2228|
0005da  f7fffffe          BL       __aeabi_cdcmple
0005de  d30e              BCC      |L1.1534|
0005e0  9804              LDR      r0,[sp,#0x10]
0005e2  f7fffffe          BL       __aeabi_f2d
0005e6  4607              MOV      r7,r0
0005e8  4ab3              LDR      r2,|L1.2232|
0005ea  4bb4              LDR      r3,|L1.2236|
0005ec  f7fffffe          BL       __aeabi_cdrcmple
0005f0  d305              BCC      |L1.1534|
0005f2  f1b90f00          CMP      r9,#0
0005f6  d002              BEQ      |L1.1534|
0005f8  f1ba0f00          CMP      r10,#0
0005fc  d11a              BNE      |L1.1588|
                  |L1.1534|
;;;382    					{
;;;383    						cnt=0;
0005fe  2600              MOVS     r6,#0
;;;384    						tp_drawAdjustPoint(LCD_WIDTH-20,LCD_HEIGHT-20,WHITE);	//清除点4
000600  f64f72ff          MOV      r2,#0xffff
000604  f44f7196          MOV      r1,#0x12c
000608  f44f70e6          MOV      r0,#0x1cc
00060c  f7fffffe          BL       tp_drawAdjustPoint
;;;385    						tp_drawAdjustPoint(20,20,RED);//画点1
000610  221f              MOVS     r2,#0x1f
000612  2114              MOVS     r1,#0x14
000614  4608              MOV      r0,r1
000616  f7fffffe          BL       tp_drawAdjustPoint
;;;386    						tp_printAdjustInfo(pos_temp, fac*100);
00061a  49a9              LDR      r1,|L1.2240|
00061c  9804              LDR      r0,[sp,#0x10]
00061e  f7fffffe          BL       __aeabi_fmul
000622  4680              MOV      r8,r0
000624  f7fffffe          BL       __aeabi_f2uiz
000628  b287              UXTH     r7,r0
00062a  4639              MOV      r1,r7
00062c  a805              ADD      r0,sp,#0x14
00062e  f7fffffe          BL       tp_printAdjustInfo
;;;387    						continue;
000632  e1e1              B        |L1.2552|
                  |L1.1588|
;;;388    					}
;;;389    					tem1=abs(pos_temp[0][0]-pos_temp[2][0]);//x1-x3
000634  f8bd1014          LDRH     r1,[sp,#0x14]
000638  f8bd201c          LDRH     r2,[sp,#0x1c]
00063c  1a88              SUBS     r0,r1,r2
00063e  d401              BMI      |L1.1604|
000640  4601              MOV      r1,r0
000642  e000              B        |L1.1606|
                  |L1.1604|
000644  4241              RSBS     r1,r0,#0
                  |L1.1606|
000646  460c              MOV      r4,r1
;;;390    					tem2=abs(pos_temp[0][1]-pos_temp[2][1]);//y1-y3
000648  f8bd2016          LDRH     r2,[sp,#0x16]
00064c  f8bd101e          LDRH     r1,[sp,#0x1e]
000650  1a50              SUBS     r0,r2,r1
000652  d401              BMI      |L1.1624|
000654  4601              MOV      r1,r0
000656  e000              B        |L1.1626|
                  |L1.1624|
000658  4241              RSBS     r1,r0,#0
                  |L1.1626|
00065a  460d              MOV      r5,r1
;;;391    					tem1*=tem1;
00065c  4364              MULS     r4,r4,r4
;;;392    					tem2*=tem2;
00065e  436d              MULS     r5,r5,r5
;;;393    					d1=sqrt(tem1+tem2);//得到1,3的距离
000660  1960              ADDS     r0,r4,r5
000662  f7fffffe          BL       __aeabi_ui2d
000666  e9cd0100          STRD     r0,r1,[sp,#0]
00066a  f7fffffe          BL       sqrt
00066e  4607              MOV      r7,r0
000670  f7fffffe          BL       __aeabi_d2uiz
000674  fa1ff980          UXTH     r9,r0
;;;394    
;;;395    					tem1=abs(pos_temp[1][0]-pos_temp[3][0]);//x2-x4
000678  f8bd1018          LDRH     r1,[sp,#0x18]
00067c  f8bd2020          LDRH     r2,[sp,#0x20]
000680  1a88              SUBS     r0,r1,r2
000682  d401              BMI      |L1.1672|
000684  4601              MOV      r1,r0
000686  e000              B        |L1.1674|
                  |L1.1672|
000688  4241              RSBS     r1,r0,#0
                  |L1.1674|
00068a  460c              MOV      r4,r1
;;;396    					tem2=abs(pos_temp[1][1]-pos_temp[3][1]);//y2-y4
00068c  f8bd201a          LDRH     r2,[sp,#0x1a]
000690  f8bd1022          LDRH     r1,[sp,#0x22]
000694  1a50              SUBS     r0,r2,r1
000696  d401              BMI      |L1.1692|
000698  4601              MOV      r1,r0
00069a  e000              B        |L1.1694|
                  |L1.1692|
00069c  4241              RSBS     r1,r0,#0
                  |L1.1694|
00069e  460d              MOV      r5,r1
;;;397    					tem1*=tem1;
0006a0  4364              MULS     r4,r4,r4
;;;398    					tem2*=tem2;
0006a2  436d              MULS     r5,r5,r5
;;;399    					d2=sqrt(tem1+tem2);//得到2,4的距离
0006a4  1960              ADDS     r0,r4,r5
0006a6  f7fffffe          BL       __aeabi_ui2d
0006aa  e9cd0100          STRD     r0,r1,[sp,#0]
0006ae  f7fffffe          BL       sqrt
0006b2  4607              MOV      r7,r0
0006b4  f7fffffe          BL       __aeabi_d2uiz
0006b8  fa1ffa80          UXTH     r10,r0
;;;400    					fac=(float)d1/d2;
0006bc  4650              MOV      r0,r10
0006be  f7fffffe          BL       __aeabi_ui2f
0006c2  4607              MOV      r7,r0
0006c4  4648              MOV      r0,r9
0006c6  f7fffffe          BL       __aeabi_ui2f
0006ca  4680              MOV      r8,r0
0006cc  4639              MOV      r1,r7
0006ce  f7fffffe          BL       __aeabi_fdiv
0006d2  9004              STR      r0,[sp,#0x10]
;;;401    					if(fac<0.95||fac>1.05)//不合格
0006d4  9804              LDR      r0,[sp,#0x10]
0006d6  f7fffffe          BL       __aeabi_f2d
0006da  4607              MOV      r7,r0
0006dc  f04f3266          MOV      r2,#0x66666666
0006e0  4b74              LDR      r3,|L1.2228|
0006e2  f7fffffe          BL       __aeabi_cdcmple
0006e6  d308              BCC      |L1.1786|
0006e8  9804              LDR      r0,[sp,#0x10]
0006ea  f7fffffe          BL       __aeabi_f2d
0006ee  4607              MOV      r7,r0
0006f0  4a71              LDR      r2,|L1.2232|
0006f2  4b72              LDR      r3,|L1.2236|
0006f4  f7fffffe          BL       __aeabi_cdrcmple
0006f8  d21a              BCS      |L1.1840|
                  |L1.1786|
;;;402    					{
;;;403    						cnt=0;
0006fa  2600              MOVS     r6,#0
;;;404    						tp_drawAdjustPoint(460,300,WHITE);	//清除点4
0006fc  f64f72ff          MOV      r2,#0xffff
000700  f44f7196          MOV      r1,#0x12c
000704  f44f70e6          MOV      r0,#0x1cc
000708  f7fffffe          BL       tp_drawAdjustPoint
;;;405    						tp_drawAdjustPoint(20,20,RED);//画点1
00070c  221f              MOVS     r2,#0x1f
00070e  2114              MOVS     r1,#0x14
000710  4608              MOV      r0,r1
000712  f7fffffe          BL       tp_drawAdjustPoint
;;;406    						tp_printAdjustInfo(pos_temp, fac*100);
000716  496a              LDR      r1,|L1.2240|
000718  9804              LDR      r0,[sp,#0x10]
00071a  f7fffffe          BL       __aeabi_fmul
00071e  4680              MOV      r8,r0
000720  f7fffffe          BL       __aeabi_f2uiz
000724  b287              UXTH     r7,r0
000726  4639              MOV      r1,r7
000728  a805              ADD      r0,sp,#0x14
00072a  f7fffffe          BL       tp_printAdjustInfo
;;;407    						//tp_showAdjustInfo(pos_temp[0][0],pos_temp[0][1],pos_temp[1][0],pos_temp[1][1],pos_temp[2][0],pos_temp[2][1],pos_temp[3][0],pos_temp[3][1],fac*100);//显示数据   
;;;408    						continue;
00072e  e163              B        |L1.2552|
                  |L1.1840|
;;;409    					}//正确了
;;;410    
;;;411    					//对角线相等
;;;412    					tem1=abs(pos_temp[1][0]-pos_temp[2][0]);//x1-x3
000730  f8bd1018          LDRH     r1,[sp,#0x18]
000734  f8bd201c          LDRH     r2,[sp,#0x1c]
000738  1a88              SUBS     r0,r1,r2
00073a  d401              BMI      |L1.1856|
00073c  4601              MOV      r1,r0
00073e  e000              B        |L1.1858|
                  |L1.1856|
000740  4241              RSBS     r1,r0,#0
                  |L1.1858|
000742  460c              MOV      r4,r1
;;;413    					tem2=abs(pos_temp[1][1]-pos_temp[2][1]);//y1-y3
000744  f8bd201a          LDRH     r2,[sp,#0x1a]
000748  f8bd101e          LDRH     r1,[sp,#0x1e]
00074c  1a50              SUBS     r0,r2,r1
00074e  d401              BMI      |L1.1876|
000750  4601              MOV      r1,r0
000752  e000              B        |L1.1878|
                  |L1.1876|
000754  4241              RSBS     r1,r0,#0
                  |L1.1878|
000756  460d              MOV      r5,r1
;;;414    					tem1*=tem1;
000758  4364              MULS     r4,r4,r4
;;;415    					tem2*=tem2;
00075a  436d              MULS     r5,r5,r5
;;;416    					d1=sqrt(tem1+tem2);//得到1,4的距离
00075c  1960              ADDS     r0,r4,r5
00075e  f7fffffe          BL       __aeabi_ui2d
000762  4607              MOV      r7,r0
000764  f7fffffe          BL       sqrt
000768  e9cd0100          STRD     r0,r1,[sp,#0]
00076c  f7fffffe          BL       __aeabi_d2uiz
000770  fa1ff980          UXTH     r9,r0
;;;417    
;;;418    					tem1=abs(pos_temp[0][0]-pos_temp[3][0]);//x2-x4
000774  f8bd1014          LDRH     r1,[sp,#0x14]
000778  f8bd2020          LDRH     r2,[sp,#0x20]
00077c  1a88              SUBS     r0,r1,r2
00077e  d401              BMI      |L1.1924|
000780  4601              MOV      r1,r0
000782  e000              B        |L1.1926|
                  |L1.1924|
000784  4241              RSBS     r1,r0,#0
                  |L1.1926|
000786  460c              MOV      r4,r1
;;;419    					tem2=abs(pos_temp[0][1]-pos_temp[3][1]);//y2-y4
000788  f8bd2016          LDRH     r2,[sp,#0x16]
00078c  f8bd1022          LDRH     r1,[sp,#0x22]
000790  1a50              SUBS     r0,r2,r1
000792  d401              BMI      |L1.1944|
000794  4601              MOV      r1,r0
000796  e000              B        |L1.1946|
                  |L1.1944|
000798  4241              RSBS     r1,r0,#0
                  |L1.1946|
00079a  460d              MOV      r5,r1
;;;420    					tem1*=tem1;
00079c  4364              MULS     r4,r4,r4
;;;421    					tem2*=tem2;
00079e  436d              MULS     r5,r5,r5
;;;422    					d2=sqrt(tem1+tem2);//得到2,3的距离
0007a0  1960              ADDS     r0,r4,r5
0007a2  f7fffffe          BL       __aeabi_ui2d
0007a6  4607              MOV      r7,r0
0007a8  f7fffffe          BL       sqrt
0007ac  e9cd0100          STRD     r0,r1,[sp,#0]
0007b0  f7fffffe          BL       __aeabi_d2uiz
0007b4  fa1ffa80          UXTH     r10,r0
;;;423    					fac=(float)d1/d2;
0007b8  4650              MOV      r0,r10
0007ba  f7fffffe          BL       __aeabi_ui2f
0007be  4607              MOV      r7,r0
0007c0  4648              MOV      r0,r9
0007c2  f7fffffe          BL       __aeabi_ui2f
0007c6  4680              MOV      r8,r0
0007c8  4639              MOV      r1,r7
0007ca  f7fffffe          BL       __aeabi_fdiv
0007ce  9004              STR      r0,[sp,#0x10]
;;;424    					if(fac<0.95||fac>1.05)//不合格
0007d0  9804              LDR      r0,[sp,#0x10]
0007d2  f7fffffe          BL       __aeabi_f2d
0007d6  4607              MOV      r7,r0
0007d8  f04f3266          MOV      r2,#0x66666666
0007dc  4b35              LDR      r3,|L1.2228|
0007de  f7fffffe          BL       __aeabi_cdcmple
0007e2  d308              BCC      |L1.2038|
0007e4  9804              LDR      r0,[sp,#0x10]
0007e6  f7fffffe          BL       __aeabi_f2d
0007ea  4607              MOV      r7,r0
0007ec  4a32              LDR      r2,|L1.2232|
0007ee  4b33              LDR      r3,|L1.2236|
0007f0  f7fffffe          BL       __aeabi_cdrcmple
0007f4  d21a              BCS      |L1.2092|
                  |L1.2038|
;;;425    					{
;;;426    						cnt=0;
0007f6  2600              MOVS     r6,#0
;;;427    						tp_drawAdjustPoint(460,300,WHITE);	//清除点4
0007f8  f64f72ff          MOV      r2,#0xffff
0007fc  f44f7196          MOV      r1,#0x12c
000800  f44f70e6          MOV      r0,#0x1cc
000804  f7fffffe          BL       tp_drawAdjustPoint
;;;428    						tp_drawAdjustPoint(20,20,RED);//画点1
000808  221f              MOVS     r2,#0x1f
00080a  2114              MOVS     r1,#0x14
00080c  4608              MOV      r0,r1
00080e  f7fffffe          BL       tp_drawAdjustPoint
;;;429    						tp_printAdjustInfo(pos_temp, fac*100);
000812  492b              LDR      r1,|L1.2240|
000814  9804              LDR      r0,[sp,#0x10]
000816  f7fffffe          BL       __aeabi_fmul
00081a  4680              MOV      r8,r0
00081c  f7fffffe          BL       __aeabi_f2uiz
000820  b287              UXTH     r7,r0
000822  4639              MOV      r1,r7
000824  a805              ADD      r0,sp,#0x14
000826  f7fffffe          BL       tp_printAdjustInfo
;;;430    						//tp_showAdjustInfo(pos_temp[0][0],pos_temp[0][1],pos_temp[1][0],pos_temp[1][1],pos_temp[2][0],pos_temp[2][1],pos_temp[3][0],pos_temp[3][1],fac*100);//显示数据   
;;;431    						continue;
00082a  e0e5              B        |L1.2552|
                  |L1.2092|
;;;432    					}//正确了
;;;433    					//计算结果
;;;434    					t_pad.xfac=(float)(LCD_WIDTH-40)/(pos_temp[1][0]-pos_temp[0][0]);//得到xfac		 
00082c  f8bd1018          LDRH     r1,[sp,#0x18]
000830  f8bd2014          LDRH     r2,[sp,#0x14]
000834  1a88              SUBS     r0,r1,r2
000836  f7fffffe          BL       __aeabi_i2f
00083a  4607              MOV      r7,r0
00083c  4639              MOV      r1,r7
00083e  4821              LDR      r0,|L1.2244|
000840  f7fffffe          BL       __aeabi_fdiv
000844  491a              LDR      r1,|L1.2224|
000846  6188              STR      r0,[r1,#0x18]  ; t_pad
;;;435    					t_pad.xoff=(LCD_WIDTH-t_pad.xfac*(pos_temp[1][0]+pos_temp[0][0]))/2;//得到xoff
000848  f8bd1018          LDRH     r1,[sp,#0x18]
00084c  f8bd2014          LDRH     r2,[sp,#0x14]
000850  1888              ADDS     r0,r1,r2
000852  f7fffffe          BL       __aeabi_i2f
000856  9000              STR      r0,[sp,#0]
000858  4815              LDR      r0,|L1.2224|
00085a  6981              LDR      r1,[r0,#0x18]  ; t_pad
00085c  9800              LDR      r0,[sp,#0]
00085e  f7fffffe          BL       __aeabi_fmul
000862  4919              LDR      r1,|L1.2248|
000864  9001              STR      r0,[sp,#4]
000866  f7fffffe          BL       __aeabi_frsub
00086a  4680              MOV      r8,r0
00086c  f04f4180          MOV      r1,#0x40000000
000870  f7fffffe          BL       __aeabi_fdiv
000874  4607              MOV      r7,r0
000876  f7fffffe          BL       __aeabi_f2iz
00087a  b200              SXTH     r0,r0
00087c  490c              LDR      r1,|L1.2224|
00087e  8408              STRH     r0,[r1,#0x20]
;;;436    
;;;437    					t_pad.yfac=(float)(LCD_HEIGHT-40)/(pos_temp[2][1]-pos_temp[0][1]);//得到yfac
000880  f8bd101e          LDRH     r1,[sp,#0x1e]
000884  f8bd2016          LDRH     r2,[sp,#0x16]
000888  1a88              SUBS     r0,r1,r2
00088a  f7fffffe          BL       __aeabi_i2f
00088e  4607              MOV      r7,r0
000890  4639              MOV      r1,r7
000892  480e              LDR      r0,|L1.2252|
000894  f7fffffe          BL       __aeabi_fdiv
000898  4905              LDR      r1,|L1.2224|
00089a  61c8              STR      r0,[r1,#0x1c]  ; t_pad
;;;438    					t_pad.yoff=(LCD_HEIGHT-t_pad.yfac*(pos_temp[2][1]+pos_temp[0][1]))/2;//得到yoff  
00089c  f8bd101e          LDRH     r1,[sp,#0x1e]
0008a0  f8bd2016          LDRH     r2,[sp,#0x16]
0008a4  1888              ADDS     r0,r1,r2
0008a6  f7fffffe          BL       __aeabi_i2f
0008aa  9000              STR      r0,[sp,#0]
0008ac  4800              LDR      r0,|L1.2224|
0008ae  e00f              B        |L1.2256|
                  |L1.2224|
                          DCD      t_pad
                  |L1.2228|
                          DCD      0x3fee6666
                  |L1.2232|
                          DCD      0xcccccccd
                  |L1.2236|
                          DCD      0x3ff0cccc
                  |L1.2240|
                          DCD      0x42c80000
                  |L1.2244|
                          DCD      0x43dc0000
                  |L1.2248|
                          DCD      0x43f00000
                  |L1.2252|
                          DCD      0x438c0000
                  |L1.2256|
0008d0  69c1              LDR      r1,[r0,#0x1c]  ; t_pad
0008d2  9800              LDR      r0,[sp,#0]
0008d4  f7fffffe          BL       __aeabi_fmul
0008d8  49f8              LDR      r1,|L1.3260|
0008da  9001              STR      r0,[sp,#4]
0008dc  f7fffffe          BL       __aeabi_frsub
0008e0  4680              MOV      r8,r0
0008e2  f04f4180          MOV      r1,#0x40000000
0008e6  f7fffffe          BL       __aeabi_fdiv
0008ea  4607              MOV      r7,r0
0008ec  f7fffffe          BL       __aeabi_f2iz
0008f0  b200              SXTH     r0,r0
0008f2  49f3              LDR      r1,|L1.3264|
0008f4  8448              STRH     r0,[r1,#0x22]
;;;439    					if(abs(t_pad.xfac)>2||abs(t_pad.yfac)>2)//触屏和预设的相反了.
0008f6  6988              LDR      r0,[r1,#0x18]  ; t_pad
0008f8  f7fffffe          BL       __aeabi_f2iz
0008fc  f1b00800          SUBS     r8,r0,#0
000900  db01              BLT      |L1.2310|
000902  4640              MOV      r0,r8
000904  e001              B        |L1.2314|
                  |L1.2310|
000906  f1c80000          RSB      r0,r8,#0
                  |L1.2314|
00090a  2802              CMP      r0,#2
00090c  dc0a              BGT      |L1.2340|
00090e  49ec              LDR      r1,|L1.3264|
000910  69c8              LDR      r0,[r1,#0x1c]  ; t_pad
000912  f7fffffe          BL       __aeabi_f2iz
000916  1e07              SUBS     r7,r0,#0
000918  db01              BLT      |L1.2334|
00091a  4638              MOV      r0,r7
00091c  e000              B        |L1.2336|
                  |L1.2334|
00091e  4278              RSBS     r0,r7,#0
                  |L1.2336|
000920  2802              CMP      r0,#2
000922  dd34              BLE      |L1.2446|
                  |L1.2340|
;;;440    					{
;;;441    						cnt=0;
000924  2600              MOVS     r6,#0
;;;442    						lcdClear(WHITE);
000926  f64f70ff          MOV      r0,#0xffff
00092a  f7fffffe          BL       lcdClear
;;;443    						lcdDrawStr(100,120, (u8*)"未完成校验，请重新操作！", &pen);
00092e  ab02              ADD      r3,sp,#8
000930  a2e4              ADR      r2,|L1.3268|
000932  2178              MOVS     r1,#0x78
000934  2064              MOVS     r0,#0x64
000936  f7fffffe          BL       lcdDrawStr
;;;444    						tp_drawAdjustPoint(LCD_WIDTH-20,LCD_HEIGHT-20,WHITE);	//清除点4
00093a  f64f72ff          MOV      r2,#0xffff
00093e  f44f7196          MOV      r1,#0x12c
000942  f44f70e6          MOV      r0,#0x1cc
000946  f7fffffe          BL       tp_drawAdjustPoint
;;;445    						tp_drawAdjustPoint(20,20,RED);								//画点1
00094a  221f              MOVS     r2,#0x1f
00094c  2114              MOVS     r1,#0x14
00094e  4608              MOV      r0,r1
000950  f7fffffe          BL       tp_drawAdjustPoint
;;;446    
;;;447    						t_pad.direct = (t_pad.direct==P_DIR_HOR)? P_DIR_VER:P_DIR_HOR;//修改触屏类型.
000954  48da              LDR      r0,|L1.3264|
000956  f8900024          LDRB     r0,[r0,#0x24]  ; t_pad
00095a  b908              CBNZ     r0,|L1.2400|
00095c  2001              MOVS     r0,#1
00095e  e000              B        |L1.2402|
                  |L1.2400|
000960  2000              MOVS     r0,#0
                  |L1.2402|
000962  49d7              LDR      r1,|L1.3264|
000964  f8810024          STRB     r0,[r1,#0x24]
;;;448    						if(t_pad.direct)//X,Y方向与屏幕相反
000968  4608              MOV      r0,r1
00096a  f8900024          LDRB     r0,[r0,#0x24]  ; t_pad
00096e  b130              CBZ      r0,|L1.2430|
;;;449    						{
;;;450    							t_pad.cmdRdx = 0x90;
000970  2090              MOVS     r0,#0x90
000972  f8810025          STRB     r0,[r1,#0x25]
;;;451    							t_pad.cmdRdy = 0xD0; 
000976  20d0              MOVS     r0,#0xd0
000978  f8810026          STRB     r0,[r1,#0x26]
00097c  e006              B        |L1.2444|
                  |L1.2430|
;;;452    						}else				   //X,Y方向与屏幕相同
;;;453    						{
;;;454    							t_pad.cmdRdx = 0xD0;
00097e  20d0              MOVS     r0,#0xd0
000980  49cf              LDR      r1,|L1.3264|
000982  f8810025          STRB     r0,[r1,#0x25]
;;;455    							t_pad.cmdRdy = 0x90; 
000986  2090              MOVS     r0,#0x90
000988  f8810026          STRB     r0,[r1,#0x26]
                  |L1.2444|
;;;456    						}			    
;;;457    						continue;
00098c  e034              B        |L1.2552|
                  |L1.2446|
;;;458    					}		
;;;459    					lcdClear(WHITE);//清屏
00098e  f64f70ff          MOV      r0,#0xffff
000992  f7fffffe          BL       lcdClear
;;;460    					lcdDrawStr(100,120, (u8*)"屏幕校验完成!", &pen);
000996  ab02              ADD      r3,sp,#8
000998  a2d1              ADR      r2,|L1.3296|
00099a  2178              MOVS     r1,#0x78
00099c  2064              MOVS     r0,#0x64
00099e  f7fffffe          BL       lcdDrawStr
;;;461    #if	TP_DEBIG_ENABLE
;;;462    					printf("xfac: %f, xoff: %d\r\n", t_pad.xfac, t_pad.xoff);
;;;463    					printf("yfac: %f, yoff: %d\r\n", t_pad.yfac, t_pad.yoff);
;;;464    #endif				
;;;465    					_delay_ms(1000);  
0009a2  f44f707a          MOV      r0,#0x3e8
0009a6  f7fffffe          BL       _delay_ms
;;;466    					lcdClear(WHITE);//清屏   
0009aa  f64f70ff          MOV      r0,#0xffff
0009ae  f7fffffe          BL       lcdClear
;;;467    					return 0;//校正完成				 
0009b2  2000              MOVS     r0,#0
                  |L1.2484|
;;;468    			}
;;;469    		}
;;;470    		_delay_ms(10);
;;;471    		outtime++;
;;;472    		if(outtime>1000)
;;;473    		{
;;;474    			lcdClear(WHITE);
;;;475    			lcdDrawStr(100, 120, (u8*)"屏幕校验操作超时！", &pen);
;;;476    			_delay_ms(1000);
;;;477    			lcdClear(WHITE);
;;;478    			break;
;;;479    		} 
;;;480    	}
;;;481    	return 0;
;;;482    }
0009b4  b009              ADD      sp,sp,#0x24
0009b6  e8bd8ff0          POP      {r4-r11,pc}
                  |L1.2490|
0009ba  bf00              NOP                            ;354
                  |L1.2492|
0009bc  200a              MOVS     r0,#0xa               ;470
0009be  f7fffffe          BL       _delay_ms
0009c2  f10b0001          ADD      r0,r11,#1             ;471
0009c6  fa1ffb80          UXTH     r11,r0                ;471
0009ca  f5bb7f7a          CMP      r11,#0x3e8            ;472
0009ce  dd12              BLE      |L1.2550|
0009d0  f64f70ff          MOV      r0,#0xffff            ;474
0009d4  f7fffffe          BL       lcdClear
0009d8  ab02              ADD      r3,sp,#8              ;475
0009da  a2c5              ADR      r2,|L1.3312|
0009dc  2178              MOVS     r1,#0x78              ;475
0009de  2064              MOVS     r0,#0x64              ;475
0009e0  f7fffffe          BL       lcdDrawStr
0009e4  f44f707a          MOV      r0,#0x3e8             ;476
0009e8  f7fffffe          BL       _delay_ms
0009ec  f64f70ff          MOV      r0,#0xffff            ;477
0009f0  f7fffffe          BL       lcdClear
0009f4  e001              B        |L1.2554|
                  |L1.2550|
0009f6  bf00              NOP                            ;387
                  |L1.2552|
0009f8  e4f3              B        |L1.994|
                  |L1.2554|
0009fa  bf00              NOP                            ;478
0009fc  2000              MOVS     r0,#0                 ;481
0009fe  e7d9              B        |L1.2484|
;;;483    
                          ENDP

                  tp_init PROC
;;;272     * * * * * * * * * * * * * * * * * * * * * * * * * * * * */
;;;273    u8 tp_init(void)
000a00  b570              PUSH     {r4-r6,lr}
;;;274    {
;;;275    
;;;276    	//所以上拉之前,必须使能时钟.才能实现真正的上拉输出
;;;277    	RCC->APB2ENR|=1<<3;    //PB时钟使能	   
000a02  48c0              LDR      r0,|L1.3332|
000a04  6980              LDR      r0,[r0,#0x18]
000a06  f0400008          ORR      r0,r0,#8
000a0a  49be              LDR      r1,|L1.3332|
000a0c  6188              STR      r0,[r1,#0x18]
;;;278    	RCC->APB2ENR|=1<<7;    //PF时钟使能	   
000a0e  4608              MOV      r0,r1
000a10  6980              LDR      r0,[r0,#0x18]
000a12  f0400080          ORR      r0,r0,#0x80
000a16  6188              STR      r0,[r1,#0x18]
;;;279    
;;;280    	GPIOB->CRL&=0XFFFFF00F;//PB1  2
000a18  48bb              LDR      r0,|L1.3336|
000a1a  6800              LDR      r0,[r0,#0]
000a1c  f420607f          BIC      r0,r0,#0xff0
000a20  49b9              LDR      r1,|L1.3336|
000a22  6008              STR      r0,[r1,#0]
;;;281    	GPIOB->CRL|=0X00000330; 
000a24  4608              MOV      r0,r1
000a26  6800              LDR      r0,[r0,#0]
000a28  f440704c          ORR      r0,r0,#0x330
000a2c  6008              STR      r0,[r1,#0]
;;;282    	GPIOB->ODR|=3<<1;      //PB1 2 推挽输出 	 
000a2e  48b6              LDR      r0,|L1.3336|
000a30  300c              ADDS     r0,r0,#0xc
000a32  6800              LDR      r0,[r0,#0]
000a34  f0400006          ORR      r0,r0,#6
000a38  49b3              LDR      r1,|L1.3336|
000a3a  310c              ADDS     r1,r1,#0xc
000a3c  6008              STR      r0,[r1,#0]
;;;283    	GPIOF->CRH&=0XFFFFF000;
000a3e  48b3              LDR      r0,|L1.3340|
000a40  6800              LDR      r0,[r0,#0]
000a42  f36f000b          BFC      r0,#0,#12
000a46  49b1              LDR      r1,|L1.3340|
000a48  6008              STR      r0,[r1,#0]
;;;284    	GPIOF->CRH|=0X00000838;
000a4a  4608              MOV      r0,r1
000a4c  6800              LDR      r0,[r0,#0]
000a4e  f6400138          MOV      r1,#0x838
000a52  4308              ORRS     r0,r0,r1
000a54  49ad              LDR      r1,|L1.3340|
000a56  6008              STR      r0,[r1,#0]
;;;285    	GPIOF->ODR|=7<<8;      //PF8,9,10 全部上拉	  
000a58  48ac              LDR      r0,|L1.3340|
000a5a  3008              ADDS     r0,r0,#8
000a5c  6800              LDR      r0,[r0,#0]
000a5e  f44060e0          ORR      r0,r0,#0x700
000a62  49aa              LDR      r1,|L1.3340|
000a64  3108              ADDS     r1,r1,#8
000a66  6008              STR      r0,[r1,#0]
;;;286    	tp_readXandY(&t_pad.currX, &t_pad.currY);//第一次读取初始化	
000a68  4995              LDR      r1,|L1.3264|
000a6a  3112              ADDS     r1,r1,#0x12
000a6c  1e88              SUBS     r0,r1,#2
000a6e  f7fffffe          BL       tp_readXandY
;;;287    
;;;288    	lcdClear(WHITE);	
000a72  f64f70ff          MOV      r0,#0xffff
000a76  f7fffffe          BL       lcdClear
;;;289    	if(t_pad.xfac>-0.000001&&t_pad.xfac<0.000001){
000a7a  4991              LDR      r1,|L1.3264|
000a7c  6988              LDR      r0,[r1,#0x18]  ; t_pad
000a7e  f7fffffe          BL       __aeabi_f2d
000a82  4604              MOV      r4,r0
000a84  4aa2              LDR      r2,|L1.3344|
000a86  4ba3              LDR      r3,|L1.3348|
000a88  f7fffffe          BL       __aeabi_cdrcmple
000a8c  d210              BCS      |L1.2736|
000a8e  498c              LDR      r1,|L1.3264|
000a90  6988              LDR      r0,[r1,#0x18]  ; t_pad
000a92  f7fffffe          BL       __aeabi_f2d
000a96  4604              MOV      r4,r0
000a98  4a9d              LDR      r2,|L1.3344|
000a9a  4b9f              LDR      r3,|L1.3352|
000a9c  f7fffffe          BL       __aeabi_cdcmple
000aa0  d206              BCS      |L1.2736|
;;;290    		if(tp_adjust()==0)
000aa2  f7fffffe          BL       tp_adjust
000aa6  b908              CBNZ     r0,|L1.2732|
;;;291    		{
;;;292    			return 0;
000aa8  2000              MOVS     r0,#0
                  |L1.2730|
;;;293    		}
;;;294    		else 
;;;295    		{
;;;296    			return 1;
;;;297    		}
;;;298    	}
;;;299    	return 0;
;;;300    }
000aaa  bd70              POP      {r4-r6,pc}
                  |L1.2732|
000aac  2001              MOVS     r0,#1                 ;296
000aae  e7fc              B        |L1.2730|
                  |L1.2736|
000ab0  2000              MOVS     r0,#0                 ;299
000ab2  e7fa              B        |L1.2730|
;;;301    
                          ENDP

                  drawToolPad PROC
;;;585    //绘制工具面板
;;;586    void drawToolPad(void)
000ab4  b50e              PUSH     {r1-r3,lr}
;;;587    {
;;;588    	LcdPen pen;
;;;589    	pen.color = RED;
000ab6  201f              MOVS     r0,#0x1f
000ab8  f8ad0004          STRH     r0,[sp,#4]
;;;590    	pen.p_size = P_S16EN;
000abc  2010              MOVS     r0,#0x10
000abe  f88d0008          STRB     r0,[sp,#8]
;;;591    	pen.brush = P_SET_BRUSH;
000ac2  2001              MOVS     r0,#1
000ac4  f88d0009          STRB     r0,[sp,#9]
;;;592    	pen.direct = P_DIR_HOR;
000ac8  2000              MOVS     r0,#0
000aca  f88d000a          STRB     r0,[sp,#0xa]
;;;593    	
;;;594    	pen.color = RED;
000ace  201f              MOVS     r0,#0x1f
000ad0  f8ad0004          STRH     r0,[sp,#4]
;;;595    	lcdDrawRect(32*0, 0, 32, 16, &pen);
000ad4  a801              ADD      r0,sp,#4
000ad6  2310              MOVS     r3,#0x10
000ad8  2220              MOVS     r2,#0x20
000ada  2100              MOVS     r1,#0
000adc  9000              STR      r0,[sp,#0]
000ade  4608              MOV      r0,r1
000ae0  f7fffffe          BL       lcdDrawRect
;;;596    	pen.color = BLUE;
000ae4  f44f4078          MOV      r0,#0xf800
000ae8  f8ad0004          STRH     r0,[sp,#4]
;;;597    	lcdDrawRect(32*1, 0, 32, 16, &pen);
000aec  a801              ADD      r0,sp,#4
000aee  2310              MOVS     r3,#0x10
000af0  2220              MOVS     r2,#0x20
000af2  2100              MOVS     r1,#0
000af4  9000              STR      r0,[sp,#0]
000af6  4610              MOV      r0,r2
000af8  f7fffffe          BL       lcdDrawRect
;;;598    	pen.color = GREEN;
000afc  f44f60fc          MOV      r0,#0x7e0
000b00  f8ad0004          STRH     r0,[sp,#4]
;;;599    	lcdDrawRect(32*2, 0, 32, 16, &pen);
000b04  a801              ADD      r0,sp,#4
000b06  2310              MOVS     r3,#0x10
000b08  2220              MOVS     r2,#0x20
000b0a  2100              MOVS     r1,#0
000b0c  9000              STR      r0,[sp,#0]
000b0e  2040              MOVS     r0,#0x40
000b10  f7fffffe          BL       lcdDrawRect
;;;600    	pen.color = BLACK;
000b14  2000              MOVS     r0,#0
000b16  f8ad0004          STRH     r0,[sp,#4]
;;;601    	lcdDrawRect(32*3, 0, 32, 16, &pen);
000b1a  a801              ADD      r0,sp,#4
000b1c  2310              MOVS     r3,#0x10
000b1e  2220              MOVS     r2,#0x20
000b20  2100              MOVS     r1,#0
000b22  9000              STR      r0,[sp,#0]
000b24  2060              MOVS     r0,#0x60
000b26  f7fffffe          BL       lcdDrawRect
;;;602    	pen.color = YELLOW;
000b2a  f24070ff          MOV      r0,#0x7ff
000b2e  f8ad0004          STRH     r0,[sp,#4]
;;;603    	lcdDrawRect(32*4, 0, 32, 16, &pen);
000b32  a801              ADD      r0,sp,#4
000b34  2310              MOVS     r3,#0x10
000b36  2220              MOVS     r2,#0x20
000b38  2100              MOVS     r1,#0
000b3a  9000              STR      r0,[sp,#0]
000b3c  2080              MOVS     r0,#0x80
000b3e  f7fffffe          BL       lcdDrawRect
;;;604    	pen.color = GRED;
000b42  f64f70e0          MOV      r0,#0xffe0
000b46  f8ad0004          STRH     r0,[sp,#4]
;;;605    	lcdDrawRect(32*5, 0, 32, 16, &pen);
000b4a  a801              ADD      r0,sp,#4
000b4c  2310              MOVS     r3,#0x10
000b4e  2220              MOVS     r2,#0x20
000b50  2100              MOVS     r1,#0
000b52  9000              STR      r0,[sp,#0]
000b54  20a0              MOVS     r0,#0xa0
000b56  f7fffffe          BL       lcdDrawRect
;;;606    	pen.color = WHITE;
000b5a  f64f70ff          MOV      r0,#0xffff
000b5e  f8ad0004          STRH     r0,[sp,#4]
;;;607    	lcdDrawRect(32*6, 0, 32, 16, &pen);
000b62  a801              ADD      r0,sp,#4
000b64  2310              MOVS     r3,#0x10
000b66  2220              MOVS     r2,#0x20
000b68  2100              MOVS     r1,#0
000b6a  9000              STR      r0,[sp,#0]
000b6c  20c0              MOVS     r0,#0xc0
000b6e  f7fffffe          BL       lcdDrawRect
;;;608    	pen.color = BLUE;
000b72  f44f4078          MOV      r0,#0xf800
000b76  f8ad0004          STRH     r0,[sp,#4]
;;;609    	lcdDrawStr(LCD_WIDTH-32, 0, (u8*)"清屏", &pen);	
000b7a  ab01              ADD      r3,sp,#4
000b7c  a267              ADR      r2,|L1.3356|
000b7e  2100              MOVS     r1,#0
000b80  f44f70e0          MOV      r0,#0x1c0
000b84  f7fffffe          BL       lcdDrawStr
;;;610    }
000b88  bd0e              POP      {r1-r3,pc}
;;;611    
                          ENDP

                  tp_screenTrack PROC
;;;510     * * * * * * * * * * * * * * * * * * * * * * * * * * * * */
;;;511    void tp_screenTrack(void)
000b8a  b50e              PUSH     {r1-r3,lr}
;;;512    {
;;;513    	u16 x, y;
;;;514    	LcdPen pen;
;;;515    	pen.color = RED;
000b8c  201f              MOVS     r0,#0x1f
000b8e  f8ad0004          STRH     r0,[sp,#4]
;;;516    	pen.p_size = P_S16EN;
000b92  2010              MOVS     r0,#0x10
000b94  f88d0008          STRB     r0,[sp,#8]
;;;517    	pen.brush = P_SET_BRUSH;
000b98  2001              MOVS     r0,#1
000b9a  f88d0009          STRB     r0,[sp,#9]
;;;518    	pen.direct = P_DIR_HOR;
000b9e  2000              MOVS     r0,#0
000ba0  f88d000a          STRB     r0,[sp,#0xa]
;;;519    	
;;;520    	//绘制调色板
;;;521    	drawToolPad();
000ba4  f7fffffe          BL       drawToolPad
;;;522    	
;;;523    	while(1)
000ba8  e0c8              B        |L1.3388|
                  |L1.2986|
;;;524    	{
;;;525    		if(t_pad.scan(1))
000baa  4845              LDR      r0,|L1.3264|
000bac  6841              LDR      r1,[r0,#4]  ; t_pad
000bae  2001              MOVS     r0,#1
000bb0  4788              BLX      r1
000bb2  2800              CMP      r0,#0
000bb4  d06f              BEQ      |L1.3222|
;;;526    		{
;;;527    			x = t_pad.currX*t_pad.xfac+t_pad.xoff;
000bb6  4942              LDR      r1,|L1.3264|
000bb8  f9b10020          LDRSH    r0,[r1,#0x20]  ; t_pad
000bbc  f7fffffe          BL       __aeabi_i2f
000bc0  4680              MOV      r8,r0
000bc2  493f              LDR      r1,|L1.3264|
000bc4  8a08              LDRH     r0,[r1,#0x10]  ; t_pad
000bc6  f7fffffe          BL       __aeabi_ui2f
000bca  4681              MOV      r9,r0
000bcc  483c              LDR      r0,|L1.3264|
000bce  6981              LDR      r1,[r0,#0x18]  ; t_pad
000bd0  4648              MOV      r0,r9
000bd2  f7fffffe          BL       __aeabi_fmul
000bd6  4607              MOV      r7,r0
000bd8  4641              MOV      r1,r8
000bda  f7fffffe          BL       __aeabi_fadd
000bde  4606              MOV      r6,r0
000be0  f7fffffe          BL       __aeabi_f2uiz
000be4  b284              UXTH     r4,r0
;;;528    			y = t_pad.currY*t_pad.yfac+t_pad.yoff;
000be6  4936              LDR      r1,|L1.3264|
000be8  f9b10022          LDRSH    r0,[r1,#0x22]  ; t_pad
000bec  f7fffffe          BL       __aeabi_i2f
000bf0  4680              MOV      r8,r0
000bf2  4933              LDR      r1,|L1.3264|
000bf4  8a48              LDRH     r0,[r1,#0x12]  ; t_pad
000bf6  f7fffffe          BL       __aeabi_ui2f
000bfa  4681              MOV      r9,r0
000bfc  4830              LDR      r0,|L1.3264|
000bfe  69c1              LDR      r1,[r0,#0x1c]  ; t_pad
000c00  4648              MOV      r0,r9
000c02  f7fffffe          BL       __aeabi_fmul
000c06  4607              MOV      r7,r0
000c08  4641              MOV      r1,r8
000c0a  f7fffffe          BL       __aeabi_fadd
000c0e  4606              MOV      r6,r0
000c10  f7fffffe          BL       __aeabi_f2uiz
000c14  b285              UXTH     r5,r0
;;;529    
;;;530    			if(x<LCD_WIDTH&&y<LCD_HEIGHT)
000c16  f5b47ff0          CMP      r4,#0x1e0
000c1a  da09              BGE      |L1.3120|
000c1c  f5b57fa0          CMP      r5,#0x140
000c20  da06              BGE      |L1.3120|
;;;531    			{
;;;532    				if(y>16)
000c22  2d10              CMP      r5,#0x10
000c24  dd05              BLE      |L1.3122|
;;;533    				{
;;;534    					lcdDrawBigPoint(x, y, &pen);
000c26  aa01              ADD      r2,sp,#4
000c28  4629              MOV      r1,r5
000c2a  4620              MOV      r0,r4
000c2c  f7fffffe          BL       lcdDrawBigPoint
                  |L1.3120|
000c30  e084              B        |L1.3388|
                  |L1.3122|
;;;535    				}
;;;536    				else
;;;537    				{
;;;538    					if(x>(LCD_WIDTH-32))
000c32  f5b47fe0          CMP      r4,#0x1c0
000c36  dd0e              BLE      |L1.3158|
;;;539    					{
;;;540    						pen.color = WHITE;
000c38  f64f70ff          MOV      r0,#0xffff
000c3c  f8ad0004          STRH     r0,[sp,#4]
;;;541    						lcdDrawRect(0, 17, 480, 310, &pen);
000c40  a801              ADD      r0,sp,#4
000c42  f44f739b          MOV      r3,#0x136
000c46  f44f72f0          MOV      r2,#0x1e0
000c4a  2111              MOVS     r1,#0x11
000c4c  9000              STR      r0,[sp,#0]
000c4e  2000              MOVS     r0,#0
000c50  f7fffffe          BL       lcdDrawRect
000c54  e072              B        |L1.3388|
                  |L1.3158|
;;;542    					}
;;;543    					else if(x<(1*32))
000c56  2c20              CMP      r4,#0x20
000c58  da03              BGE      |L1.3170|
;;;544    					{
;;;545    						pen.color = RED;
000c5a  201f              MOVS     r0,#0x1f
000c5c  f8ad0004          STRH     r0,[sp,#4]
000c60  e06c              B        |L1.3388|
                  |L1.3170|
;;;546    					}
;;;547    					else if(x>(1*32)&&x<(2*32))
000c62  2c20              CMP      r4,#0x20
000c64  dd06              BLE      |L1.3188|
000c66  2c40              CMP      r4,#0x40
000c68  da04              BGE      |L1.3188|
;;;548    					{
;;;549    						pen.color = BLUE;
000c6a  f44f4078          MOV      r0,#0xf800
000c6e  f8ad0004          STRH     r0,[sp,#4]
000c72  e063              B        |L1.3388|
                  |L1.3188|
;;;550    					}
;;;551    					else if(x>(2*32)&&x<(3*32))
000c74  2c40              CMP      r4,#0x40
000c76  dd06              BLE      |L1.3206|
000c78  2c60              CMP      r4,#0x60
000c7a  da04              BGE      |L1.3206|
;;;552    					{
;;;553    						pen.color = GREEN;
000c7c  f44f60fc          MOV      r0,#0x7e0
000c80  f8ad0004          STRH     r0,[sp,#4]
000c84  e05a              B        |L1.3388|
                  |L1.3206|
;;;554    					}
;;;555    					else if(x>(3*32)&&x<(4*32))
000c86  2c60              CMP      r4,#0x60
000c88  dd06              BLE      |L1.3224|
000c8a  2c80              CMP      r4,#0x80
000c8c  da04              BGE      |L1.3224|
;;;556    					{
;;;557    						pen.color = BLACK;
000c8e  2000              MOVS     r0,#0
000c90  f8ad0004          STRH     r0,[sp,#4]
000c94  e052              B        |L1.3388|
                  |L1.3222|
000c96  e04e              B        |L1.3382|
                  |L1.3224|
;;;558    					}
;;;559    					else if(x>(4*32)&&x<(5*32))
000c98  2c80              CMP      r4,#0x80
000c9a  dd06              BLE      |L1.3242|
000c9c  2ca0              CMP      r4,#0xa0
000c9e  da04              BGE      |L1.3242|
;;;560    					{
;;;561    						pen.color = YELLOW;
000ca0  f24070ff          MOV      r0,#0x7ff
000ca4  f8ad0004          STRH     r0,[sp,#4]
000ca8  e048              B        |L1.3388|
                  |L1.3242|
;;;562    					}
;;;563    					else if(x>(5*32)&&x<(6*32))
000caa  2ca0              CMP      r4,#0xa0
000cac  dd3a              BLE      |L1.3364|
000cae  2cc0              CMP      r4,#0xc0
000cb0  da38              BGE      |L1.3364|
;;;564    					{
;;;565    						pen.color = GRED;
000cb2  f64f70e0          MOV      r0,#0xffe0
000cb6  f8ad0004          STRH     r0,[sp,#4]
000cba  e03f              B        |L1.3388|
                  |L1.3260|
                          DCD      0x43a00000
                  |L1.3264|
                          DCD      t_pad
                  |L1.3268|
000cc4  ceb4cdea          DCB      206,180,205,234,179,201,208,163,209,233,163,172,199,235,214
000cc8  b3c9d0a3
000ccc  d1e9a3ac
000cd0  c7ebd6  
000cd3  d8d0c2b2          DCB      216,208,194,178,217,215,247,163,161,0
000cd7  d9d7f7a3
000cdb  a100    
000cdd  00                DCB      0
000cde  00                DCB      0
000cdf  00                DCB      0
                  |L1.3296|
000ce0  c6c1c4bb          DCB      198,193,196,187,208,163,209,233,205,234,179,201,"!",0
000ce4  d0a3d1e9
000ce8  cdeab3c9
000cec  2100    
000cee  00                DCB      0
000cef  00                DCB      0
                  |L1.3312|
000cf0  c6c1c4bb          DCB      198,193,196,187,208,163,209,233,178,217,215,247,179,172,202
000cf4  d0a3d1e9
000cf8  b2d9d7f7
000cfc  b3acca  
000cff  b1a3a100          DCB      177,163,161,0
000d03  00                DCB      0
                  |L1.3332|
                          DCD      0x40021000
                  |L1.3336|
                          DCD      0x40010c00
                  |L1.3340|
                          DCD      0x40011c04
                  |L1.3344|
                          DCD      0xa0b5ed8d
                  |L1.3348|
                          DCD      0xbeb0c6f7
                  |L1.3352|
                          DCD      0x3eb0c6f7
                  |L1.3356|
000d1c  c7e5c6c1          DCB      199,229,198,193,0
000d20  00      
000d21  00                DCB      0
000d22  00                DCB      0
000d23  00                DCB      0
                  |L1.3364|
;;;566    					}
;;;567    					else if(x>(6*32)&&x<(7*32))
000d24  2cc0              CMP      r4,#0xc0
000d26  dd09              BLE      |L1.3388|
000d28  2ce0              CMP      r4,#0xe0
000d2a  da07              BGE      |L1.3388|
;;;568    					{
;;;569    						pen.color = WHITE;
000d2c  f64f70ff          MOV      r0,#0xffff
000d30  f8ad0004          STRH     r0,[sp,#4]
000d34  e002              B        |L1.3388|
                  |L1.3382|
;;;570    					}
;;;571    				}
;;;572    			}		
;;;573    		}
;;;574    		else
;;;575    		{
;;;576    			_delay_ms(10);
000d36  200a              MOVS     r0,#0xa
000d38  f7fffffe          BL       _delay_ms
                  |L1.3388|
000d3c  e735              B        |L1.2986|
;;;577    		}
;;;578    	}
;;;579    }
;;;580    
                          ENDP


                          AREA ||.data||, DATA, ALIGN=2

                  t_pad
                          DCD      tp_init
                          DCD      tp_scan
                          DCD      tp_adjust
00000c  00000000          DCW      0x0000,0x0000
000010  00000000          DCW      0x0000,0x0000
000014  00000000          DCB      0x00,0x00,0x00,0x00
000018  be05d0fa          DCFS     0xbe05d0fa ; -0.13067999482154846
00001c  bdaeefa2          DCFS     0xbdaeefa2 ; -0.085418000817298889
000020  01fc014c          DCW      0x01fc,0x014c
000024  0090d000          DCB      0x00,0x90,0xd0,0x00
