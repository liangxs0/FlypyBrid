; generated by ARM C/C++ Compiler, 5.03 [Build 24]
; commandline ArmCC [--list --debug -c --asm --interleave -o.\obj\jpstm32_key.o --asm_dir=.\lst\ --list_dir=.\lst\ --depend=.\obj\jpstm32_key.d --cpu=Cortex-M3 --apcs=interwork -O0 -I.\core -I.\devices -I.\app -I.\boot -I.\app\RES\Num -I.\app\RES\Pic -I"D:\Program Files\Keil\ARM\RV31\INC" -I"D:\Program Files\Keil\ARM\CMSIS\Include" -I"D:\Program Files\Keil\ARM\Inc\ST\STM32F10x" --omf_browse=.\obj\jpstm32_key.crf devices\jpstm32_key.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  key_init PROC
;;;21      * * * * * * * * * * * * * * * * * * * * * * * * * * * * */
;;;22     extern void key_init(void)
000000  b510              PUSH     {r4,lr}
;;;23     {
;;;24     	/* * * * * * * * * * * * * * * * * 
;;;25     	 * PG.6	-->key center 
;;;26     	 * PG.7	-->key down 
;;;27     	 * PG.9	-->key left 
;;;28     	 * PC.4	-->key right 
;;;29     	 * PG.11-->key up
;;;30     	 * * * * * * * * * * * * * * * * */
;;;31     
;;;32     	//PORTC 时钟时能
;;;33     	_BD(RCC->APB2ENR, 4) = 1;
000002  2001              MOVS     r0,#1
000004  4922              LDR      r1,|L1.144|
000006  6008              STR      r0,[r1,#0]
;;;34     	//PORTG 时钟时能
;;;35     	_BD(RCC->APB2ENR, 8) = 1;
000008  4922              LDR      r1,|L1.148|
00000a  f8c10320          STR      r0,[r1,#0x320]
;;;36     	
;;;37     	//配置按键引脚功能
;;;38     	config_gpio(PORTC, I_PULLUD|OMODE_RES, Pin4, PULL_UP);
00000e  f04f0300          MOV      r3,#0
000012  f04f0210          MOV      r2,#0x10
000016  f04f0108          MOV      r1,#8
00001a  f44f6000          MOV      r0,#0x800
00001e  f7fffffe          BL       config_gpio
;;;39     	config_gpio(PORTG, I_PULLUD|OMODE_RES, Pin6|Pin7|Pin9|PinB, PULL_UP);
000022  2300              MOVS     r3,#0
000024  f44f622c          MOV      r2,#0xac0
000028  2108              MOVS     r1,#8
00002a  f44f50c0          MOV      r0,#0x1800
00002e  f7fffffe          BL       config_gpio
;;;40     }
000032  bd10              POP      {r4,pc}
;;;41     
                          ENDP

                  key_scan PROC
;;;49      * * * * * * * * * * * * * * * * * * * * * * * * * * * * */
;;;50     extern KEY_VAL key_scan(void)
000034  b510              PUSH     {r4,lr}
;;;51     {
;;;52     	if((VAL_0==PGxIn(0x06))
000036  4818              LDR      r0,|L1.152|
000038  6800              LDR      r0,[r0,#0]
00003a  b158              CBZ      r0,|L1.84|
;;;53     		||(VAL_0==PGxIn(0x07))
00003c  4817              LDR      r0,|L1.156|
00003e  6800              LDR      r0,[r0,#0]
000040  b140              CBZ      r0,|L1.84|
;;;54     		||(VAL_0==PGxIn(0x09))
000042  4817              LDR      r0,|L1.160|
000044  6800              LDR      r0,[r0,#0]
000046  b128              CBZ      r0,|L1.84|
;;;55     		||(VAL_0==PGxIn(0x0B))
000048  4816              LDR      r0,|L1.164|
00004a  6800              LDR      r0,[r0,#0]
00004c  b110              CBZ      r0,|L1.84|
;;;56     		||(VAL_0==PCxIn(0x04)))
00004e  4816              LDR      r0,|L1.168|
000050  6800              LDR      r0,[r0,#0]
000052  b9d8              CBNZ     r0,|L1.140|
                  |L1.84|
;;;57     	{
;;;58     		//软件消抖
;;;59     		_delay_ms(10);
000054  200a              MOVS     r0,#0xa
000056  f7fffffe          BL       _delay_ms
;;;60     
;;;61     		if(VAL_0==PGxIn(0x06)) 
00005a  480f              LDR      r0,|L1.152|
00005c  6800              LDR      r0,[r0,#0]
00005e  b908              CBNZ     r0,|L1.100|
;;;62     		{
;;;63     			return KEY_CENTER;
000060  2005              MOVS     r0,#5
                  |L1.98|
;;;64     		}
;;;65     		else if (VAL_0==PGxIn(0x07))
;;;66     		{
;;;67     			return KEY_DOWN;
;;;68     		} 
;;;69     		else if (VAL_0==PGxIn(0x09))
;;;70     		{
;;;71     			return KEY_LEFT;
;;;72     		} 
;;;73     		else if (VAL_0==PGxIn(0x0b))
;;;74     		{
;;;75     			return KEY_UP;
;;;76     		} 
;;;77     		else if (VAL_0==PCxIn(0x04))
;;;78     		{
;;;79     			return KEY_RIGHT;
;;;80     		}
;;;81     	}
;;;82     	return KEY_NOKEY;
;;;83     }
000062  bd10              POP      {r4,pc}
                  |L1.100|
000064  480d              LDR      r0,|L1.156|
000066  6800              LDR      r0,[r0,#0]            ;65
000068  b908              CBNZ     r0,|L1.110|
00006a  2002              MOVS     r0,#2                 ;67
00006c  e7f9              B        |L1.98|
                  |L1.110|
00006e  480c              LDR      r0,|L1.160|
000070  6800              LDR      r0,[r0,#0]            ;69
000072  b908              CBNZ     r0,|L1.120|
000074  2003              MOVS     r0,#3                 ;71
000076  e7f4              B        |L1.98|
                  |L1.120|
000078  480a              LDR      r0,|L1.164|
00007a  6800              LDR      r0,[r0,#0]            ;73
00007c  b908              CBNZ     r0,|L1.130|
00007e  2001              MOVS     r0,#1                 ;75
000080  e7ef              B        |L1.98|
                  |L1.130|
000082  4809              LDR      r0,|L1.168|
000084  6800              LDR      r0,[r0,#0]            ;77
000086  b908              CBNZ     r0,|L1.140|
000088  2004              MOVS     r0,#4                 ;79
00008a  e7ea              B        |L1.98|
                  |L1.140|
00008c  2000              MOVS     r0,#0                 ;82
00008e  e7e8              B        |L1.98|
;;;84     
                          ENDP

                  |L1.144|
                          DCD      0x42420310
                  |L1.148|
                          DCD      0x42420000
                  |L1.152|
                          DCD      0x42240118
                  |L1.156|
                          DCD      0x4224011c
                  |L1.160|
                          DCD      0x42240124
                  |L1.164|
                          DCD      0x4224012c
                  |L1.168|
                          DCD      0x42220110
