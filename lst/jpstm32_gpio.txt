; generated by ARM C/C++ Compiler, 5.03 [Build 24]
; commandline ArmCC [--list --debug -c --asm --interleave -o.\obj\jpstm32_gpio.o --asm_dir=.\lst\ --list_dir=.\lst\ --depend=.\obj\jpstm32_gpio.d --cpu=Cortex-M3 --apcs=interwork -O0 -I.\core -I.\devices -I.\app -I.\boot -I.\app\RES\Num -I.\app\RES\Pic -I"D:\Program Files\Keil\ARM\RV31\INC" -I"D:\Program Files\Keil\ARM\CMSIS\Include" -I"D:\Program Files\Keil\ARM\Inc\ST\STM32F10x" --omf_browse=.\obj\jpstm32_gpio.crf core\jpstm32_gpio.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  config_gpio PROC
;;;23      * * * * * * * * * * * * * * * * * * * * * * * * * * * * */
;;;24     void config_gpio(u32 PORTx, u32 MODE, u32 PINxs, PULL_STAT stat)
000000  e92d41f0          PUSH     {r4-r8,lr}
;;;25     {
000004  4605              MOV      r5,r0
000006  460c              MOV      r4,r1
000008  4616              MOV      r6,r2
00000a  461f              MOV      r7,r3
;;;26     	u8	i, j;
;;;27     	//获取当前端口地址
;;;28     	GPIO_TypeDef*	port = (GPIO_TypeDef*)(GPIO_BASE+PORTx);
00000c  4b35              LDR      r3,|L1.228|
00000e  18e9              ADDS     r1,r5,r3
;;;29     	for(i=0; i<16; i++){
000010  2000              MOVS     r0,#0
000012  e048              B        |L1.166|
                  |L1.20|
;;;30     		if(PINxs&(1<<i)){
000014  2301              MOVS     r3,#1
000016  4083              LSLS     r3,r3,r0
000018  4233              TST      r3,r6
00001a  d042              BEQ      |L1.162|
;;;31     			if(i<=7){
00001c  2807              CMP      r0,#7
00001e  dc12              BGT      |L1.70|
;;;32     				port->CRL &= (0xFFFFFFFF&(~(0xF<<(i*4))));
000020  680b              LDR      r3,[r1,#0]
000022  ea4f0880          LSL      r8,r0,#2
000026  f04f0c0f          MOV      r12,#0xf
00002a  fa0cfc08          LSL      r12,r12,r8
00002e  ea23030c          BIC      r3,r3,r12
000032  600b              STR      r3,[r1,#0]
;;;33     				port->CRL |= MODE<<(i*4);
000034  680b              LDR      r3,[r1,#0]
000036  ea4f0c80          LSL      r12,r0,#2
00003a  fa04fc0c          LSL      r12,r4,r12
00003e  ea43030c          ORR      r3,r3,r12
000042  600b              STR      r3,[r1,#0]
000044  e01c              B        |L1.128|
                  |L1.70|
;;;34     			} else {
;;;35     				j = i%8;
000046  4603              MOV      r3,r0
000048  ea4f7ce0          ASR      r12,r0,#31
00004c  eb007c5c          ADD      r12,r0,r12,LSR #29
000050  ea4f0cec          ASR      r12,r12,#3
000054  eba00ccc          SUB      r12,r0,r12,LSL #3
000058  f00c02ff          AND      r2,r12,#0xff
;;;36     				port->CRH &= (0xFFFFFFFF&(~(0xF<<(j*4))));
00005c  684b              LDR      r3,[r1,#4]
00005e  ea4f0882          LSL      r8,r2,#2
000062  f04f0c0f          MOV      r12,#0xf
000066  fa0cfc08          LSL      r12,r12,r8
00006a  ea23030c          BIC      r3,r3,r12
00006e  604b              STR      r3,[r1,#4]
;;;37     				port->CRH |= MODE<<(j*4);
000070  684b              LDR      r3,[r1,#4]
000072  ea4f0c82          LSL      r12,r2,#2
000076  fa04fc0c          LSL      r12,r4,r12
00007a  ea43030c          ORR      r3,r3,r12
00007e  604b              STR      r3,[r1,#4]
                  |L1.128|
;;;38     			}
;;;39     			//判断是否需要上拉或下拉
;;;40     			if(!(MODE^(I_PULLUD|OMODE_RES)))
000080  f0940308          EORS     r3,r4,#8
000084  d10d              BNE      |L1.162|
;;;41     			{
;;;42     				port->ODR &= ~(1<<i);
000086  68cb              LDR      r3,[r1,#0xc]
000088  f04f0c01          MOV      r12,#1
00008c  fa0cfc00          LSL      r12,r12,r0
000090  ea23030c          BIC      r3,r3,r12
000094  60cb              STR      r3,[r1,#0xc]
;;;43     				port->ODR |= (stat<<i);
000096  68cb              LDR      r3,[r1,#0xc]
000098  fa07fc00          LSL      r12,r7,r0
00009c  ea43030c          ORR      r3,r3,r12
0000a0  60cb              STR      r3,[r1,#0xc]
                  |L1.162|
0000a2  1c43              ADDS     r3,r0,#1              ;29
0000a4  b2d8              UXTB     r0,r3                 ;29
                  |L1.166|
0000a6  2810              CMP      r0,#0x10              ;29
0000a8  dbb4              BLT      |L1.20|
;;;44     			}
;;;45     		}
;;;46     	}
;;;47     }
0000aa  e8bd81f0          POP      {r4-r8,pc}
;;;48     
                          ENDP

                  set_PINxs PROC
;;;59      * * * * * * * * * * * * * * * * * * * * * * * * * * * * */
;;;60     void set_PINxs(u32	PORTx, u32 PINxs, PIN_VAL val)
0000ae  b570              PUSH     {r4-r6,lr}
;;;61     {
0000b0  4603              MOV      r3,r0
0000b2  460c              MOV      r4,r1
;;;62     	u8	i;
;;;63     	//获取当前端口地址
;;;64     	GPIO_TypeDef*	port = (GPIO_TypeDef*)(GPIO_BASE+PORTx);
0000b4  4d0b              LDR      r5,|L1.228|
0000b6  1959              ADDS     r1,r3,r5
;;;65     	for(i=0; i<16; i++){
0000b8  2000              MOVS     r0,#0
0000ba  e00f              B        |L1.220|
                  |L1.188|
;;;66     		if(PINxs&(1<<i)){
0000bc  2501              MOVS     r5,#1
0000be  4085              LSLS     r5,r5,r0
0000c0  4225              TST      r5,r4
0000c2  d009              BEQ      |L1.216|
;;;67     			port->ODR &= ~(1<<i);
0000c4  68cd              LDR      r5,[r1,#0xc]
0000c6  2601              MOVS     r6,#1
0000c8  4086              LSLS     r6,r6,r0
0000ca  43b5              BICS     r5,r5,r6
0000cc  60cd              STR      r5,[r1,#0xc]
;;;68     			port->ODR |= val<<i;
0000ce  68cd              LDR      r5,[r1,#0xc]
0000d0  fa02f600          LSL      r6,r2,r0
0000d4  4335              ORRS     r5,r5,r6
0000d6  60cd              STR      r5,[r1,#0xc]
                  |L1.216|
0000d8  1c45              ADDS     r5,r0,#1              ;65
0000da  b2e8              UXTB     r0,r5                 ;65
                  |L1.220|
0000dc  2810              CMP      r0,#0x10              ;65
0000de  dbed              BLT      |L1.188|
;;;69     		}
;;;70     	}
;;;71     }
0000e0  bd70              POP      {r4-r6,pc}
;;;72     
                          ENDP

0000e2  0000              DCW      0x0000
                  |L1.228|
                          DCD      0x40010800
