; generated by ARM C/C++ Compiler, 5.03 [Build 24]
; commandline ArmCC [--list --debug -c --asm --interleave -o.\obj\iic.o --asm_dir=.\lst\ --list_dir=.\lst\ --depend=.\obj\iic.d --cpu=Cortex-M3 --apcs=interwork -O0 -I.\core -I.\devices -I.\app -I.\boot -I.\app\RES\Num -I.\app\RES\Pic -I"D:\Program Files\Keil\ARM\RV31\INC" -I"D:\Program Files\Keil\ARM\CMSIS\Include" -I"D:\Program Files\Keil\ARM\Inc\ST\STM32F10x" --omf_browse=.\obj\iic.crf devices\iic.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  IIC_Init PROC
;;;5      //初始化IIC的IO口
;;;6      void IIC_Init(void)
000000  48d1              LDR      r0,|L1.840|
;;;7      {
;;;8      	RCC->APB2ENR |= 1<<3;
000002  6980              LDR      r0,[r0,#0x18]
000004  f0400008          ORR      r0,r0,#8
000008  49cf              LDR      r1,|L1.840|
00000a  6188              STR      r0,[r1,#0x18]
;;;9      	
;;;10     	GPIOB->CRH &= 0xFFFF00FF;
00000c  48cf              LDR      r0,|L1.844|
00000e  6800              LDR      r0,[r0,#0]
000010  f420407f          BIC      r0,r0,#0xff00
000014  49cd              LDR      r1,|L1.844|
000016  6008              STR      r0,[r1,#0]
;;;11     	GPIOB->CRH |= 0x00003300;
000018  4608              MOV      r0,r1
00001a  6800              LDR      r0,[r0,#0]
00001c  f440504c          ORR      r0,r0,#0x3300
000020  6008              STR      r0,[r1,#0]
;;;12     	GPIOB->ODR |= 3<<10;
000022  48ca              LDR      r0,|L1.844|
000024  3008              ADDS     r0,r0,#8
000026  6800              LDR      r0,[r0,#0]
000028  f4406040          ORR      r0,r0,#0xc00
00002c  49c7              LDR      r1,|L1.844|
00002e  3108              ADDS     r1,r1,#8
000030  6008              STR      r0,[r1,#0]
;;;13     }
000032  4770              BX       lr
;;;14     
                          ENDP

                  IIC_Start PROC
;;;15     //发送IIC开始信号
;;;16     void IIC_Start(void)
000034  b510              PUSH     {r4,lr}
;;;17     {
;;;18     	SDA_OUT();
000036  48c5              LDR      r0,|L1.844|
000038  6800              LDR      r0,[r0,#0]
00003a  f4204070          BIC      r0,r0,#0xf000
00003e  49c3              LDR      r1,|L1.844|
000040  6008              STR      r0,[r1,#0]
000042  4608              MOV      r0,r1
000044  6800              LDR      r0,[r0,#0]
000046  f4405040          ORR      r0,r0,#0x3000
00004a  6008              STR      r0,[r1,#0]
;;;19     	IIC_SDA_H;
00004c  48bf              LDR      r0,|L1.844|
00004e  300c              ADDS     r0,r0,#0xc
000050  6800              LDR      r0,[r0,#0]
000052  f4406000          ORR      r0,r0,#0x800
000056  49bd              LDR      r1,|L1.844|
000058  310c              ADDS     r1,r1,#0xc
00005a  6008              STR      r0,[r1,#0]
;;;20     	IIC_SCL_H;
00005c  4608              MOV      r0,r1
00005e  6800              LDR      r0,[r0,#0]
000060  f4406080          ORR      r0,r0,#0x400
000064  6008              STR      r0,[r1,#0]
;;;21     	_delay_us(4);
000066  2004              MOVS     r0,#4
000068  f7fffffe          BL       _delay_us
;;;22     	IIC_SDA_L;
00006c  48b7              LDR      r0,|L1.844|
00006e  300c              ADDS     r0,r0,#0xc
000070  6800              LDR      r0,[r0,#0]
000072  f0406000          ORR      r0,r0,#0x8000000
000076  49b5              LDR      r1,|L1.844|
000078  310c              ADDS     r1,r1,#0xc
00007a  6008              STR      r0,[r1,#0]
;;;23     	_delay_us(4);
00007c  2004              MOVS     r0,#4
00007e  f7fffffe          BL       _delay_us
;;;24     	IIC_SCL_L;
000082  48b2              LDR      r0,|L1.844|
000084  300c              ADDS     r0,r0,#0xc
000086  6800              LDR      r0,[r0,#0]
000088  f0406080          ORR      r0,r0,#0x4000000
00008c  49af              LDR      r1,|L1.844|
00008e  310c              ADDS     r1,r1,#0xc
000090  6008              STR      r0,[r1,#0]
;;;25     }
000092  bd10              POP      {r4,pc}
;;;26     
                          ENDP

                  IIC_Stop PROC
;;;27     //发送IIC停止信号
;;;28     void IIC_Stop(void)
000094  b510              PUSH     {r4,lr}
;;;29     {
;;;30     	SDA_OUT();
000096  48ad              LDR      r0,|L1.844|
000098  6800              LDR      r0,[r0,#0]
00009a  f4204070          BIC      r0,r0,#0xf000
00009e  49ab              LDR      r1,|L1.844|
0000a0  6008              STR      r0,[r1,#0]
0000a2  4608              MOV      r0,r1
0000a4  6800              LDR      r0,[r0,#0]
0000a6  f4405040          ORR      r0,r0,#0x3000
0000aa  6008              STR      r0,[r1,#0]
;;;31     	IIC_SCL_L;
0000ac  48a7              LDR      r0,|L1.844|
0000ae  300c              ADDS     r0,r0,#0xc
0000b0  6800              LDR      r0,[r0,#0]
0000b2  f0406080          ORR      r0,r0,#0x4000000
0000b6  49a5              LDR      r1,|L1.844|
0000b8  310c              ADDS     r1,r1,#0xc
0000ba  6008              STR      r0,[r1,#0]
;;;32     	IIC_SDA_L;
0000bc  4608              MOV      r0,r1
0000be  6800              LDR      r0,[r0,#0]
0000c0  f0406000          ORR      r0,r0,#0x8000000
0000c4  6008              STR      r0,[r1,#0]
;;;33     	_delay_us(4);
0000c6  2004              MOVS     r0,#4
0000c8  f7fffffe          BL       _delay_us
;;;34     	IIC_SCL_H;
0000cc  489f              LDR      r0,|L1.844|
0000ce  300c              ADDS     r0,r0,#0xc
0000d0  6800              LDR      r0,[r0,#0]
0000d2  f4406080          ORR      r0,r0,#0x400
0000d6  499d              LDR      r1,|L1.844|
0000d8  310c              ADDS     r1,r1,#0xc
0000da  6008              STR      r0,[r1,#0]
;;;35     	IIC_SDA_H;
0000dc  4608              MOV      r0,r1
0000de  6800              LDR      r0,[r0,#0]
0000e0  f4406000          ORR      r0,r0,#0x800
0000e4  6008              STR      r0,[r1,#0]
;;;36     	_delay_us(4);
0000e6  2004              MOVS     r0,#4
0000e8  f7fffffe          BL       _delay_us
;;;37     }
0000ec  bd10              POP      {r4,pc}
;;;38     
                          ENDP

                  IIC_Send_Byte PROC
;;;39     //IIC发送一个字节
;;;40     void IIC_Send_Byte(u8 txd)
0000ee  b570              PUSH     {r4-r6,lr}
;;;41     {
0000f0  4604              MOV      r4,r0
;;;42     	u8 i;
;;;43     	SDA_OUT();
0000f2  4896              LDR      r0,|L1.844|
0000f4  6800              LDR      r0,[r0,#0]
0000f6  f4204070          BIC      r0,r0,#0xf000
0000fa  4994              LDR      r1,|L1.844|
0000fc  6008              STR      r0,[r1,#0]
0000fe  4608              MOV      r0,r1
000100  6800              LDR      r0,[r0,#0]
000102  f4405040          ORR      r0,r0,#0x3000
000106  6008              STR      r0,[r1,#0]
;;;44     	IIC_SCL_L;
000108  4890              LDR      r0,|L1.844|
00010a  300c              ADDS     r0,r0,#0xc
00010c  6800              LDR      r0,[r0,#0]
00010e  f0406080          ORR      r0,r0,#0x4000000
000112  498e              LDR      r1,|L1.844|
000114  310c              ADDS     r1,r1,#0xc
000116  6008              STR      r0,[r1,#0]
;;;45     	for(i = 0;i < 8;i++)
000118  2500              MOVS     r5,#0
00011a  e02f              B        |L1.380|
                  |L1.284|
;;;46     	{
;;;47     		if((txd&0x80)>>7)
00011c  09e0              LSRS     r0,r4,#7
00011e  d008              BEQ      |L1.306|
;;;48     			IIC_SDA_H;
000120  488a              LDR      r0,|L1.844|
000122  300c              ADDS     r0,r0,#0xc
000124  6800              LDR      r0,[r0,#0]
000126  f4406000          ORR      r0,r0,#0x800
00012a  4988              LDR      r1,|L1.844|
00012c  310c              ADDS     r1,r1,#0xc
00012e  6008              STR      r0,[r1,#0]
000130  e007              B        |L1.322|
                  |L1.306|
;;;49     		else
;;;50     			IIC_SDA_L;
000132  4886              LDR      r0,|L1.844|
000134  300c              ADDS     r0,r0,#0xc
000136  6800              LDR      r0,[r0,#0]
000138  f0406000          ORR      r0,r0,#0x8000000
00013c  4983              LDR      r1,|L1.844|
00013e  310c              ADDS     r1,r1,#0xc
000140  6008              STR      r0,[r1,#0]
                  |L1.322|
;;;51     		txd<<=1;
000142  0660              LSLS     r0,r4,#25
000144  0e04              LSRS     r4,r0,#24
;;;52     		_delay_us(2);
000146  2002              MOVS     r0,#2
000148  f7fffffe          BL       _delay_us
;;;53     		IIC_SCL_H;
00014c  487f              LDR      r0,|L1.844|
00014e  300c              ADDS     r0,r0,#0xc
000150  6800              LDR      r0,[r0,#0]
000152  f4406080          ORR      r0,r0,#0x400
000156  497d              LDR      r1,|L1.844|
000158  310c              ADDS     r1,r1,#0xc
00015a  6008              STR      r0,[r1,#0]
;;;54     		_delay_us(2);
00015c  2002              MOVS     r0,#2
00015e  f7fffffe          BL       _delay_us
;;;55     		IIC_SCL_L;
000162  487a              LDR      r0,|L1.844|
000164  300c              ADDS     r0,r0,#0xc
000166  6800              LDR      r0,[r0,#0]
000168  f0406080          ORR      r0,r0,#0x4000000
00016c  4977              LDR      r1,|L1.844|
00016e  310c              ADDS     r1,r1,#0xc
000170  6008              STR      r0,[r1,#0]
;;;56     		_delay_us(2);
000172  2002              MOVS     r0,#2
000174  f7fffffe          BL       _delay_us
000178  1c68              ADDS     r0,r5,#1              ;45
00017a  b2c5              UXTB     r5,r0                 ;45
                  |L1.380|
00017c  2d08              CMP      r5,#8                 ;45
00017e  dbcd              BLT      |L1.284|
;;;57     	}
;;;58     }
000180  bd70              POP      {r4-r6,pc}
;;;59     
                          ENDP

                  IIC_Ack PROC
;;;101    //IIC发送ACK信号
;;;102    void IIC_Ack(void)
000182  b510              PUSH     {r4,lr}
;;;103    {
;;;104    	IIC_SCL_H;
000184  4871              LDR      r0,|L1.844|
000186  300c              ADDS     r0,r0,#0xc
000188  6800              LDR      r0,[r0,#0]
00018a  f4406080          ORR      r0,r0,#0x400
00018e  496f              LDR      r1,|L1.844|
000190  310c              ADDS     r1,r1,#0xc
000192  6008              STR      r0,[r1,#0]
;;;105    	SDA_OUT();
000194  486d              LDR      r0,|L1.844|
000196  6800              LDR      r0,[r0,#0]
000198  f4204070          BIC      r0,r0,#0xf000
00019c  496b              LDR      r1,|L1.844|
00019e  6008              STR      r0,[r1,#0]
0001a0  4608              MOV      r0,r1
0001a2  6800              LDR      r0,[r0,#0]
0001a4  f4405040          ORR      r0,r0,#0x3000
0001a8  6008              STR      r0,[r1,#0]
;;;106    	IIC_SDA_L;
0001aa  4868              LDR      r0,|L1.844|
0001ac  300c              ADDS     r0,r0,#0xc
0001ae  6800              LDR      r0,[r0,#0]
0001b0  f0406000          ORR      r0,r0,#0x8000000
0001b4  4965              LDR      r1,|L1.844|
0001b6  310c              ADDS     r1,r1,#0xc
0001b8  6008              STR      r0,[r1,#0]
;;;107    	_delay_us(2);
0001ba  2002              MOVS     r0,#2
0001bc  f7fffffe          BL       _delay_us
;;;108    	IIC_SCL_H;
0001c0  4862              LDR      r0,|L1.844|
0001c2  300c              ADDS     r0,r0,#0xc
0001c4  6800              LDR      r0,[r0,#0]
0001c6  f4406080          ORR      r0,r0,#0x400
0001ca  4960              LDR      r1,|L1.844|
0001cc  310c              ADDS     r1,r1,#0xc
0001ce  6008              STR      r0,[r1,#0]
;;;109    	_delay_us(2);
0001d0  2002              MOVS     r0,#2
0001d2  f7fffffe          BL       _delay_us
;;;110    	IIC_SCL_L;
0001d6  485d              LDR      r0,|L1.844|
0001d8  300c              ADDS     r0,r0,#0xc
0001da  6800              LDR      r0,[r0,#0]
0001dc  f0406080          ORR      r0,r0,#0x4000000
0001e0  495a              LDR      r1,|L1.844|
0001e2  310c              ADDS     r1,r1,#0xc
0001e4  6008              STR      r0,[r1,#0]
;;;111    }
0001e6  bd10              POP      {r4,pc}
;;;112    
                          ENDP

                  IIC_NAck PROC
;;;113    //IIC不发送Ack信号
;;;114    void IIC_NAck(void)
0001e8  b510              PUSH     {r4,lr}
;;;115    {
;;;116    	IIC_SCL_L;
0001ea  4858              LDR      r0,|L1.844|
0001ec  300c              ADDS     r0,r0,#0xc
0001ee  6800              LDR      r0,[r0,#0]
0001f0  f0406080          ORR      r0,r0,#0x4000000
0001f4  4955              LDR      r1,|L1.844|
0001f6  310c              ADDS     r1,r1,#0xc
0001f8  6008              STR      r0,[r1,#0]
;;;117    	SDA_OUT();
0001fa  4854              LDR      r0,|L1.844|
0001fc  6800              LDR      r0,[r0,#0]
0001fe  f4204070          BIC      r0,r0,#0xf000
000202  4952              LDR      r1,|L1.844|
000204  6008              STR      r0,[r1,#0]
000206  4608              MOV      r0,r1
000208  6800              LDR      r0,[r0,#0]
00020a  f4405040          ORR      r0,r0,#0x3000
00020e  6008              STR      r0,[r1,#0]
;;;118    	IIC_SDA_H;
000210  484e              LDR      r0,|L1.844|
000212  300c              ADDS     r0,r0,#0xc
000214  6800              LDR      r0,[r0,#0]
000216  f4406000          ORR      r0,r0,#0x800
00021a  494c              LDR      r1,|L1.844|
00021c  310c              ADDS     r1,r1,#0xc
00021e  6008              STR      r0,[r1,#0]
;;;119    	_delay_us(2);
000220  2002              MOVS     r0,#2
000222  f7fffffe          BL       _delay_us
;;;120    	IIC_SCL_H;
000226  4849              LDR      r0,|L1.844|
000228  300c              ADDS     r0,r0,#0xc
00022a  6800              LDR      r0,[r0,#0]
00022c  f4406080          ORR      r0,r0,#0x400
000230  4946              LDR      r1,|L1.844|
000232  310c              ADDS     r1,r1,#0xc
000234  6008              STR      r0,[r1,#0]
;;;121    	_delay_us(2);
000236  2002              MOVS     r0,#2
000238  f7fffffe          BL       _delay_us
;;;122    	IIC_SCL_L;
00023c  4843              LDR      r0,|L1.844|
00023e  300c              ADDS     r0,r0,#0xc
000240  6800              LDR      r0,[r0,#0]
000242  f0406080          ORR      r0,r0,#0x4000000
000246  4941              LDR      r1,|L1.844|
000248  310c              ADDS     r1,r1,#0xc
00024a  6008              STR      r0,[r1,#0]
;;;123    }
00024c  bd10              POP      {r4,pc}
;;;124    
                          ENDP

                  IIC_Read_Byte PROC
;;;60     //IIC读取一个字节
;;;61     u8	IIC_Read_Byte(u8 ack)
00024e  b570              PUSH     {r4-r6,lr}
;;;62     {
000250  4605              MOV      r5,r0
;;;63     	u8 i,receive = 0;
000252  2400              MOVS     r4,#0
;;;64     	SDA_IN();
000254  483d              LDR      r0,|L1.844|
000256  6800              LDR      r0,[r0,#0]
000258  f4204070          BIC      r0,r0,#0xf000
00025c  493b              LDR      r1,|L1.844|
00025e  6008              STR      r0,[r1,#0]
000260  4608              MOV      r0,r1
000262  6800              LDR      r0,[r0,#0]
000264  f4404000          ORR      r0,r0,#0x8000
000268  6008              STR      r0,[r1,#0]
;;;65     	for(i = 0;i < 8;i++)
00026a  2600              MOVS     r6,#0
00026c  e021              B        |L1.690|
                  |L1.622|
;;;66     	{
;;;67     		IIC_SCL_L;
00026e  4837              LDR      r0,|L1.844|
000270  300c              ADDS     r0,r0,#0xc
000272  6800              LDR      r0,[r0,#0]
000274  f0406080          ORR      r0,r0,#0x4000000
000278  4934              LDR      r1,|L1.844|
00027a  310c              ADDS     r1,r1,#0xc
00027c  6008              STR      r0,[r1,#0]
;;;68     		_delay_us(2);
00027e  2002              MOVS     r0,#2
000280  f7fffffe          BL       _delay_us
;;;69     		IIC_SCL_H;
000284  4831              LDR      r0,|L1.844|
000286  300c              ADDS     r0,r0,#0xc
000288  6800              LDR      r0,[r0,#0]
00028a  f4406080          ORR      r0,r0,#0x400
00028e  492f              LDR      r1,|L1.844|
000290  310c              ADDS     r1,r1,#0xc
000292  6008              STR      r0,[r1,#0]
;;;70     		receive <<=1;
000294  0660              LSLS     r0,r4,#25
000296  0e04              LSRS     r4,r0,#24
;;;71     		if(READ_SDA) receive++;
000298  482c              LDR      r0,|L1.844|
00029a  1d00              ADDS     r0,r0,#4
00029c  6800              LDR      r0,[r0,#0]
00029e  f4106f00          TST      r0,#0x800
0002a2  d001              BEQ      |L1.680|
0002a4  1c60              ADDS     r0,r4,#1
0002a6  b2c4              UXTB     r4,r0
                  |L1.680|
;;;72     		_delay_us(1);
0002a8  2001              MOVS     r0,#1
0002aa  f7fffffe          BL       _delay_us
0002ae  1c70              ADDS     r0,r6,#1              ;65
0002b0  b2c6              UXTB     r6,r0                 ;65
                  |L1.690|
0002b2  2e08              CMP      r6,#8                 ;65
0002b4  dbdb              BLT      |L1.622|
;;;73     	}
;;;74     	if(!ack)IIC_NAck();
0002b6  b915              CBNZ     r5,|L1.702|
0002b8  f7fffffe          BL       IIC_NAck
0002bc  e001              B        |L1.706|
                  |L1.702|
;;;75     	else IIC_Ack();
0002be  f7fffffe          BL       IIC_Ack
                  |L1.706|
;;;76     	return receive;
0002c2  4620              MOV      r0,r4
;;;77     }
0002c4  bd70              POP      {r4-r6,pc}
;;;78     
                          ENDP

                  IIC_Wait_Ack PROC
;;;79     //IIC等待ACK信号
;;;80     u8 IIC_Wait_Ack(void)
0002c6  b510              PUSH     {r4,lr}
;;;81     {
;;;82     	u8 ucErrTime = 0;
0002c8  2400              MOVS     r4,#0
;;;83     	SDA_IN();
0002ca  4820              LDR      r0,|L1.844|
0002cc  6800              LDR      r0,[r0,#0]
0002ce  f4204070          BIC      r0,r0,#0xf000
0002d2  491e              LDR      r1,|L1.844|
0002d4  6008              STR      r0,[r1,#0]
0002d6  4608              MOV      r0,r1
0002d8  6800              LDR      r0,[r0,#0]
0002da  f4404000          ORR      r0,r0,#0x8000
0002de  6008              STR      r0,[r1,#0]
;;;84     	IIC_SDA_H;
0002e0  481a              LDR      r0,|L1.844|
0002e2  300c              ADDS     r0,r0,#0xc
0002e4  6800              LDR      r0,[r0,#0]
0002e6  f4406000          ORR      r0,r0,#0x800
0002ea  4918              LDR      r1,|L1.844|
0002ec  310c              ADDS     r1,r1,#0xc
0002ee  6008              STR      r0,[r1,#0]
;;;85     	_delay_us(1);
0002f0  2001              MOVS     r0,#1
0002f2  f7fffffe          BL       _delay_us
;;;86     	IIC_SCL_H;
0002f6  4815              LDR      r0,|L1.844|
0002f8  300c              ADDS     r0,r0,#0xc
0002fa  6800              LDR      r0,[r0,#0]
0002fc  f4406080          ORR      r0,r0,#0x400
000300  4912              LDR      r1,|L1.844|
000302  310c              ADDS     r1,r1,#0xc
000304  6008              STR      r0,[r1,#0]
;;;87     	_delay_us(1);
000306  2001              MOVS     r0,#1
000308  f7fffffe          BL       _delay_us
;;;88     	while(READ_SDA)
00030c  e007              B        |L1.798|
                  |L1.782|
;;;89     	{
;;;90     		ucErrTime++;
00030e  1c60              ADDS     r0,r4,#1
000310  b2c4              UXTB     r4,r0
;;;91     		if(ucErrTime > 250)
000312  2cfa              CMP      r4,#0xfa
000314  dd03              BLE      |L1.798|
;;;92     		{
;;;93     			IIC_Stop();
000316  f7fffffe          BL       IIC_Stop
;;;94     			return 1;
00031a  2001              MOVS     r0,#1
                  |L1.796|
;;;95     		}
;;;96     	}
;;;97     	IIC_SCL_L;
;;;98     	return 0;
;;;99     }
00031c  bd10              POP      {r4,pc}
                  |L1.798|
00031e  480b              LDR      r0,|L1.844|
000320  1d00              ADDS     r0,r0,#4              ;88
000322  6800              LDR      r0,[r0,#0]            ;88
000324  f4106f00          TST      r0,#0x800             ;88
000328  d1f1              BNE      |L1.782|
00032a  4808              LDR      r0,|L1.844|
00032c  300c              ADDS     r0,r0,#0xc            ;97
00032e  6800              LDR      r0,[r0,#0]            ;97
000330  f0406080          ORR      r0,r0,#0x4000000      ;97
000334  4905              LDR      r1,|L1.844|
000336  310c              ADDS     r1,r1,#0xc            ;97
000338  6008              STR      r0,[r1,#0]            ;97
00033a  2000              MOVS     r0,#0                 ;98
00033c  e7ee              B        |L1.796|
;;;100    
                          ENDP

                  IIC_Write_One_Byte PROC
;;;125    //写一个字节
;;;126    void IIC_Write_One_Byte(u8 daddr,u8 addr,u8 data)
00033e  4770              BX       lr
;;;127    {
;;;128    }
;;;129    
                          ENDP

                  IIC_Read_One_Byte PROC
;;;130    //读一个字节
;;;131    u8 IIC_Read_One_Byte(u8 daddr,u8 addr)
000340  4602              MOV      r2,r0
;;;132    {
;;;133    	return 0;
000342  2000              MOVS     r0,#0
;;;134    }
000344  4770              BX       lr
;;;135    
                          ENDP

000346  0000              DCW      0x0000
                  |L1.840|
                          DCD      0x40021000
                  |L1.844|
                          DCD      0x40010c04
