L 1 "app\game.c"
N#include "game.h"
L 1 "app\game.h" 1
N#ifndef __ENGINE_H
N#define __ENGINE_H
N#include "jpstm32_lcd.h"
L 1 ".\devices\jpstm32_lcd.h" 1
N/* ****************************************************
N * 描    述：本程序用于定义TFT-LCD驱动相关的操作
N * 作    者：Duke An
N * 时    间：2014年8月
N * 版    权：杰普软件科技有限公司版权所有，
N *			 转载请注明出处，侵权必究！
N * 更新说明：
N * 编码规范：宏定义--大写，单词之间用下划线分割
N *			 结构--首字母大写，驼峰命名
N *			 枚举--首字母大写，驼峰命名
N *			 函数--首字母小写，驼峰命名
N *			 局部变量--小写，单词之间用下划线分割
N *			 全局变量--首字母大写，单词之间用下划线分割
N * ***************************************************/
N#ifndef __TFTLCD_H__
N#define __TFTLCD_H__
N
N/* ****************************************************
N * JPIOT-STM32-V1开发板采用3.5英寸ILI9486液晶，支持最大
N * 分辨率为480*320。为提高数据访问速度，特别采用16位并行
N * 接口与CPU进行连接，此液晶屏采用的80并口(intel 提出的
N * 一种并口通信协议)主要信号线及连接方式如下：
N *
N * LCD_CS：			TFT-LCD片选信号
N * LCD_WR：			向TFT-LCD写入数据，低电平有效
N * LCD_RD：			从TFT-LCD读取数据，低电平有效
N * LCD_DB[15:0]：	16位双向数据线
N * LCD_RST：		复位	
N * LCD_RS：			命令/数据标志(0-命令操作;1-数据操作)
N *
N * JPIOT-STM32-V1开发板LCD硬件连接方式：
N * ________________
N *           RESET |---LCD_RESET
N *   PG12/FSMC_NE4 |---LCD_CS
N *    PG0/FSMC_A10 |---LCD_RS
N *    PD4/FSMC_NOE |---LCD_RD
N *    PD5/FSMC_NWE |---LCD_WR
N *             PB0 |---LCD_BL		//背光
N *    PD14/FSMC_D0 |---LCD_DB1
N *    PD15/FSMC_D1 |---LCD_DB2
N *     PD0/FSMC_D2 |---LCD_DB3
N *     PD1/FSMC_D3 |---LCD_DB4
N *	   PE7/FSMC_D4 |---LCD_DB5
N *	   PE8/FSMC_D5 |---LCD_DB6
N *	   PE9/FSMC_D6 |---LCD_DB7
N *	  PE10/FSMC_D7 |---LCD_DB8
N *	  PE11/FSMC_D8 |---LCD_DB10
N *	  PE12/FSMC_D9 |---LCD_DB11
N *   PE13/FSMC_D10 |---LCD_DB12
N *   PE14/FSMC_D11 |---LCD_DB13
N *   PE15/FSMC_D12 |---LCD_DB14
N *    PD8/FSMC_D13 |---LCD_DB15
N *    PD9/FSMC_D14 |---LCD_DB16
N *   PD10/FSMC_D15 |---LCD_DB17
N * ________________|
N * ***************************************************/
N
N#include "jpstm32_gpio.h"
L 1 ".\core\jpstm32_gpio.h" 1
N/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
N * File name: jpstm32_gpio.h
N * Author: Duke An
N * Version: 0.1
N * Date: 2014-06-17
N * Description: 系统通用I/O接口定义
N * Copyright @ 2013 by Briup Technology,Inc. All rights Reserved.
N * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */
N
N#ifndef __JPSTM32_GPIO_H__
N#define __JPSTM32_GPIO_H__
N
N#include "jpstm32_common.h"
L 1 ".\core\jpstm32_common.h" 1
N/*************************************************************
N * File name: jpstm32_common.h
N * Author: Duke An
N * Version: 0.1
N * Date: 20140617
N * Description: 系统通用头文件，用于定义通用数据结构等
N * Copyright @ 2013 by Briup Technology,Inc. All rights Reserved.
N *************************************************************/
N#ifndef __JPSTM32_COMMON_H__
N#define __JPSTM32_COMMON_H__
N
N#include <stm32f10x_map.h>
L 1 ".\core\stm32f10x_map.h" 1
N/******************** (C) COPYRIGHT 2008 STMicroelectronics ********************
N* File Name          : stm32f10x_map.h
N* Author             : MCD Application Team
N* Version            : V2.0.1
N* Date               : 06/13/2008
N* Description        : This file contains all the peripheral register's definitions
N*                      and memory mapping.
N********************************************************************************
N* THE PRESENT FIRMWARE WHICH IS FOR GUIDANCE ONLY AIMS AT PROVIDING CUSTOMERS
N* WITH CODING INFORMATION REGARDING THEIR PRODUCTS IN ORDER FOR THEM TO SAVE TIME.
N* AS A RESULT, STMICROELECTRONICS SHALL NOT BE HELD LIABLE FOR ANY DIRECT,
N* INDIRECT OR CONSEQUENTIAL DAMAGES WITH RESPECT TO ANY CLAIMS ARISING FROM THE
N* CONTENT OF SUCH FIRMWARE AND/OR THE USE MADE BY CUSTOMERS OF THE CODING
N* INFORMATION CONTAINED HEREIN IN CONNECTION WITH THEIR PRODUCTS.
N*******************************************************************************/
N
N/* Define to prevent recursive inclusion -------------------------------------*/
N#ifndef __STM32F10x_MAP_H
N#define __STM32F10x_MAP_H
N
N#ifndef EXT
N  #define EXT extern
N#endif /* EXT */
N
N/* Includes ------------------------------------------------------------------*/
N#include "stm32f10x_conf.h"
L 1 ".\core\stm32f10x_conf.h" 1
N/******************** (C) COPYRIGHT 2008 STMicroelectronics ********************
N* File Name          : stm32f10x_conf.h
N* Author             : MCD Application Team
N* Version            : V2.0.1
N* Date               : 06/13/2008
N* Description        : Library configuration file.
N********************************************************************************
N* THE PRESENT FIRMWARE WHICH IS FOR GUIDANCE ONLY AIMS AT PROVIDING CUSTOMERS
N* WITH CODING INFORMATION REGARDING THEIR PRODUCTS IN ORDER FOR THEM TO SAVE TIME.
N* AS A RESULT, STMICROELECTRONICS SHALL NOT BE HELD LIABLE FOR ANY DIRECT,
N* INDIRECT OR CONSEQUENTIAL DAMAGES WITH RESPECT TO ANY CLAIMS ARISING FROM THE
N* CONTENT OF SUCH FIRMWARE AND/OR THE USE MADE BY CUSTOMERS OF THE CODING
N* INFORMATION CONTAINED HEREIN IN CONNECTION WITH THEIR PRODUCTS.
N*******************************************************************************/
N
N/* Define to prevent recursive inclusion -------------------------------------*/
N#ifndef __STM32F10x_CONF_H
N#define __STM32F10x_CONF_H
N
N/* Includes ------------------------------------------------------------------*/
N#include "stm32f10x_type.h"
L 1 ".\core\stm32f10x_type.h" 1
N/******************** (C) COPYRIGHT 2008 STMicroelectronics ********************
N* File Name          : stm32f10x_type.h
N* Author             : MCD Application Team
N* Version            : V2.0.1
N* Date               : 06/13/2008
N* Description        : This file contains all the common data types used for the
N*                      STM32F10x firmware library.
N********************************************************************************
N* THE PRESENT FIRMWARE WHICH IS FOR GUIDANCE ONLY AIMS AT PROVIDING CUSTOMERS
N* WITH CODING INFORMATION REGARDING THEIR PRODUCTS IN ORDER FOR THEM TO SAVE TIME.
N* AS A RESULT, STMICROELECTRONICS SHALL NOT BE HELD LIABLE FOR ANY DIRECT,
N* INDIRECT OR CONSEQUENTIAL DAMAGES WITH RESPECT TO ANY CLAIMS ARISING FROM THE
N* CONTENT OF SUCH FIRMWARE AND/OR THE USE MADE BY CUSTOMERS OF THE CODING
N* INFORMATION CONTAINED HEREIN IN CONNECTION WITH THEIR PRODUCTS.
N*******************************************************************************/
N
N/* Define to prevent recursive inclusion -------------------------------------*/
N#ifndef __STM32F10x_TYPE_H
N#define __STM32F10x_TYPE_H
N
N/* Includes ------------------------------------------------------------------*/
N/* Exported types ------------------------------------------------------------*/
Ntypedef signed long  s32;
Ntypedef signed short s16;
Ntypedef signed char  s8;
N
Ntypedef signed long  const sc32;  /* Read Only */
Ntypedef signed short const sc16;  /* Read Only */
Ntypedef signed char  const sc8;   /* Read Only */
N
Ntypedef volatile signed long  vs32;
Ntypedef volatile signed short vs16;
Ntypedef volatile signed char  vs8;
N
Ntypedef volatile signed long  const vsc32;  /* Read Only */
Ntypedef volatile signed short const vsc16;  /* Read Only */
Ntypedef volatile signed char  const vsc8;   /* Read Only */
N
Ntypedef unsigned long  u32;
Ntypedef unsigned short u16;
Ntypedef unsigned char  u8;
N
Ntypedef unsigned long  const uc32;  /* Read Only */
Ntypedef unsigned short const uc16;  /* Read Only */
Ntypedef unsigned char  const uc8;   /* Read Only */
N
Ntypedef volatile unsigned long  vu32;
Ntypedef volatile unsigned short vu16;
Ntypedef volatile unsigned char  vu8;
N
Ntypedef volatile unsigned long  const vuc32;  /* Read Only */
Ntypedef volatile unsigned short const vuc16;  /* Read Only */
Ntypedef volatile unsigned char  const vuc8;   /* Read Only */
N
Ntypedef enum {FALSE = 0, TRUE = !FALSE} bool;
N
Ntypedef enum {RESET = 0, SET = !RESET} FlagStatus, ITStatus;
N
Ntypedef enum {DISABLE = 0, ENABLE = !DISABLE} FunctionalState;
N#define IS_FUNCTIONAL_STATE(STATE) (((STATE) == DISABLE) || ((STATE) == ENABLE))
N
Ntypedef enum {ERROR = 0, SUCCESS = !ERROR} ErrorStatus;
N
N#define U8_MAX     ((u8)255)
N#define S8_MAX     ((s8)127)
N#define S8_MIN     ((s8)-128)
N#define U16_MAX    ((u16)65535u)
N#define S16_MAX    ((s16)32767)
N#define S16_MIN    ((s16)-32768)
N#define U32_MAX    ((u32)4294967295uL)
N#define S32_MAX    ((s32)2147483647)
N#define S32_MIN    ((s32)-2147483648)
N
N/* Exported constants --------------------------------------------------------*/
N/* Exported macro ------------------------------------------------------------*/
N/* Exported functions ------------------------------------------------------- */
N
N#endif /* __STM32F10x_TYPE_H */
N
N/******************* (C) COPYRIGHT 2008 STMicroelectronics *****END OF FILE****/
L 22 ".\core\stm32f10x_conf.h" 2
N
N/* Exported types ------------------------------------------------------------*/
N/* Exported constants --------------------------------------------------------*/
N/* Uncomment the line below to compile the library in DEBUG mode, this will expanse
N   the "assert_param" macro in the firmware library code (see "Exported macro"
N   section below) */
N/* #define DEBUG    1*/
N
N/* Comment the line below to disable the specific peripheral inclusion */
N/************************************* ADC ************************************/
N#define _ADC
N#define _ADC1
N#define _ADC2
N#define _ADC3
N
N/************************************* BKP ************************************/
N#define _BKP 
N
N/************************************* CAN ************************************/
N#define _CAN
N
N/************************************* CRC ************************************/
N#define _CRC
N
N/************************************* DAC ************************************/
N#define _DAC
N
N/************************************* DBGMCU *********************************/
N#define _DBGMCU
N
N/************************************* DMA ************************************/
N#define _DMA
N#define _DMA1_Channel1
N#define _DMA1_Channel2
N#define _DMA1_Channel3
N#define _DMA1_Channel4
N#define _DMA1_Channel5
N#define _DMA1_Channel6
N#define _DMA1_Channel7
N#define _DMA2_Channel1
N#define _DMA2_Channel2
N#define _DMA2_Channel3
N#define _DMA2_Channel4
N#define _DMA2_Channel5
N
N/************************************* EXTI ***********************************/
N#define _EXTI
N
N/************************************* FLASH and Option Bytes *****************/
N#define _FLASH
N/* Uncomment the line below to enable FLASH program/erase/protections functions,
N   otherwise only FLASH configuration (latency, prefetch, half cycle) functions
N   are enabled */
N#define _FLASH_PROG
N
N/************************************* FSMC ***********************************/
N#define _FSMC
N
N/************************************* GPIO ***********************************/
N#define _GPIO
N#define _GPIOA
N#define _GPIOB
N#define _GPIOC
N#define _GPIOD
N#define _GPIOE
N#define _GPIOF
N#define _GPIOG
N#define _AFIO
N
N/************************************* I2C ************************************/
N#define _I2C
N#define _I2C1
N#define _I2C2
N
N/************************************* IWDG ***********************************/
N#define _IWDG
N
N/************************************* NVIC ***********************************/
N#define _NVIC
N
N/************************************* PWR ************************************/
N#define _PWR
N
N/************************************* RCC ************************************/
N#define _RCC
N
N/************************************* RTC ************************************/
N#define _RTC
N
N/************************************* SDIO ***********************************/
N#define _SDIO
N
N/************************************* SPI ************************************/
N#define _SPI
N#define _SPI1
N#define _SPI2
N#define _SPI3
N
N/************************************* SysTick ********************************/
N#define _SysTick
N
N/************************************* TIM ************************************/
N#define _TIM
N#define _TIM1
N#define _TIM2
N#define _TIM3
N#define _TIM4
N#define _TIM5
N#define _TIM6
N#define _TIM7
N#define _TIM8
N
N/************************************* USART **********************************/
N#define _USART
N#define _USART1
N#define _USART2
N#define _USART3
N#define _UART4
N#define _UART5
N
N/************************************* WWDG ***********************************/
N#define _WWDG
N
N/* In the following line adjust the value of External High Speed oscillator (HSE)
N   used in your application */
N#define HSE_Value    ((u32)8000000) /* Value of the External oscillator in Hz*/
N
N/* Exported macro ------------------------------------------------------------*/
N#ifdef  DEBUG
S/*******************************************************************************
S* Macro Name     : assert_param
S* Description    : The assert_param macro is used for function's parameters check.
S*                  It is used only if the library is compiled in DEBUG mode. 
S* Input          : - expr: If expr is false, it calls assert_failed function
S*                    which reports the name of the source file and the source
S*                    line number of the call that failed. 
S*                    If expr is true, it returns no value.
S* Return         : None
S*******************************************************************************/ 
S  #define assert_param(expr) ((expr) ? (void)0 : assert_failed((u8 *)__FILE__, __LINE__))
S/* Exported functions ------------------------------------------------------- */
S  void assert_failed(u8* file, u32 line);
N#else
N  #define assert_param(expr) ((void)0)
N#endif /* DEBUG */
N
N#endif /* __STM32F10x_CONF_H */
N
N/******************* (C) COPYRIGHT 2008 STMicroelectronics *****END OF FILE****/
L 27 ".\core\stm32f10x_map.h" 2
N#include "stm32f10x_type.h"
N#include "cortexm3_macro.h"
L 1 ".\core\cortexm3_macro.h" 1
N/******************** (C) COPYRIGHT 2008 STMicroelectronics ********************
N* File Name          : cortexm3_macro.h
N* Author             : MCD Application Team
N* Version            : V2.0.1
N* Date               : 06/13/2008
N* Description        : Header file for cortexm3_macro.s.
N********************************************************************************
N* THE PRESENT FIRMWARE WHICH IS FOR GUIDANCE ONLY AIMS AT PROVIDING CUSTOMERS
N* WITH CODING INFORMATION REGARDING THEIR PRODUCTS IN ORDER FOR THEM TO SAVE TIME.
N* AS A RESULT, STMICROELECTRONICS SHALL NOT BE HELD LIABLE FOR ANY DIRECT,
N* INDIRECT OR CONSEQUENTIAL DAMAGES WITH RESPECT TO ANY CLAIMS ARISING FROM THE
N* CONTENT OF SUCH FIRMWARE AND/OR THE USE MADE BY CUSTOMERS OF THE CODING
N* INFORMATION CONTAINED HEREIN IN CONNECTION WITH THEIR PRODUCTS.
N*******************************************************************************/
N
N/* Define to prevent recursive inclusion -------------------------------------*/
N#ifndef __CORTEXM3_MACRO_H
N#define __CORTEXM3_MACRO_H
N
N/* Includes ------------------------------------------------------------------*/
N#include "stm32f10x_type.h"
N
N/* Exported types ------------------------------------------------------------*/
N/* Exported constants --------------------------------------------------------*/
N/* Exported macro ------------------------------------------------------------*/
N/* Exported functions ------------------------------------------------------- */
Nvoid __WFI(void);
Nvoid __WFE(void);
Nvoid __SEV(void);
Nvoid __ISB(void);
Nvoid __DSB(void);
Nvoid __DMB(void);
Nvoid __SVC(void);
Nu32 __MRS_CONTROL(void);
Nvoid __MSR_CONTROL(u32 Control);
Nu32 __MRS_PSP(void);
Nvoid __MSR_PSP(u32 TopOfProcessStack);
Nu32 __MRS_MSP(void);
Nvoid __MSR_MSP(u32 TopOfMainStack);
Nvoid __RESETPRIMASK(void);
Nvoid __SETPRIMASK(void);
Nu32 __READ_PRIMASK(void);
Nvoid __RESETFAULTMASK(void);
Nvoid __SETFAULTMASK(void);
Nu32 __READ_FAULTMASK(void);
Nvoid __BASEPRICONFIG(u32 NewPriority);
Nu32 __GetBASEPRI(void);
Nu16 __REV_HalfWord(u16 Data);
Nu32 __REV_Word(u32 Data);
N
N#endif /* __CORTEXM3_MACRO_H */
N
N/******************* (C) COPYRIGHT 2008 STMicroelectronics *****END OF FILE****/
L 29 ".\core\stm32f10x_map.h" 2
N
N/* Exported types ------------------------------------------------------------*/
N/******************************************************************************/
N/*                         Peripheral registers structures                    */
N/******************************************************************************/
N
N/*------------------------ Analog to Digital Converter -----------------------*/
Ntypedef struct
N{
N  vu32 SR;
N  vu32 CR1;
N  vu32 CR2;
N  vu32 SMPR1;
N  vu32 SMPR2;
N  vu32 JOFR1;
N  vu32 JOFR2;
N  vu32 JOFR3;
N  vu32 JOFR4;
N  vu32 HTR;
N  vu32 LTR;
N  vu32 SQR1;
N  vu32 SQR2;
N  vu32 SQR3;
N  vu32 JSQR;
N  vu32 JDR1;
N  vu32 JDR2;
N  vu32 JDR3;
N  vu32 JDR4;
N  vu32 DR;
N} ADC_TypeDef;
N
N/*------------------------ Backup Registers ----------------------------------*/
Ntypedef struct
N{
N  u32  RESERVED0;
N  vu16 DR1;
N  u16  RESERVED1;
N  vu16 DR2;
N  u16  RESERVED2;
N  vu16 DR3;
N  u16  RESERVED3;
N  vu16 DR4;
N  u16  RESERVED4;
N  vu16 DR5;
N  u16  RESERVED5;
N  vu16 DR6;
N  u16  RESERVED6;
N  vu16 DR7;
N  u16  RESERVED7;
N  vu16 DR8;
N  u16  RESERVED8;
N  vu16 DR9;
N  u16  RESERVED9;
N  vu16 DR10;
N  u16  RESERVED10; 
N  vu16 RTCCR;
N  u16  RESERVED11;
N  vu16 CR;
N  u16  RESERVED12;
N  vu16 CSR;
N  u16  RESERVED13[5];
N  vu16 DR11;
N  u16  RESERVED14;
N  vu16 DR12;
N  u16  RESERVED15;
N  vu16 DR13;
N  u16  RESERVED16;
N  vu16 DR14;
N  u16  RESERVED17;
N  vu16 DR15;
N  u16  RESERVED18;
N  vu16 DR16;
N  u16  RESERVED19;
N  vu16 DR17;
N  u16  RESERVED20;
N  vu16 DR18;
N  u16  RESERVED21;
N  vu16 DR19;
N  u16  RESERVED22;
N  vu16 DR20;
N  u16  RESERVED23;
N  vu16 DR21;
N  u16  RESERVED24;
N  vu16 DR22;
N  u16  RESERVED25;
N  vu16 DR23;
N  u16  RESERVED26;
N  vu16 DR24;
N  u16  RESERVED27;
N  vu16 DR25;
N  u16  RESERVED28;
N  vu16 DR26;
N  u16  RESERVED29;
N  vu16 DR27;
N  u16  RESERVED30;
N  vu16 DR28;
N  u16  RESERVED31;
N  vu16 DR29;
N  u16  RESERVED32;
N  vu16 DR30;
N  u16  RESERVED33; 
N  vu16 DR31;
N  u16  RESERVED34;
N  vu16 DR32;
N  u16  RESERVED35;
N  vu16 DR33;
N  u16  RESERVED36;
N  vu16 DR34;
N  u16  RESERVED37;
N  vu16 DR35;
N  u16  RESERVED38;
N  vu16 DR36;
N  u16  RESERVED39;
N  vu16 DR37;
N  u16  RESERVED40;
N  vu16 DR38;
N  u16  RESERVED41;
N  vu16 DR39;
N  u16  RESERVED42;
N  vu16 DR40;
N  u16  RESERVED43;
N  vu16 DR41;
N  u16  RESERVED44;
N  vu16 DR42;
N  u16  RESERVED45;    
N} BKP_TypeDef;
N
N/*------------------------ Controller Area Network ---------------------------*/
Ntypedef struct
N{
N  vu32 TIR;
N  vu32 TDTR;
N  vu32 TDLR;
N  vu32 TDHR;
N} CAN_TxMailBox_TypeDef;
N
Ntypedef struct
N{
N  vu32 RIR;
N  vu32 RDTR;
N  vu32 RDLR;
N  vu32 RDHR;
N} CAN_FIFOMailBox_TypeDef;
N
Ntypedef struct
N{
N  vu32 FR1;
N  vu32 FR2;
N} CAN_FilterRegister_TypeDef;
N
Ntypedef struct
N{
N  vu32 MCR;
N  vu32 MSR;
N  vu32 TSR;
N  vu32 RF0R;
N  vu32 RF1R;
N  vu32 IER;
N  vu32 ESR;
N  vu32 BTR;
N  u32  RESERVED0[88];
N  CAN_TxMailBox_TypeDef sTxMailBox[3];
N  CAN_FIFOMailBox_TypeDef sFIFOMailBox[2];
N  u32  RESERVED1[12];
N  vu32 FMR;
N  vu32 FM1R;
N  u32  RESERVED2;
N  vu32 FS1R;
N  u32  RESERVED3;
N  vu32 FFA1R;
N  u32  RESERVED4;
N  vu32 FA1R;
N  u32  RESERVED5[8];
N  CAN_FilterRegister_TypeDef sFilterRegister[14];
N} CAN_TypeDef;
N
N/*------------------------ CRC calculation unit ------------------------------*/
Ntypedef struct
N{
N  vu32 DR;
N  vu8  IDR;
N  u8   RESERVED0;
N  u16  RESERVED1;
N  vu32 CR;
N} CRC_TypeDef;
N
N
N/*------------------------ Digital to Analog Converter -----------------------*/
Ntypedef struct
N{
N  vu32 CR;
N  vu32 SWTRIGR;
N  vu32 DHR12R1;
N  vu32 DHR12L1;
N  vu32 DHR8R1;
N  vu32 DHR12R2;
N  vu32 DHR12L2;
N  vu32 DHR8R2;
N  vu32 DHR12RD;
N  vu32 DHR12LD;
N  vu32 DHR8RD;
N  vu32 DOR1;
N  vu32 DOR2;
N} DAC_TypeDef;
N
N/*------------------------ Debug MCU -----------------------------------------*/
Ntypedef struct
N{
N  vu32 IDCODE;
N  vu32 CR;	
N}DBGMCU_TypeDef;
N
N/*------------------------ DMA Controller ------------------------------------*/
Ntypedef struct
N{
N  vu32 CCR;
N  vu32 CNDTR;
N  vu32 CPAR;
N  vu32 CMAR;
N} DMA_Channel_TypeDef;
N
Ntypedef struct
N{
N  vu32 ISR;
N  vu32 IFCR;
N} DMA_TypeDef;
N
N/*------------------------ External Interrupt/Event Controller ---------------*/
Ntypedef struct
N{
N  vu32 IMR;
N  vu32 EMR;
N  vu32 RTSR;
N  vu32 FTSR;
N  vu32 SWIER;
N  vu32 PR;
N} EXTI_TypeDef;
N
N/*------------------------ FLASH and Option Bytes Registers ------------------*/
Ntypedef struct
N{
N  vu32 ACR;
N  vu32 KEYR;
N  vu32 OPTKEYR;
N  vu32 SR;
N  vu32 CR;
N  vu32 AR;
N  vu32 RESERVED;
N  vu32 OBR;
N  vu32 WRPR;
N} FLASH_TypeDef;
N
Ntypedef struct
N{
N  vu16 RDP;
N  vu16 USER;
N  vu16 Data0;
N  vu16 Data1;
N  vu16 WRP0;
N  vu16 WRP1;
N  vu16 WRP2;
N  vu16 WRP3;
N} OB_TypeDef;
N
N/*------------------------ Flexible Static Memory Controller -----------------*/
Ntypedef struct
N{
N  vu32 BTCR[8];
N} FSMC_Bank1_TypeDef; 
N
Ntypedef struct
N{
N  vu32 BWTR[7];
N} FSMC_Bank1E_TypeDef;
N
Ntypedef struct
N{
N  vu32 PCR2;
N  vu32 SR2;
N  vu32 PMEM2;
N  vu32 PATT2;
N  u32  RESERVED0;   
N  vu32 ECCR2; 
N} FSMC_Bank2_TypeDef;  
N
Ntypedef struct
N{
N  vu32 PCR3;
N  vu32 SR3;
N  vu32 PMEM3;
N  vu32 PATT3;
N  u32  RESERVED0;   
N  vu32 ECCR3; 
N} FSMC_Bank3_TypeDef; 
N
Ntypedef struct
N{
N  vu32 PCR4;
N  vu32 SR4;
N  vu32 PMEM4;
N  vu32 PATT4;
N  vu32 PIO4; 
N} FSMC_Bank4_TypeDef; 
N
N/*------------------------ General Purpose and Alternate Function IO ---------*/
Ntypedef struct
N{
N  vu32 CRL;
N  vu32 CRH;
N  vu32 IDR;
N  vu32 ODR;
N  vu32 BSRR;
N  vu32 BRR;
N  vu32 LCKR;
N} GPIO_TypeDef;
N
Ntypedef struct
N{
N  vu32 EVCR;
N  vu32 MAPR;
N  vu32 EXTICR[4];
N} AFIO_TypeDef;
N
N/*------------------------ Inter-integrated Circuit Interface ----------------*/
Ntypedef struct
N{
N  vu16 CR1;
N  u16  RESERVED0;
N  vu16 CR2;
N  u16  RESERVED1;
N  vu16 OAR1;
N  u16  RESERVED2;
N  vu16 OAR2;
N  u16  RESERVED3;
N  vu16 DR;
N  u16  RESERVED4;
N  vu16 SR1;
N  u16  RESERVED5;
N  vu16 SR2;
N  u16  RESERVED6;
N  vu16 CCR;
N  u16  RESERVED7;
N  vu16 TRISE;
N  u16  RESERVED8;
N} I2C_TypeDef;
N
N/*------------------------ Independent WATCHDOG ------------------------------*/
Ntypedef struct
N{
N  vu32 KR;
N  vu32 PR;
N  vu32 RLR;
N  vu32 SR;
N} IWDG_TypeDef;
N
N/*------------------------ Nested Vectored Interrupt Controller --------------*/
Ntypedef struct
N{
N  vu32 ISER[2];
N  u32  RESERVED0[30];
N  vu32 ICER[2];
N  u32  RSERVED1[30];
N  vu32 ISPR[2];
N  u32  RESERVED2[30];
N  vu32 ICPR[2];
N  u32  RESERVED3[30];
N  vu32 IABR[2];
N  u32  RESERVED4[62];
N  vu32 IPR[15];
N} NVIC_TypeDef;
N
Ntypedef struct
N{
N  vuc32 CPUID;
N  vu32 ICSR;
N  vu32 VTOR;
N  vu32 AIRCR;
N  vu32 SCR;
N  vu32 CCR;
N  vu32 SHPR[3];
N  vu32 SHCSR;
N  vu32 CFSR;
N  vu32 HFSR;
N  vu32 DFSR;
N  vu32 MMFAR;
N  vu32 BFAR;
N  vu32 AFSR;
N} SCB_TypeDef;
N
N/*------------------------ Power Control -------------------------------------*/
Ntypedef struct
N{
N  vu32 CR;
N  vu32 CSR;
N} PWR_TypeDef;
N
N/*------------------------ Reset and Clock Control ---------------------------*/
Ntypedef struct
N{
N  vu32 CR;
N  vu32 CFGR;
N  vu32 CIR;
N  vu32 APB2RSTR;
N  vu32 APB1RSTR;
N  vu32 AHBENR;
N  vu32 APB2ENR;
N  vu32 APB1ENR;
N  vu32 BDCR;
N  vu32 CSR;
N} RCC_TypeDef;
N
N/*------------------------ Real-Time Clock -----------------------------------*/
Ntypedef struct
N{
N  vu16 CRH;
N  u16  RESERVED0;
N  vu16 CRL;
N  u16  RESERVED1;
N  vu16 PRLH;
N  u16  RESERVED2;
N  vu16 PRLL;
N  u16  RESERVED3;
N  vu16 DIVH;
N  u16  RESERVED4;
N  vu16 DIVL;
N  u16  RESERVED5;
N  vu16 CNTH;
N  u16  RESERVED6;
N  vu16 CNTL;
N  u16  RESERVED7;
N  vu16 ALRH;
N  u16  RESERVED8;
N  vu16 ALRL;
N  u16  RESERVED9;
N} RTC_TypeDef;
N
N/*------------------------ SD host Interface ---------------------------------*/
Ntypedef struct
N{
N  vu32 POWER;
N  vu32 CLKCR;
N  vu32 ARG;
N  vu32 CMD;
N  vuc32 RESPCMD;
N  vuc32 RESP1;
N  vuc32 RESP2;
N  vuc32 RESP3;
N  vuc32 RESP4;
N  vu32 DTIMER;
N  vu32 DLEN;
N  vu32 DCTRL;
N  vuc32 DCOUNT;
N  vuc32 STA;
N  vu32 ICR;
N  vu32 MASK;
N  u32  RESERVED0[2];
N  vuc32 FIFOCNT;
N  u32  RESERVED1[13];
N  vu32 FIFO;
N} SDIO_TypeDef;
N
N/*------------------------ Serial Peripheral Interface -----------------------*/
Ntypedef struct
N{
N  vu16 CR1;
N  u16  RESERVED0;
N  vu16 CR2;
N  u16  RESERVED1;
N  vu16 SR;
N  u16  RESERVED2;
N  vu16 DR;
N  u16  RESERVED3;
N  vu16 CRCPR;
N  u16  RESERVED4;
N  vu16 RXCRCR;
N  u16  RESERVED5;
N  vu16 TXCRCR;
N  u16  RESERVED6;
N  vu16 I2SCFGR;
N  u16  RESERVED7;
N  vu16 I2SPR;
N  u16  RESERVED8;  
N} SPI_TypeDef;
N
N/*------------------------ SystemTick ----------------------------------------*/
Ntypedef struct
N{
N  vu32 CTRL;
N  vu32 LOAD;
N  vu32 VAL;
N  vuc32 CALIB;
N} SysTick_TypeDef;
N
N/*------------------------ TIM -----------------------------------------------*/
Ntypedef struct
N{
N  vu16 CR1;
N  u16  RESERVED0;
N  vu16 CR2;
N  u16  RESERVED1;
N  vu16 SMCR;
N  u16  RESERVED2;
N  vu16 DIER;
N  u16  RESERVED3;
N  vu16 SR;
N  u16  RESERVED4;
N  vu16 EGR;
N  u16  RESERVED5;
N  vu16 CCMR1;
N  u16  RESERVED6;
N  vu16 CCMR2;
N  u16  RESERVED7;
N  vu16 CCER;
N  u16  RESERVED8;
N  vu16 CNT;
N  u16  RESERVED9;
N  vu16 PSC;
N  u16  RESERVED10;
N  vu16 ARR;
N  u16  RESERVED11;
N  vu16 RCR;
N  u16  RESERVED12;
N  vu16 CCR1;
N  u16  RESERVED13;
N  vu16 CCR2;
N  u16  RESERVED14;
N  vu16 CCR3;
N  u16  RESERVED15;
N  vu16 CCR4;
N  u16  RESERVED16;
N  vu16 BDTR;
N  u16  RESERVED17;
N  vu16 DCR;
N  u16  RESERVED18;
N  vu16 DMAR;
N  u16  RESERVED19;
N} TIM_TypeDef;
N
N/*----------------- Universal Synchronous Asynchronous Receiver Transmitter --*/
Ntypedef struct
N{
N  vu16 SR;
N  u16  RESERVED0;
N  vu16 DR;
N  u16  RESERVED1;
N  vu16 BRR;
N  u16  RESERVED2;
N  vu16 CR1;
N  u16  RESERVED3;
N  vu16 CR2;
N  u16  RESERVED4;
N  vu16 CR3;
N  u16  RESERVED5;
N  vu16 GTPR;
N  u16  RESERVED6;
N} USART_TypeDef;
N
N/*------------------------ Window WATCHDOG -----------------------------------*/
Ntypedef struct
N{
N  vu32 CR;
N  vu32 CFR;
N  vu32 SR;
N} WWDG_TypeDef;
N
N/******************************************************************************/
N/*                         Peripheral memory map                              */
N/******************************************************************************/
N/* Peripheral and SRAM base address in the alias region */
N#define PERIPH_BB_BASE        ((u32)0x42000000)
N#define SRAM_BB_BASE          ((u32)0x22000000)
N
N/* Peripheral and SRAM base address in the bit-band region */
N#define SRAM_BASE             ((u32)0x20000000)
N#define PERIPH_BASE           ((u32)0x40000000)
N
N/* FSMC registers base address */
N#define FSMC_R_BASE           ((u32)0xA0000000)
N
N/* Peripheral memory map */
N#define APB1PERIPH_BASE       PERIPH_BASE
N#define APB2PERIPH_BASE       (PERIPH_BASE + 0x10000)
N#define AHBPERIPH_BASE        (PERIPH_BASE + 0x20000)
N
N#define TIM2_BASE             (APB1PERIPH_BASE + 0x0000)
N#define TIM3_BASE             (APB1PERIPH_BASE + 0x0400)
N#define TIM4_BASE             (APB1PERIPH_BASE + 0x0800)
N#define TIM5_BASE             (APB1PERIPH_BASE + 0x0C00)
N#define TIM6_BASE             (APB1PERIPH_BASE + 0x1000)
N#define TIM7_BASE             (APB1PERIPH_BASE + 0x1400)
N#define RTC_BASE              (APB1PERIPH_BASE + 0x2800)
N#define WWDG_BASE             (APB1PERIPH_BASE + 0x2C00)
N#define IWDG_BASE             (APB1PERIPH_BASE + 0x3000)
N#define SPI2_BASE             (APB1PERIPH_BASE + 0x3800)
N#define SPI3_BASE             (APB1PERIPH_BASE + 0x3C00)
N#define USART2_BASE           (APB1PERIPH_BASE + 0x4400)
N#define USART3_BASE           (APB1PERIPH_BASE + 0x4800)
N#define UART4_BASE            (APB1PERIPH_BASE + 0x4C00)
N#define UART5_BASE            (APB1PERIPH_BASE + 0x5000)
N#define I2C1_BASE             (APB1PERIPH_BASE + 0x5400)
N#define I2C2_BASE             (APB1PERIPH_BASE + 0x5800)
N#define CAN_BASE              (APB1PERIPH_BASE + 0x6400)
N#define BKP_BASE              (APB1PERIPH_BASE + 0x6C00)
N#define PWR_BASE              (APB1PERIPH_BASE + 0x7000)
N#define DAC_BASE              (APB1PERIPH_BASE + 0x7400)
N
N#define AFIO_BASE             (APB2PERIPH_BASE + 0x0000)
N#define EXTI_BASE             (APB2PERIPH_BASE + 0x0400)
N#define GPIOA_BASE            (APB2PERIPH_BASE + 0x0800)
N#define GPIOB_BASE            (APB2PERIPH_BASE + 0x0C00)
N#define GPIOC_BASE            (APB2PERIPH_BASE + 0x1000)
N#define GPIOD_BASE            (APB2PERIPH_BASE + 0x1400)
N#define GPIOE_BASE            (APB2PERIPH_BASE + 0x1800)
N#define GPIOF_BASE            (APB2PERIPH_BASE + 0x1C00)
N#define GPIOG_BASE            (APB2PERIPH_BASE + 0x2000)
N#define ADC1_BASE             (APB2PERIPH_BASE + 0x2400)
N#define ADC2_BASE             (APB2PERIPH_BASE + 0x2800)
N#define TIM1_BASE             (APB2PERIPH_BASE + 0x2C00)
N#define SPI1_BASE             (APB2PERIPH_BASE + 0x3000)
N#define TIM8_BASE             (APB2PERIPH_BASE + 0x3400)
N#define USART1_BASE           (APB2PERIPH_BASE + 0x3800)
N#define ADC3_BASE             (APB2PERIPH_BASE + 0x3C00)
N
N#define SDIO_BASE             (PERIPH_BASE + 0x18000)
N
N#define DMA1_BASE             (AHBPERIPH_BASE + 0x0000)
N#define DMA1_Channel1_BASE    (AHBPERIPH_BASE + 0x0008)
N#define DMA1_Channel2_BASE    (AHBPERIPH_BASE + 0x001C)
N#define DMA1_Channel3_BASE    (AHBPERIPH_BASE + 0x0030)
N#define DMA1_Channel4_BASE    (AHBPERIPH_BASE + 0x0044)
N#define DMA1_Channel5_BASE    (AHBPERIPH_BASE + 0x0058)
N#define DMA1_Channel6_BASE    (AHBPERIPH_BASE + 0x006C)
N#define DMA1_Channel7_BASE    (AHBPERIPH_BASE + 0x0080)
N#define DMA2_BASE             (AHBPERIPH_BASE + 0x0400)
N#define DMA2_Channel1_BASE    (AHBPERIPH_BASE + 0x0408)
N#define DMA2_Channel2_BASE    (AHBPERIPH_BASE + 0x041C)
N#define DMA2_Channel3_BASE    (AHBPERIPH_BASE + 0x0430)
N#define DMA2_Channel4_BASE    (AHBPERIPH_BASE + 0x0444)
N#define DMA2_Channel5_BASE    (AHBPERIPH_BASE + 0x0458)
N#define RCC_BASE              (AHBPERIPH_BASE + 0x1000)
N#define CRC_BASE              (AHBPERIPH_BASE + 0x3000)
N
N/* Flash registers base address */
N#define FLASH_R_BASE          (AHBPERIPH_BASE + 0x2000)
N/* Flash Option Bytes base address */
N#define OB_BASE               ((u32)0x1FFFF800)
N
N/* FSMC Bankx registers base address */
N#define FSMC_Bank1_R_BASE     (FSMC_R_BASE + 0x0000)
N#define FSMC_Bank1E_R_BASE    (FSMC_R_BASE + 0x0104)
N#define FSMC_Bank2_R_BASE     (FSMC_R_BASE + 0x0060)
N#define FSMC_Bank3_R_BASE     (FSMC_R_BASE + 0x0080)
N#define FSMC_Bank4_R_BASE     (FSMC_R_BASE + 0x00A0)
N
N/* Debug MCU registers base address */
N#define DBGMCU_BASE          ((u32)0xE0042000)
N
N/* System Control Space memory map */
N#define SCS_BASE              ((u32)0xE000E000)
N
N#define SysTick_BASE          (SCS_BASE + 0x0010)
N#define NVIC_BASE             (SCS_BASE + 0x0100)
N#define SCB_BASE              (SCS_BASE + 0x0D00)
N
N/******************************************************************************/
N/*                         Peripheral declaration                             */
N/******************************************************************************/
N
N/*------------------------ Non Debug Mode ------------------------------------*/
N#ifndef DEBUG
N#ifdef _TIM2
N  #define TIM2                ((TIM_TypeDef *) TIM2_BASE)
N#endif /*_TIM2 */
N
N#ifdef _TIM3
N  #define TIM3                ((TIM_TypeDef *) TIM3_BASE)
N#endif /*_TIM3 */
N
N#ifdef _TIM4
N  #define TIM4                ((TIM_TypeDef *) TIM4_BASE)
N#endif /*_TIM4 */
N
N#ifdef _TIM5
N  #define TIM5                ((TIM_TypeDef *) TIM5_BASE)
N#endif /*_TIM5 */
N
N#ifdef _TIM6
N  #define TIM6                ((TIM_TypeDef *) TIM6_BASE)
N#endif /*_TIM6 */
N
N#ifdef _TIM7
N  #define TIM7                ((TIM_TypeDef *) TIM7_BASE)
N#endif /*_TIM7 */
N
N#ifdef _RTC
N  #define RTC                 ((RTC_TypeDef *) RTC_BASE)
N#endif /*_RTC */
N
N#ifdef _WWDG
N  #define WWDG                ((WWDG_TypeDef *) WWDG_BASE)
N#endif /*_WWDG */
N
N#ifdef _IWDG
N  #define IWDG                ((IWDG_TypeDef *) IWDG_BASE)
N#endif /*_IWDG */
N
N#ifdef _SPI2
N  #define SPI2                ((SPI_TypeDef *) SPI2_BASE)
N#endif /*_SPI2 */
N
N#ifdef _SPI3
N  #define SPI3                ((SPI_TypeDef *) SPI3_BASE)
N#endif /*_SPI3 */
N
N#ifdef _USART2
N  #define USART2              ((USART_TypeDef *) USART2_BASE)
N#endif /*_USART2 */
N
N#ifdef _USART3
N  #define USART3              ((USART_TypeDef *) USART3_BASE)
N#endif /*_USART3 */
N
N#ifdef _UART4
N  #define UART4              ((USART_TypeDef *) UART4_BASE)
N#endif /*_UART4 */
N
N#ifdef _UART5
N  #define UART5              ((USART_TypeDef *) UART5_BASE)
N#endif /*_USART5 */
N
N#ifdef _I2C1
N  #define I2C1                ((I2C_TypeDef *) I2C1_BASE)
N#endif /*_I2C1 */
N
N#ifdef _I2C2
N  #define I2C2                ((I2C_TypeDef *) I2C2_BASE)
N#endif /*_I2C2 */
N
N#ifdef _CAN
N  #define CAN                 ((CAN_TypeDef *) CAN_BASE)
N#endif /*_CAN */
N
N#ifdef _BKP
N  #define BKP                 ((BKP_TypeDef *) BKP_BASE)
N#endif /*_BKP */
N
N#ifdef _PWR
N  #define PWR                 ((PWR_TypeDef *) PWR_BASE)
N#endif /*_PWR */
N
N#ifdef _DAC
N  #define DAC                 ((DAC_TypeDef *) DAC_BASE)
N#endif /*_DAC */
N
N#ifdef _AFIO
N  #define AFIO                ((AFIO_TypeDef *) AFIO_BASE)
N#endif /*_AFIO */
N
N#ifdef _EXTI
N  #define EXTI                ((EXTI_TypeDef *) EXTI_BASE)
N#endif /*_EXTI */
N
N#ifdef _GPIOA
N  #define GPIOA               ((GPIO_TypeDef *) GPIOA_BASE)
N#endif /*_GPIOA */
N
N#ifdef _GPIOB
N  #define GPIOB               ((GPIO_TypeDef *) GPIOB_BASE)
N#endif /*_GPIOB */
N
N#ifdef _GPIOC
N  #define GPIOC               ((GPIO_TypeDef *) GPIOC_BASE)
N#endif /*_GPIOC */
N
N#ifdef _GPIOD
N  #define GPIOD               ((GPIO_TypeDef *) GPIOD_BASE)
N#endif /*_GPIOD */
N
N#ifdef _GPIOE
N  #define GPIOE               ((GPIO_TypeDef *) GPIOE_BASE)
N#endif /*_GPIOE */
N
N#ifdef _GPIOF
N  #define GPIOF               ((GPIO_TypeDef *) GPIOF_BASE)
N#endif /*_GPIOF */
N
N#ifdef _GPIOG
N  #define GPIOG               ((GPIO_TypeDef *) GPIOG_BASE)
N#endif /*_GPIOG */
N
N#ifdef _ADC1
N  #define ADC1                ((ADC_TypeDef *) ADC1_BASE)
N#endif /*_ADC1 */
N
N#ifdef _ADC2
N  #define ADC2                ((ADC_TypeDef *) ADC2_BASE)
N#endif /*_ADC2 */
N
N#ifdef _TIM1
N  #define TIM1                ((TIM_TypeDef *) TIM1_BASE)
N#endif /*_TIM1 */
N
N#ifdef _SPI1
N  #define SPI1                ((SPI_TypeDef *) SPI1_BASE)
N#endif /*_SPI1 */
N
N#ifdef _TIM8
N  #define TIM8                ((TIM_TypeDef *) TIM8_BASE)
N#endif /*_TIM8 */
N
N#ifdef _USART1
N  #define USART1              ((USART_TypeDef *) USART1_BASE)
N#endif /*_USART1 */
N
N#ifdef _ADC3
N  #define ADC3                ((ADC_TypeDef *) ADC3_BASE)
N#endif /*_ADC3 */
N
N#ifdef _SDIO
N  #define SDIO                ((SDIO_TypeDef *) SDIO_BASE)
N#endif /*_SDIO */
N
N#ifdef _DMA
N  #define DMA1                ((DMA_TypeDef *) DMA1_BASE)
N  #define DMA2                ((DMA_TypeDef *) DMA2_BASE)
N#endif /*_DMA */
N
N#ifdef _DMA1_Channel1
N  #define DMA1_Channel1       ((DMA_Channel_TypeDef *) DMA1_Channel1_BASE)
N#endif /*_DMA1_Channel1 */
N
N#ifdef _DMA1_Channel2
N  #define DMA1_Channel2       ((DMA_Channel_TypeDef *) DMA1_Channel2_BASE)
N#endif /*_DMA1_Channel2 */
N
N#ifdef _DMA1_Channel3
N  #define DMA1_Channel3       ((DMA_Channel_TypeDef *) DMA1_Channel3_BASE)
N#endif /*_DMA1_Channel3 */
N
N#ifdef _DMA1_Channel4
N  #define DMA1_Channel4       ((DMA_Channel_TypeDef *) DMA1_Channel4_BASE)
N#endif /*_DMA1_Channel4 */
N
N#ifdef _DMA1_Channel5
N  #define DMA1_Channel5       ((DMA_Channel_TypeDef *) DMA1_Channel5_BASE)
N#endif /*_DMA1_Channel5 */
N
N#ifdef _DMA1_Channel6
N  #define DMA1_Channel6       ((DMA_Channel_TypeDef *) DMA1_Channel6_BASE)
N#endif /*_DMA1_Channel6 */
N
N#ifdef _DMA1_Channel7
N  #define DMA1_Channel7       ((DMA_Channel_TypeDef *) DMA1_Channel7_BASE)
N#endif /*_DMA1_Channel7 */
N
N#ifdef _DMA2_Channel1
N  #define DMA2_Channel1       ((DMA_Channel_TypeDef *) DMA2_Channel1_BASE)
N#endif /*_DMA2_Channel1 */
N
N#ifdef _DMA2_Channel2
N  #define DMA2_Channel2       ((DMA_Channel_TypeDef *) DMA2_Channel2_BASE)
N#endif /*_DMA2_Channel2 */
N
N#ifdef _DMA2_Channel3
N  #define DMA2_Channel3       ((DMA_Channel_TypeDef *) DMA2_Channel3_BASE)
N#endif /*_DMA2_Channel3 */
N
N#ifdef _DMA2_Channel4
N  #define DMA2_Channel4       ((DMA_Channel_TypeDef *) DMA2_Channel4_BASE)
N#endif /*_DMA2_Channel4 */
N
N#ifdef _DMA2_Channel5
N  #define DMA2_Channel5       ((DMA_Channel_TypeDef *) DMA2_Channel5_BASE)
N#endif /*_DMA2_Channel5 */
N
N#ifdef _RCC
N  #define RCC                 ((RCC_TypeDef *) RCC_BASE)
N#endif /*_RCC */
N
N#ifdef _CRC
N  #define CRC                 ((CRC_TypeDef *) CRC_BASE)
N#endif /*_CRC */
N
N#ifdef _FLASH
N  #define FLASH               ((FLASH_TypeDef *) FLASH_R_BASE)
N  #define OB                  ((OB_TypeDef *) OB_BASE) 
N#endif /*_FLASH */
N
N#ifdef _FSMC
N  #define FSMC_Bank1          ((FSMC_Bank1_TypeDef *) FSMC_Bank1_R_BASE)
N  #define FSMC_Bank1E         ((FSMC_Bank1E_TypeDef *) FSMC_Bank1E_R_BASE)
N  #define FSMC_Bank2          ((FSMC_Bank2_TypeDef *) FSMC_Bank2_R_BASE)
N  #define FSMC_Bank3          ((FSMC_Bank3_TypeDef *) FSMC_Bank3_R_BASE)
N  #define FSMC_Bank4          ((FSMC_Bank4_TypeDef *) FSMC_Bank4_R_BASE)
N#endif /*_FSMC */
N
N#ifdef _DBGMCU
N  #define DBGMCU              ((DBGMCU_TypeDef *) DBGMCU_BASE)
N#endif /*_DBGMCU */
N
N#ifdef _SysTick
N  #define SysTick             ((SysTick_TypeDef *) SysTick_BASE)
N#endif /*_SysTick */
N
N#ifdef _NVIC
N  #define NVIC                ((NVIC_TypeDef *) NVIC_BASE)
N  #define SCB                 ((SCB_TypeDef *) SCB_BASE)  
N#endif /*_NVIC */
N
N/*------------------------ Debug Mode ----------------------------------------*/
N#else   /* DEBUG */
S#ifdef _TIM2
S  EXT TIM_TypeDef             *TIM2;
S#endif /*_TIM2 */
S
S#ifdef _TIM3
S  EXT TIM_TypeDef             *TIM3;
S#endif /*_TIM3 */
S
S#ifdef _TIM4
S  EXT TIM_TypeDef             *TIM4;
S#endif /*_TIM4 */
S
S#ifdef _TIM5
S  EXT TIM_TypeDef             *TIM5;
S#endif /*_TIM5 */
S
S#ifdef _TIM6
S  EXT TIM_TypeDef             *TIM6;
S#endif /*_TIM6 */
S
S#ifdef _TIM7
S  EXT TIM_TypeDef             *TIM7;
S#endif /*_TIM7 */
S
S#ifdef _RTC
S  EXT RTC_TypeDef             *RTC;
S#endif /*_RTC */
S
S#ifdef _WWDG
S  EXT WWDG_TypeDef            *WWDG;
S#endif /*_WWDG */
S
S#ifdef _IWDG
S  EXT IWDG_TypeDef            *IWDG;
S#endif /*_IWDG */
S
S#ifdef _SPI2
S  EXT SPI_TypeDef             *SPI2;
S#endif /*_SPI2 */
S
S#ifdef _SPI3
S  EXT SPI_TypeDef             *SPI3;
S#endif /*_SPI3 */
S
S#ifdef _USART2
S  EXT USART_TypeDef           *USART2;
S#endif /*_USART2 */
S
S#ifdef _USART3
S  EXT USART_TypeDef           *USART3;
S#endif /*_USART3 */
S
S#ifdef _UART4
S  EXT USART_TypeDef           *UART4;
S#endif /*_UART4 */
S
S#ifdef _UART5
S  EXT USART_TypeDef           *UART5;
S#endif /*_UART5 */
S
S#ifdef _I2C1
S  EXT I2C_TypeDef             *I2C1;
S#endif /*_I2C1 */
S
S#ifdef _I2C2
S  EXT I2C_TypeDef             *I2C2;
S#endif /*_I2C2 */
S
S#ifdef _CAN
S  EXT CAN_TypeDef             *CAN;
S#endif /*_CAN */
S
S#ifdef _BKP
S  EXT BKP_TypeDef             *BKP;
S#endif /*_BKP */
S
S#ifdef _PWR
S  EXT PWR_TypeDef             *PWR;
S#endif /*_PWR */
S
S#ifdef _DAC
S  EXT DAC_TypeDef             *DAC;
S#endif /*_DAC */
S
S#ifdef _AFIO
S  EXT AFIO_TypeDef            *AFIO;
S#endif /*_AFIO */
S
S#ifdef _EXTI
S  EXT EXTI_TypeDef            *EXTI;
S#endif /*_EXTI */
S
S#ifdef _GPIOA
S  EXT GPIO_TypeDef            *GPIOA;
S#endif /*_GPIOA */
S
S#ifdef _GPIOB
S  EXT GPIO_TypeDef            *GPIOB;
S#endif /*_GPIOB */
S
S#ifdef _GPIOC
S  EXT GPIO_TypeDef            *GPIOC;
S#endif /*_GPIOC */
S
S#ifdef _GPIOD
S  EXT GPIO_TypeDef            *GPIOD;
S#endif /*_GPIOD */
S
S#ifdef _GPIOE
S  EXT GPIO_TypeDef            *GPIOE;
S#endif /*_GPIOE */
S
S#ifdef _GPIOF
S  EXT GPIO_TypeDef            *GPIOF;
S#endif /*_GPIOF */
S
S#ifdef _GPIOG
S  EXT GPIO_TypeDef            *GPIOG;
S#endif /*_GPIOG */
S
S#ifdef _ADC1
S  EXT ADC_TypeDef             *ADC1;
S#endif /*_ADC1 */
S
S#ifdef _ADC2
S  EXT ADC_TypeDef             *ADC2;
S#endif /*_ADC2 */
S
S#ifdef _TIM1
S  EXT TIM_TypeDef             *TIM1;
S#endif /*_TIM1 */
S
S#ifdef _SPI1
S  EXT SPI_TypeDef             *SPI1;
S#endif /*_SPI1 */
S
S#ifdef _TIM8
S  EXT TIM_TypeDef             *TIM8;
S#endif /*_TIM8 */
S
S#ifdef _USART1
S  EXT USART_TypeDef           *USART1;
S#endif /*_USART1 */
S
S#ifdef _ADC3
S  EXT ADC_TypeDef             *ADC3;
S#endif /*_ADC3 */
S
S#ifdef _SDIO
S  EXT SDIO_TypeDef            *SDIO;
S#endif /*_SDIO */
S
S#ifdef _DMA
S  EXT DMA_TypeDef             *DMA1;
S  EXT DMA_TypeDef             *DMA2;
S#endif /*_DMA */
S
S#ifdef _DMA1_Channel1
S  EXT DMA_Channel_TypeDef     *DMA1_Channel1;
S#endif /*_DMA1_Channel1 */
S
S#ifdef _DMA1_Channel2
S  EXT DMA_Channel_TypeDef     *DMA1_Channel2;
S#endif /*_DMA1_Channel2 */
S
S#ifdef _DMA1_Channel3
S  EXT DMA_Channel_TypeDef     *DMA1_Channel3;
S#endif /*_DMA1_Channel3 */
S
S#ifdef _DMA1_Channel4
S  EXT DMA_Channel_TypeDef     *DMA1_Channel4;
S#endif /*_DMA1_Channel4 */
S
S#ifdef _DMA1_Channel5
S  EXT DMA_Channel_TypeDef     *DMA1_Channel5;
S#endif /*_DMA1_Channel5 */
S
S#ifdef _DMA1_Channel6
S  EXT DMA_Channel_TypeDef     *DMA1_Channel6;
S#endif /*_DMA1_Channel6 */
S
S#ifdef _DMA1_Channel7
S  EXT DMA_Channel_TypeDef     *DMA1_Channel7;
S#endif /*_DMA1_Channel7 */
S
S#ifdef _DMA2_Channel1
S  EXT DMA_Channel_TypeDef     *DMA2_Channel1;
S#endif /*_DMA2_Channel1 */
S
S#ifdef _DMA2_Channel2
S  EXT DMA_Channel_TypeDef     *DMA2_Channel2;
S#endif /*_DMA2_Channel2 */
S
S#ifdef _DMA2_Channel3
S  EXT DMA_Channel_TypeDef     *DMA2_Channel3;
S#endif /*_DMA2_Channel3 */
S
S#ifdef _DMA2_Channel4
S  EXT DMA_Channel_TypeDef     *DMA2_Channel4;
S#endif /*_DMA2_Channel4 */
S
S#ifdef _DMA2_Channel5
S  EXT DMA_Channel_TypeDef     *DMA2_Channel5;
S#endif /*_DMA2_Channel5 */
S
S#ifdef _RCC
S  EXT RCC_TypeDef             *RCC;
S#endif /*_RCC */
S
S#ifdef _CRC
S  EXT CRC_TypeDef             *CRC;
S#endif /*_CRC */
S
S#ifdef _FLASH
S  EXT FLASH_TypeDef            *FLASH;
S  EXT OB_TypeDef               *OB;  
S#endif /*_FLASH */
S
S#ifdef _FSMC
S  EXT FSMC_Bank1_TypeDef      *FSMC_Bank1;
S  EXT FSMC_Bank1E_TypeDef     *FSMC_Bank1E;
S  EXT FSMC_Bank2_TypeDef      *FSMC_Bank2;
S  EXT FSMC_Bank3_TypeDef      *FSMC_Bank3;
S  EXT FSMC_Bank4_TypeDef      *FSMC_Bank4;
S#endif /*_FSMC */
S
S#ifdef _DBGMCU
S  EXT DBGMCU_TypeDef          *DBGMCU;
S#endif /*_DBGMCU */
S
S#ifdef _SysTick
S  EXT SysTick_TypeDef         *SysTick;
S#endif /*_SysTick */
S
S#ifdef _NVIC
S  EXT NVIC_TypeDef            *NVIC;
S  EXT SCB_TypeDef             *SCB;
S#endif /*_NVIC */
S
N#endif  /* DEBUG */
N
N/* Exported constants --------------------------------------------------------*/
N/* Exported macro ------------------------------------------------------------*/
N/* Exported functions ------------------------------------------------------- */
N
N#endif /* __STM32F10x_MAP_H */
N
N/******************* (C) COPYRIGHT 2008 STMicroelectronics *****END OF FILE****/
L 13 ".\core\jpstm32_common.h" 2
N#include <stm32f10x_type.h>
N#include <stm32f10x_nvic.h>
L 1 ".\core\stm32f10x_nvic.h" 1
N/******************** (C) COPYRIGHT 2008 STMicroelectronics ********************
N* File Name          : stm32f10x_nvic.h
N* Author             : MCD Application Team
N* Version            : V2.0.1
N* Date               : 06/13/2008
N* Description        : This file contains all the functions prototypes for the
N*                      NVIC firmware library.
N********************************************************************************
N* THE PRESENT FIRMWARE WHICH IS FOR GUIDANCE ONLY AIMS AT PROVIDING CUSTOMERS
N* WITH CODING INFORMATION REGARDING THEIR PRODUCTS IN ORDER FOR THEM TO SAVE TIME.
N* AS A RESULT, STMICROELECTRONICS SHALL NOT BE HELD LIABLE FOR ANY DIRECT,
N* INDIRECT OR CONSEQUENTIAL DAMAGES WITH RESPECT TO ANY CLAIMS ARISING FROM THE
N* CONTENT OF SUCH FIRMWARE AND/OR THE USE MADE BY CUSTOMERS OF THE CODING
N* INFORMATION CONTAINED HEREIN IN CONNECTION WITH THEIR PRODUCTS.
N*******************************************************************************/
N
N/* Define to prevent recursive inclusion -------------------------------------*/
N#ifndef __STM32F10x_NVIC_H
N#define __STM32F10x_NVIC_H
N
N/* Includes ------------------------------------------------------------------*/
N#include "stm32f10x_map.h"
N
N/* Exported types ------------------------------------------------------------*/
N/* NVIC Init Structure definition */
Ntypedef struct
N{
N  u8 NVIC_IRQChannel;
N  u8 NVIC_IRQChannelPreemptionPriority;
N  u8 NVIC_IRQChannelSubPriority;
N  FunctionalState NVIC_IRQChannelCmd;
N} NVIC_InitTypeDef;
N
N/* Exported constants --------------------------------------------------------*/
N/* IRQ Channels --------------------------------------------------------------*/
N#define WWDG_IRQChannel              ((u8)0x00)  /* Window WatchDog Interrupt */
N#define PVD_IRQChannel               ((u8)0x01)  /* PVD through EXTI Line detection Interrupt */
N#define TAMPER_IRQChannel            ((u8)0x02)  /* Tamper Interrupt */
N#define RTC_IRQChannel               ((u8)0x03)  /* RTC global Interrupt */
N#define FLASH_IRQChannel             ((u8)0x04)  /* FLASH global Interrupt */
N#define RCC_IRQChannel               ((u8)0x05)  /* RCC global Interrupt */
N#define EXTI0_IRQChannel             ((u8)0x06)  /* EXTI Line0 Interrupt */
N#define EXTI1_IRQChannel             ((u8)0x07)  /* EXTI Line1 Interrupt */
N#define EXTI2_IRQChannel             ((u8)0x08)  /* EXTI Line2 Interrupt */
N#define EXTI3_IRQChannel             ((u8)0x09)  /* EXTI Line3 Interrupt */
N#define EXTI4_IRQChannel             ((u8)0x0A)  /* EXTI Line4 Interrupt */
N#define DMA1_Channel1_IRQChannel     ((u8)0x0B)  /* DMA1 Channel 1 global Interrupt */
N#define DMA1_Channel2_IRQChannel     ((u8)0x0C)  /* DMA1 Channel 2 global Interrupt */
N#define DMA1_Channel3_IRQChannel     ((u8)0x0D)  /* DMA1 Channel 3 global Interrupt */
N#define DMA1_Channel4_IRQChannel     ((u8)0x0E)  /* DMA1 Channel 4 global Interrupt */
N#define DMA1_Channel5_IRQChannel     ((u8)0x0F)  /* DMA1 Channel 5 global Interrupt */
N#define DMA1_Channel6_IRQChannel     ((u8)0x10)  /* DMA1 Channel 6 global Interrupt */
N#define DMA1_Channel7_IRQChannel     ((u8)0x11)  /* DMA1 Channel 7 global Interrupt */
N#define ADC1_2_IRQChannel            ((u8)0x12)  /* ADC1 et ADC2 global Interrupt */
N#define USB_HP_CAN_TX_IRQChannel     ((u8)0x13)  /* USB High Priority or CAN TX Interrupts */
N#define USB_LP_CAN_RX0_IRQChannel    ((u8)0x14)  /* USB Low Priority or CAN RX0 Interrupts */
N#define CAN_RX1_IRQChannel           ((u8)0x15)  /* CAN RX1 Interrupt */
N#define CAN_SCE_IRQChannel           ((u8)0x16)  /* CAN SCE Interrupt */
N#define EXTI9_5_IRQChannel           ((u8)0x17)  /* External Line[9:5] Interrupts */
N#define TIM1_BRK_IRQChannel          ((u8)0x18)  /* TIM1 Break Interrupt */
N#define TIM1_UP_IRQChannel           ((u8)0x19)  /* TIM1 Update Interrupt */
N#define TIM1_TRG_COM_IRQChannel      ((u8)0x1A)  /* TIM1 Trigger and Commutation Interrupt */
N#define TIM1_CC_IRQChannel           ((u8)0x1B)  /* TIM1 Capture Compare Interrupt */
N#define TIM2_IRQChannel              ((u8)0x1C)  /* TIM2 global Interrupt */
N#define TIM3_IRQChannel              ((u8)0x1D)  /* TIM3 global Interrupt */
N#define TIM4_IRQChannel              ((u8)0x1E)  /* TIM4 global Interrupt */
N#define I2C1_EV_IRQChannel           ((u8)0x1F)  /* I2C1 Event Interrupt */
N#define I2C1_ER_IRQChannel           ((u8)0x20)  /* I2C1 Error Interrupt */
N#define I2C2_EV_IRQChannel           ((u8)0x21)  /* I2C2 Event Interrupt */
N#define I2C2_ER_IRQChannel           ((u8)0x22)  /* I2C2 Error Interrupt */
N#define SPI1_IRQChannel              ((u8)0x23)  /* SPI1 global Interrupt */
N#define SPI2_IRQChannel              ((u8)0x24)  /* SPI2 global Interrupt */
N#define USART1_IRQChannel            ((u8)0x25)  /* USART1 global Interrupt */
N#define USART2_IRQChannel            ((u8)0x26)  /* USART2 global Interrupt */
N#define USART3_IRQChannel            ((u8)0x27)  /* USART3 global Interrupt */
N#define EXTI15_10_IRQChannel         ((u8)0x28)  /* External Line[15:10] Interrupts */
N#define RTCAlarm_IRQChannel          ((u8)0x29)  /* RTC Alarm through EXTI Line Interrupt */
N#define USBWakeUp_IRQChannel         ((u8)0x2A)  /* USB WakeUp from suspend through EXTI Line Interrupt */
N#define TIM8_BRK_IRQChannel          ((u8)0x2B)  /* TIM8 Break Interrupt */
N#define TIM8_UP_IRQChannel           ((u8)0x2C)  /* TIM8 Update Interrupt */
N#define TIM8_TRG_COM_IRQChannel      ((u8)0x2D)  /* TIM8 Trigger and Commutation Interrupt */
N#define TIM8_CC_IRQChannel           ((u8)0x2E)  /* TIM8 Capture Compare Interrupt */
N#define ADC3_IRQChannel              ((u8)0x2F)  /* ADC3 global Interrupt */
N#define FSMC_IRQChannel              ((u8)0x30)  /* FSMC global Interrupt */
N#define SDIO_IRQChannel              ((u8)0x31)  /* SDIO global Interrupt */
N#define TIM5_IRQChannel              ((u8)0x32)  /* TIM5 global Interrupt */
N#define SPI3_IRQChannel              ((u8)0x33)  /* SPI3 global Interrupt */
N#define UART4_IRQChannel             ((u8)0x34)  /* UART4 global Interrupt */
N#define UART5_IRQChannel             ((u8)0x35)  /* UART5 global Interrupt */
N#define TIM6_IRQChannel              ((u8)0x36)  /* TIM6 global Interrupt */
N#define TIM7_IRQChannel              ((u8)0x37)  /* TIM7 global Interrupt */
N#define DMA2_Channel1_IRQChannel     ((u8)0x38)  /* DMA2 Channel 1 global Interrupt */
N#define DMA2_Channel2_IRQChannel     ((u8)0x39)  /* DMA2 Channel 2 global Interrupt */
N#define DMA2_Channel3_IRQChannel     ((u8)0x3A)  /* DMA2 Channel 3 global Interrupt */
N#define DMA2_Channel4_5_IRQChannel   ((u8)0x3B)  /* DMA2 Channel 4 and DMA2 Channel 5 global Interrupt */
N
N
N#define IS_NVIC_IRQ_CHANNEL(CHANNEL) (((CHANNEL) == WWDG_IRQChannel) || \
N                                      ((CHANNEL) == PVD_IRQChannel) || \
N                                      ((CHANNEL) == TAMPER_IRQChannel) || \
N                                      ((CHANNEL) == RTC_IRQChannel) || \
N                                      ((CHANNEL) == FLASH_IRQChannel) || \
N                                      ((CHANNEL) == RCC_IRQChannel) || \
N                                      ((CHANNEL) == EXTI0_IRQChannel) || \
N                                      ((CHANNEL) == EXTI1_IRQChannel) || \
N                                      ((CHANNEL) == EXTI2_IRQChannel) || \
N                                      ((CHANNEL) == EXTI3_IRQChannel) || \
N                                      ((CHANNEL) == EXTI4_IRQChannel) || \
N                                      ((CHANNEL) == DMA1_Channel1_IRQChannel) || \
N                                      ((CHANNEL) == DMA1_Channel2_IRQChannel) || \
N                                      ((CHANNEL) == DMA1_Channel3_IRQChannel) || \
N                                      ((CHANNEL) == DMA1_Channel4_IRQChannel) || \
N                                      ((CHANNEL) == DMA1_Channel5_IRQChannel) || \
N                                      ((CHANNEL) == DMA1_Channel6_IRQChannel) || \
N                                      ((CHANNEL) == DMA1_Channel7_IRQChannel) || \
N                                      ((CHANNEL) == ADC1_2_IRQChannel) || \
N                                      ((CHANNEL) == USB_HP_CAN_TX_IRQChannel) || \
N                                      ((CHANNEL) == USB_LP_CAN_RX0_IRQChannel) || \
N                                      ((CHANNEL) == CAN_RX1_IRQChannel) || \
N                                      ((CHANNEL) == CAN_SCE_IRQChannel) || \
N                                      ((CHANNEL) == EXTI9_5_IRQChannel) || \
N                                      ((CHANNEL) == TIM1_BRK_IRQChannel) || \
N                                      ((CHANNEL) == TIM1_UP_IRQChannel) || \
N                                      ((CHANNEL) == TIM1_TRG_COM_IRQChannel) || \
N                                      ((CHANNEL) == TIM1_CC_IRQChannel) || \
N                                      ((CHANNEL) == TIM2_IRQChannel) || \
N                                      ((CHANNEL) == TIM3_IRQChannel) || \
N                                      ((CHANNEL) == TIM4_IRQChannel) || \
N                                      ((CHANNEL) == I2C1_EV_IRQChannel) || \
N                                      ((CHANNEL) == I2C1_ER_IRQChannel) || \
N                                      ((CHANNEL) == I2C2_EV_IRQChannel) || \
N                                      ((CHANNEL) == I2C2_ER_IRQChannel) || \
N                                      ((CHANNEL) == SPI1_IRQChannel) || \
N                                      ((CHANNEL) == SPI2_IRQChannel) || \
N                                      ((CHANNEL) == USART1_IRQChannel) || \
N                                      ((CHANNEL) == USART2_IRQChannel) || \
N                                      ((CHANNEL) == USART3_IRQChannel) || \
N                                      ((CHANNEL) == EXTI15_10_IRQChannel) || \
N                                      ((CHANNEL) == RTCAlarm_IRQChannel) || \
N                                      ((CHANNEL) == USBWakeUp_IRQChannel) || \
N                                      ((CHANNEL) == TIM8_BRK_IRQChannel) || \
N                                      ((CHANNEL) == TIM8_UP_IRQChannel) || \
N                                      ((CHANNEL) == TIM8_TRG_COM_IRQChannel) || \
N                                      ((CHANNEL) == TIM8_CC_IRQChannel) || \
N                                      ((CHANNEL) == ADC3_IRQChannel) || \
N                                      ((CHANNEL) == FSMC_IRQChannel) || \
N                                      ((CHANNEL) == SDIO_IRQChannel) || \
N                                      ((CHANNEL) == TIM5_IRQChannel) || \
N                                      ((CHANNEL) == SPI3_IRQChannel) || \
N                                      ((CHANNEL) == UART4_IRQChannel) || \
N                                      ((CHANNEL) == UART5_IRQChannel) || \
N                                      ((CHANNEL) == TIM6_IRQChannel) || \
N                                      ((CHANNEL) == TIM7_IRQChannel) || \
N                                      ((CHANNEL) == DMA2_Channel1_IRQChannel) || \
N                                      ((CHANNEL) == DMA2_Channel2_IRQChannel) || \
N                                      ((CHANNEL) == DMA2_Channel3_IRQChannel) || \
N                                      ((CHANNEL) == DMA2_Channel4_5_IRQChannel))
X#define IS_NVIC_IRQ_CHANNEL(CHANNEL) (((CHANNEL) == WWDG_IRQChannel) ||                                       ((CHANNEL) == PVD_IRQChannel) ||                                       ((CHANNEL) == TAMPER_IRQChannel) ||                                       ((CHANNEL) == RTC_IRQChannel) ||                                       ((CHANNEL) == FLASH_IRQChannel) ||                                       ((CHANNEL) == RCC_IRQChannel) ||                                       ((CHANNEL) == EXTI0_IRQChannel) ||                                       ((CHANNEL) == EXTI1_IRQChannel) ||                                       ((CHANNEL) == EXTI2_IRQChannel) ||                                       ((CHANNEL) == EXTI3_IRQChannel) ||                                       ((CHANNEL) == EXTI4_IRQChannel) ||                                       ((CHANNEL) == DMA1_Channel1_IRQChannel) ||                                       ((CHANNEL) == DMA1_Channel2_IRQChannel) ||                                       ((CHANNEL) == DMA1_Channel3_IRQChannel) ||                                       ((CHANNEL) == DMA1_Channel4_IRQChannel) ||                                       ((CHANNEL) == DMA1_Channel5_IRQChannel) ||                                       ((CHANNEL) == DMA1_Channel6_IRQChannel) ||                                       ((CHANNEL) == DMA1_Channel7_IRQChannel) ||                                       ((CHANNEL) == ADC1_2_IRQChannel) ||                                       ((CHANNEL) == USB_HP_CAN_TX_IRQChannel) ||                                       ((CHANNEL) == USB_LP_CAN_RX0_IRQChannel) ||                                       ((CHANNEL) == CAN_RX1_IRQChannel) ||                                       ((CHANNEL) == CAN_SCE_IRQChannel) ||                                       ((CHANNEL) == EXTI9_5_IRQChannel) ||                                       ((CHANNEL) == TIM1_BRK_IRQChannel) ||                                       ((CHANNEL) == TIM1_UP_IRQChannel) ||                                       ((CHANNEL) == TIM1_TRG_COM_IRQChannel) ||                                       ((CHANNEL) == TIM1_CC_IRQChannel) ||                                       ((CHANNEL) == TIM2_IRQChannel) ||                                       ((CHANNEL) == TIM3_IRQChannel) ||                                       ((CHANNEL) == TIM4_IRQChannel) ||                                       ((CHANNEL) == I2C1_EV_IRQChannel) ||                                       ((CHANNEL) == I2C1_ER_IRQChannel) ||                                       ((CHANNEL) == I2C2_EV_IRQChannel) ||                                       ((CHANNEL) == I2C2_ER_IRQChannel) ||                                       ((CHANNEL) == SPI1_IRQChannel) ||                                       ((CHANNEL) == SPI2_IRQChannel) ||                                       ((CHANNEL) == USART1_IRQChannel) ||                                       ((CHANNEL) == USART2_IRQChannel) ||                                       ((CHANNEL) == USART3_IRQChannel) ||                                       ((CHANNEL) == EXTI15_10_IRQChannel) ||                                       ((CHANNEL) == RTCAlarm_IRQChannel) ||                                       ((CHANNEL) == USBWakeUp_IRQChannel) ||                                       ((CHANNEL) == TIM8_BRK_IRQChannel) ||                                       ((CHANNEL) == TIM8_UP_IRQChannel) ||                                       ((CHANNEL) == TIM8_TRG_COM_IRQChannel) ||                                       ((CHANNEL) == TIM8_CC_IRQChannel) ||                                       ((CHANNEL) == ADC3_IRQChannel) ||                                       ((CHANNEL) == FSMC_IRQChannel) ||                                       ((CHANNEL) == SDIO_IRQChannel) ||                                       ((CHANNEL) == TIM5_IRQChannel) ||                                       ((CHANNEL) == SPI3_IRQChannel) ||                                       ((CHANNEL) == UART4_IRQChannel) ||                                       ((CHANNEL) == UART5_IRQChannel) ||                                       ((CHANNEL) == TIM6_IRQChannel) ||                                       ((CHANNEL) == TIM7_IRQChannel) ||                                       ((CHANNEL) == DMA2_Channel1_IRQChannel) ||                                       ((CHANNEL) == DMA2_Channel2_IRQChannel) ||                                       ((CHANNEL) == DMA2_Channel3_IRQChannel) ||                                       ((CHANNEL) == DMA2_Channel4_5_IRQChannel))
N
N
N/* System Handlers -----------------------------------------------------------*/
N#define SystemHandler_NMI            ((u32)0x00001F) /* NMI Handler */
N#define SystemHandler_HardFault      ((u32)0x000000) /* Hard Fault Handler */
N#define SystemHandler_MemoryManage   ((u32)0x043430) /* Memory Manage Handler */
N#define SystemHandler_BusFault       ((u32)0x547931) /* Bus Fault Handler */
N#define SystemHandler_UsageFault     ((u32)0x24C232) /* Usage Fault Handler */
N#define SystemHandler_SVCall         ((u32)0x01FF40) /* SVCall Handler */
N#define SystemHandler_DebugMonitor   ((u32)0x0A0080) /* Debug Monitor Handler */
N#define SystemHandler_PSV            ((u32)0x02829C) /* PSV Handler */
N#define SystemHandler_SysTick        ((u32)0x02C39A) /* SysTick Handler */
N
N#define IS_CONFIG_SYSTEM_HANDLER(HANDLER) (((HANDLER) == SystemHandler_MemoryManage) || \
N                                           ((HANDLER) == SystemHandler_BusFault) || \
N                                           ((HANDLER) == SystemHandler_UsageFault))
X#define IS_CONFIG_SYSTEM_HANDLER(HANDLER) (((HANDLER) == SystemHandler_MemoryManage) ||                                            ((HANDLER) == SystemHandler_BusFault) ||                                            ((HANDLER) == SystemHandler_UsageFault))
N
N#define IS_PRIORITY_SYSTEM_HANDLER(HANDLER) (((HANDLER) == SystemHandler_MemoryManage) || \
N                                             ((HANDLER) == SystemHandler_BusFault) || \
N                                             ((HANDLER) == SystemHandler_UsageFault) || \
N                                             ((HANDLER) == SystemHandler_SVCall) || \
N                                             ((HANDLER) == SystemHandler_DebugMonitor) || \
N                                             ((HANDLER) == SystemHandler_PSV) || \
N                                             ((HANDLER) == SystemHandler_SysTick))
X#define IS_PRIORITY_SYSTEM_HANDLER(HANDLER) (((HANDLER) == SystemHandler_MemoryManage) ||                                              ((HANDLER) == SystemHandler_BusFault) ||                                              ((HANDLER) == SystemHandler_UsageFault) ||                                              ((HANDLER) == SystemHandler_SVCall) ||                                              ((HANDLER) == SystemHandler_DebugMonitor) ||                                              ((HANDLER) == SystemHandler_PSV) ||                                              ((HANDLER) == SystemHandler_SysTick))
N
N#define IS_GET_PENDING_SYSTEM_HANDLER(HANDLER) (((HANDLER) == SystemHandler_MemoryManage) || \
N                                                ((HANDLER) == SystemHandler_BusFault) || \
N                                                ((HANDLER) == SystemHandler_SVCall))
X#define IS_GET_PENDING_SYSTEM_HANDLER(HANDLER) (((HANDLER) == SystemHandler_MemoryManage) ||                                                 ((HANDLER) == SystemHandler_BusFault) ||                                                 ((HANDLER) == SystemHandler_SVCall))
N
N#define IS_SET_PENDING_SYSTEM_HANDLER(HANDLER) (((HANDLER) == SystemHandler_NMI) || \
N                                                ((HANDLER) == SystemHandler_PSV) || \
N                                                ((HANDLER) == SystemHandler_SysTick))
X#define IS_SET_PENDING_SYSTEM_HANDLER(HANDLER) (((HANDLER) == SystemHandler_NMI) ||                                                 ((HANDLER) == SystemHandler_PSV) ||                                                 ((HANDLER) == SystemHandler_SysTick))
N
N#define IS_CLEAR_SYSTEM_HANDLER(HANDLER) (((HANDLER) == SystemHandler_PSV) || \
N                                          ((HANDLER) == SystemHandler_SysTick))
X#define IS_CLEAR_SYSTEM_HANDLER(HANDLER) (((HANDLER) == SystemHandler_PSV) ||                                           ((HANDLER) == SystemHandler_SysTick))
N
N#define IS_GET_ACTIVE_SYSTEM_HANDLER(HANDLER) (((HANDLER) == SystemHandler_MemoryManage) || \
N                                               ((HANDLER) == SystemHandler_BusFault) || \
N                                               ((HANDLER) == SystemHandler_UsageFault) || \
N                                               ((HANDLER) == SystemHandler_SVCall) || \
N                                               ((HANDLER) == SystemHandler_DebugMonitor) || \
N                                               ((HANDLER) == SystemHandler_PSV) || \
N                                               ((HANDLER) == SystemHandler_SysTick))
X#define IS_GET_ACTIVE_SYSTEM_HANDLER(HANDLER) (((HANDLER) == SystemHandler_MemoryManage) ||                                                ((HANDLER) == SystemHandler_BusFault) ||                                                ((HANDLER) == SystemHandler_UsageFault) ||                                                ((HANDLER) == SystemHandler_SVCall) ||                                                ((HANDLER) == SystemHandler_DebugMonitor) ||                                                ((HANDLER) == SystemHandler_PSV) ||                                                ((HANDLER) == SystemHandler_SysTick))
N
N#define IS_FAULT_SOURCE_SYSTEM_HANDLER(HANDLER) (((HANDLER) == SystemHandler_HardFault) || \
N                                                 ((HANDLER) == SystemHandler_MemoryManage) || \
N                                                 ((HANDLER) == SystemHandler_BusFault) || \
N                                                 ((HANDLER) == SystemHandler_UsageFault) || \
N                                                 ((HANDLER) == SystemHandler_DebugMonitor)) 
X#define IS_FAULT_SOURCE_SYSTEM_HANDLER(HANDLER) (((HANDLER) == SystemHandler_HardFault) ||                                                  ((HANDLER) == SystemHandler_MemoryManage) ||                                                  ((HANDLER) == SystemHandler_BusFault) ||                                                  ((HANDLER) == SystemHandler_UsageFault) ||                                                  ((HANDLER) == SystemHandler_DebugMonitor)) 
N
N#define IS_FAULT_ADDRESS_SYSTEM_HANDLER(HANDLER) (((HANDLER) == SystemHandler_MemoryManage) || \
N                                                  ((HANDLER) == SystemHandler_BusFault))
X#define IS_FAULT_ADDRESS_SYSTEM_HANDLER(HANDLER) (((HANDLER) == SystemHandler_MemoryManage) ||                                                   ((HANDLER) == SystemHandler_BusFault))
N
N
N/* Vector Table Base ---------------------------------------------------------*/
N#define NVIC_VectTab_RAM             ((u32)0x20000000)
N#define NVIC_VectTab_FLASH           ((u32)0x08000000)
N
N#define IS_NVIC_VECTTAB(VECTTAB) (((VECTTAB) == NVIC_VectTab_RAM) || \
N                                  ((VECTTAB) == NVIC_VectTab_FLASH))
X#define IS_NVIC_VECTTAB(VECTTAB) (((VECTTAB) == NVIC_VectTab_RAM) ||                                   ((VECTTAB) == NVIC_VectTab_FLASH))
N
N/* System Low Power ----------------------------------------------------------*/
N#define NVIC_LP_SEVONPEND            ((u8)0x10)
N#define NVIC_LP_SLEEPDEEP            ((u8)0x04)
N#define NVIC_LP_SLEEPONEXIT          ((u8)0x02)
N
N#define IS_NVIC_LP(LP) (((LP) == NVIC_LP_SEVONPEND) || \
N                        ((LP) == NVIC_LP_SLEEPDEEP) || \
N                        ((LP) == NVIC_LP_SLEEPONEXIT))
X#define IS_NVIC_LP(LP) (((LP) == NVIC_LP_SEVONPEND) ||                         ((LP) == NVIC_LP_SLEEPDEEP) ||                         ((LP) == NVIC_LP_SLEEPONEXIT))
N
N/* Preemption Priority Group -------------------------------------------------*/
N#define NVIC_PriorityGroup_0         ((u32)0x700) /* 0 bits for pre-emption priority
N                                                     4 bits for subpriority */
N#define NVIC_PriorityGroup_1         ((u32)0x600) /* 1 bits for pre-emption priority
N                                                     3 bits for subpriority */
N#define NVIC_PriorityGroup_2         ((u32)0x500) /* 2 bits for pre-emption priority
N                                                     2 bits for subpriority */
N#define NVIC_PriorityGroup_3         ((u32)0x400) /* 3 bits for pre-emption priority
N                                                     1 bits for subpriority */
N#define NVIC_PriorityGroup_4         ((u32)0x300) /* 4 bits for pre-emption priority
N                                                     0 bits for subpriority */
N
N#define IS_NVIC_PRIORITY_GROUP(GROUP) (((GROUP) == NVIC_PriorityGroup_0) || \
N                                       ((GROUP) == NVIC_PriorityGroup_1) || \
N                                       ((GROUP) == NVIC_PriorityGroup_2) || \
N                                       ((GROUP) == NVIC_PriorityGroup_3) || \
N                                       ((GROUP) == NVIC_PriorityGroup_4))
X#define IS_NVIC_PRIORITY_GROUP(GROUP) (((GROUP) == NVIC_PriorityGroup_0) ||                                        ((GROUP) == NVIC_PriorityGroup_1) ||                                        ((GROUP) == NVIC_PriorityGroup_2) ||                                        ((GROUP) == NVIC_PriorityGroup_3) ||                                        ((GROUP) == NVIC_PriorityGroup_4))
N
N#define IS_NVIC_PREEMPTION_PRIORITY(PRIORITY)  ((PRIORITY) < 0x10)
N#define IS_NVIC_SUB_PRIORITY(PRIORITY)  ((PRIORITY) < 0x10)
N#define IS_NVIC_OFFSET(OFFSET)  ((OFFSET) < 0x0007FFFF)
N#define IS_NVIC_BASE_PRI(PRI)   ((PRI) < 0x10)
N
N/* Exported macro ------------------------------------------------------------*/
N/* Exported functions ------------------------------------------------------- */
Nvoid NVIC_DeInit(void);
Nvoid NVIC_SCBDeInit(void);
Nvoid NVIC_PriorityGroupConfig(u32 NVIC_PriorityGroup);
Nvoid NVIC_Init(NVIC_InitTypeDef* NVIC_InitStruct);
Nvoid NVIC_StructInit(NVIC_InitTypeDef* NVIC_InitStruct);
Nvoid NVIC_SETPRIMASK(void);
Nvoid NVIC_RESETPRIMASK(void);
Nvoid NVIC_SETFAULTMASK(void);
Nvoid NVIC_RESETFAULTMASK(void);
Nvoid NVIC_BASEPRICONFIG(u32 NewPriority);
Nu32 NVIC_GetBASEPRI(void);
Nu16 NVIC_GetCurrentPendingIRQChannel(void);
NITStatus NVIC_GetIRQChannelPendingBitStatus(u8 NVIC_IRQChannel);
Nvoid NVIC_SetIRQChannelPendingBit(u8 NVIC_IRQChannel);
Nvoid NVIC_ClearIRQChannelPendingBit(u8 NVIC_IRQChannel);
Nu16 NVIC_GetCurrentActiveHandler(void);
NITStatus NVIC_GetIRQChannelActiveBitStatus(u8 NVIC_IRQChannel);
Nu32 NVIC_GetCPUID(void);
Nvoid NVIC_SetVectorTable(u32 NVIC_VectTab, u32 Offset);
Nvoid NVIC_GenerateSystemReset(void);
Nvoid NVIC_GenerateCoreReset(void);
Nvoid NVIC_SystemLPConfig(u8 LowPowerMode, FunctionalState NewState);
Nvoid NVIC_SystemHandlerConfig(u32 SystemHandler, FunctionalState NewState);
Nvoid NVIC_SystemHandlerPriorityConfig(u32 SystemHandler, u8 SystemHandlerPreemptionPriority,
N                                      u8 SystemHandlerSubPriority);
NITStatus NVIC_GetSystemHandlerPendingBitStatus(u32 SystemHandler);
Nvoid NVIC_SetSystemHandlerPendingBit(u32 SystemHandler);
Nvoid NVIC_ClearSystemHandlerPendingBit(u32 SystemHandler);
NITStatus NVIC_GetSystemHandlerActiveBitStatus(u32 SystemHandler);
Nu32 NVIC_GetFaultHandlerSources(u32 SystemHandler);
Nu32 NVIC_GetFaultAddress(u32 SystemHandler);
N
N#endif /* __STM32F10x_NVIC_H */
N
N/******************* (C) COPYRIGHT 2008 STMicroelectronics *****END OF FILE****/
L 15 ".\core\jpstm32_common.h" 2
N
N /* * * * * * * * * * * * * * * * * * * * * * * * * * * 
N  * 位带操作，将RAM区地址转换成位带别名区地址
N	* >reg 要转换的位所在的寄存器
N	* >bitn 要转换的位
N  * * * * * * * * * * * * * * * * * * * * * * * * * * */
N#define _BD(reg, bitn)\
N	*((vu32*)(((vu32)(&reg)&0xF0000000)+0x2000000\
N	+(((vu32)(&reg)&0xFFFFF)<<5) + (bitn<<2)))
X#define _BD(reg, bitn)	*((vu32*)(((vu32)(&reg)&0xF0000000)+0x2000000	+(((vu32)(&reg)&0xFFFFF)<<5) + (bitn<<2)))
N
N//中断触发方式
Ntypedef enum{
N    RISING = 0,FALLING,BOTH_EDGE
N}EXTI_TRIGGER_MODE;
N
N//触发中断或时事件
Ntypedef enum{
N    IRQ = 0,EVENT,BOTH_INT_EVENT
N}INT_EVENT_MODE;
N
N//???
Ntypedef enum{
N    PORTA = 0,PORTB,PORTC,PORTD,PORTE,PORTF,PORTG
N}PORT;
N
N#endif
L 14 ".\core\jpstm32_gpio.h" 2
N
N//引脚状态值
Ntypedef enum{
N	VAL_0=0, 	/*引脚值为低电平 逻辑0*/
N	VAL_1		/*引脚值为高电平 逻辑1*/
N} PIN_VAL; 
N//上拉、下拉状态
Ntypedef enum{
N	PULL_UP,	/*上拉电阻标记*/
N	PULL_DOWN	/*下拉电阻标记*/
N} PULL_STAT;
N
N//IO功能定义
N#define		O_GPPP		0x00	//0B0000	//通用推挽输出
N#define		O_GPOD		0x04	//0B0100	//通用开漏输出
N#define		O_AFPP		0x08	//0B1000	//复用推挽输出
N#define		O_AFOD		0x0c	//0b1100	//复用开漏输出
N#define		I_ANA		0x00	//0B0000	//模拟输入
N#define		I_FLO		0x04	//0B0100	//浮空输入
N#define		I_PULLUD	0x08	//0B1000	//上拉、下拉输入
N
N//输出模式定义
N#define		OMODE_RES			0x00	//0B00	//保留
N#define		OMODE_T10MHz		0x01	//0B01	//最高10MHz输出
N#define		OMODE_T02MHz		0x02	//0B10	//最高2MHz输出
N#define		OMODE_T50MHz		0x03	//0B11	//最高50MHz输出
N
N//I/O接口地址定义
N#define		GPIO_BASE		(APB2PERIPH_BASE+0x0800)
N#define		PORTA		0x0000
N#define		PORTB		0x0400
N#define		PORTC		0x0800
N#define		PORTD		0x0c00
N#define		PORTE		0x1000
N#define		PORTF		0x1400
N#define		PORTG		0x1800
N
N//引脚定义
N#define		Pin0		1<<0
N#define		Pin1		1<<1
N#define		Pin2		1<<2
N#define		Pin3		1<<3
N#define		Pin4		1<<4
N#define		Pin5		1<<5
N#define		Pin6		1<<6
N#define		Pin7		1<<7
N#define		Pin8		1<<8
N#define		Pin9		1<<9
N#define		PinA		1<<10
N#define		PinB		1<<11
N#define		PinC		1<<12
N#define		PinD		1<<13
N#define		PinE		1<<14
N#define		PinF		1<<15
N
N/* * * * * * * * * * * * * * * * * * * * * * * * * * * * *
N * Function:	set_gpio_port
N * Description: 配置GPIO端口
N * Input: 
N *	>PORTx,	端口名称 x=(A B C ...)
N *	>MODE, 输出模式设置, 用于设定端口输出频率 
N *	>PINx, 需要设置的引脚 Pin0~PinF 可以进行或操作
N *	>PULL_STAT, 设置引脚是否上拉
N * Output: NULL
N * Return: NULL
N * Others: NULL
N * * * * * * * * * * * * * * * * * * * * * * * * * * * * */
Nvoid config_gpio(u32 PORTx, u32 MODE, u32 PINxs, PULL_STAT stat);
N/* * * * * * * * * * * * * * * * * * * * * * * * * * * * *
N * Function:	set_PINxs
N * Description: 设置某一I/O口的某(几)个引脚的值
N * Input: 
N *	>PORTx,	端口名称 x=(A B C ...)
N *	>PINx, 需要设置的引脚 Pin0~PinF 可以进行或操作
N *	>val, 要设置的值
N * Output: NULL
N * Return: NULL
N * Others: NULL
N * * * * * * * * * * * * * * * * * * * * * * * * * * * * */
Nvoid set_PINxs(u32	PORTx, u32 PINxs, PIN_VAL val);
N
N
N/* * * * * * * * * * * * * * * * * * * * * * * * * * * * *
N * 位带操作
N * * * * * * * * * * * * * * * * * * * * * * * * * * * * */
N
N//GPIONx output
N#define PAxOut(x)	_BD(GPIOA->ODR, x)	//PORTAx output
N#define PBxOut(x)	_BD(GPIOB->ODR, x)	//PORTBx output
N#define PCxOut(x)	_BD(GPIOC->ODR, x)	//PORTCx output
N#define PDxOut(x)	_BD(GPIOD->ODR, x)	//PORTDx output
N#define PExOut(x)	_BD(GPIOE->ODR, x)	//PORTEx output
N#define PFxOut(x)	_BD(GPIOF->ODR, x)	//PORTFx output
N#define PGxOut(x)	_BD(GPIOG->ODR, x)	//PORTGx output
N//GPIONx input
N#define PAxIn(x)	_BD(GPIOA->IDR, x)	//PORTAx input
N#define PBxIn(x)	_BD(GPIOB->IDR, x)	//PORTBx input
N#define PCxIn(x)	_BD(GPIOC->IDR, x)	//PORTCx input
N#define PDxIn(x)	_BD(GPIOD->IDR, x)	//PORTDx input
N#define PExIn(x)	_BD(GPIOE->IDR, x)	//PORTEx input
N#define PFxIn(x)	_BD(GPIOF->IDR, x)	//PORTFx input
N#define PGxIn(x)	_BD(GPIOG->IDR, x)	//PORTGx input
N
N#endif
N
N
L 59 ".\devices\jpstm32_lcd.h" 2
N#include "stdlib.h"
L 1 "D:\Program Files\Keil\ARM\ARMCC\bin\..\include\stdlib.h" 1
N/* stdlib.h: ANSI draft (X3J11 May 88) library header, section 4.10 */
N/* Copyright (C) Codemist Ltd., 1988-1993.                          */
N/* Copyright 1991-1998 ARM Limited. All rights reserved.            */
N/*
N * RCS $Revision: 178085 $
N * Checkin $Date: 2012-12-11 14:54:17 +0000 (Tue, 11 Dec 2012) $
N * Revising $Author: agrant $
N */
N 
N/*
N * stdlib.h declares four types, several general purpose functions,
N * and defines several macros.
N */
N
N#ifndef __stdlib_h
N#define __stdlib_h
N#define __ARMCLIB_VERSION 5030024
N
N#define _ARMABI __declspec(__nothrow)
N#define _ARMABI_PURE __declspec(__nothrow) __pure
N#define _ARMABI_NORETURN __declspec(__nothrow) __declspec(__noreturn)
N#define _ARMABI_THROW
N
N  #ifndef __STDLIB_DECLS
N  #define __STDLIB_DECLS
N
N  /*
N   * Some of these declarations are new in C99.  To access them in C++
N   * you can use -D__USE_C99_STDLIB (or -D__USE_C99ALL).
N   */
N  #ifndef __USE_C99_STDLIB
N    #if defined(__USE_C99_ALL) || (defined(__STDC_VERSION__) && 199901L <= __STDC_VERSION__)
X    #if 0L || (1L && 199901L <= 199409L)
S      #define __USE_C99_STDLIB 1
N    #endif
N  #endif
N
N    #undef __CLIBNS
N
N    #ifdef __cplusplus
S      namespace std {
S          #define __CLIBNS ::std::
S          extern "C" {
N    #else
N      #define __CLIBNS
N    #endif  /* __cplusplus */
N
N#if defined(__cplusplus) || !defined(__STRICT_ANSI__)
X#if 0L || !0L
N /* unconditional in C++ and non-strict C for consistency of debug info */
N  typedef unsigned int size_t;
N#elif !defined(__size_t)
S  #define __size_t 1
S  typedef unsigned int size_t;   /* see <stddef.h> */
N#endif
N
N#undef NULL
N#define NULL 0                   /* see <stddef.h> */
N
N#ifndef __cplusplus  /* wchar_t is a builtin type for C++ */
N  #if !defined(__STRICT_ANSI__)
X  #if !0L
N   /* unconditional in non-strict C for consistency of debug info */
N   #if defined(__WCHAR32)
X   #if 0L
S    typedef unsigned int wchar_t; /* see <stddef.h> */
N   #else
N    typedef unsigned short wchar_t; /* see <stddef.h> */
N   #endif
N  #elif !defined(__wchar_t)
S    #define __wchar_t 1
S   #if defined(__WCHAR32)
S    typedef unsigned int wchar_t; /* see <stddef.h> */
S   #else
S    typedef unsigned short wchar_t; /* see <stddef.h> */
S   #endif
N  #endif
N#endif
N
Ntypedef struct div_t { int quot, rem; } div_t;
N   /* type of the value returned by the div function. */
Ntypedef struct ldiv_t { long int quot, rem; } ldiv_t;
N   /* type of the value returned by the ldiv function. */
N#if !defined(__STRICT_ANSI__) || __USE_C99_STDLIB
X#if !0L || __USE_C99_STDLIB
Ntypedef struct lldiv_t { __int64 quot, rem; } lldiv_t;
N   /* type of the value returned by the lldiv function. */
N#endif
N
N#ifdef __EXIT_FAILURE
S#  define EXIT_FAILURE __EXIT_FAILURE
S   /*
S    * an integral expression which may be used as an argument to the exit
S    * function to return unsuccessful termination status to the host
S    * environment.
S    */
N#else
N#  define EXIT_FAILURE 1  /* unixoid */
N#endif
N#define EXIT_SUCCESS 0
N   /*
N    * an integral expression which may be used as an argument to the exit
N    * function to return successful termination status to the host
N    * environment.
N    */
N
N   /*
N    * Defining __USE_ANSI_EXAMPLE_RAND at compile time switches to
N    * the example implementation of rand() and srand() provided in
N    * the ANSI C standard. This implementation is very poor, but is
N    * provided for completeness.
N    */
N#ifdef __USE_ANSI_EXAMPLE_RAND
S#define srand _ANSI_srand
S#define rand _ANSI_rand
S#define RAND_MAX 0x7fff
N#else
N#define RAND_MAX 0x7fffffff
N#endif
N   /*
N    * RAND_MAX: an integral constant expression, the value of which
N    * is the maximum value returned by the rand function.
N    */
Nextern _ARMABI int __aeabi_MB_CUR_MAX(void);
Xextern __declspec(__nothrow) int __aeabi_MB_CUR_MAX(void);
N#define MB_CUR_MAX ( __aeabi_MB_CUR_MAX() )
N   /*
N    * a positive integer expression whose value is the maximum number of bytes
N    * in a multibyte character for the extended character set specified by the
N    * current locale (category LC_CTYPE), and whose value is never greater
N    * than MB_LEN_MAX.
N    */
N
N   /*
N    * If the compiler supports signalling nans as per N965 then it
N    * will define __SUPPORT_SNAN__, in which case a user may define
N    * _WANT_SNAN in order to obtain a compliant version of the strtod
N    * family of functions.
N    */
N#if defined(__SUPPORT_SNAN__) && defined(_WANT_SNAN)
X#if 0L && 0L
S#pragma import(__use_snan)
N#endif
N
Nextern _ARMABI double atof(const char * /*nptr*/) __attribute__((__nonnull__(1)));
Xextern __declspec(__nothrow) double atof(const char *  ) __attribute__((__nonnull__(1)));
N   /*
N    * converts the initial part of the string pointed to by nptr to double
N    * representation.
N    * Returns: the converted value.
N    */
Nextern _ARMABI int atoi(const char * /*nptr*/) __attribute__((__nonnull__(1)));
Xextern __declspec(__nothrow) int atoi(const char *  ) __attribute__((__nonnull__(1)));
N   /*
N    * converts the initial part of the string pointed to by nptr to int
N    * representation.
N    * Returns: the converted value.
N    */
Nextern _ARMABI long int atol(const char * /*nptr*/) __attribute__((__nonnull__(1)));
Xextern __declspec(__nothrow) long int atol(const char *  ) __attribute__((__nonnull__(1)));
N   /*
N    * converts the initial part of the string pointed to by nptr to long int
N    * representation.
N    * Returns: the converted value.
N    */
N#if !defined(__STRICT_ANSI__) || __USE_C99_STDLIB
X#if !0L || __USE_C99_STDLIB
Nextern _ARMABI __int64 atoll(const char * /*nptr*/) __attribute__((__nonnull__(1)));
Xextern __declspec(__nothrow) __int64 atoll(const char *  ) __attribute__((__nonnull__(1)));
N   /*
N    * converts the initial part of the string pointed to by nptr to
N    * long long int representation.
N    * Returns: the converted value.
N    */
N#endif
N
Nextern _ARMABI double strtod(const char * __restrict /*nptr*/, char ** __restrict /*endptr*/) __attribute__((__nonnull__(1)));
Xextern __declspec(__nothrow) double strtod(const char * __restrict  , char ** __restrict  ) __attribute__((__nonnull__(1)));
N   /*
N    * converts the initial part of the string pointed to by nptr to double
N    * representation. First it decomposes the input string into three parts:
N    * an initial, possibly empty, sequence of white-space characters (as
N    * specified by the isspace function), a subject sequence resembling a
N    * floating point constant; and a final string of one or more unrecognised
N    * characters, including the terminating null character of the input string.
N    * Then it attempts to convert the subject sequence to a floating point
N    * number, and returns the result. A pointer to the final string is stored
N    * in the object pointed to by endptr, provided that endptr is not a null
N    * pointer.
N    * Returns: the converted value if any. If no conversion could be performed,
N    *          zero is returned. If the correct value is outside the range of
N    *          representable values, plus or minus HUGE_VAL is returned
N    *          (according to the sign of the value), and the value of the macro
N    *          ERANGE is stored in errno. If the correct value would cause
N    *          underflow, zero is returned and the value of the macro ERANGE is
N    *          stored in errno.
N    */
N#if !defined(__STRICT_ANSI__) || __USE_C99_STDLIB
X#if !0L || __USE_C99_STDLIB
Nextern _ARMABI float strtof(const char * __restrict /*nptr*/, char ** __restrict /*endptr*/) __attribute__((__nonnull__(1)));
Xextern __declspec(__nothrow) float strtof(const char * __restrict  , char ** __restrict  ) __attribute__((__nonnull__(1)));
Nextern _ARMABI long double strtold(const char * __restrict /*nptr*/, char ** __restrict /*endptr*/) __attribute__((__nonnull__(1)));
Xextern __declspec(__nothrow) long double strtold(const char * __restrict  , char ** __restrict  ) __attribute__((__nonnull__(1)));
N   /*
N    * same as strtod, but return float and long double respectively.
N    */
N#endif
Nextern _ARMABI long int strtol(const char * __restrict /*nptr*/,
Xextern __declspec(__nothrow) long int strtol(const char * __restrict  ,
N                        char ** __restrict /*endptr*/, int /*base*/) __attribute__((__nonnull__(1)));
N   /*
N    * converts the initial part of the string pointed to by nptr to long int
N    * representation. First it decomposes the input string into three parts:
N    * an initial, possibly empty, sequence of white-space characters (as
N    * specified by the isspace function), a subject sequence resembling an
N    * integer represented in some radix determined by the value of base, and a
N    * final string of one or more unrecognised characters, including the
N    * terminating null character of the input string. Then it attempts to
N    * convert the subject sequence to an integer, and returns the result.
N    * If the value of base is 0, the expected form of the subject sequence is
N    * that of an integer constant (described in ANSI Draft, section 3.1.3.2),
N    * optionally preceded by a '+' or '-' sign, but not including an integer
N    * suffix. If the value of base is between 2 and 36, the expected form of
N    * the subject sequence is a sequence of letters and digits representing an
N    * integer with the radix specified by base, optionally preceded by a plus
N    * or minus sign, but not including an integer suffix. The letters from a
N    * (or A) through z (or Z) are ascribed the values 10 to 35; only letters
N    * whose ascribed values are less than that of the base are permitted. If
N    * the value of base is 16, the characters 0x or 0X may optionally precede
N    * the sequence of letters and digits following the sign if present.
N    * A pointer to the final string is stored in the object
N    * pointed to by endptr, provided that endptr is not a null pointer.
N    * Returns: the converted value if any. If no conversion could be performed,
N    *          zero is returned and nptr is stored in *endptr.
N    *          If the correct value is outside the range of
N    *          representable values, LONG_MAX or LONG_MIN is returned
N    *          (according to the sign of the value), and the value of the
N    *          macro ERANGE is stored in errno.
N    */
Nextern _ARMABI unsigned long int strtoul(const char * __restrict /*nptr*/,
Xextern __declspec(__nothrow) unsigned long int strtoul(const char * __restrict  ,
N                                       char ** __restrict /*endptr*/, int /*base*/) __attribute__((__nonnull__(1)));
N   /*
N    * converts the initial part of the string pointed to by nptr to unsigned
N    * long int representation. First it decomposes the input string into three
N    * parts: an initial, possibly empty, sequence of white-space characters (as
N    * determined by the isspace function), a subject sequence resembling an
N    * unsigned integer represented in some radix determined by the value of
N    * base, and a final string of one or more unrecognised characters,
N    * including the terminating null character of the input string. Then it
N    * attempts to convert the subject sequence to an unsigned integer, and
N    * returns the result. If the value of base is zero, the expected form of
N    * the subject sequence is that of an integer constant (described in ANSI
N    * Draft, section 3.1.3.2), optionally preceded by a '+' or '-' sign, but
N    * not including an integer suffix. If the value of base is between 2 and
N    * 36, the expected form of the subject sequence is a sequence of letters
N    * and digits representing an integer with the radix specified by base,
N    * optionally preceded by a '+' or '-' sign, but not including an integer
N    * suffix. The letters from a (or A) through z (or Z) stand for the values
N    * 10 to 35; only letters whose ascribed values are less than that of the
N    * base are permitted. If the value of base is 16, the characters 0x or 0X
N    * may optionally precede the sequence of letters and digits following the
N    * sign, if present. A pointer to the final string is stored in the object
N    * pointed to by endptr, provided that endptr is not a null pointer.
N    * Returns: the converted value if any. If no conversion could be performed,
N    *          zero is returned and nptr is stored in *endptr.
N    *          If the correct value is outside the range of
N    *          representable values, ULONG_MAX is returned, and the value of
N    *          the macro ERANGE is stored in errno.
N    */
N
N/* C90 reserves all names beginning with 'str' */
Nextern _ARMABI __int64 strtoll(const char * __restrict /*nptr*/,
Xextern __declspec(__nothrow) __int64 strtoll(const char * __restrict  ,
N                               char ** __restrict /*endptr*/, int /*base*/) __attribute__((__nonnull__(1)));
N   /*
N    * as strtol but returns a long long int value.  If the correct value is
N    * outside the range of representable values,  LLONG_MAX or LLONG_MIN is
N    * returned (according to the sign of the value), and the value of the
N    * macro ERANGE is stored in errno.
N    */
Nextern _ARMABI unsigned __int64 strtoull(const char * __restrict /*nptr*/,
Xextern __declspec(__nothrow) unsigned __int64 strtoull(const char * __restrict  ,
N                                         char ** __restrict /*endptr*/, int /*base*/) __attribute__((__nonnull__(1)));
N   /*
N    * as strtoul but returns an unsigned long long int value.  If the correct
N    * value is outside the range of representable values, ULLONG_MAX is returned,
N    * and the value of the macro ERANGE is stored in errno.
N    */
N
Nextern _ARMABI int rand(void);
Xextern __declspec(__nothrow) int rand(void);
N   /*
N    * Computes a sequence of pseudo-random integers in the range 0 to RAND_MAX.
N    * Uses an additive generator (Mitchell & Moore) of the form:
N    *   Xn = (X[n-24] + X[n-55]) MOD 2^31
N    * This is described in section 3.2.2 of Knuth, vol 2. It's period is
N    * in excess of 2^55 and its randomness properties, though unproven, are
N    * conjectured to be good. Empirical testing since 1958 has shown no flaws.
N    * Returns: a pseudo-random integer.
N    */
Nextern _ARMABI void srand(unsigned int /*seed*/);
Xextern __declspec(__nothrow) void srand(unsigned int  );
N   /*
N    * uses its argument as a seed for a new sequence of pseudo-random numbers
N    * to be returned by subsequent calls to rand. If srand is then called with
N    * the same seed value, the sequence of pseudo-random numbers is repeated.
N    * If rand is called before any calls to srand have been made, the same
N    * sequence is generated as when srand is first called with a seed value
N    * of 1.
N    */
N
Nstruct _rand_state { int __x[57]; };
Nextern _ARMABI int _rand_r(struct _rand_state *);
Xextern __declspec(__nothrow) int _rand_r(struct _rand_state *);
Nextern _ARMABI void _srand_r(struct _rand_state *, unsigned int);
Xextern __declspec(__nothrow) void _srand_r(struct _rand_state *, unsigned int);
Nstruct _ANSI_rand_state { int __x[1]; };
Nextern _ARMABI int _ANSI_rand_r(struct _ANSI_rand_state *);
Xextern __declspec(__nothrow) int _ANSI_rand_r(struct _ANSI_rand_state *);
Nextern _ARMABI void _ANSI_srand_r(struct _ANSI_rand_state *, unsigned int);
Xextern __declspec(__nothrow) void _ANSI_srand_r(struct _ANSI_rand_state *, unsigned int);
N   /*
N    * Re-entrant variants of both flavours of rand, which operate on
N    * an explicitly supplied state buffer.
N    */
N
Nextern _ARMABI void *calloc(size_t /*nmemb*/, size_t /*size*/);
Xextern __declspec(__nothrow) void *calloc(size_t  , size_t  );
N   /*
N    * allocates space for an array of nmemb objects, each of whose size is
N    * 'size'. The space is initialised to all bits zero.
N    * Returns: either a null pointer or a pointer to the allocated space.
N    */
Nextern _ARMABI void free(void * /*ptr*/);
Xextern __declspec(__nothrow) void free(void *  );
N   /*
N    * causes the space pointed to by ptr to be deallocated (i.e., made
N    * available for further allocation). If ptr is a null pointer, no action
N    * occurs. Otherwise, if ptr does not match a pointer earlier returned by
N    * calloc, malloc or realloc or if the space has been deallocated by a call
N    * to free or realloc, the behaviour is undefined.
N    */
Nextern _ARMABI void *malloc(size_t /*size*/);
Xextern __declspec(__nothrow) void *malloc(size_t  );
N   /*
N    * allocates space for an object whose size is specified by 'size' and whose
N    * value is indeterminate.
N    * Returns: either a null pointer or a pointer to the allocated space.
N    */
Nextern _ARMABI void *realloc(void * /*ptr*/, size_t /*size*/);
Xextern __declspec(__nothrow) void *realloc(void *  , size_t  );
N   /*
N    * changes the size of the object pointed to by ptr to the size specified by
N    * size. The contents of the object shall be unchanged up to the lesser of
N    * the new and old sizes. If the new size is larger, the value of the newly
N    * allocated portion of the object is indeterminate. If ptr is a null
N    * pointer, the realloc function behaves like a call to malloc for the
N    * specified size. Otherwise, if ptr does not match a pointer earlier
N    * returned by calloc, malloc or realloc, or if the space has been
N    * deallocated by a call to free or realloc, the behaviour is undefined.
N    * If the space cannot be allocated, the object pointed to by ptr is
N    * unchanged. If size is zero and ptr is not a null pointer, the object it
N    * points to is freed.
N    * Returns: either a null pointer or a pointer to the possibly moved
N    *          allocated space.
N    */
N#if !defined(__STRICT_ANSI__)
X#if !0L
Nextern _ARMABI int posix_memalign(void ** /*ret*/, size_t /*alignment*/, size_t /*size*/);
Xextern __declspec(__nothrow) int posix_memalign(void **  , size_t  , size_t  );
N   /*
N    * allocates space for an object of size 'size', aligned to a
N    * multiple of 'alignment' (which must be a power of two and at
N    * least 4).
N    *
N    * On success, a pointer to the allocated object is stored in
N    * *ret, and zero is returned. On failure, the return value is
N    * either ENOMEM (allocation failed because no suitable piece of
N    * memory was available) or EINVAL (the 'alignment' parameter was
N    * invalid).
N    */
N#endif
Ntypedef int (*__heapprt)(void *, char const *, ...);
Nextern _ARMABI void __heapstats(int (* /*dprint*/)(void * /*param*/,
Xextern __declspec(__nothrow) void __heapstats(int (*  )(void *  ,
N                                           char const * /*format*/, ...),
N                        void * /*param*/) __attribute__((__nonnull__(1)));
N   /*
N    * reports current heap statistics (eg. number of free blocks in
N    * the free-list). Output is as implementation-defined free-form
N    * text, provided via the dprint function. `param' gives an
N    * extra data word to pass to dprint. You can call
N    * __heapstats(fprintf,stdout) by casting fprintf to the above
N    * function type; the typedef `__heapprt' is provided for this
N    * purpose.
N    *
N    * `dprint' will not be called while the heap is being examined,
N    * so it can allocate memory itself without trouble.
N    */
Nextern _ARMABI int __heapvalid(int (* /*dprint*/)(void * /*param*/,
Xextern __declspec(__nothrow) int __heapvalid(int (*  )(void *  ,
N                                           char const * /*format*/, ...),
N                       void * /*param*/, int /*verbose*/) __attribute__((__nonnull__(1)));
N   /*
N    * performs a consistency check on the heap. Errors are reported
N    * through dprint, like __heapstats. If `verbose' is nonzero,
N    * full diagnostic information on the heap state is printed out.
N    *
N    * This routine probably won't work if the heap isn't a
N    * contiguous chunk (for example, if __user_heap_extend has been
N    * overridden).
N    *
N    * `dprint' may be called while the heap is being examined or
N    * even in an invalid state, so it must perform no memory
N    * allocation. In particular, if `dprint' calls (or is) a stdio
N    * function, the stream it outputs to must already have either
N    * been written to or been setvbuf'ed, or else the system will
N    * allocate buffer space for it on the first call to dprint.
N    */
Nextern _ARMABI_NORETURN void abort(void);
Xextern __declspec(__nothrow) __declspec(__noreturn) void abort(void);
N   /*
N    * causes abnormal program termination to occur, unless the signal SIGABRT
N    * is being caught and the signal handler does not return. Whether open
N    * output streams are flushed or open streams are closed or temporary
N    * files removed is implementation-defined.
N    * An implementation-defined form of the status 'unsuccessful termination'
N    * is returned to the host environment by means of a call to
N    * raise(SIGABRT).
N    */
N
Nextern _ARMABI int atexit(void (* /*func*/)(void)) __attribute__((__nonnull__(1)));
Xextern __declspec(__nothrow) int atexit(void (*  )(void)) __attribute__((__nonnull__(1)));
N   /*
N    * registers the function pointed to by func, to be called without its
N    * arguments at normal program termination. It is possible to register at
N    * least 32 functions.
N    * Returns: zero if the registration succeeds, nonzero if it fails.
N    */
N#if defined(__cplusplus) && !defined(__GNUC__)
X#if 0L && !0L
S    /* atexit that takes a ptr to a function with C++ linkage 
S     * but not in GNU mode  
S     */
S    typedef void (* __C_exitfuncptr)();
S    extern "C++"
S    inline int atexit(void (* __func)()) {
S      return atexit((__C_exitfuncptr)__func);
S    }
N#endif
N
N
Nextern _ARMABI_NORETURN void exit(int /*status*/);
Xextern __declspec(__nothrow) __declspec(__noreturn) void exit(int  );
N   /*
N    * causes normal program termination to occur. If more than one call to the
N    * exit function is executed by a program, the behaviour is undefined.
N    * First, all functions registered by the atexit function are called, in the
N    * reverse order of their registration.
N    * Next, all open output streams are flushed, all open streams are closed,
N    * and all files created by the tmpfile function are removed.
N    * Finally, control is returned to the host environment. If the value of
N    * status is zero or EXIT_SUCCESS, an implementation-defined form of the
N    * status 'successful termination' is returned. If the value of status is
N    * EXIT_FAILURE, an implementation-defined form of the status
N    * 'unsuccessful termination' is returned. Otherwise the status returned
N    * is implementation-defined.
N    */
N
Nextern _ARMABI_NORETURN void _Exit(int /*status*/);
Xextern __declspec(__nothrow) __declspec(__noreturn) void _Exit(int  );
N   /*
N    * causes normal program termination to occur. No functions registered
N    * by the atexit function are called.
N    * In this implementation, all open output streams are flushed, all
N    * open streams are closed, and all files created by the tmpfile function
N    * are removed.
N    * Control is returned to the host environment. The status returned to
N    * the host environment is determined in the same way as for 'exit'.
N    */     
N
Nextern _ARMABI char *getenv(const char * /*name*/) __attribute__((__nonnull__(1)));
Xextern __declspec(__nothrow) char *getenv(const char *  ) __attribute__((__nonnull__(1)));
N   /*
N    * searches the environment list, provided by the host environment, for a
N    * string that matches the string pointed to by name. The set of environment
N    * names and the method for altering the environment list are
N    * implementation-defined.
N    * Returns: a pointer to a string associated with the matched list member.
N    *          The array pointed to shall not be modified by the program, but
N    *          may be overwritten by a subsequent call to the getenv function.
N    *          If the specified name cannot be found, a null pointer is
N    *          returned.
N    */
N
Nextern _ARMABI int  system(const char * /*string*/);
Xextern __declspec(__nothrow) int  system(const char *  );
N   /*
N    * passes the string pointed to by string to the host environment to be
N    * executed by a command processor in an implementation-defined manner.
N    * A null pointer may be used for string, to inquire whether a command
N    * processor exists.
N    *
N    * Returns: If the argument is a null pointer, the system function returns
N    *          non-zero only if a command processor is available. If the
N    *          argument is not a null pointer, the system function returns an
N    *          implementation-defined value.
N    */
N
Nextern _ARMABI_THROW void *bsearch(const void * /*key*/, const void * /*base*/,
Xextern  void *bsearch(const void *  , const void *  ,
N              size_t /*nmemb*/, size_t /*size*/,
N              int (* /*compar*/)(const void *, const void *)) __attribute__((__nonnull__(1,2,5)));
N   /*
N    * searches an array of nmemb objects, the initial member of which is
N    * pointed to by base, for a member that matches the object pointed to by
N    * key. The size of each member of the array is specified by size.
N    * The contents of the array shall be in ascending sorted order according to
N    * a comparison function pointed to by compar, which is called with two
N    * arguments that point to the key object and to an array member, in that
N    * order. The function shall return an integer less than, equal to, or
N    * greater than zero if the key object is considered, respectively, to be
N    * less than, to match, or to be greater than the array member.
N    * Returns: a pointer to a matching member of the array, or a null pointer
N    *          if no match is found. If two members compare as equal, which
N    *          member is matched is unspecified.
N    */
N#if defined(__cplusplus) && !defined(__GNUC__)
X#if 0L && !0L
S    /* bsearch that takes a ptr to a function with C++ linkage 
S     * but not in GNU mode
S     */
S    typedef int (* __C_compareprocptr)(const void *, const void *);
S    extern "C++"
S    void *bsearch(const void * __key, const void * __base,
S              size_t __nmemb, size_t __size,
S              int (* __compar)(const void *, const void *)) __attribute__((__nonnull__(1,2,5)));
S    extern "C++"
S    inline void *bsearch(const void * __key, const void * __base,
S              size_t __nmemb, size_t __size,
S              int (* __compar)(const void *, const void *)) {
S      return bsearch(__key, __base, __nmemb, __size, (__C_compareprocptr)__compar);
S    }
N#endif
N
N
Nextern _ARMABI_THROW void qsort(void * /*base*/, size_t /*nmemb*/, size_t /*size*/,
Xextern  void qsort(void *  , size_t  , size_t  ,
N           int (* /*compar*/)(const void *, const void *)) __attribute__((__nonnull__(1,4)));
N   /*
N    * sorts an array of nmemb objects, the initial member of which is pointed
N    * to by base. The size of each object is specified by size.
N    * The contents of the array shall be in ascending order according to a
N    * comparison function pointed to by compar, which is called with two
N    * arguments that point to the objects being compared. The function shall
N    * return an integer less than, equal to, or greater than zero if the first
N    * argument is considered to be respectively less than, equal to, or greater
N    * than the second. If two members compare as equal, their order in the
N    * sorted array is unspecified.
N    */
N
N#if defined(__cplusplus) && !defined(__GNUC__)
X#if 0L && !0L
S    /* qsort that takes a ptr to a function with C++ linkage 
S     * but not in GNU mode
S     */    
S    extern "C++"
S    void qsort(void * __base, size_t __nmemb, size_t __size,
S               int (* __compar)(const void *, const void *)) __attribute__((__nonnull__(1,4)));
S    extern "C++"
S    inline void qsort(void * __base, size_t __nmemb, size_t __size,
S                      int (* __compar)(const void *, const void *)) {
S      qsort(__base, __nmemb, __size, (__C_compareprocptr)__compar);
S    }
N#endif
N
Nextern _ARMABI_PURE int abs(int /*j*/);
Xextern __declspec(__nothrow) __pure int abs(int  );
N   /*
N    * computes the absolute value of an integer j. If the result cannot be
N    * represented, the behaviour is undefined.
N    * Returns: the absolute value.
N    */
N
Nextern _ARMABI_PURE div_t div(int /*numer*/, int /*denom*/);
Xextern __declspec(__nothrow) __pure div_t div(int  , int  );
N   /*
N    * computes the quotient and remainder of the division of the numerator
N    * numer by the denominator denom. If the division is inexact, the resulting
N    * quotient is the integer of lesser magnitude that is the nearest to the
N    * algebraic quotient. If the result cannot be represented, the behaviour is
N    * undefined; otherwise, quot * denom + rem shall equal numer.
N    * Returns: a structure of type div_t, comprising both the quotient and the
N    *          remainder. the structure shall contain the following members,
N    *          in either order.
N    *          int quot; int rem;
N    */
Nextern _ARMABI_PURE long int labs(long int /*j*/);
Xextern __declspec(__nothrow) __pure long int labs(long int  );
N   /*
N    * computes the absolute value of an long integer j. If the result cannot be
N    * represented, the behaviour is undefined.
N    * Returns: the absolute value.
N    */
N#ifdef __cplusplus
S   extern "C++" inline _ARMABI_PURE long abs(long int x) { return labs(x); }
N#endif
N
Nextern _ARMABI_PURE ldiv_t ldiv(long int /*numer*/, long int /*denom*/);
Xextern __declspec(__nothrow) __pure ldiv_t ldiv(long int  , long int  );
N   /*
N    * computes the quotient and remainder of the division of the numerator
N    * numer by the denominator denom. If the division is inexact, the sign of
N    * the resulting quotient is that of the algebraic quotient, and the
N    * magnitude of the resulting quotient is the largest integer less than the
N    * magnitude of the algebraic quotient. If the result cannot be represented,
N    * the behaviour is undefined; otherwise, quot * denom + rem shall equal
N    * numer.
N    * Returns: a structure of type ldiv_t, comprising both the quotient and the
N    *          remainder. the structure shall contain the following members,
N    *          in either order.
N    *          long int quot; long int rem;
N    */
N#ifdef __cplusplus
S   extern "C++" inline _ARMABI_PURE ldiv_t div(long int __numer, long int __denom) {
S       return ldiv(__numer, __denom);
S   }
N#endif
N
N#if !defined(__STRICT_ANSI__) || __USE_C99_STDLIB
X#if !0L || __USE_C99_STDLIB
Nextern _ARMABI_PURE __int64 llabs(__int64 /*j*/);
Xextern __declspec(__nothrow) __pure __int64 llabs(__int64  );
N   /*
N    * computes the absolute value of a __int64 integer j. If the
N    * result cannot be represented, the behaviour is undefined.
N    * Returns: the absolute value.
N    */
N#ifdef __cplusplus
S   extern "C++" inline _ARMABI_PURE __int64 abs(__int64 x) { return llabs(x); }
N#endif
N
Nextern _ARMABI_PURE lldiv_t lldiv(__int64 /*numer*/, __int64 /*denom*/);
Xextern __declspec(__nothrow) __pure lldiv_t lldiv(__int64  , __int64  );
N   /*
N    * computes the quotient and remainder of the division of the numerator
N    * numer by the denominator denom. If the division is inexact, the sign of
N    * the resulting quotient is that of the algebraic quotient, and the
N    * magnitude of the resulting quotient is the largest integer less than the
N    * magnitude of the algebraic quotient. If the result cannot be represented,
N    * the behaviour is undefined; otherwise, quot * denom + rem shall equal
N    * numer.
N    * Returns: a structure of type lldiv_t, comprising both the quotient and the
N    *          remainder. the structure shall contain the following members,
N    *          in either order.
N    *          long long quot; long long rem;
N    */
N#ifdef __cplusplus
S   extern "C++" inline _ARMABI_PURE lldiv_t div(__int64 __numer, __int64 __denom) {
S       return lldiv(__numer, __denom);
S   }
N#endif
N#endif
N
N/*
N * ARM real-time divide functions for guaranteed performance
N */
Ntypedef struct __sdiv32by16 { int quot, rem; } __sdiv32by16;
Ntypedef struct __udiv32by16 { unsigned int quot, rem; } __udiv32by16;
N   /* used int so that values return in separate regs, although 16-bit */
Ntypedef struct __sdiv64by32 { int rem, quot; } __sdiv64by32;
N
N__value_in_regs extern _ARMABI_PURE __sdiv32by16 __rt_sdiv32by16(
X__value_in_regs extern __declspec(__nothrow) __pure __sdiv32by16 __rt_sdiv32by16(
N     int /*numer*/,
N     short int /*denom*/);
N   /*
N    * Signed divide: (16-bit quot), (16-bit rem) = (32-bit) / (16-bit)
N    */
N__value_in_regs extern _ARMABI_PURE __udiv32by16 __rt_udiv32by16(
X__value_in_regs extern __declspec(__nothrow) __pure __udiv32by16 __rt_udiv32by16(
N     unsigned int /*numer*/,
N     unsigned short /*denom*/);
N   /*
N    * Unsigned divide: (16-bit quot), (16-bit rem) = (32-bit) / (16-bit)
N    */
N__value_in_regs extern _ARMABI_PURE __sdiv64by32 __rt_sdiv64by32(
X__value_in_regs extern __declspec(__nothrow) __pure __sdiv64by32 __rt_sdiv64by32(
N     int /*numer_h*/, unsigned int /*numer_l*/,
N     int /*denom*/);
N   /*
N    * Signed divide: (32-bit quot), (32-bit rem) = (64-bit) / (32-bit)
N    */
N
N/*
N * ARM floating-point mask/status function (for both hardfp and softfp)
N */
Nextern _ARMABI unsigned int __fp_status(unsigned int /*mask*/, unsigned int /*flags*/);
Xextern __declspec(__nothrow) unsigned int __fp_status(unsigned int  , unsigned int  );
N   /*
N    * mask and flags are bit-fields which correspond directly to the
N    * floating point status register in the FPE/FPA and fplib.  
N    * __fp_status returns the current value of the status register,
N    * and also sets the writable bits of the word
N    * (the exception control and flag bytes) to:
N    *
N    *     new = (old & ~mask) ^ flags;
N    */
N#define __fpsr_IXE  0x100000
N#define __fpsr_UFE  0x80000
N#define __fpsr_OFE  0x40000
N#define __fpsr_DZE  0x20000
N#define __fpsr_IOE  0x10000
N
N#define __fpsr_IXC  0x10
N#define __fpsr_UFC  0x8
N#define __fpsr_OFC  0x4
N#define __fpsr_DZC  0x2
N#define __fpsr_IOC  0x1
N
N/*
N * Multibyte Character Functions.
N * The behaviour of the multibyte character functions is affected by the
N * LC_CTYPE category of the current locale. For a state-dependent encoding,
N * each function is placed into its initial state by a call for which its
N * character pointer argument, s, is a null pointer. Subsequent calls with s
N * as other than a null pointer cause the internal state of the function to be
N * altered as necessary. A call with s as a null pointer causes these functions
N * to return a nonzero value if encodings have state dependency, and a zero
N * otherwise. After the LC_CTYPE category is changed, the shift state of these
N * functions is indeterminate.
N */
Nextern _ARMABI int mblen(const char * /*s*/, size_t /*n*/);
Xextern __declspec(__nothrow) int mblen(const char *  , size_t  );
N   /*
N    * If s is not a null pointer, the mblen function determines the number of
N    * bytes compromising the multibyte character pointed to by s. Except that
N    * the shift state of the mbtowc function is not affected, it is equivalent
N    * to   mbtowc((wchar_t *)0, s, n);
N    * Returns: If s is a null pointer, the mblen function returns a nonzero or
N    *          zero value, if multibyte character encodings, respectively, do
N    *          or do not have state-dependent encodings. If s is not a null
N    *          pointer, the mblen function either returns a 0 (if s points to a
N    *          null character), or returns the number of bytes that compromise
N    *          the multibyte character (if the next n of fewer bytes form a
N    *          valid multibyte character), or returns -1 (they do not form a
N    *          valid multibyte character).
N    */
Nextern _ARMABI int mbtowc(wchar_t * __restrict /*pwc*/,
Xextern __declspec(__nothrow) int mbtowc(wchar_t * __restrict  ,
N                   const char * __restrict /*s*/, size_t /*n*/);
N   /*
N    * If s is not a null pointer, the mbtowc function determines the number of
N    * bytes that compromise the multibyte character pointed to by s. It then
N    * determines the code for value of type wchar_t that corresponds to that
N    * multibyte character. (The value of the code corresponding to the null
N    * character is zero). If the multibyte character is valid and pwc is not a
N    * null pointer, the mbtowc function stores the code in the object pointed
N    * to by pwc. At most n bytes of the array pointed to by s will be examined.
N    * Returns: If s is a null pointer, the mbtowc function returns a nonzero or
N    *          zero value, if multibyte character encodings, respectively, do
N    *          or do not have state-dependent encodings. If s is not a null
N    *          pointer, the mbtowc function either returns a 0 (if s points to
N    *          a null character), or returns the number of bytes that
N    *          compromise the converted multibyte character (if the next n of
N    *          fewer bytes form a valid multibyte character), or returns -1
N    *          (they do not form a valid multibyte character).
N    */
Nextern _ARMABI int wctomb(char * /*s*/, wchar_t /*wchar*/);
Xextern __declspec(__nothrow) int wctomb(char *  , wchar_t  );
N   /*
N    * determines the number of bytes need to represent the multibyte character
N    * corresponding to the code whose value is wchar (including any change in
N    * shift state). It stores the multibyte character representation in the
N    * array object pointed to by s (if s is not a null pointer). At most
N    * MB_CUR_MAX characters are stored. If the value of wchar is zero, the
N    * wctomb function is left in the initial shift state).
N    * Returns: If s is a null pointer, the wctomb function returns a nonzero or
N    *          zero value, if multibyte character encodings, respectively, do
N    *          or do not have state-dependent encodings. If s is not a null
N    *          pointer, the wctomb function returns a -1 if the value of wchar
N    *          does not correspond to a valid multibyte character, or returns
N    *          the number of bytes that compromise the multibyte character
N    *          corresponding to the value of wchar.
N    */
N
N/*
N * Multibyte String Functions.
N * The behaviour of the multibyte string functions is affected by the LC_CTYPE
N * category of the current locale.
N */
Nextern _ARMABI size_t mbstowcs(wchar_t * __restrict /*pwcs*/,
Xextern __declspec(__nothrow) size_t mbstowcs(wchar_t * __restrict  ,
N                      const char * __restrict /*s*/, size_t /*n*/) __attribute__((__nonnull__(2)));
N   /*
N    * converts a sequence of multibyte character that begins in the initial
N    * shift state from the array pointed to by s into a sequence of
N    * corresponding codes and stores not more than n codes into the array
N    * pointed to by pwcs. No multibyte character that follow a null character
N    * (which is converted into a code with value zero) will be examined or
N    * converted. Each multibyte character is converted as if by a call to
N    * mbtowc function, except that the shift state of the mbtowc function is
N    * not affected. No more than n elements will be modified in the array
N    * pointed to by pwcs. If copying takes place between objects that overlap,
N    * the behaviour is undefined.
N    * Returns: If an invalid multibyte character is encountered, the mbstowcs
N    *          function returns (size_t)-1. Otherwise, the mbstowcs function
N    *          returns the number of array elements modified, not including
N    *          a terminating zero code, if any.
N    */
Nextern _ARMABI size_t wcstombs(char * __restrict /*s*/,
Xextern __declspec(__nothrow) size_t wcstombs(char * __restrict  ,
N                      const wchar_t * __restrict /*pwcs*/, size_t /*n*/) __attribute__((__nonnull__(2)));
N   /*
N    * converts a sequence of codes that correspond to multibyte characters
N    * from the array pointed to by pwcs into a sequence of multibyte
N    * characters that begins in the initial shift state and stores these
N    * multibyte characters into the array pointed to by s, stopping if a
N    * multibyte character would exceed the limit of n total bytes or if a
N    * null character is stored. Each code is converted as if by a call to the
N    * wctomb function, except that the shift state of the wctomb function is
N    * not affected. No more than n elements will be modified in the array
N    * pointed to by s. If copying takes place between objects that overlap,
N    * the behaviour is undefined.
N    * Returns: If a code is encountered that does not correspond to a valid
N    *          multibyte character, the wcstombs function returns (size_t)-1.
N    *          Otherwise, the wcstombs function returns the number of bytes
N    *          modified, not including a terminating null character, if any.
N    */
N
Nextern _ARMABI void __use_realtime_heap(void);
Xextern __declspec(__nothrow) void __use_realtime_heap(void);
Nextern _ARMABI void __use_realtime_division(void);
Xextern __declspec(__nothrow) void __use_realtime_division(void);
Nextern _ARMABI void __use_two_region_memory(void);
Xextern __declspec(__nothrow) void __use_two_region_memory(void);
Nextern _ARMABI void __use_no_heap(void);
Xextern __declspec(__nothrow) void __use_no_heap(void);
Nextern _ARMABI void __use_no_heap_region(void);
Xextern __declspec(__nothrow) void __use_no_heap_region(void);
N
Nextern _ARMABI char const *__C_library_version_string(void);
Xextern __declspec(__nothrow) char const *__C_library_version_string(void);
Nextern _ARMABI int __C_library_version_number(void);
Xextern __declspec(__nothrow) int __C_library_version_number(void);
N
N    #ifdef __cplusplus
S         }  /* extern "C" */
S      }  /* namespace std */
N    #endif /* __cplusplus */
N  #endif /* __STDLIB_DECLS */
N
N  #if _AEABI_PORTABILITY_LEVEL != 0 && !defined _AEABI_PORTABLE
X  #if _AEABI_PORTABILITY_LEVEL != 0 && !0L
S    #define _AEABI_PORTABLE
N  #endif
N
N  #ifdef __cplusplus
S    #ifndef __STDLIB_NO_EXPORTS
S      #if !defined(__STRICT_ANSI__) || __USE_C99_STDLIB
S        using ::std::atoll;
S        using ::std::lldiv_t;
S      #endif /* !defined(__STRICT_ANSI__) || __USE_C99_STDLIB */
S      using ::std::div_t;
S      using ::std::ldiv_t;
S      using ::std::atof;
S      using ::std::atoi;
S      using ::std::atol;
S      using ::std::strtod;
S#if !defined(__STRICT_ANSI__) || __USE_C99_STDLIB
S      using ::std::strtof;
S      using ::std::strtold;
S#endif
S      using ::std::strtol;
S      using ::std::strtoul;
S      using ::std::strtoll;
S      using ::std::strtoull;
S      using ::std::rand;
S      using ::std::srand;
S      using ::std::_rand_state;
S      using ::std::_rand_r;
S      using ::std::_srand_r;
S      using ::std::_ANSI_rand_state;
S      using ::std::_ANSI_rand_r;
S      using ::std::_ANSI_srand_r;
S      using ::std::calloc;
S      using ::std::free;
S      using ::std::malloc;
S      using ::std::realloc;
S#if !defined(__STRICT_ANSI__)
S      using ::std::posix_memalign;
S#endif
S      using ::std::__heapprt;
S      using ::std::__heapstats;
S      using ::std::__heapvalid;
S      using ::std::abort;
S      using ::std::atexit;
S      using ::std::exit;
S      using ::std::_Exit;
S      using ::std::getenv;
S      using ::std::system;
S      using ::std::bsearch;
S      using ::std::qsort;
S      using ::std::abs;
S      using ::std::div;
S      using ::std::labs;
S      using ::std::ldiv;
S      #if !defined(__STRICT_ANSI__) || __USE_C99_STDLIB
S        using ::std::llabs;
S        using ::std::lldiv;
S      #endif /* !defined(__STRICT_ANSI__) || __USE_C99_STDLIB */
S      using ::std::__sdiv32by16;
S      using ::std::__udiv32by16;
S      using ::std::__sdiv64by32;
S      using ::std::__rt_sdiv32by16;
S      using ::std::__rt_udiv32by16;
S      using ::std::__rt_sdiv64by32;
S      using ::std::__fp_status;
S      using ::std::mblen;
S      using ::std::mbtowc;
S      using ::std::wctomb;
S      using ::std::mbstowcs;
S      using ::std::wcstombs;
S      using ::std::__use_realtime_heap;
S      using ::std::__use_realtime_division;
S      using ::std::__use_two_region_memory;
S      using ::std::__use_no_heap;
S      using ::std::__use_no_heap_region;
S      using ::std::__C_library_version_string;
S      using ::std::__C_library_version_number;
S      using ::std::size_t;
S      using ::std::__aeabi_MB_CUR_MAX;
S    #endif /* __STDLIB_NO_EXPORTS */
N  #endif /* __cplusplus */
N
N#endif
N/* end of stdlib.h */
N
L 60 ".\devices\jpstm32_lcd.h" 2
N
N//横、竖屏切换
N#define	LCD_HOR_MODE	1
N#define	LCD_VER_MODE	0
N#define	LCD_VIEW_MODE	LCD_VER_MODE
N//背光控制
N#define	BLIGHT			PBxOut(0)
N#define	BLIGHT_ON		1
N#define	BLIGHT_OFF	0
N//扫描方向
N#define L2R_U2D  0 //left to right, up to down
N#define L2R_D2U  1 
N#define R2L_U2D  2 
N#define R2L_D2U  3 
N
N#define U2D_L2R  4
N#define U2D_R2L  5 
N#define D2U_L2R  6
N#define D2U_R2L  7
N//默认扫描方向
N#define DFT_SCAN_DIR  L2R_U2D
N/* ***********************************************************
N * 1.LCD9486的并口操作类似于SRAM的并口，STM32F103ZET6专门提供
N *   了针对SRAM/NOR FLASH、NAND Flash/PC Card操作的总线控制器
N *   FSMC(Flexible static memory controller)
N * 2.FSMC可以针对不同类型的外围设备设置不同的数据传输频率、通
N *   信方式等。当FSMC连接SRAM时其工作原理是：
N *		a)指定地址，在地址总线上指定某一个地址
N *		b)准备地址，需要一段时间进行计算该地址
N *		c)指定访问字节序，如果外设支持高低字节访问顺序设置则
N *		  需要配置此选项
N *		d)片选，FSMC可能同时连接多个外设 需要指定具体的设备
N *		e)读/写设置，确定对a)中指定的地址进行读操作还是写操作
N *		f)数据操作
N *		  读 将a)步骤中指定的地址内的数据交给数据总线
N *		  写 将数据总线上的数据写入a)步骤中指定的地址 
N *   上述步骤全部由FSMC自动完成，程序员在编程时只需关心要操作
N *   的地址与数据即可
N * 3.虽然LCD9486的并口与SRAM类似但是LCD9486没有地址线，编程时
N *   交互的数据需要通过LCD_RS信号线来区分写入LCD9486的是命令
N *   还是数据，操作时可以将LCD_RS信号线理解为地址。例如把LCD_RS
N *   连接到FSMC的A0引脚上，那么当FSMC对0x0000000地址进行写操作
N *   时使得A0引脚变为0，对LCD9486来说就是写入命令；当FSMC对0x01
N *   地址进行写操作时使得A0引脚变为1，对于LCD9486来说就是写入数
N *   据。JPIOT_STM32-V1开发板将LCD9486的RS引脚连接到了FSMC的A10
N *   引脚，即当我们访问0Bxxxx x0xx xxxx xxxx地址时表示向LCD写入
N *   命令，当访问0Bxxxx x1xx xxxx xxxx时表示向LCD写入数据。由于
N *   采用16位并口进行传输，内部总线地址与FSMC的地址对应关系为
N *   HADDR[25:1]-->FSMC[24:0]所以当RS连接到A10时访问的实际地址
N *   应该右移1位。为方便操作取相邻的两个地址(两字节为单位)来区
N *   分写入LCD的是命令还是数据，则上述两个地址变为0x7FE(写入命
N *   令)和0x800(写入数据)，将这两个地址再加上实际使用的存储区
N *   的首地址就是最终要操作的地址。所以有如下定义：
N * ***********************************************************/
Ntypedef struct {
N	u16		lcd_cmd;	//向LCD写入命令
N	u16		lcd_data;	//向LCD写入数据
N}LcdAddr;
N//LCD使用FSMC的Bank1存储区的第四区，所以其实地址为0x6C000000
N#define		LCD_BASE	((u32)(0x6C000000|0x000007FE))
N#define		LCD_ADDR	((LcdAddr*)LCD_BASE)
N
N//LCD设备描述结构体
Ntypedef struct {
N	u16		dev_no;
N	u16		width;	//宽度
N	u16		height;	//高度
N	u8		d_mode; //显示模式 HOR_MODE 横屏，VER_MODE 竖屏
N	u8		wr_cmd;	//写命令
N	u8		x_cmd;	//x坐标指令
N	u8		y_cmd;
N}LcdDev;
N
Nextern u16 POINT_COLOR;	//画笔颜色
Nextern u16 BACK_COLOR;  //背景色 
N
N//设备信息
Nextern LcdDev	Lcd_Dev;
N
N//颜色定义
N#define WHITE       0xFFFF
N#define BLACK      	0x0000	  
N#define BLUE       	0xF800 
N#define BRED        0XF81F
N#define GRED 				0XFFE0
N#define RED         0x001F
N#define MAGENTA     0xF81F
N#define GREEN       0x07E0
N#define CYAN        0x7FFF
N#define YELLOW      0x07FF
N#define BROWN 			0XBC40 
N#define BRRED 			0XFC07 
N#define GRAY  			0X8430 
N
N/**************************
N *	画笔定义
N **************************/
N//字符大小
Ntypedef enum
N{
N	P_S16EN = 16,
N	P_S32EN = 32,
N	P_S16CN = 16,
N	P_S32CN = 32
N}PenSize;
Ntypedef enum
N{
N	P_DIR_HOR,
N	P_DIR_VER
N}PenDirect;
Ntypedef enum
N{
N	P_SET_NOBRUSH, P_SET_BRUSH
N}PenBrush;
N//画笔
Ntypedef struct{
N	u16 color;
N	u16 bg_color;
N	PenSize p_size;
N	PenBrush brush;
N	PenDirect direct;
N}LcdPen;
N
N
N//初始化
Nvoid lcdInit(void);
N//清屏，全屏填充
Nvoid lcdClear(u16 color);
N//显示 开
Nvoid lcdDisplayOn(void);
N//显示 关
Nvoid lcdDisplayOff(void);
N//设置光标位置
Nvoid lcdSetCursor(u16 x, u16 y);
N//设定一个矩形显示区
Nvoid lcdSetWindow(u16 x_start, u16 y_start, u16 x_end, u16 y_end);
N
N//在屏幕上绘制一个像素点
Nvoid lcdDrawPoint(u16 x, u16 y, LcdPen* pen);
N
Nvoid lcdDrawLine(u16 x1,u16 y1,u16 x2,u16 y2,LcdPen* pen);
N
Nvoid lcdDrawRect(u16 x,u16 y,u16 width,u16 height,LcdPen* pen);
N
Nvoid lcd_write_cmd(void);
N
Nu16 LCD_DecToRGB(u8 R, u8 G, u8 B);
N
N//绘制一个字符,成功返回0,否则返回非零
Nu8 lcdDrawChr(u16 x, u16 y, u8 ch, LcdPen* p);
N//在指定位置绘制一个字符串
Nu8 lcdDrawStr(u16 x, u16 y, u8* str, LcdPen* p);
N//绘制一个由四个像素组成的点
Nvoid lcdDrawBigPoint(u16 x, u16 y, LcdPen* p);
N
N#endif
N
N
N
N
N
N
N
N
N
N
N
L 4 "app\game.h" 2
N#include "jpstm32_usart.h"
L 1 ".\core\jpstm32_usart.h" 1
N/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
N * File name: jpstm32_usart.c
N * Author: Duke An
N * Version: 0.1
N * Date: 2014-06-17
N * Description: USART灯操作实现
N * Copyright @ 2013 by Briup Technology,Inc. All rights Reserved.
N * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */
N#ifndef __JPSTM32_USART_H__
N#define __JPSTM32_USART_H__
N
N#include "jpstm32_common.h"
N#include "jpstm32_nvic.h"
L 1 ".\core\jpstm32_nvic.h" 1
N/*************************************************************
N * File name: jpstm32_nvic.h
N * Author: Duke An
N * Version: 0.1
N * Date: 20140617
N * Description: 系统中断设置
N * Copyright @ 2013 by Briup Technology,Inc. All rights Reserved.
N *************************************************************/
N
N#ifndef __JPSTM32_NVIC_H__
N#define __JPSTM32_NVIC_H__
N
N#include "jpstm32_common.h"
N
N/* * * * * * * * * * * * * * * * * * * * * * * * * * * * *
N * Function:	select_nvic_vector
N * Description: 设置系统NVIC向量表的存储位置
N * Input: 
N *	>NVIC_VectTab, 向量表存储位置
N *  >Offset, 偏移量
N * Output: NULL
N * Return: NULL
N * Others: NULL
N * * * * * * * * * * * * * * * * * * * * * * * * * * * * */
Nextern void select_nvic_vector(u32 NVIC_VectTab, u32 Offset);
N
Nextern bool nvic_set_enable(u8 Channel);
Nextern bool nvic_clear_enable(u8 Channel);
Nextern bool nvic_set_pending(u8 Channel);
Nextern bool nvic_clear_pending(u8 Channel);
Nextern bool nvic_get_active(u8 Channel);
Nextern bool nvic_set_group(u8 group);
Nextern bool nvic_set_priority(u8 Channel, u8 PreemptionPriority, u8 SubPriority);
Nextern vu32 nvic_get_priority(void);
N
Nextern bool register_nvic(u8 nvic_Group, u8 nvic_PreemptionPriority, u8 nvic_SubPriority, u8 nvic_Channel);
N
N
N#endif
L 14 ".\core\jpstm32_usart.h" 2
N#include "stdio.h"
L 1 "D:\Program Files\Keil\ARM\ARMCC\bin\..\include\stdio.h" 1
N/* stdio.h: ANSI 'C' (X3J11 Oct 88) library header, section 4.9 */
N/* Copyright (C) Codemist Ltd., 1988-1993                       */
N/* Copyright 1991-1998 ARM Limited. All rights reserved.        */
N
N/*
N * RCS $Revision: 178085 $
N * Checkin $Date: 2012-12-11 14:54:17 +0000 (Tue, 11 Dec 2012) $
N * Revising $Author: sdouglas $
N */
N
N/*
N * stdio.h declares two types, several macros, and many functions for
N * performing input and output. For a discussion on Streams and Files
N * refer to sections 4.9.2 and 4.9.3 in the above ANSI draft, or to a
N * modern textbook on C.
N */
N
N#ifndef __stdio_h
N#define __stdio_h
N#define __ARMCLIB_VERSION 5030024
N
N
N
N
N#define _ARMABI __declspec(__nothrow)
N
N  #ifndef __STDIO_DECLS
N  #define __STDIO_DECLS
N
N    #undef __CLIBNS
N    #ifdef __cplusplus
S      namespace std {
S      #define __CLIBNS ::std::
S        extern "C" {
N    #else /* ndef __cplusplus */
N      #define __CLIBNS
N    #endif /* ndef __cplusplus */
N
N#if defined(__cplusplus) || !defined(__STRICT_ANSI__) || !defined(__size_t)
X#if 0L || !0L || !0L
N /* always defined in C++ and non-strict C for consistency of debug info */
N  typedef unsigned int size_t;   /* see <stddef.h> */
N  #if !defined(__cplusplus) && defined(__STRICT_ANSI__)
X  #if !0L && 0L
S    #define __size_t 1
N  #endif
N#endif
N
N#undef NULL
N#define NULL 0                   /* see <stddef.h> */
N
N/* ANSI forbids va_list to be defined here */
N/* keep in step with <stdarg.h> and <wchar.h> */
N#if defined(__cplusplus) || !defined(__STRICT_ANSI__) || !defined(__va_list_defined)
X#if 0L || !0L || !0L
N/* always defined in C++ and non-strict C for consistency of debug info */
N  typedef struct __va_list __va_list;
N  #if !defined(__cplusplus) && defined(__STRICT_ANSI__)
X  #if !0L && 0L
S    #define __va_list_defined 1
N  #endif
N#endif
N
N   /*
N    * If the compiler supports signalling nans as per N965 then it
N    * will define __SUPPORT_SNAN__, in which case a user may define
N    * _WANT_SNAN in order to obtain compliant versions of the printf
N    * and scanf families of functions
N    */
N#if defined(__SUPPORT_SNAN__) && defined(_WANT_SNAN)
X#if 0L && 0L
S#pragma import(__use_snan)
N#endif
N
Ntypedef struct __fpos_t_struct {
N    unsigned __int64 __pos;
N    /*
N     * this structure is equivalent to an mbstate_t, but we're not
N     * allowed to actually define the type name `mbstate_t' within
N     * stdio.h
N     */
N    struct {
N        unsigned int __state1, __state2;
N    } __mbstate;
N} fpos_t;
N   /*
N    * fpos_t is an object capable of recording all information needed to
N    * specify uniquely every position within a file.
N    */
N
N#define _SYS_OPEN 16
N   /* _SYS_OPEN defines a limit on the number of open files that is imposed
N    * by this C library
N    */
N
Ntypedef struct __FILE FILE;
N   /*
N    * FILE is an object capable of recording all information needed to control
N    * a stream, such as its file position indicator, a pointer to its
N    * associated buffer, an error indicator that records whether a read/write
N    * error has occurred and an end-of-file indicator that records whether the
N    * end-of-file has been reached.
N    * Its structure is not made known to library clients.
N    */
N
Nextern FILE __stdin, __stdout, __stderr;
Nextern FILE *__aeabi_stdin, *__aeabi_stdout, *__aeabi_stderr;
N
N#if _AEABI_PORTABILITY_LEVEL != 0 || (!defined _AEABI_PORTABILITY_LEVEL && __DEFAULT_AEABI_PORTABILITY_LEVEL != 0)
X#if _AEABI_PORTABILITY_LEVEL != 0 || (!0L && __DEFAULT_AEABI_PORTABILITY_LEVEL != 0)
S#define stdin  (__CLIBNS __aeabi_stdin)
S   /* pointer to a FILE object associated with standard input stream */
S#define stdout (__CLIBNS __aeabi_stdout)
S   /* pointer to a FILE object associated with standard output stream */
S#define stderr (__CLIBNS __aeabi_stderr)
S   /* pointer to a FILE object associated with standard error stream */
Sextern const int __aeabi_IOFBF;
S#define _IOFBF (__CLIBNS __aeabi_IOFBF)
Sextern const int __aeabi_IONBF;
S#define _IONBF (__CLIBNS __aeabi_IONBF)
Sextern const int __aeabi_IOLBF;
S#define _IOLBF (__CLIBNS __aeabi_IOLBF)
Sextern const int __aeabi_BUFSIZ;
S#define BUFSIZ (__CLIBNS __aeabi_BUFSIZ)
Sextern const int __aeabi_FOPEN_MAX;
S#define FOPEN_MAX (__CLIBNS __aeabi_FOPEN_MAX)
Sextern const int __aeabi_TMP_MAX;
S#define TMP_MAX (__CLIBNS __aeabi_TMP_MAX)
Sextern const int __aeabi_FILENAME_MAX;
S#define FILENAME_MAX (__CLIBNS __aeabi_FILENAME_MAX)
Sextern const int __aeabi_L_tmpnam;
S#define L_tmpnam (__CLIBNS __aeabi_L_tmpnam)
N#else
N#define stdin  (&__CLIBNS __stdin)
N   /* pointer to a FILE object associated with standard input stream */
N#define stdout (&__CLIBNS __stdout)
N   /* pointer to a FILE object associated with standard output stream */
N#define stderr (&__CLIBNS __stderr)
N   /* pointer to a FILE object associated with standard error stream */
N
N#define _IOFBF           0x100 /* fully buffered IO */
N#define _IOLBF           0x200 /* line buffered IO */
N#define _IONBF           0x400 /* unbuffered IO */
N
N    /* Various default file IO buffer sizes */
N#define BUFSIZ       (512)  /* system buffer size (as used by setbuf) */
N
N#define FOPEN_MAX _SYS_OPEN
N   /*
N    * an integral constant expression that is the minimum number of files that
N    * this implementation guarantees can be open simultaneously.
N    */
N
N#define FILENAME_MAX 256
N   /*
N    * an integral constant expression that is the size of an array of char
N    * large enough to hold the longest filename string
N    */
N#define L_tmpnam FILENAME_MAX
N   /*
N    * an integral constant expression that is the size of an array of char
N    * large enough to hold a temporary file name string generated by the
N    * tmpnam function.
N    */
N#define TMP_MAX 256
N   /*
N    * an integral constant expression that is the minimum number of unique
N    * file names that shall be generated by the tmpnam function.
N    */
N
N#endif
N
N#define EOF      (-1)
N   /*
N    * negative integral constant, indicates end-of-file, that is, no more input
N    * from a stream.
N    */
N
N#define SEEK_SET 0 /* start of stream (see fseek) */
N#define SEEK_CUR 1 /* current position in stream (see fseek) */
N#define SEEK_END 2 /* end of stream (see fseek) */
N
N    /*
N     * _IOBIN is the flag passed to _sys_write to denote a binary
N     * file.
N     */
N#define _IOBIN            0x04     /* binary stream */
N
N#define __STDIN_BUFSIZ  (64)  /* default stdin buffer size */
N#define __STDOUT_BUFSIZ (64)  /* default stdout buffer size */
N#define __STDERR_BUFSIZ (16)  /* default stderr buffer size */
N
Nextern _ARMABI int remove(const char * /*filename*/) __attribute__((__nonnull__(1)));
Xextern __declspec(__nothrow) int remove(const char *  ) __attribute__((__nonnull__(1)));
N   /*
N    * causes the file whose name is the string pointed to by filename to be
N    * removed. Subsequent attempts to open the file will fail, unless it is
N    * created anew. If the file is open, the behaviour of the remove function
N    * is implementation-defined.
N    * Returns: zero if the operation succeeds, nonzero if it fails.
N    */
Nextern _ARMABI int rename(const char * /*old*/, const char * /*new*/) __attribute__((__nonnull__(1,2)));
Xextern __declspec(__nothrow) int rename(const char *  , const char *  ) __attribute__((__nonnull__(1,2)));
N   /*
N    * causes the file whose name is the string pointed to by old to be
N    * henceforth known by the name given by the string pointed to by new. The
N    * file named old is effectively removed. If a file named by the string
N    * pointed to by new exists prior to the call of the rename function, the
N    * behaviour is implementation-defined.
N    * Returns: zero if the operation succeeds, nonzero if it fails, in which
N    *          case if the file existed previously it is still known by its
N    *          original name.
N    */
Nextern _ARMABI FILE *tmpfile(void);
Xextern __declspec(__nothrow) FILE *tmpfile(void);
N   /*
N    * creates a temporary binary file that will be automatically removed when
N    * it is closed or at program termination. The file is opened for update.
N    * Returns: a pointer to the stream of the file that it created. If the file
N    *          cannot be created, a null pointer is returned.
N    */
Nextern _ARMABI char *tmpnam(char * /*s*/);
Xextern __declspec(__nothrow) char *tmpnam(char *  );
N   /*
N    * generates a string that is not the same as the name of an existing file.
N    * The tmpnam function generates a different string each time it is called,
N    * up to TMP_MAX times. If it is called more than TMP_MAX times, the
N    * behaviour is implementation-defined.
N    * Returns: If the argument is a null pointer, the tmpnam function leaves
N    *          its result in an internal static object and returns a pointer to
N    *          that object. Subsequent calls to the tmpnam function may modify
N    *          the same object. if the argument is not a null pointer, it is
N    *          assumed to point to an array of at least L_tmpnam characters;
N    *          the tmpnam function writes its result in that array and returns
N    *          the argument as its value.
N    */
N
Nextern _ARMABI int fclose(FILE * /*stream*/) __attribute__((__nonnull__(1)));
Xextern __declspec(__nothrow) int fclose(FILE *  ) __attribute__((__nonnull__(1)));
N   /*
N    * causes the stream pointed to by stream to be flushed and the associated
N    * file to be closed. Any unwritten buffered data for the stream are
N    * delivered to the host environment to be written to the file; any unread
N    * buffered data are discarded. The stream is disassociated from the file.
N    * If the associated buffer was automatically allocated, it is deallocated.
N    * Returns: zero if the stream was succesfully closed, or nonzero if any
N    *          errors were detected or if the stream was already closed.
N    */
Nextern _ARMABI int fflush(FILE * /*stream*/);
Xextern __declspec(__nothrow) int fflush(FILE *  );
N   /*
N    * If the stream points to an output or update stream in which the most
N    * recent operation was output, the fflush function causes any unwritten
N    * data for that stream to be delivered to the host environment to be
N    * written to the file. If the stream points to an input or update stream,
N    * the fflush function undoes the effect of any preceding ungetc operation
N    * on the stream.
N    * Returns: nonzero if a write error occurs.
N    */
Nextern _ARMABI FILE *fopen(const char * __restrict /*filename*/,
Xextern __declspec(__nothrow) FILE *fopen(const char * __restrict  ,
N                           const char * __restrict /*mode*/) __attribute__((__nonnull__(1,2)));
N   /*
N    * opens the file whose name is the string pointed to by filename, and
N    * associates a stream with it.
N    * The argument mode points to a string beginning with one of the following
N    * sequences:
N    * "r"         open text file for reading
N    * "w"         create text file for writing, or truncate to zero length
N    * "a"         append; open text file or create for writing at eof
N    * "rb"        open binary file for reading
N    * "wb"        create binary file for writing, or truncate to zero length
N    * "ab"        append; open binary file or create for writing at eof
N    * "r+"        open text file for update (reading and writing)
N    * "w+"        create text file for update, or truncate to zero length
N    * "a+"        append; open text file or create for update, writing at eof
N    * "r+b"/"rb+" open binary file for update (reading and writing)
N    * "w+b"/"wb+" create binary file for update, or truncate to zero length
N    * "a+b"/"ab+" append; open binary file or create for update, writing at eof
N    *
N    * Opening a file with read mode ('r' as the first character in the mode
N    * argument) fails if the file does not exist or cannot be read.
N    * Opening a file with append mode ('a' as the first character in the mode
N    * argument) causes all subsequent writes to be forced to the current end of
N    * file, regardless of intervening calls to the fseek function. In some
N    * implementations, opening a binary file with append mode ('b' as the
N    * second or third character in the mode argument) may initially position
N    * the file position indicator beyond the last data written, because of the
N    * NUL padding.
N    * When a file is opened with update mode ('+' as the second or third
N    * character in the mode argument), both input and output may be performed
N    * on the associated stream. However, output may not be directly followed
N    * by input without an intervening call to the fflush fuction or to a file
N    * positioning function (fseek, fsetpos, or rewind), and input be not be
N    * directly followed by output without an intervening call to the fflush
N    * fuction or to a file positioning function, unless the input operation
N    * encounters end-of-file. Opening a file with update mode may open or
N    * create a binary stream in some implementations. When opened, a stream
N    * is fully buffered if and only if it does not refer to an interactive
N    * device. The error and end-of-file indicators for the stream are
N    * cleared.
N    * Returns: a pointer to the object controlling the stream. If the open
N    *          operation fails, fopen returns a null pointer.
N    */
Nextern _ARMABI FILE *freopen(const char * __restrict /*filename*/,
Xextern __declspec(__nothrow) FILE *freopen(const char * __restrict  ,
N                    const char * __restrict /*mode*/,
N                    FILE * __restrict /*stream*/) __attribute__((__nonnull__(2,3)));
N   /*
N    * opens the file whose name is the string pointed to by filename and
N    * associates the stream pointed to by stream with it. The mode argument is
N    * used just as in the fopen function.
N    * The freopen function first attempts to close any file that is associated
N    * with the specified stream. Failure to close the file successfully is
N    * ignored. The error and end-of-file indicators for the stream are cleared.
N    * Returns: a null pointer if the operation fails. Otherwise, freopen
N    *          returns the value of the stream.
N    */
Nextern _ARMABI void setbuf(FILE * __restrict /*stream*/,
Xextern __declspec(__nothrow) void setbuf(FILE * __restrict  ,
N                    char * __restrict /*buf*/) __attribute__((__nonnull__(1)));
N   /*
N    * Except that it returns no value, the setbuf function is equivalent to the
N    * setvbuf function invoked with the values _IOFBF for mode and BUFSIZ for
N    * size, or (if buf is a null pointer), with the value _IONBF for mode.
N    * Returns: no value.
N    */
Nextern _ARMABI int setvbuf(FILE * __restrict /*stream*/,
Xextern __declspec(__nothrow) int setvbuf(FILE * __restrict  ,
N                   char * __restrict /*buf*/,
N                   int /*mode*/, size_t /*size*/) __attribute__((__nonnull__(1)));
N   /*
N    * may be used after the stream pointed to by stream has been associated
N    * with an open file but before it is read or written. The argument mode
N    * determines how stream will be buffered, as follows: _IOFBF causes
N    * input/output to be fully buffered; _IOLBF causes output to be line
N    * buffered (the buffer will be flushed when a new-line character is
N    * written, when the buffer is full, or when input is requested); _IONBF
N    * causes input/output to be completely unbuffered. If buf is not the null
N    * pointer, the array it points to may be used instead of an automatically
N    * allocated buffer (the buffer must have a lifetime at least as great as
N    * the open stream, so the stream should be closed before a buffer that has
N    * automatic storage duration is deallocated upon block exit). The argument
N    * size specifies the size of the array. The contents of the array at any
N    * time are indeterminate.
N    * Returns: zero on success, or nonzero if an invalid value is given for
N    *          mode or size, or if the request cannot be honoured.
N    */
N#pragma __printf_args
Nextern _ARMABI int fprintf(FILE * __restrict /*stream*/,
Xextern __declspec(__nothrow) int fprintf(FILE * __restrict  ,
N                    const char * __restrict /*format*/, ...) __attribute__((__nonnull__(1,2)));
N   /*
N    * writes output to the stream pointed to by stream, under control of the
N    * string pointed to by format that specifies how subsequent arguments are
N    * converted for output. If there are insufficient arguments for the format,
N    * the behaviour is undefined. If the format is exhausted while arguments
N    * remain, the excess arguments are evaluated but otherwise ignored. The
N    * fprintf function returns when the end of the format string is reached.
N    * The format shall be a multibyte character sequence, beginning and ending
N    * in its initial shift state. The format is composed of zero or more
N    * directives: ordinary multibyte characters (not %), which are copied
N    * unchanged to the output stream; and conversion specifiers, each of which
N    * results in fetching zero or more subsequent arguments. Each conversion
N    * specification is introduced by the character %. For a description of the
N    * available conversion specifiers refer to section 4.9.6.1 in the ANSI
N    * draft mentioned at the start of this file or to any modern textbook on C.
N    * The minimum value for the maximum number of characters producable by any
N    * single conversion is at least 509.
N    * Returns: the number of characters transmitted, or a negative value if an
N    *          output error occurred.
N    */
N#pragma __printf_args
Nextern _ARMABI int _fprintf(FILE * __restrict /*stream*/,
Xextern __declspec(__nothrow) int _fprintf(FILE * __restrict  ,
N                     const char * __restrict /*format*/, ...) __attribute__((__nonnull__(1,2)));
N   /*
N    * is equivalent to fprintf, but does not support floating-point formats.
N    * You can use instead of fprintf to improve code size.
N    * Returns: as fprintf.
N    */
N#pragma __printf_args
Nextern _ARMABI int printf(const char * __restrict /*format*/, ...) __attribute__((__nonnull__(1)));
Xextern __declspec(__nothrow) int printf(const char * __restrict  , ...) __attribute__((__nonnull__(1)));
N   /*
N    * is equivalent to fprintf with the argument stdout interposed before the
N    * arguments to printf.
N    * Returns: the number of characters transmitted, or a negative value if an
N    *          output error occurred.
N    */
N#pragma __printf_args
Nextern _ARMABI int _printf(const char * __restrict /*format*/, ...) __attribute__((__nonnull__(1)));
Xextern __declspec(__nothrow) int _printf(const char * __restrict  , ...) __attribute__((__nonnull__(1)));
N   /*
N    * is equivalent to printf, but does not support floating-point formats.
N    * You can use instead of printf to improve code size.
N    * Returns: as printf.
N    */
N#pragma __printf_args
Nextern _ARMABI int sprintf(char * __restrict /*s*/, const char * __restrict /*format*/, ...) __attribute__((__nonnull__(1,2)));
Xextern __declspec(__nothrow) int sprintf(char * __restrict  , const char * __restrict  , ...) __attribute__((__nonnull__(1,2)));
N   /*
N    * is equivalent to fprintf, except that the argument s specifies an array
N    * into which the generated output is to be written, rather than to a
N    * stream. A null character is written at the end of the characters written;
N    * it is not counted as part of the returned sum.
N    * Returns: the number of characters written to the array, not counting the
N    *          terminating null character.
N    */
N#pragma __printf_args
Nextern _ARMABI int _sprintf(char * __restrict /*s*/, const char * __restrict /*format*/, ...) __attribute__((__nonnull__(1,2)));
Xextern __declspec(__nothrow) int _sprintf(char * __restrict  , const char * __restrict  , ...) __attribute__((__nonnull__(1,2)));
N   /*
N    * is equivalent to sprintf, but does not support floating-point formats.
N    * You can use instead of sprintf to improve code size.
N    * Returns: as sprintf.
N    */
N#if !defined(__STRICT_ANSI__) || (defined(__STDC_VERSION__) && 199901L <= __STDC_VERSION__)
X#if !0L || (1L && 199901L <= 199409L)
N#pragma __printf_args
Nextern _ARMABI int snprintf(char * __restrict /*s*/, size_t /*n*/,
Xextern __declspec(__nothrow) int snprintf(char * __restrict  , size_t  ,
N                     const char * __restrict /*format*/, ...) __attribute__((__nonnull__(3)));
N   /*
N    * is equivalent to fprintf, except that the argument s specifies an array
N    * into which the generated output is to be written, rather than to a
N    * stream. The argument n specifies the size of the output array, so as to
N    * avoid overflowing the buffer.
N    * A null character is written at the end of the characters written, even
N    * if the formatting was not completed; it is not counted as part of the
N    * returned sum. At most n characters of the output buffer are used,
N    * _including_ the null character.
N    * Returns: the number of characters that would have been written to the
N    *          array, not counting the terminating null character, if the
N    *          array had been big enough. So if the return is >=0 and <n, then
N    *          the entire string was successfully formatted; if the return is
N    *          >=n, the string was truncated (but there is still a null char
N    *          at the end of what was written); if the return is <0, there was
N    *          an error.
N    */
N#endif
N#pragma __printf_args
Nextern _ARMABI int _snprintf(char * __restrict /*s*/, size_t /*n*/,
Xextern __declspec(__nothrow) int _snprintf(char * __restrict  , size_t  ,
N                      const char * __restrict /*format*/, ...) __attribute__((__nonnull__(3)));
N   /*
N    * is equivalent to snprintf, but does not support floating-point formats.
N    * You can use instead of snprintf to improve code size.
N    * Returns: as snprintf.
N    */
N#pragma __scanf_args
Nextern _ARMABI int fscanf(FILE * __restrict /*stream*/,
Xextern __declspec(__nothrow) int fscanf(FILE * __restrict  ,
N                    const char * __restrict /*format*/, ...) __attribute__((__nonnull__(1,2)));
N   /*
N    * reads input from the stream pointed to by stream, under control of the
N    * string pointed to by format that specifies the admissible input sequences
N    * and how thay are to be converted for assignment, using subsequent
N    * arguments as pointers to the objects to receive the converted input. If
N    * there are insufficient arguments for the format, the behaviour is
N    * undefined. If the format is exhausted while arguments remain, the excess
N    * arguments are evaluated but otherwise ignored.
N    * The format is composed of zero or more directives: one or more
N    * white-space characters; an ordinary character (not %); or a conversion
N    * specification. Each conversion specification is introduced by the
N    * character %. For a description of the available conversion specifiers
N    * refer to section 4.9.6.2 in the ANSI draft mentioned at the start of this
N    * file, or to any modern textbook on C.
N    * If end-of-file is encountered during input, conversion is terminated. If
N    * end-of-file occurs before any characters matching the current directive
N    * have been read (other than leading white space, where permitted),
N    * execution of the current directive terminates with an input failure;
N    * otherwise, unless execution of the current directive is terminated with a
N    * matching failure, execution of the following directive (if any) is
N    * terminated with an input failure.
N    * If conversions terminates on a conflicting input character, the offending
N    * input character is left unread in the input strem. Trailing white space
N    * (including new-line characters) is left unread unless matched by a
N    * directive. The success of literal matches and suppressed asignments is
N    * not directly determinable other than via the %n directive.
N    * Returns: the value of the macro EOF if an input failure occurs before any
N    *          conversion. Otherwise, the fscanf function returns the number of
N    *          input items assigned, which can be fewer than provided for, or
N    *          even zero, in the event of an early conflict between an input
N    *          character and the format.
N    */
N#pragma __scanf_args
Nextern _ARMABI int _fscanf(FILE * __restrict /*stream*/,
Xextern __declspec(__nothrow) int _fscanf(FILE * __restrict  ,
N                     const char * __restrict /*format*/, ...) __attribute__((__nonnull__(1,2)));
N   /*
N    * is equivalent to fscanf, but does not support floating-point formats.
N    * You can use instead of fscanf to improve code size.
N    * Returns: as fscanf.
N    */
N#pragma __scanf_args
Nextern _ARMABI int scanf(const char * __restrict /*format*/, ...) __attribute__((__nonnull__(1)));
Xextern __declspec(__nothrow) int scanf(const char * __restrict  , ...) __attribute__((__nonnull__(1)));
N   /*
N    * is equivalent to fscanf with the argument stdin interposed before the
N    * arguments to scanf.
N    * Returns: the value of the macro EOF if an input failure occurs before any
N    *          conversion. Otherwise, the scanf function returns the number of
N    *          input items assigned, which can be fewer than provided for, or
N    *          even zero, in the event of an early matching failure.
N    */
N#pragma __scanf_args
Nextern _ARMABI int _scanf(const char * __restrict /*format*/, ...) __attribute__((__nonnull__(1)));
Xextern __declspec(__nothrow) int _scanf(const char * __restrict  , ...) __attribute__((__nonnull__(1)));
N   /*
N    * is equivalent to scanf, but does not support floating-point formats.
N    * You can use instead of scanf to improve code size.
N    * Returns: as scanf.
N    */
N#pragma __scanf_args
Nextern _ARMABI int sscanf(const char * __restrict /*s*/,
Xextern __declspec(__nothrow) int sscanf(const char * __restrict  ,
N                    const char * __restrict /*format*/, ...) __attribute__((__nonnull__(1,2)));
N   /*
N    * is equivalent to fscanf except that the argument s specifies a string
N    * from which the input is to be obtained, rather than from a stream.
N    * Reaching the end of the string is equivalent to encountering end-of-file
N    * for the fscanf function.
N    * Returns: the value of the macro EOF if an input failure occurs before any
N    *          conversion. Otherwise, the scanf function returns the number of
N    *          input items assigned, which can be fewer than provided for, or
N    *          even zero, in the event of an early matching failure.
N    */
N#pragma __scanf_args
Nextern _ARMABI int _sscanf(const char * __restrict /*s*/,
Xextern __declspec(__nothrow) int _sscanf(const char * __restrict  ,
N                     const char * __restrict /*format*/, ...) __attribute__((__nonnull__(1,2)));
N   /*
N    * is equivalent to sscanf, but does not support floating-point formats.
N    * You can use instead of sscanf to improve code size.
N    * Returns: as sscanf.
N    */
N#if !defined(__STRICT_ANSI__) || (defined(__STDC_VERSION__) && 199901L <= __STDC_VERSION__)
X#if !0L || (1L && 199901L <= 199409L)
N/* C99 additions */
Nextern _ARMABI int vfscanf(FILE * __restrict /*stream*/, const char * __restrict /*format*/, __va_list) __attribute__((__nonnull__(1,2)));
Xextern __declspec(__nothrow) int vfscanf(FILE * __restrict  , const char * __restrict  , __va_list) __attribute__((__nonnull__(1,2)));
Nextern _ARMABI int vscanf(const char * __restrict /*format*/, __va_list) __attribute__((__nonnull__(1)));
Xextern __declspec(__nothrow) int vscanf(const char * __restrict  , __va_list) __attribute__((__nonnull__(1)));
Nextern _ARMABI int vsscanf(const char * __restrict /*s*/, const char * __restrict /*format*/, __va_list) __attribute__((__nonnull__(1,2)));
Xextern __declspec(__nothrow) int vsscanf(const char * __restrict  , const char * __restrict  , __va_list) __attribute__((__nonnull__(1,2)));
N#endif
Nextern _ARMABI int _vfscanf(FILE * __restrict /*stream*/, const char * __restrict /*format*/, __va_list) __attribute__((__nonnull__(1,2)));
Xextern __declspec(__nothrow) int _vfscanf(FILE * __restrict  , const char * __restrict  , __va_list) __attribute__((__nonnull__(1,2)));
Nextern _ARMABI int _vscanf(const char * __restrict /*format*/, __va_list) __attribute__((__nonnull__(1)));
Xextern __declspec(__nothrow) int _vscanf(const char * __restrict  , __va_list) __attribute__((__nonnull__(1)));
Nextern _ARMABI int _vsscanf(const char * __restrict /*s*/, const char * __restrict /*format*/, __va_list) __attribute__((__nonnull__(1,2)));
Xextern __declspec(__nothrow) int _vsscanf(const char * __restrict  , const char * __restrict  , __va_list) __attribute__((__nonnull__(1,2)));
N
Nextern _ARMABI int vprintf(const char * __restrict /*format*/, __va_list /*arg*/) __attribute__((__nonnull__(1)));
Xextern __declspec(__nothrow) int vprintf(const char * __restrict  , __va_list  ) __attribute__((__nonnull__(1)));
N   /*
N    * is equivalent to printf, with the variable argument list replaced by arg,
N    * which has been initialised by the va_start macro (and possibly subsequent
N    * va_arg calls). The vprintf function does not invoke the va_end function.
N    * Returns: the number of characters transmitted, or a negative value if an
N    *          output error occurred.
N    */
Nextern _ARMABI int _vprintf(const char * __restrict /*format*/, __va_list /*arg*/) __attribute__((__nonnull__(1)));
Xextern __declspec(__nothrow) int _vprintf(const char * __restrict  , __va_list  ) __attribute__((__nonnull__(1)));
N   /*
N    * is equivalent to vprintf, but does not support floating-point formats.
N    * You can use instead of vprintf to improve code size.
N    * Returns: as vprintf.
N    */
Nextern _ARMABI int vfprintf(FILE * __restrict /*stream*/,
Xextern __declspec(__nothrow) int vfprintf(FILE * __restrict  ,
N                    const char * __restrict /*format*/, __va_list /*arg*/) __attribute__((__nonnull__(1,2)));
N   /*
N    * is equivalent to fprintf, with the variable argument list replaced by
N    * arg, which has been initialised by the va_start macro (and possibly
N    * subsequent va_arg calls). The vfprintf function does not invoke the
N    * va_end function.
N    * Returns: the number of characters transmitted, or a negative value if an
N    *          output error occurred.
N    */
Nextern _ARMABI int vsprintf(char * __restrict /*s*/,
Xextern __declspec(__nothrow) int vsprintf(char * __restrict  ,
N                     const char * __restrict /*format*/, __va_list /*arg*/) __attribute__((__nonnull__(1,2)));
N   /*
N    * is equivalent to sprintf, with the variable argument list replaced by
N    * arg, which has been initialised by the va_start macro (and possibly
N    * subsequent va_arg calls). The vsprintf function does not invoke the
N    * va_end function.
N    * Returns: the number of characters written in the array, not counting the
N    *          terminating null character.
N    */
N#if !defined(__STRICT_ANSI__) || (defined(__STDC_VERSION__) && 199901L <= __STDC_VERSION__)
X#if !0L || (1L && 199901L <= 199409L)
Nextern _ARMABI int vsnprintf(char * __restrict /*s*/, size_t /*n*/,
Xextern __declspec(__nothrow) int vsnprintf(char * __restrict  , size_t  ,
N                     const char * __restrict /*format*/, __va_list /*arg*/) __attribute__((__nonnull__(3)));
N   /*
N    * is equivalent to snprintf, with the variable argument list replaced by
N    * arg, which has been initialised by the va_start macro (and possibly
N    * subsequent va_arg calls). The vsprintf function does not invoke the
N    * va_end function.
N    * Returns: the number of characters that would have been written in the
N    *          array, not counting the terminating null character. As
N    *          snprintf.
N    */
N#endif
Nextern _ARMABI int _vsprintf(char * __restrict /*s*/,
Xextern __declspec(__nothrow) int _vsprintf(char * __restrict  ,
N                      const char * __restrict /*format*/, __va_list /*arg*/) __attribute__((__nonnull__(1,2)));
N   /*
N    * is equivalent to vsprintf, but does not support floating-point formats.
N    * You can use instead of vsprintf to improve code size.
N    * Returns: as vsprintf.
N    */
Nextern _ARMABI int _vfprintf(FILE * __restrict /*stream*/,
Xextern __declspec(__nothrow) int _vfprintf(FILE * __restrict  ,
N                     const char * __restrict /*format*/, __va_list /*arg*/) __attribute__((__nonnull__(1,2)));
N   /*
N    * is equivalent to vfprintf, but does not support floating-point formats.
N    * You can use instead of vfprintf to improve code size.
N    * Returns: as vfprintf.
N    */
Nextern _ARMABI int _vsnprintf(char * __restrict /*s*/, size_t /*n*/,
Xextern __declspec(__nothrow) int _vsnprintf(char * __restrict  , size_t  ,
N                      const char * __restrict /*format*/, __va_list /*arg*/) __attribute__((__nonnull__(3)));
N   /*
N    * is equivalent to vsnprintf, but does not support floating-point formats.
N    * You can use instead of vsnprintf to improve code size.
N    * Returns: as vsnprintf.
N    */
Nextern _ARMABI int fgetc(FILE * /*stream*/) __attribute__((__nonnull__(1)));
Xextern __declspec(__nothrow) int fgetc(FILE *  ) __attribute__((__nonnull__(1)));
N   /*
N    * obtains the next character (if present) as an unsigned char converted to
N    * an int, from the input stream pointed to by stream, and advances the
N    * associated file position indicator (if defined).
N    * Returns: the next character from the input stream pointed to by stream.
N    *          If the stream is at end-of-file, the end-of-file indicator is
N    *          set and fgetc returns EOF. If a read error occurs, the error
N    *          indicator is set and fgetc returns EOF.
N    */
Nextern _ARMABI char *fgets(char * __restrict /*s*/, int /*n*/,
Xextern __declspec(__nothrow) char *fgets(char * __restrict  , int  ,
N                    FILE * __restrict /*stream*/) __attribute__((__nonnull__(1,3)));
N   /*
N    * reads at most one less than the number of characters specified by n from
N    * the stream pointed to by stream into the array pointed to by s. No
N    * additional characters are read after a new-line character (which is
N    * retained) or after end-of-file. A null character is written immediately
N    * after the last character read into the array.
N    * Returns: s if successful. If end-of-file is encountered and no characters
N    *          have been read into the array, the contents of the array remain
N    *          unchanged and a null pointer is returned. If a read error occurs
N    *          during the operation, the array contents are indeterminate and a
N    *          null pointer is returned.
N    */
Nextern _ARMABI int fputc(int /*c*/, FILE * /*stream*/) __attribute__((__nonnull__(2)));
Xextern __declspec(__nothrow) int fputc(int  , FILE *  ) __attribute__((__nonnull__(2)));
N   /*
N    * writes the character specified by c (converted to an unsigned char) to
N    * the output stream pointed to by stream, at the position indicated by the
N    * asociated file position indicator (if defined), and advances the
N    * indicator appropriately. If the file position indicator is not defined,
N    * the character is appended to the output stream.
N    * Returns: the character written. If a write error occurs, the error
N    *          indicator is set and fputc returns EOF.
N    */
Nextern _ARMABI int fputs(const char * __restrict /*s*/, FILE * __restrict /*stream*/) __attribute__((__nonnull__(1,2)));
Xextern __declspec(__nothrow) int fputs(const char * __restrict  , FILE * __restrict  ) __attribute__((__nonnull__(1,2)));
N   /*
N    * writes the string pointed to by s to the stream pointed to by stream.
N    * The terminating null character is not written.
N    * Returns: EOF if a write error occurs; otherwise it returns a nonnegative
N    *          value.
N    */
Nextern _ARMABI int getc(FILE * /*stream*/) __attribute__((__nonnull__(1)));
Xextern __declspec(__nothrow) int getc(FILE *  ) __attribute__((__nonnull__(1)));
N   /*
N    * is equivalent to fgetc except that it may be implemented as an unsafe
N    * macro (stream may be evaluated more than once, so the argument should
N    * never be an expression with side-effects).
N    * Returns: the next character from the input stream pointed to by stream.
N    *          If the stream is at end-of-file, the end-of-file indicator is
N    *          set and getc returns EOF. If a read error occurs, the error
N    *          indicator is set and getc returns EOF.
N    */
N#ifdef __cplusplus
S    inline int getchar() { return getc(stdin); }
N#else
N    #define getchar() getc(stdin)
N    extern _ARMABI int (getchar)(void);
X    extern __declspec(__nothrow) int (getchar)(void);
N#endif
N   /*
N    * is equivalent to getc with the argument stdin.
N    * Returns: the next character from the input stream pointed to by stdin.
N    *          If the stream is at end-of-file, the end-of-file indicator is
N    *          set and getchar returns EOF. If a read error occurs, the error
N    *          indicator is set and getchar returns EOF.
N    */
Nextern _ARMABI char *gets(char * /*s*/) __attribute__((__nonnull__(1)));
Xextern __declspec(__nothrow) char *gets(char *  ) __attribute__((__nonnull__(1)));
N   /*
N    * reads characters from the input stream pointed to by stdin into the array
N    * pointed to by s, until end-of-file is encountered or a new-line character
N    * is read. Any new-line character is discarded, and a null character is
N    * written immediately after the last character read into the array.
N    * Returns: s if successful. If end-of-file is encountered and no characters
N    *          have been read into the array, the contents of the array remain
N    *          unchanged and a null pointer is returned. If a read error occurs
N    *          during the operation, the array contents are indeterminate and a
N    *          null pointer is returned.
N    */
Nextern _ARMABI int putc(int /*c*/, FILE * /*stream*/) __attribute__((__nonnull__(2)));
Xextern __declspec(__nothrow) int putc(int  , FILE *  ) __attribute__((__nonnull__(2)));
N   /*
N    * is equivalent to fputc except that it may be implemented as aan unsafe
N    * macro (stream may be evaluated more than once, so the argument should
N    * never be an expression with side-effects).
N    * Returns: the character written. If a write error occurs, the error
N    *          indicator is set and putc returns EOF.
N    */
N#ifdef __cplusplus
S    inline int putchar(int __c) { return putc(__c, stdout); }
N#else
N    #define putchar(c) putc(c, stdout)
N    extern _ARMABI int (putchar)(int /*c*/);
X    extern __declspec(__nothrow) int (putchar)(int  );
N#endif
N   /*
N    * is equivalent to putc with the second argument stdout.
N    * Returns: the character written. If a write error occurs, the error
N    *          indicator is set and putc returns EOF.
N    */
Nextern _ARMABI int puts(const char * /*s*/) __attribute__((__nonnull__(1)));
Xextern __declspec(__nothrow) int puts(const char *  ) __attribute__((__nonnull__(1)));
N   /*
N    * writes the string pointed to by s to the stream pointed to by stdout, and
N    * appends a new-line character to the output. The terminating null
N    * character is not written.
N    * Returns: EOF if a write error occurs; otherwise it returns a nonnegative
N    *          value.
N    */
Nextern _ARMABI int ungetc(int /*c*/, FILE * /*stream*/) __attribute__((__nonnull__(2)));
Xextern __declspec(__nothrow) int ungetc(int  , FILE *  ) __attribute__((__nonnull__(2)));
N   /*
N    * pushes the character specified by c (converted to an unsigned char) back
N    * onto the input stream pointed to by stream. The character will be
N    * returned by the next read on that stream. An intervening call to the
N    * fflush function or to a file positioning function (fseek, fsetpos,
N    * rewind) discards any pushed-back characters. The extern _ARMABIal storage
N    * corresponding to the stream is unchanged.
N    * One character pushback is guaranteed. If the unget function is called too
N    * many times on the same stream without an intervening read or file
N    * positioning operation on that stream, the operation may fail.
N    * If the value of c equals that of the macro EOF, the operation fails and
N    * the input stream is unchanged.
N    * A successful call to the ungetc function clears the end-of-file
N    * indicator. The value of the file position indicator after reading or
N    * discarding all pushed-back characters shall be the same as it was before
N    * the characters were pushed back. For a text stream, the value of the file
N    * position indicator after a successful call to the ungetc function is
N    * unspecified until all pushed-back characters are read or discarded. For a
N    * binary stream, the file position indicator is decremented by each
N    * successful call to the ungetc function; if its value was zero before a
N    * call, it is indeterminate after the call.
N    * Returns: the character pushed back after conversion, or EOF if the
N    *          operation fails.
N    */
N
Nextern _ARMABI size_t fread(void * __restrict /*ptr*/,
Xextern __declspec(__nothrow) size_t fread(void * __restrict  ,
N                    size_t /*size*/, size_t /*nmemb*/, FILE * __restrict /*stream*/) __attribute__((__nonnull__(1,4)));
N   /*
N    * reads into the array pointed to by ptr, up to nmemb members whose size is
N    * specified by size, from the stream pointed to by stream. The file
N    * position indicator (if defined) is advanced by the number of characters
N    * successfully read. If an error occurs, the resulting value of the file
N    * position indicator is indeterminate. If a partial member is read, its
N    * value is indeterminate. The ferror or feof function shall be used to
N    * distinguish between a read error and end-of-file.
N    * Returns: the number of members successfully read, which may be less than
N    *          nmemb if a read error or end-of-file is encountered. If size or
N    *          nmemb is zero, fread returns zero and the contents of the array
N    *          and the state of the stream remain unchanged.
N    */
N
Nextern _ARMABI size_t __fread_bytes_avail(void * __restrict /*ptr*/,
Xextern __declspec(__nothrow) size_t __fread_bytes_avail(void * __restrict  ,
N                    size_t /*count*/, FILE * __restrict /*stream*/) __attribute__((__nonnull__(1,3)));
N   /*
N    * reads into the array pointed to by ptr, up to count characters from the
N    * stream pointed to by stream. The file position indicator (if defined)
N    * is advanced by the number of characters successfully read. If an error
N    * occurs, the resulting value of the file position indicator is
N    * indeterminate. The ferror or feof function shall be used to
N    * distinguish between a read error and end-of-file.  The call will block
N    * only if no characters are available.
N    * Returns: the number of characters successfully read, which may be less than
N    *          count. If count is zero, __fread_bytes_avail returns zero and
N    *          the contents of the array and the state of the stream remain
N    *          unchanged.
N    */
N
Nextern _ARMABI size_t fwrite(const void * __restrict /*ptr*/,
Xextern __declspec(__nothrow) size_t fwrite(const void * __restrict  ,
N                    size_t /*size*/, size_t /*nmemb*/, FILE * __restrict /*stream*/) __attribute__((__nonnull__(1,4)));
N   /*
N    * writes, from the array pointed to by ptr up to nmemb members whose size
N    * is specified by size, to the stream pointed to by stream. The file
N    * position indicator (if defined) is advanced by the number of characters
N    * successfully written. If an error occurs, the resulting value of the file
N    * position indicator is indeterminate.
N    * Returns: the number of members successfully written, which will be less
N    *          than nmemb only if a write error is encountered.
N    */
N
Nextern _ARMABI int fgetpos(FILE * __restrict /*stream*/, fpos_t * __restrict /*pos*/) __attribute__((__nonnull__(1,2)));
Xextern __declspec(__nothrow) int fgetpos(FILE * __restrict  , fpos_t * __restrict  ) __attribute__((__nonnull__(1,2)));
N   /*
N    * stores the current value of the file position indicator for the stream
N    * pointed to by stream in the object pointed to by pos. The value stored
N    * contains unspecified information usable by the fsetpos function for
N    * repositioning the stream to its position at the time  of the call to the
N    * fgetpos function.
N    * Returns: zero, if successful. Otherwise nonzero is returned and the
N    *          integer expression errno is set to an implementation-defined
N    *          nonzero value.
N    */
Nextern _ARMABI int fseek(FILE * /*stream*/, long int /*offset*/, int /*whence*/) __attribute__((__nonnull__(1)));
Xextern __declspec(__nothrow) int fseek(FILE *  , long int  , int  ) __attribute__((__nonnull__(1)));
N   /*
N    * sets the file position indicator for the stream pointed to by stream.
N    * For a binary stream, the new position is at the signed number of
N    * characters specified by offset away from the point specified by whence.
N    * The specified point is the beginning of the file for SEEK_SET, the
N    * current position in the file for SEEK_CUR, or end-of-file for SEEK_END.
N    * A binary stream need not meaningfully support fseek calls with a whence
N    * value of SEEK_END.
N    * For a text stream, either offset shall be zero, or offset shall be a
N    * value returned by an earlier call to the ftell function on the same
N    * stream and whence shall be SEEK_SET.
N    * The fseek function clears the end-of-file indicator and undoes any
N    * effects of the ungetc function on the same stream. After an fseek call,
N    * the next operation on an update stream may be either input or output.
N    * Returns: nonzero only for a request that cannot be satisfied.
N    */
Nextern _ARMABI int fsetpos(FILE * __restrict /*stream*/, const fpos_t * __restrict /*pos*/) __attribute__((__nonnull__(1,2)));
Xextern __declspec(__nothrow) int fsetpos(FILE * __restrict  , const fpos_t * __restrict  ) __attribute__((__nonnull__(1,2)));
N   /*
N    * sets  the file position indicator for the stream pointed to by stream
N    * according to the value of the object pointed to by pos, which shall be a
N    * value returned by an earlier call to the fgetpos function on the same
N    * stream.
N    * The fsetpos function clears the end-of-file indicator and undoes any
N    * effects of the ungetc function on the same stream. After an fsetpos call,
N    * the next operation on an update stream may be either input or output.
N    * Returns: zero, if successful. Otherwise nonzero is returned and the
N    *          integer expression errno is set to an implementation-defined
N    *          nonzero value.
N    */
Nextern _ARMABI long int ftell(FILE * /*stream*/) __attribute__((__nonnull__(1)));
Xextern __declspec(__nothrow) long int ftell(FILE *  ) __attribute__((__nonnull__(1)));
N   /*
N    * obtains the current value of the file position indicator for the stream
N    * pointed to by stream. For a binary stream, the value is the number of
N    * characters from the beginning of the file. For a text stream, the file
N    * position indicator contains unspecified information, usable by the fseek
N    * function for returning the file position indicator to its position at the
N    * time of the ftell call; the difference between two such return values is
N    * not necessarily a meaningful measure of the number of characters written
N    * or read.
N    * Returns: if successful, the current value of the file position indicator.
N    *          On failure, the ftell function returns -1L and sets the integer
N    *          expression errno to an implementation-defined nonzero value.
N    */
Nextern _ARMABI void rewind(FILE * /*stream*/) __attribute__((__nonnull__(1)));
Xextern __declspec(__nothrow) void rewind(FILE *  ) __attribute__((__nonnull__(1)));
N   /*
N    * sets the file position indicator for the stream pointed to by stream to
N    * the beginning of the file. It is equivalent to
N    *          (void)fseek(stream, 0L, SEEK_SET)
N    * except that the error indicator for the stream is also cleared.
N    * Returns: no value.
N    */
N
Nextern _ARMABI void clearerr(FILE * /*stream*/) __attribute__((__nonnull__(1)));
Xextern __declspec(__nothrow) void clearerr(FILE *  ) __attribute__((__nonnull__(1)));
N   /*
N    * clears the end-of-file and error indicators for the stream pointed to by
N    * stream. These indicators are cleared only when the file is opened or by
N    * an explicit call to the clearerr function or to the rewind function.
N    * Returns: no value.
N    */
N
Nextern _ARMABI int feof(FILE * /*stream*/) __attribute__((__nonnull__(1)));
Xextern __declspec(__nothrow) int feof(FILE *  ) __attribute__((__nonnull__(1)));
N   /*
N    * tests the end-of-file indicator for the stream pointed to by stream.
N    * Returns: nonzero iff the end-of-file indicator is set for stream.
N    */
Nextern _ARMABI int ferror(FILE * /*stream*/) __attribute__((__nonnull__(1)));
Xextern __declspec(__nothrow) int ferror(FILE *  ) __attribute__((__nonnull__(1)));
N   /*
N    * tests the error indicator for the stream pointed to by stream.
N    * Returns: nonzero iff the error indicator is set for stream.
N    */
Nextern _ARMABI void perror(const char * /*s*/);
Xextern __declspec(__nothrow) void perror(const char *  );
N   /*
N    * maps the error number  in the integer expression errno to an error
N    * message. It writes a sequence of characters to the standard error stream
N    * thus: first (if s is not a null pointer and the character pointed to by
N    * s is not the null character), the string pointed to by s followed by a
N    * colon and a space; then an appropriate error message string followed by
N    * a new-line character. The contents of the error message strings are the
N    * same as those returned by the strerror function with argument errno,
N    * which are implementation-defined.
N    * Returns: no value.
N    */
N
Nextern _ARMABI int _fisatty(FILE * /*stream*/ ) __attribute__((__nonnull__(1)));
Xextern __declspec(__nothrow) int _fisatty(FILE *   ) __attribute__((__nonnull__(1)));
N    /* Returns 1 if the stream is tty (stdin), 0 otherwise. Not ANSI compliant.
N     */
N
Nextern _ARMABI void __use_no_semihosting_swi(void);
Xextern __declspec(__nothrow) void __use_no_semihosting_swi(void);
Nextern _ARMABI void __use_no_semihosting(void);
Xextern __declspec(__nothrow) void __use_no_semihosting(void);
N    /*
N     * Referencing either of these symbols will cause a link-time
N     * error if any library functions that use semihosting SWI
N     * calls are also present in the link, i.e. you define it if
N     * you want to make sure you haven't accidentally used any such
N     * SWIs.
N     */
N
N    #ifdef __cplusplus
S        }  /* extern "C" */
S      }  /* namespace std */
N    #endif
N  #endif /* __STDIO_DECLS */
N
N  #if _AEABI_PORTABILITY_LEVEL != 0 && !defined _AEABI_PORTABLE
X  #if _AEABI_PORTABILITY_LEVEL != 0 && !0L
S    #define _AEABI_PORTABLE
N  #endif
N
N  #if defined(__cplusplus) && !defined(__STDIO_NO_EXPORTS)
X  #if 0L && !0L
S    using ::std::size_t;
S    using ::std::fpos_t;
S    using ::std::FILE;
S    using ::std::remove;
S    using ::std::rename;
S    using ::std::tmpfile;
S    using ::std::tmpnam;
S    using ::std::fclose;
S    using ::std::fflush;
S    using ::std::fopen;
S    using ::std::freopen;
S    using ::std::setbuf;
S    using ::std::setvbuf;
S    using ::std::fprintf;
S    using ::std::_fprintf;
S    using ::std::printf;
S    using ::std::_printf;
S    using ::std::sprintf;
S    using ::std::_sprintf;
S    #if !defined(__STRICT_ANSI__) || (defined(__STDC_VERSION__) && 199901L <= __STDC_VERSION__)
S      using ::std::snprintf;
S      using ::std::vsnprintf;
S      using ::std::vfscanf;
S      using ::std::vscanf;
S      using ::std::vsscanf;
S    #endif
S    using ::std::_snprintf;
S    using ::std::_vsnprintf;
S    using ::std::fscanf;
S    using ::std::_fscanf;
S    using ::std::scanf;
S    using ::std::_scanf;
S    using ::std::sscanf;
S    using ::std::_sscanf;
S    using ::std::_vfscanf;
S    using ::std::_vscanf;
S    using ::std::_vsscanf;
S    using ::std::vprintf;
S    using ::std::_vprintf;
S    using ::std::vfprintf;
S    using ::std::_vfprintf;
S    using ::std::vsprintf;
S    using ::std::_vsprintf;
S    using ::std::fgetc;
S    using ::std::fgets;
S    using ::std::fputc;
S    using ::std::fputs;
S    using ::std::getc;
S    using ::std::getchar;
S    using ::std::gets;
S    using ::std::putc;
S    using ::std::putchar;
S    using ::std::puts;
S    using ::std::ungetc;
S    using ::std::fread;
S    using ::std::__fread_bytes_avail;
S    using ::std::fwrite;
S    using ::std::fgetpos;
S    using ::std::fseek;
S    using ::std::fsetpos;
S    using ::std::ftell;
S    using ::std::rewind;
S    using ::std::clearerr;
S    using ::std::feof;
S    using ::std::ferror;
S    using ::std::perror;
S    using ::std::_fisatty;
S    using ::std::__use_no_semihosting_swi;
S    using ::std::__use_no_semihosting;
N  #endif
N
N#endif /* ndef __stdio_h */
N
N/* end of stdio.h */
N
L 15 ".\core\jpstm32_usart.h" 2
N
N
N
N#define USART_REC_LEN  		256  	//定义最大接收字节数 256
N#define EN_USART1_RX 			1		//使能（1）/禁止（0）串口1接收
N#define RX_MASK						0x00FF
N//接收缓冲区状态标记
N#define	RX_BUF_F					0x01
N#define RX_BUF_E					0x02
Ntypedef struct {
N	s8	rx_buf[USART_REC_LEN];
X	s8	rx_buf[256];
N	u16	rx_seek;
N	u16	rx_size;
N	u8	rx_stat;
N}USARTypDef;
N	  	
N//如果想串口中断接收，请不要注释以下宏定义
Nvoid usart1_init(u32 pclk2,u32 bound);
N//获取一个字节的数据
Ns8	usart1_getc(void);
N//获取一个定长的字符串
Nu8 usart1_gets(s8* buf, u16 len);
N
N
N#endif
L 5 "app\game.h" 2
N#include "jpstm32_sysclk.h"
L 1 ".\core\jpstm32_sysclk.h" 1
N/*************************************************************
N * File name: jpstm32_sysclk.h
N * Author: Duke An
N * Version: 0.1
N * Date: 20140617
N * Description: 系统时钟操作头文件
N * Copyright @ 2013 by Briup Technology,Inc. All rights Reserved.
N *************************************************************/
N
N#ifndef __JPSTM32_SYSCLK_H__
N#define __JPSTM32_SYSCLK_H__
N
N#include "jpstm32_common.h"
N
N
N/* * * * * * * * * * * * * * * * * * * * * * * * * * * * *
N * Function:	clk_init
N * Description: 初始化系统时钟
N * Input: 
N *	>PLL, 倍频
N * Output: NULL
N * Return: NULL
N * Others: NULL
N * * * * * * * * * * * * * * * * * * * * * * * * * * * * */
N extern void clk_init(u8 pll);
N
N#endif
L 6 "app\game.h" 2
N#include "jpstm32_key.h"
L 1 ".\devices\jpstm32_key.h" 1
N/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
N * File name: jpstm32_key.h
N * Author: Duke An
N * Version: 0.1
N * Date: 2014-06-17
N * Description: 五向按键功能定义
N * Copyright @ 2013 by Briup Technology,Inc. All rights Reserved.
N * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */
N #ifndef __JPSTM32_KEY_H__
N #define __JPSTM32_KEY_H__
N 
N #include "jpstm32_common.h"
N 
N /* * * * * * * * * * * * * * * * * * * * * * * * * * * 
N  * * * * * * * * * * * * * * * * * * * * * * * * * * */
N
N /* * * * * * * * * * * * * * * * * * * * * * * * * * * 
N  * 五向按键键值
N  * * * * * * * * * * * * * * * * * * * * * * * * * * */
N typedef enum{
N	 KEY_NOKEY,		/*没有按键按下*/
N	 KEY_UP,		/*上键按下*/
N	 KEY_DOWN,		/*下键按下*/
N	 KEY_LEFT,		/*左键按下*/
N	 KEY_RIGHT,		/*右键按下*/
N	 KEY_CENTER		/*中间键按下*/
N}KEY_VAL;
N
N/* * * * * * * * * * * * * * * * * * * * * * * * * * * * *
N * Function:	key_init
N * Description: 初始化五向按键
N * Input: NULL
N * Output: NULL
N * Return: NULL
N * Others: NULL
N * * * * * * * * * * * * * * * * * * * * * * * * * * * * */
Nextern void key_init(void);
N
N/* * * * * * * * * * * * * * * * * * * * * * * * * * * * *
N * Function:	key_init
N * Description: 扫描五向按键
N * Input: NULL
N * Output: NULL
N * Return: 如有按键按下返回对应键值 否则返回KEY_NOKEY
N * Others: NULL
N * * * * * * * * * * * * * * * * * * * * * * * * * * * * */
Nextern KEY_VAL key_scan(void);
N
N
N
N #endif
N
L 7 "app\game.h" 2
N#include "dma.h"
L 1 ".\devices\dma.h" 1
N#ifndef __DMA_H__
N#define __DMA_H__
N#include "jpstm32_common.h"
N
N//配置DMA
Nvoid DMA_Init(void);
N
Nvoid DMA_LCD(void);
N
N//使能DMA
Nvoid DMA_Enable(void);
N
N#endif
N
N
N
L 8 "app\game.h" 2
N#include "touch.h"
L 1 ".\devices\touch.h" 1
N/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
N * File name: jpstm32_touch.h
N * Author: Duke An
N * Version: 0.1
N * Date: 2014-06-17
N * Description: 触摸屏驱动头文件
N * Copyright @ 2013 by Briup Technology,Inc. All rights Reserved.
N * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */
N
N#ifndef __TOUCH_H__
N#define __TOUCH_H__
N
N#include "jpstm32_common.h"
N#include "jpstm32_lcd.h"
N
N#define TP_DEBUG_ENABLE	1
N#define TP_PRES_DOWN 0x80  //触屏被按下	  
N#define TP_CATH_PRES 0x40  //有按键按下了 
N
N//触摸屏引脚定义
N#define TP_PEN		PFxIn(10) //按下检测
N#define TP_OUT		PFxIn(8)	//主机输入
N#define	TP_IN			PFxOut(9)	//主机输出
N#define	TP_CLK		PBxOut(1)	//时钟输出
N#define	TP_CS			PBxOut(2)	//片选
N
Ntypedef struct{
N	u8 	(*init)(void);
N	u8	(*scan)(u8);
N	u8 	(*adjust)(void);
N	//上一次坐标
N	u16		lastX;
N	u16		lastY;
N	//此次坐标
N	u16		currX;
N	u16		currY;
N	//屏幕是否被按下，按下 1 松开 0
N	u8		penStat;
N	float			xfac;
N	float 		yfac;
N	short			xoff;
N	short			yoff;
N	PenDirect direct;
N	u8				cmdRdx;
N	u8				cmdRdy;
N}TouchTpyDef;
N
Nstatic TouchTpyDef	t_pad;
N
N/* * * * * * * * * * * * * * * * * * * * * * * * * * * * *
N * Function:	tp_spiWbyte
N * Description: 向触摸屏写入一个字节
N * Input: NULL
N * Output: NULL
N * Return: NULL
N * Others: NULL
N * * * * * * * * * * * * * * * * * * * * * * * * * * * * */
Nvoid tp_spiWbyte(u8 byte);
N
N/* * * * * * * * * * * * * * * * * * * * * * * * * * * * *
N * Function:	tp_readAD
N * Description: 读取AD转换的值
N * Input: 获取AD值的命令
N * Output: NULL
N * Return: 返回读到的AD值
N * Others: NULL
N * * * * * * * * * * * * * * * * * * * * * * * * * * * * */
Nu16 tp_readAD(u8 cmd);
N
N/* * * * * * * * * * * * * * * * * * * * * * * * * * * * *
N * Function:	tp_readXorY
N * Description: 带滤波的读取x或y的值
N * Input: 获取x或y值的命令
N * Output: NULL
N * Return: 返回读到的值
N * Others: 连续读取N次对这些数据进行排序，去掉最大和最小值
N *				 剩下的数据区平均值
N * * * * * * * * * * * * * * * * * * * * * * * * * * * * */
Nu16 tp_readXorY(u8 cmd);
N
N/* * * * * * * * * * * * * * * * * * * * * * * * * * * * *
N * Function:	tp_readXandY
N * Description: 读取x与y的值
N * Input: 获取保存x y值的变量
N * Output: NULL
N * Return: 返回0成功 否则失败
N * Others: NULL
N * * * * * * * * * * * * * * * * * * * * * * * * * * * * */
Nu8 tp_readXandY(u16* x, u16* y);
N
N/* * * * * * * * * * * * * * * * * * * * * * * * * * * * *
N * Function:	tp_readXandY2
N * Description: 二次滤波 读取x与y的值
N * Input: 获取保存x y值的变量
N * Output: NULL
N * Return: 返回0成功 否则失败
N * Others: 连续2次读取触摸屏IC,且这两次的偏差不能超过
N *  			 ERR_RANGE,满足条件,则认为读数正确,否则读数错误
N *		     该函数能大大提高准确度
N * * * * * * * * * * * * * * * * * * * * * * * * * * * * */
Nu8 tp_readXandY2(u16* x, u16* y);
N
N/* * * * * * * * * * * * * * * * * * * * * * * * * * * * *
N * Function:	tp_drawAdjustPoint
N * Description: 绘制屏幕校准点
N * Input: 绘制坐标， 颜色
N * Output: NULL
N * Return: NULL
N * Others: NULL
N * * * * * * * * * * * * * * * * * * * * * * * * * * * * */
Nvoid tp_drawAdjustPoint(u16 x, u16 y, u16 color);
N
N/* * * * * * * * * * * * * * * * * * * * * * * * * * * * *
N * Function:	tp_scan(u8 tp)
N * Description: 绘制屏幕校准点
N * Input:  tp: 1 屏幕坐标，0 物理坐标
N * Output: NULL
N * Return: 当前屏幕状态 0 没有按下 1 有按下
N * Others: NULL
N * * * * * * * * * * * * * * * * * * * * * * * * * * * * */
Nu8 tp_scan(u8 tp);
N
N/* * * * * * * * * * * * * * * * * * * * * * * * * * * * *
N * Function:	tp_init
N * Description: 初始化触摸屏
N * Input:  NULL
N * Output: NULL
N * Return: 成功返回0 否则返回非0
N * Others: NULL
N * * * * * * * * * * * * * * * * * * * * * * * * * * * * */
Nu8 tp_init(void);
N
N/* * * * * * * * * * * * * * * * * * * * * * * * * * * * *
N * Function:	tp_adjust
N * Description: 屏幕校准
N * Input:  NULL
N * Output: NULL
N * Return: 成功返回0 否则返回非0
N * Others: NULL
N * * * * * * * * * * * * * * * * * * * * * * * * * * * * */
Nu8 tp_adjust(void);
N
N/* * * * * * * * * * * * * * * * * * * * * * * * * * * * *
N * Function:	tp_showAdjustInfo
N * Description: 打印校准信息
N * Input:  NULL
N * Output: NULL
N * Return: 成功返回0 否则返回非0
N * Others: NULL
N * * * * * * * * * * * * * * * * * * * * * * * * * * * * */
Nu8 tp_printAdjustInfo(u16 pos[][2], u16 fac);
N
N/* * * * * * * * * * * * * * * * * * * * * * * * * * * * *
N * Function:	tp_screenTrack
N * Description: 屏幕操作跟踪
N * Input:  NULL
N * Output: NULL
N * Return: 
N * Others: NULL
N * * * * * * * * * * * * * * * * * * * * * * * * * * * * */
Nvoid tp_screenTrack(void);
N
N#endif
N
N
N
N
N
N
N
N
N
N
L 9 "app\game.h" 2
N#include "timer.h"
L 1 ".\devices\timer.h" 1
N#ifndef __TIMER_H
N#define __TIMER_H
N#include "jpstm32_common.h"
N
N//通过改变TIM3->CCR2的值来改变占空比，从而控制LED0的亮度
N#define LED0_PWM_VAL TIM3->CCR2    
N//TIM4 CH1作为PWM DAC的输出通道 
N#define PWM_DAC_VAL  TIM4->CCR1 
N
N//////////////////////LCD背光PWM占空比设置////////////////////////////////////////
N#define LCD_BLPWM_VAL   TIM8->CCR2 	//LCD PWM背光设置
N
Nvoid TIM3_Int_Init(u16 arr,u16 psc);
Nvoid TIM3_PWM_Init(u16 arr,u16 psc);
Nvoid TIM5_Cap_Init(u16 arr,u16 psc);
Nvoid TIM4_PWM_Init(u16 arr,u16 psc);
Nvoid TIM6_Int_Init(u16 arr,u16 psc);
Nvoid LCD_PWM_Init(void);
N
N#endif
N
N
N
L 10 "app\game.h" 2
N#include "jpstm32_delay.h"
L 1 ".\core\jpstm32_delay.h" 1
N/*************************************************************
N * File name: jpstm32_delay.h
N * Author: Duke An
N * Version: 0.1
N * Date: 20140617
N * Description: 系统延时相关定义
N * Copyright @ 2013 by Briup Technology,Inc. All rights Reserved.
N *************************************************************/
N#ifndef __JPSTM32_DELAY_H__
N#define	__JPSTM32_DELAY_H__
N
N#include "jpstm32_common.h"
N
Nextern void _delay_init(u8 SYSCLK);
Nextern void _delay_ms(u16 ms);
Nextern void _delay_us(u32 us);
N
N#endif
L 11 "app\game.h" 2
N#include "adc.h"
L 1 ".\devices\adc.h" 1
N#ifndef __ADC_H
N#define __ADC_H	
N#include "jpstm32_common.h"
N//本程序只供学习使用，未经作者许可，不得用于其它任何用途
N//ALIENTEK战舰STM32开发板
N//ADC 代码	   
N//正点原子@ALIENTEK
N//技术论坛:www.openedv.com
N//修改日期:2012/9/7
N//版本：V1.0
N//版权所有，盗版必究。
N//Copyright(C) 广州市星翼电子科技有限公司 2009-2019
N//All rights reserved									  
N////////////////////////////////////////////////////////////////////////////////// 
N
Nvoid Adc_Init(void);
Nu16  Get_Adc(u8 ch); 
Nu16 Get_Adc_Average(u8 ch,u8 times); 
N 
N#endif 
L 12 "app\game.h" 2
N#include "Font_Num.h"
L 1 "app\Font_Num.h" 1
N#ifndef __FONT_NUM_H
N#define __FONT_NUM_H
N#include "game.h"
L 1 "app\game.h" 1
N#ifndef __ENGINE_H
S#define __ENGINE_H
S#include "jpstm32_lcd.h"
S#include "jpstm32_usart.h"
S#include "jpstm32_sysclk.h"
S#include "jpstm32_key.h"
S#include "dma.h"
S#include "touch.h"
S#include "timer.h"
S#include "jpstm32_delay.h"
S#include "adc.h"
S#include "Font_Num.h"
S#include "24cxx.h"
S#include "fsmc.h"
S//#include "key.h"
S
Sextern const unsigned char asc2_1206[95][12];
Sextern const unsigned char asc2_1608[95][16];
Sextern u16 FlappyBird_Frame[480][320];
Svoid FlappyBird_Frame_DrawPoint( u16 x, u16 y, u16 color );
Svoid FlappyBird_Frame_Fill( u16 x, u16 y, u16 xx, u16 yy, u16 color );
Svoid FlappyBird_Frame_DrawLine( u16 x1, u16 y1, u16 x2, u16 y2 , u16 color );
Svoid FlappyBird_DrawFrame( void );
Svoid FlappyBird_Frame_Clear( void );
Svoid FlappyBird_Frame_ShowChar(u16 x,u16 y,u8 num,u8 size,u8 mode,u16 color);
Svoid FlappyBird_Frame_ShowString(u16 x,u16 y,u16 width,u16 height,u8 size,u8 *p,u16 color);
Svoid FlappyBird_Frame_DrawBGPic( u16 x,u16 y );
Svoid FlappyBird_Frame_DrawLogo( u16 x, u16 y );
Svoid FlappyBird_Frame_DrawButton( u16 x, u16 y , u8 mode );
Svoid FlappyBird_Frame_DrawBird( u16 x, u16 y , u8 mode );
Svoid FlappyBird_Frame_DrawBird_Play( u16 x, u16 y, u8 mode );
Svoid FlappyBird_Frame_DrawColumn_Play_times( int x, u16 y, u8 level, u8 column, u8 times );
Su16 FlappyBird_Frame_MixColor(u16 color_1,u16 color_2,u8 percent);
Su16 FlappyBird_Frame_IntensityControl(u16 color,u8 percent,u8 mode); //调整亮度,0模式是调暗,1模式是调亮
Svoid FlappyBird_Frame_AllIntensityControl( u8 percent, u8 mode );//全屏调亮调暗
S//void FlappyBird_Frame_DrawBird_test( u16 x, u16 y , u8 ang );//旋转函数测试不成功
Svoid FlappyBird_DrawGreenBar( u16 x, u16 y, u16 color );
Svoid FlappyBird_DrawGreenBar_Play( u16 x, u16 y,u8 Speed );
Svoid FlappyBird_DrawParallelogram( u16 x, u16 y, u16 color );
S
S
Svoid FlappyBird_Stage_Start( void );
Svoid FlappyBird_Stage_PP( void );
Svoid FlappyBird_Stage_Play( void );
Svoid FlappyBird_Stage_Over( void );
N#endif
N
N
L 4 "app\Font_Num.h" 2
N#define SHADOW_OFFSET 2
Nvoid Font_DrawNum_Big( u16 x, u16 y, u8 * num );
Nvoid Font_DrawNum_Small( u16 x, u16 y, u8 * num );
Nvoid Font_Num_DrawNum( u16 x, u16 y, u16 num, u8 mode );
Nvoid Font_DrawNum_Black( u16 x, u16 y, u8 * num );
Nvoid Font_Num_DrawNum_Multi( u16 x, u16 y, u32 num, u8 mode );
N#endif
L 13 "app\game.h" 2
N#include "24cxx.h"
L 1 ".\devices\24cxx.h" 1
N#ifndef __24CXX_H
N#define __24CXX_H
N#include "iic.h"   
L 1 ".\devices\iic.h" 1
N#ifndef __IIC_H__
N#define __IIC_H__
N
N#include "jpstm32_common.h"
N
N#define SDA_IN() {GPIOB->CRH &= 0xFFFF0FFF;GPIOB->CRH |= 8<<12;}
N#define SDA_OUT() {GPIOB->CRH &= 0xFFFF0FFF;GPIOB->CRH |= 3<<12;}
N
N/*
N#define IIC_SCL(x)	{x == 1? GPIOB->BSRR |= 1<<10:GPIOB->BSRR |= 1<<26;}		//SCL
N#define IIC_SDA(x)	{x == 1? GPIOB->BSRR |= 1<<11:GPIOB->BSRR |= 1<<27;}		//SDA
N*/
N#define IIC_SCL_L GPIOB->BSRR |= 1<<26
N#define IIC_SCL_H GPIOB->BSRR |= 1<<10
N#define IIC_SDA_L GPIOB->BSRR |= 1<<27
N#define IIC_SDA_H GPIOB->BSRR |= 1<<11
N
N#define READ_SDA	GPIOB->IDR & 1<<11		//输入SDA
N
N//初始化IIC的IO口
Nvoid IIC_Init(void);
N//发送IIC开始信号
Nvoid IIC_Start(void);
N//发送IIC停止信号
Nvoid IIC_Stop(void);
N//IIC发送一个字节
Nvoid IIC_Send_Byte(u8 txd);
N//IIC读取一个字节
Nu8	IIC_Read_Byte(u8 ack);
N//IIC等待ACK信号
Nu8 IIC_Wait_Ack(void);
N//IIC发送ACK信号
Nvoid IIC_Ack(void);
N//IIC不发送Ack信号
Nvoid IIC_NAck(void);
N//写一个字节
Nvoid IIC_Write_One_Byte(u8 daddr,u8 addr,u8 data);
N//读一个字节
Nu8 IIC_Read_One_Byte(u8 daddr,u8 addr);
N
N#endif
L 4 ".\devices\24cxx.h" 2
N//////////////////////////////////////////////////////////////////////////////////	 
N//本程序只供学习使用，未经作者许可，不得用于其它任何用途
N//ALIENTEK战舰STM32开发板
N//24CXX驱动 代码(适合24C01~24C16,24C32~256未经过测试!有待验证!)		   
N//正点原子@ALIENTEK
N//技术论坛:www.openedv.com
N//修改日期:2012/9/9
N//版本：V1.0
N//版权所有，盗版必究。
N//Copyright(C) 广州市星翼电子科技有限公司 2009-2019
N//All rights reserved									  
N//////////////////////////////////////////////////////////////////////////////////
N
N#define AT24C02		255
N//Mini STM32开发板使用的是24c02，所以定义EE_TYPE为AT24C02
N#define EE_TYPE AT24C02
N					  
Nu8 AT24CXX_ReadOneByte(u16 ReadAddr);							//指定地址读取一个字节
Nvoid AT24CXX_WriteOneByte(u16 WriteAddr,u8 DataToWrite);		//指定地址写入一个字节
Nvoid AT24CXX_WriteLenByte(u16 WriteAddr,u32 DataToWrite,u8 Len);//指定地址开始写入指定长度的数据
Nu32 AT24CXX_ReadLenByte(u16 ReadAddr,u8 Len);					//指定地址开始读取指定长度数据
Nvoid AT24CXX_Write(u16 WriteAddr,u8 *pBuffer,u16 NumToWrite);	//从指定地址开始写入指定长度的数据
Nvoid AT24CXX_Read(u16 ReadAddr,u8 *pBuffer,u16 NumToRead);   	//从指定地址开始读出指定长度的数据
N
Nu8 AT24CXX_Check(void);  //检查器件
Nvoid AT24CXX_Init(void); //初始化IIC
N#endif
N
N
N
N
N
N
N
N
N
N
N
N
N
N
N
N
L 14 "app\game.h" 2
N#include "fsmc.h"
L 1 ".\devices\fsmc.h" 1
N#ifndef __FSMC_H__
N#define __FSMC_H__
N
N
N#include "jpstm32_gpio.h"
N
N/*void  FSMC_SRAM_Init(void);
Nvoid  FSMC_SRAM_WriteBuffer(u8 *pBuffer,u32 WriteAddr,u32 NumHalfwordToWrite);
Nvoid  FSMC_SRAM_ReadBuffer(u8 *pBuffer,u32 ReadAddr,u32 NumHalfwordToWrite);
N
Nvoid fsmc_sram_test_write(u32 addr,u8 data);
Nu8 fsmc_sram_test_read(u32 addr);
N*/
N
N
N//FSMC初始化外部SRAM
Nvoid FSMC_SRAM_init(void);
N
Nvoid FSMC_SRAM_WriteBuffer(u8* pBuffer,u32 WriteAddr,u32 NumHalfwordToWrite);
N
Nvoid FSMC_SRAM_ReadBuffer(u8* pBuffer,u32 ReadAddr,u32 NumHalfwordToRead);
N
N#endif
L 15 "app\game.h" 2
N//#include "key.h"
N
Nextern const unsigned char asc2_1206[95][12];
Nextern const unsigned char asc2_1608[95][16];
Nextern u16 FlappyBird_Frame[480][320];
Nvoid FlappyBird_Frame_DrawPoint( u16 x, u16 y, u16 color );
Nvoid FlappyBird_Frame_Fill( u16 x, u16 y, u16 xx, u16 yy, u16 color );
Nvoid FlappyBird_Frame_DrawLine( u16 x1, u16 y1, u16 x2, u16 y2 , u16 color );
Nvoid FlappyBird_DrawFrame( void );
Nvoid FlappyBird_Frame_Clear( void );
Nvoid FlappyBird_Frame_ShowChar(u16 x,u16 y,u8 num,u8 size,u8 mode,u16 color);
Nvoid FlappyBird_Frame_ShowString(u16 x,u16 y,u16 width,u16 height,u8 size,u8 *p,u16 color);
Nvoid FlappyBird_Frame_DrawBGPic( u16 x,u16 y );
Nvoid FlappyBird_Frame_DrawLogo( u16 x, u16 y );
Nvoid FlappyBird_Frame_DrawButton( u16 x, u16 y , u8 mode );
Nvoid FlappyBird_Frame_DrawBird( u16 x, u16 y , u8 mode );
Nvoid FlappyBird_Frame_DrawBird_Play( u16 x, u16 y, u8 mode );
Nvoid FlappyBird_Frame_DrawColumn_Play_times( int x, u16 y, u8 level, u8 column, u8 times );
Nu16 FlappyBird_Frame_MixColor(u16 color_1,u16 color_2,u8 percent);
Nu16 FlappyBird_Frame_IntensityControl(u16 color,u8 percent,u8 mode); //调整亮度,0模式是调暗,1模式是调亮
Nvoid FlappyBird_Frame_AllIntensityControl( u8 percent, u8 mode );//全屏调亮调暗
N//void FlappyBird_Frame_DrawBird_test( u16 x, u16 y , u8 ang );//旋转函数测试不成功
Nvoid FlappyBird_DrawGreenBar( u16 x, u16 y, u16 color );
Nvoid FlappyBird_DrawGreenBar_Play( u16 x, u16 y,u8 Speed );
Nvoid FlappyBird_DrawParallelogram( u16 x, u16 y, u16 color );
N
N
Nvoid FlappyBird_Stage_Start( void );
Nvoid FlappyBird_Stage_PP( void );
Nvoid FlappyBird_Stage_Play( void );
Nvoid FlappyBird_Stage_Over( void );
N#endif
N
N
L 2 "app\game.c" 2
N#include "flappybird_background.c"
L 1 ".\app\RES\Pic\flappybird_background.c" 1
Nconst unsigned char gImage_flappybird_background[33600] = { /* 0X00,0X10,0XF0,0X00,0X46,0X00,0X01,0X1B, */
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X45,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X45,0XF9,0X45,0XF9,0X45,0XF9,0X45,0XF9,0X45,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X45,
N0XF9,0X45,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X45,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X45,0XF9,0X45,0XF9,0X4D,0XF9,0X4D,0XF9,0X45,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X45,
N0XF9,0X45,0X39,0X4E,0X3A,0X56,0XF8,0X55,0X39,0X56,0X39,0X56,0X38,0X5E,0X39,0X66,
N0X39,0X66,0X39,0X66,0X39,0X66,0X39,0X66,0X39,0X66,0X39,0X5E,0X39,0X5E,0X39,0X56,
N0X39,0X56,0X39,0X56,0X39,0X4E,0XF8,0X4D,0XF9,0X45,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X45,0XF9,0X45,0XF9,0X45,0XF9,0X45,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X45,0XF9,0X45,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0X39,0X56,0X39,0X56,0X39,0X56,
N0X39,0X56,0X39,0X56,0X39,0X56,0X39,0X56,0X39,0X56,0X39,0X56,0X39,0X56,0X39,0X56,
N0X39,0X4E,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X45,0XF9,0X45,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X45,0XF9,0X45,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X45,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X45,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0X39,0X4E,0X39,0X56,
N0X39,0X56,0X38,0X56,0X39,0X56,0X39,0X5E,0X39,0X6E,0X38,0X6E,0X79,0XDF,0XBA,0XDF,
N0XBA,0XDF,0XBA,0XDF,0XBA,0XE7,0XBA,0XDF,0XFA,0XD7,0XBA,0XD7,0XBB,0XD7,0X79,0X76,
N0X38,0X5E,0X39,0X5E,0X39,0X4E,0X38,0X56,0X39,0X56,0X39,0X56,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X45,0XF9,0X45,0XF9,0X45,0XF9,0X45,
N0XF9,0X45,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0X39,0X56,0X39,0X4E,0X39,0X4E,0X39,0X56,0X39,0X56,0X38,0X5E,
N0X39,0X66,0X39,0X66,0X39,0X5E,0X39,0X5E,0X39,0X66,0X39,0X5E,0X39,0X5E,0X38,0X56,
N0X38,0X56,0X39,0X4E,0X39,0X56,0X39,0X4E,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X45,0XF9,0X45,0XF9,0X4D,
N0XF9,0X45,0XF9,0X45,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X45,0XF9,0X45,0XF9,0X4D,0XF9,0X45,0XF9,0X45,0XF9,0X45,0XF9,0X45,0XF9,0X4D,
N0XF9,0X45,0XF9,0X45,0XF9,0X4D,0X39,0X4E,0X39,0X4E,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X45,0XF9,0X4D,0XF9,0X4D,0X39,0X56,0X79,0X56,0X39,0X56,
N0X39,0X5E,0X7A,0X66,0X79,0X6E,0XFD,0XC7,0XFC,0XCF,0XFC,0XD7,0XFB,0XDF,0XFB,0XE7,
N0XFA,0XE7,0XFB,0XE7,0XFA,0XE7,0XFA,0XE7,0XFB,0XE7,0XFA,0XDF,0XFA,0XE7,0XFD,0XCF,
N0XFC,0XC7,0XFD,0XC7,0X79,0X6E,0X39,0X5E,0X39,0X5E,0X38,0X56,0X39,0X4E,0X39,0X56,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0X39,0X56,0X39,0X56,0X39,0X56,0X39,0X56,0X3A,0X5E,0X39,0X56,
N0X39,0X66,0X39,0X66,0X39,0X66,0X39,0X66,0X39,0X66,0X79,0X5E,0X39,0X56,0XF9,0X55,
N0X3A,0X56,0X3A,0X56,0X39,0X56,0X39,0X56,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X45,0XF9,0X45,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X45,0XF9,0X45,0XF9,0X45,0XF9,0X45,0XF9,0X45,0XF9,0X45,0XF9,0X45,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X45,0XF9,0X4D,0XF9,0X4D,
N0XF7,0X55,0XF8,0X55,0XF8,0X4D,0XF8,0X4D,0XF8,0X4D,0XF8,0X4D,0XF8,0X4D,0XF8,0X4D,
N0XF8,0X4D,0XF9,0X4D,0XF9,0X4D,0X39,0X56,0X39,0X4E,0XF9,0X45,0XF9,0X4D,0XF9,0X45,
N0XF9,0X45,0XF9,0X45,0XF9,0X45,0XF9,0X45,0X39,0X46,0X39,0X56,0XFA,0X55,0XF9,0X55,
N0X39,0X5E,0X79,0X66,0X78,0X6E,0XBA,0XDF,0XBA,0XDF,0XFA,0XDF,0XFA,0XDF,0XFB,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XEF,0XFA,0XDF,0XFB,0XDF,0XFB,0XE7,
N0XBA,0XD7,0XBB,0XD7,0X78,0X76,0X38,0X5E,0X39,0X5E,0X39,0X56,0X39,0X4E,0X39,0X56,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X45,0XF9,0X45,0XF9,0X45,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X45,0XF9,0X45,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X45,0XF9,0X4D,0XF9,0X4D,0XF9,0X45,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X45,0XF9,0X45,0XF9,0X45,0XF9,0X45,0X39,0X4E,0X39,0X56,
N0X39,0X56,0XF9,0X55,0X3A,0X56,0X3A,0X5E,0X39,0X5E,0X78,0X6E,0XBB,0XD7,0XBA,0XD7,
N0XBA,0XDF,0XBA,0XDF,0XBA,0XDF,0XBA,0XDF,0XBA,0XDF,0XFA,0XD7,0XBB,0XD7,0X38,0X6E,
N0X79,0X6E,0X39,0X56,0X39,0X56,0X3A,0X56,0X39,0X56,0X3A,0X56,0X39,0X4E,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0X39,0X4E,0X39,0X4E,0XF9,0X55,0X39,0X56,
N0X39,0X56,0X39,0X4E,0X39,0X56,0X39,0X56,0X39,0X56,0X39,0X56,0X39,0X56,0X38,0X4E,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X45,
N0XF9,0X45,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X45,0XF9,0X4D,0XF9,0X4D,0XF9,0X45,
N0XF9,0X45,0XF9,0X4D,0XF9,0X45,0XF9,0X4D,0XF8,0X4D,0XF9,0X4D,0XFC,0XDF,0XFC,0XDF,
N0XFB,0XDF,0XFC,0XDF,0XFB,0XDF,0XFA,0XDF,0XBA,0XD7,0XFB,0XD7,0XBB,0XCF,0X37,0X7E,
N0X7A,0X66,0X39,0X66,0X39,0X5E,0X39,0X56,0X39,0X4E,0X38,0X56,0X39,0X56,0X39,0X56,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X45,0X39,0X56,0X39,0X56,0X39,0X56,0X39,0X5E,0X39,0X66,
N0XBA,0XDF,0XFA,0XDF,0XFA,0XDF,0XFA,0XE7,0XFB,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XBB,0XE7,0XB9,0XDF,0XBC,0XD7,0X38,0X66,0XF8,0X55,0X39,0X56,
N0X39,0X4E,0XF9,0X55,0XF9,0X4D,0XFA,0X4D,0XF9,0X4D,0X39,0X56,0XF9,0X55,0X39,0X56,
N0X39,0X56,0X39,0X56,0X39,0X56,0X39,0X56,0X39,0X56,0X39,0X4E,0X38,0X56,0X39,0X56,
N0X39,0X56,0XF9,0X4D,0XF9,0X45,0XF9,0X4D,0XF9,0X4D,0XF9,0X45,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X45,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X45,
N0XF9,0X45,0XF9,0X45,0XF9,0X45,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X45,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0X39,0X46,0XF9,0X45,0XF9,0X4D,0XF9,0X4D,0XF9,0X45,
N0XFA,0X4D,0X3A,0X56,0X39,0X56,0X39,0X56,0X39,0X56,0X39,0X56,0X39,0X56,0X39,0X56,
N0X39,0X4E,0X39,0X4E,0XF9,0X4D,0XF9,0X4D,0XF8,0X4D,0XF9,0X45,0XF9,0X45,0XF9,0X45,
N0XF9,0X45,0XF9,0X45,0XF9,0X4D,0XF9,0X4D,0XF9,0X45,0XF9,0X4D,0X39,0X56,0X39,0X56,
N0X39,0X5E,0X39,0X5E,0X79,0X66,0XFD,0XC7,0XFD,0XC7,0XFD,0XCF,0XFB,0XE7,0XFA,0XDF,
N0XFB,0XE7,0XFB,0XE7,0XFB,0XE7,0XFB,0XE7,0XFB,0XE7,0XFA,0XE7,0XFA,0XDF,0XFD,0XCF,
N0XFD,0XCF,0XFC,0XC7,0X79,0X66,0X7A,0X6E,0X79,0X56,0X38,0X56,0X39,0X56,0X39,0X4E,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X45,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0X39,0X4E,0X39,0X4E,0X39,0X56,0X39,0X56,0X38,0X5E,0X3A,0X5E,0X3A,0X5E,
N0X79,0X66,0X39,0X66,0X39,0X66,0X39,0X66,0X39,0X66,0X39,0X66,0X3A,0X5E,0X39,0X56,
N0X39,0X56,0X39,0X4E,0X39,0X4E,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X45,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X45,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0X39,0X4E,0X39,0X4E,0XF9,0X4D,0XF9,0X45,0XF9,0X4D,0XF9,0X4D,0X39,0X46,
N0XF9,0X45,0XF9,0X45,0XF9,0X45,0XF9,0X45,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF8,0X45,0XF7,0X5D,0XFC,0XDF,0XFB,0XDF,0XFC,0XDF,0XFA,0XEF,0XFB,0XE7,
N0XFA,0XEF,0XFA,0XE7,0XFB,0XE7,0XFB,0XE7,0XFB,0XE7,0XFB,0XE7,0XFB,0XDF,0XFB,0XD7,
N0XFD,0XCF,0XFC,0XC7,0XFD,0XC7,0XFD,0XAF,0X79,0X6E,0X3A,0X5E,0X7A,0X56,0X39,0X56,
N0X39,0X4E,0X39,0X4E,0X39,0X4E,0X39,0X4E,0X39,0X56,0X39,0X5E,0XFD,0XB7,0XFD,0XC7,
N0XFA,0XDF,0XFB,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFB,0XE7,0XB9,0XD7,0XBB,0XDF,0XFC,0XC7,0X38,0X6E,0X3A,0X5E,
N0X39,0X56,0X39,0X56,0X39,0X4E,0X39,0X4E,0X39,0X4E,0X39,0X56,0X39,0X56,0X38,0X5E,
N0X39,0X66,0X39,0X66,0X79,0X66,0X79,0X66,0X39,0X66,0X39,0X5E,0X3A,0X5E,0X39,0X56,
N0X38,0X4E,0X39,0X56,0X39,0X56,0X39,0X4E,0XF9,0X45,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0X39,0X4E,0X39,0X4E,0X39,0X4E,0X39,0X56,0X39,0X4E,0X39,0X4E,
N0X39,0X56,0X39,0X56,0X39,0X56,0X39,0X56,0X39,0X4E,0XF9,0X4D,0XF9,0X45,0XF9,0X45,
N0XF9,0X45,0XF9,0X45,0XF9,0X45,0X39,0X56,0XFA,0X55,0X39,0X4E,0X39,0X4E,0X39,0X4E,
N0X39,0X56,0X39,0X56,0X38,0X56,0X39,0X5E,0X39,0X66,0X39,0X66,0X79,0X66,0X79,0X66,
N0X39,0X4E,0X3A,0X4E,0XF9,0X45,0XF9,0X45,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X45,0XF9,0X4D,0XF9,0X4D,0X39,0X46,0XF9,0X4D,0X39,0X56,0X3A,0X4E,
N0X39,0X5E,0X38,0X66,0X39,0X66,0XBA,0XD7,0XBA,0XD7,0XBA,0XE7,0XFA,0XDF,0XFA,0XD7,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XDF,0XBA,0XE7,
N0XFB,0XDF,0XB9,0XDF,0X38,0X6E,0X39,0X6E,0X39,0X5E,0X39,0X4E,0XF9,0X55,0X39,0X4E,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X45,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0X3A,0X4E,0X3A,0X4E,0X39,0X56,0X39,0X56,0X39,0X56,0X39,0X5E,0X39,0X5E,
N0X38,0X66,0X38,0X66,0X38,0X66,0X38,0X66,0X38,0X66,0X39,0X5E,0X39,0X5E,0X39,0X4E,
N0X39,0X56,0X39,0X56,0X39,0X56,0XF8,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X45,0XF9,0X4D,0XF9,0X4D,0XF9,0X45,0XF9,0X45,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0X3A,0X4E,0X3A,0X4E,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X45,0XF9,0X4D,0XF8,0X4D,
N0XF9,0X4D,0XF9,0X55,0XFD,0XCF,0XFA,0XE7,0XFA,0XE7,0XFA,0XEF,0XFB,0XE7,0XFB,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XDF,
N0XBA,0XDF,0XFA,0XDF,0XBA,0XD7,0XFB,0XCF,0X79,0X66,0X39,0X66,0X39,0X5E,0X39,0X56,
N0XF9,0X4D,0X39,0X56,0X3A,0X56,0XF9,0X55,0XF9,0X55,0X38,0X66,0XFC,0XCF,0XBB,0XDF,
N0XBA,0XDF,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFB,0XE7,0XFB,0XEF,0XBA,0XDF,0XBB,0XE7,0XBA,0XDF,0XF6,0X6D,0X3A,0X5E,
N0X39,0X56,0X39,0X56,0X39,0X56,0XF9,0X55,0X39,0X56,0X39,0X56,0X39,0X5E,0X39,0X5E,
N0X39,0X5E,0X39,0X66,0X39,0X66,0X39,0X66,0X39,0X66,0X79,0X5E,0X39,0X5E,0X39,0X56,
N0X39,0X56,0X39,0X56,0X39,0X56,0X39,0X56,0XF9,0X45,0XF9,0X4D,0XF9,0X45,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0X39,0X4E,0X39,0X56,0X39,0X56,0X39,0X56,0X39,0X56,0X39,0X56,0X39,0X56,
N0X39,0X56,0X39,0X56,0X39,0X56,0X39,0X56,0X39,0X4E,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0X39,0X56,0X39,0X56,0X38,0X56,0X39,0X56,0X39,0X4E,
N0X39,0X56,0X39,0X56,0X39,0X56,0X39,0X5E,0X39,0X5E,0X39,0X66,0X39,0X66,0X39,0X66,
N0X39,0X56,0X39,0X5E,0X39,0X5E,0X7A,0X5E,0X3A,0X66,0X79,0X5E,0X39,0X5E,0X7A,0X5E,
N0X7A,0X5E,0X3A,0X5E,0X39,0X4E,0X3A,0X4E,0XF9,0X45,0X7A,0X56,0X79,0X5E,0X79,0X66,
N0XBB,0XD7,0XBB,0XD7,0XFB,0XDF,0XF9,0XE7,0XFA,0XDF,0XFA,0XEF,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XEF,0XFA,0XE7,0XFA,0XEF,
N0XFA,0XE7,0XFA,0XE7,0XBA,0XDF,0XFB,0XE7,0XBA,0XD7,0X78,0X66,0X79,0X66,0X39,0X56,
N0X39,0X4E,0X39,0X4E,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0X39,0X4E,0X39,0X56,
N0X39,0X56,0X39,0X56,0X39,0X56,0X39,0X5E,0X7A,0X66,0X78,0X6E,0XBB,0XD7,0XFB,0XD7,
N0XBB,0XD7,0XBB,0XDF,0XFB,0XDF,0XFB,0XDF,0XBB,0XD7,0XBB,0XD7,0XFB,0XCF,0X78,0X6E,
N0X39,0X5E,0X39,0X56,0X3A,0X56,0X39,0X56,0X39,0X56,0X39,0X56,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X45,0XF9,0X45,0XF9,0X45,0X39,0X56,0X39,0X56,
N0X39,0X56,0X39,0X56,0X39,0X56,0X39,0X5E,0X39,0X5E,0X79,0X5E,0X39,0X66,0X7A,0X66,
N0X79,0X5E,0X7A,0X66,0X3A,0X5E,0X7A,0X5E,0X3A,0X4E,0XF9,0X4D,0XF9,0X4D,0XB6,0X55,
N0XFD,0XD7,0XFB,0XDF,0XBA,0XDF,0XFA,0XEF,0XFA,0XE7,0XFA,0XE7,0XFB,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFB,0XE7,0XFA,0XEF,0XFB,0XDF,0XFB,0XDF,0XFA,0XDF,0XBA,0XD7,0XFC,0XC7,0X7A,0X66,
N0X39,0X5E,0X39,0X5E,0X79,0X56,0X79,0X66,0X78,0X6E,0XBA,0XD7,0XFA,0XD7,0XFA,0XE7,
N0XFA,0XEF,0XFA,0XE7,0XFB,0XEF,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XEF,0XFA,0XE7,0XFA,0XE7,0XBA,0XDF,0X36,0X7E,0X39,0X66,
N0X39,0X5E,0X7A,0X56,0X39,0X56,0X38,0X56,0X3A,0X66,0X78,0X6E,0XBB,0XCF,0XBA,0XD7,
N0XBA,0XD7,0XBB,0XDF,0XBB,0XDF,0XFB,0XDF,0XFB,0XD7,0XFA,0XDF,0XBB,0XCF,0X78,0X6E,
N0X7A,0X66,0X7A,0X56,0X39,0X56,0XF9,0X4D,0X39,0X56,0X39,0X56,0X39,0X4E,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0X39,0X56,0X39,0X56,
N0X39,0X56,0X39,0X56,0X39,0X56,0X7A,0X5E,0X7A,0X5E,0X79,0X66,0X79,0X66,0X79,0X66,
N0X79,0X5E,0X7A,0X5E,0X3A,0X5E,0X3A,0X5E,0X39,0X56,0X39,0X56,0X39,0X56,0X39,0X56,
N0XF9,0X55,0XF9,0X4D,0X39,0X56,0X39,0X56,0X3A,0X4E,0X7A,0X56,0X3A,0X56,0X39,0X56,
N0X3A,0X5E,0X7A,0X66,0X38,0X6E,0XBB,0XD7,0XFB,0XDF,0XFB,0XD7,0XFB,0XDF,0XFB,0XDF,
N0X78,0X66,0XFE,0XAF,0XFD,0XC7,0XFD,0XC7,0XFD,0XCF,0XFD,0XCF,0XFD,0XCF,0XFD,0XC7,
N0XFD,0XC7,0XFD,0XC7,0X78,0X7E,0X7A,0X66,0X7A,0X6E,0X79,0X6E,0XFF,0XBF,0XFC,0XCF,
N0XFB,0XDF,0XFA,0XDF,0XFA,0XE7,0XFA,0XE7,0XFB,0XE7,0XFA,0XE7,0XFA,0XE7,0XFB,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFB,0XE7,
N0XFA,0XE7,0XFB,0XE7,0XFB,0XEF,0XFA,0XE7,0XB9,0XD7,0XFC,0XC7,0XFF,0XB7,0X39,0X5E,
N0X39,0X56,0X39,0X56,0X39,0X4E,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0X39,0X4E,0X39,0X56,0X39,0X56,
N0X7A,0X56,0X7A,0X66,0X38,0X6E,0XFD,0XBF,0XFD,0XCF,0XFC,0XCF,0XFB,0XE7,0XFB,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XDF,0XFB,0XDF,0XFC,0XCF,
N0XFD,0XC7,0XFE,0XC7,0X78,0X6E,0X39,0X56,0X39,0X56,0X39,0X56,0XF9,0X4D,0X39,0X4E,
N0XF9,0X4D,0XF9,0X45,0XF9,0X4D,0X39,0X4E,0X39,0X56,0X39,0X56,0X39,0X56,0X39,0X56,
N0X39,0X5E,0X7A,0X66,0X78,0X7E,0XFD,0XBF,0XFD,0XC7,0XFD,0XC7,0XFD,0XCF,0XFD,0XCF,
N0XFD,0XCF,0XFD,0XC7,0XFD,0XBF,0XBD,0XB7,0X7A,0X6E,0X7B,0X66,0X79,0X7E,0XFD,0XCF,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XEF,0XFA,0XE7,0XFB,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFB,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XDF,0XFB,0XDF,0XFD,0XCF,
N0XFC,0XC7,0XFD,0XC7,0X7A,0X76,0XFE,0XC7,0XFC,0XCF,0XFA,0XDF,0XFB,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XF9,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFB,0XE7,0XFA,0XEF,0XFA,0XE7,0XFB,0XCF,0XFD,0XC7,
N0X79,0X76,0X7A,0X76,0X7A,0X66,0XFE,0XC7,0XFD,0XCF,0XFC,0XCF,0XFA,0XDF,0XFA,0XDF,
N0XFA,0XE7,0XFB,0XE7,0XFA,0XEF,0XFA,0XE7,0XFB,0XE7,0XFA,0XE7,0XFB,0XE7,0XFD,0XCF,
N0XFC,0XC7,0XFD,0XC7,0X79,0X6E,0X7B,0X5E,0X39,0X5E,0X3A,0X56,0X39,0X56,0X39,0X56,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X45,0X39,0X56,0X39,0X4E,0X39,0X56,0X39,0X56,0X39,0X56,
N0X39,0X56,0X7A,0X66,0X78,0X76,0XFD,0XBF,0XFC,0XC7,0XFC,0XCF,0XFD,0XCF,0XFD,0XCF,
N0XFD,0XCF,0XFC,0XCF,0XFC,0XC7,0XFF,0XB7,0X79,0X66,0X79,0X5E,0X39,0X56,0X39,0X56,
N0X39,0X56,0X39,0X56,0X39,0X56,0X39,0X5E,0X38,0X6E,0XFC,0XB7,0XF7,0X6D,0X79,0X66,
N0XFD,0XC7,0XFD,0XCF,0XFC,0XCF,0XFB,0XE7,0XFB,0XDF,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0X78,0X6E,0XBB,0XCF,0XBA,0XDF,0XBA,0XDF,0XBA,0XDF,0XBA,0XDF,0XBA,0XDF,0XBA,0XDF,
N0XBA,0XDF,0XBA,0XD7,0X36,0X7E,0X79,0X76,0X38,0X7E,0X78,0X76,0XFB,0XCF,0XBA,0XD7,
N0XBA,0XDF,0XBA,0XDF,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XBA,0XDF,0XBA,0XD7,0XFC,0XCF,0X38,0X6E,
N0XF9,0X55,0X39,0X56,0X38,0X56,0XF9,0X4D,0XFA,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X45,0XF9,0X45,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X45,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X45,0XF9,0X4D,0XF9,0X4D,0XFA,0X45,0X38,0X56,0X39,0X56,0X38,0X56,
N0X38,0X66,0X39,0X6E,0X37,0X7E,0XFA,0XD7,0XBA,0XE7,0XBA,0XDF,0XFA,0XDF,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XDF,0XB9,0XDF,
N0XBA,0XDF,0XFC,0XCF,0X37,0X7E,0X38,0X5E,0X39,0X66,0XF9,0X55,0XF9,0X55,0X39,0X4E,
N0XF9,0X4D,0XF9,0X4D,0XF8,0X45,0X39,0X56,0X39,0X4E,0XF8,0X4D,0X39,0X5E,0X39,0X56,
N0X38,0X66,0X38,0X76,0X35,0X86,0X7A,0XD7,0XBA,0XDF,0XBA,0XDF,0XBA,0XDF,0XBA,0XDF,
N0XBA,0XE7,0XBA,0XD7,0XBA,0XDF,0XBA,0XCF,0X78,0X6E,0X38,0X76,0XF6,0X85,0XBA,0XD7,
N0XFA,0XDF,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XDF,0XBA,0XDF,
N0XBA,0XDF,0XFB,0XD7,0X78,0X7E,0XFC,0XCF,0XB9,0XE7,0XFA,0XDF,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFB,0XDF,
N0X38,0X7E,0X38,0X76,0X37,0X76,0XFB,0XCF,0XBA,0XDF,0XBA,0XDF,0XFA,0XDF,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XBA,0XDF,
N0XBA,0XDF,0XB9,0XD7,0X38,0X76,0X38,0X66,0X39,0X66,0X38,0X56,0X38,0X56,0X39,0X56,
N0XF9,0X45,0XF9,0X4D,0XF9,0X4D,0X39,0X56,0X39,0X4E,0X39,0X56,0X39,0X56,0X39,0X56,
N0X39,0X66,0X79,0X6E,0X36,0X86,0XBA,0XD7,0XFA,0XDF,0XBA,0XDF,0XBA,0XDF,0XBA,0XDF,
N0XBA,0XDF,0XF9,0XDF,0XBA,0XDF,0XFD,0XC7,0X77,0X76,0X38,0X66,0X38,0X5E,0X39,0X56,
N0X39,0X56,0X38,0X56,0X3A,0X56,0X39,0X66,0X37,0X6E,0XBA,0XD7,0XBB,0XC7,0X78,0X7E,
N0XBA,0XD7,0XFA,0XDF,0XB9,0XDF,0XFA,0XDF,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFC,0XD7,0XFA,0XD7,0XFB,0XDF,0XFB,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XDF,0XFB,0XDF,0XBB,0XD7,0XFA,0XD7,0XFB,0XD7,0XFB,0XE7,0XFA,0XE7,
N0XFB,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XDF,0XFB,0XDF,0XFB,0XD7,
N0X39,0X5E,0X79,0X5E,0X39,0X56,0X39,0X56,0X39,0X4E,0XF9,0X4D,0XF9,0X45,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X45,0XF9,0X4D,0XF9,0X4D,0X39,0X4E,0X39,0X56,0XF9,0X55,0X39,0X5E,0X39,0X6E,
N0XBB,0XCF,0XFB,0XD7,0XFB,0XD7,0XFA,0XDF,0XFB,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFB,0XE7,
N0XFA,0XE7,0XFA,0XDF,0XBA,0XD7,0XBB,0XD7,0XBB,0XC7,0X38,0X6E,0X39,0X56,0XF8,0X55,
N0X39,0X56,0X39,0X56,0X39,0X56,0X39,0X56,0X39,0X4E,0X7A,0X5E,0X7A,0X66,0X37,0X76,
N0XFA,0XD7,0XFB,0XD7,0XFB,0XD7,0XFB,0XE7,0XFB,0XEF,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFB,0XE7,0XFB,0XD7,0XFB,0XDF,0XFB,0XD7,0XFB,0XDF,0XFA,0XE7,
N0XFB,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFB,0XE7,0XFB,0XD7,0XFB,0XDF,0XFA,0XEF,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFB,0XD7,0XFB,0XD7,0XFB,0XD7,0XFB,0XDF,0XFA,0XDF,0XFA,0XE7,0XFA,0XE7,0XFB,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFB,0XE7,
N0XFA,0XE7,0XFB,0XDF,0XFB,0XD7,0XFB,0XD7,0XBB,0XD7,0X39,0X5E,0X3A,0X5E,0XF9,0X5D,
N0X39,0X56,0X39,0X56,0X39,0X4E,0X39,0X56,0X38,0X56,0X3A,0X56,0X79,0X66,0X77,0X7E,
N0XFB,0XCF,0XFC,0XD7,0XBB,0XDF,0XFA,0XDF,0XFA,0XDF,0XFB,0XE7,0XFB,0XE7,0XFB,0XE7,
N0XFB,0XE7,0XFB,0XE7,0XFA,0XDF,0XFB,0XDF,0XFA,0XD7,0XFA,0XCF,0XFE,0XBF,0X7A,0X6E,
N0X7A,0X5E,0X79,0X6E,0X7A,0X5E,0XFE,0XBF,0XBB,0XCF,0XFB,0XDF,0XBA,0XD7,0XBA,0XD7,
N0XFA,0XDF,0XFB,0XE7,0XFA,0XE7,0XFA,0XE7,0XFB,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XEF,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFB,0XE7,0XFB,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XBA,0XDF,
N0XFD,0XC7,0XFE,0XB7,0X39,0X5E,0X39,0X56,0X39,0X56,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X45,0X39,0X4E,0X39,0X4E,0X39,0X56,0X39,0X4E,0X39,0X4E,0X39,0X4E,0X39,0X4E,
N0X39,0X4E,0X39,0X4E,0X39,0X56,0X39,0X56,0X39,0X4E,0XF9,0X4D,0XF9,0X45,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0X39,0X56,0X39,0X56,0X39,0X5E,0X7A,0X5E,0XFE,0XBF,0XFC,0XC7,
N0XFB,0XDF,0XFB,0XE7,0XFA,0XE7,0XFB,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFB,0XE7,0XFB,0XE7,0XBA,0XDF,0XBA,0XDF,0XFC,0XCF,0X38,0X76,0X7A,0X66,
N0X38,0X5E,0X39,0X5E,0X39,0X56,0X39,0X66,0X38,0X6E,0XFD,0XC7,0XFD,0XD7,0XFB,0XCF,
N0XFB,0XDF,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XEF,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XEF,0XFA,0XE7,0XFA,0XE7,0XFB,0XE7,0XFB,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFB,0XE7,0XFB,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFB,0XE7,0XFB,0XE7,0XBA,0XDF,0XFD,0XC7,0XFD,0XBF,0X7A,0X66,
N0X39,0X5E,0X39,0X5E,0X39,0X5E,0X39,0X66,0X37,0X6E,0XFD,0XC7,0XFD,0XCF,0XFB,0XD7,
N0XFB,0XDF,0XFB,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFB,0XE7,0XFB,0XDF,0XFB,0XD7,0XFC,0XCF,
N0XFD,0XCF,0XFD,0XCF,0XFD,0XCF,0XFC,0XDF,0XFB,0XE7,0XFB,0XE7,0XFB,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFB,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XBA,0XDF,
N0X7A,0XDF,0XBC,0XC7,0X39,0X5E,0X39,0X56,0X39,0X56,0XF9,0X45,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0X39,0X4E,0X39,0X56,0X39,0X56,0X39,0X56,0X39,0X56,0X39,0X56,0X39,0X56,
N0X39,0X56,0X39,0X56,0X39,0X56,0X39,0X56,0X39,0X56,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0X39,0X56,0X39,0X56,0XF8,0X55,0X39,0X66,0XFD,0XCF,0XB9,0XDF,
N0XBA,0XDF,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XEF,0XFA,0XE7,0XFA,0XDF,0XBA,0XDF,0XBA,0XD7,0X36,0X86,0X79,0X6E,
N0X79,0X5E,0X3A,0X56,0X39,0X5E,0X39,0X66,0XF6,0X75,0XBA,0XD7,0XBA,0XE7,0XFA,0XDF,
N0XFB,0XDF,0XF9,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XEF,0XFA,0XE7,0XFA,0XEF,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFB,0XE7,0XFB,0XE7,0XFA,0XEF,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XEF,0XFA,0XE7,0XFA,0XEF,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFB,0XE7,0XFA,0XEF,0XFA,0XDF,0XBA,0XDF,0XFC,0XC7,0X39,0X6E,
N0X3A,0X5E,0X39,0X5E,0X39,0X56,0X39,0X66,0XF7,0X75,0XBA,0XD7,0XFA,0XDF,0XBA,0XDF,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XEF,0XFA,0XE7,0XFA,0XDF,0XBA,0XDF,
N0XB9,0XE7,0XBA,0XDF,0XBA,0XE7,0XFA,0XE7,0XFB,0XE7,0XF9,0XEF,0XFA,0XEF,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFB,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XEF,
N0XBB,0XDF,0XFC,0XCF,0X79,0X6E,0X39,0X56,0X39,0X56,0X39,0X56,0X39,0X56,0X39,0X56,
N0X39,0X56,0X39,0X56,0X39,0X56,0X79,0X5E,0X7A,0X5E,0X79,0X5E,0X39,0X66,0X79,0X5E,
N0X39,0X5E,0X39,0X66,0X79,0X5E,0X39,0X56,0X39,0X56,0X39,0X56,0X39,0X56,0X39,0X56,
N0X39,0X56,0X39,0X56,0X39,0X56,0X7A,0X5E,0X39,0X6E,0XFB,0XD7,0XFB,0XDF,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XEF,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFB,0XE7,0XFA,0XD7,0XFB,0XCF,
N0X38,0X76,0X7A,0X76,0X78,0X76,0XFB,0XCF,0XBA,0XDF,0XBA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XEF,0XFB,0XE7,
N0XFA,0XEF,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XEF,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFB,0XE7,
N0XFA,0XEF,0XFB,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XEF,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XDF,0XFB,0XDF,0XFA,0XD7,
N0X79,0X76,0X79,0X76,0X7A,0X6E,0XFB,0XCF,0XFB,0XDF,0XFA,0XDF,0XF9,0XE7,0XFB,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XEF,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XEF,0XFB,0XE7,
N0XFA,0XE7,0XFA,0XEF,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFC,0XDF,0XFD,0XC7,0X79,0X5E,0X3A,0X66,0X39,0X56,0X39,0X56,0X39,0X4E,
N0X79,0X5E,0X7A,0X66,0X78,0X76,0XFD,0XC7,0XFD,0XC7,0XFC,0XCF,0XFD,0XCF,0XFC,0XCF,
N0XFD,0XCF,0XFC,0XC7,0XFD,0XBF,0XFE,0XB7,0X79,0X66,0X39,0X66,0X79,0X56,0X39,0X56,
N0X39,0X56,0X39,0X56,0X79,0X5E,0XFE,0XB7,0XFC,0XCF,0XFB,0XDF,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFB,0XE7,0XFC,0XDF,
N0XFC,0XD7,0XFC,0XCF,0XFC,0XD7,0XFB,0XDF,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFB,0XEF,
N0XFC,0XD7,0XFC,0XCF,0XFD,0XCF,0XFB,0XDF,0XFB,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XDF,0XFA,0XDF,0XB9,0XDF,0X39,0X66,0X3A,0X5E,0X38,0X56,0X3A,0X5E,0X38,0X56,
N0X39,0X5E,0X79,0X66,0X36,0X7E,0XBB,0XD7,0XB9,0XD7,0XBA,0XDF,0XBA,0XDF,0XBA,0XDF,
N0XBA,0XDF,0XBA,0XD7,0XBA,0XD7,0XBD,0XCF,0X39,0X6E,0X39,0X5E,0X39,0X5E,0X39,0X56,
N0X39,0X4E,0X39,0X56,0X39,0X5E,0XFD,0XC7,0XFA,0XDF,0XB9,0XDF,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XBA,0XE7,
N0XFA,0XE7,0XBA,0XDF,0XBA,0XDF,0XFA,0XE7,0XFA,0XE7,0XFB,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XDF,0XFA,0XE7,
N0XFA,0XDF,0XFA,0XDF,0XBA,0XDF,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XEF,
N0XFA,0XE7,0XFB,0XE7,0XB9,0XE7,0X79,0X76,0X79,0X76,0X79,0X6E,0X79,0X6E,0X37,0X76,
N0XFB,0XCF,0XBB,0XDF,0XFA,0XDF,0XFA,0XDF,0XFA,0XDF,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XDF,0XFA,0XDF,0XFB,0XD7,0XBA,0XD7,0XFC,0XC7,0X7A,0X66,
N0X79,0X66,0X79,0X66,0X7A,0X6E,0XFC,0XCF,0XBA,0XDF,0XFB,0XE7,0XFB,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XEF,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XEF,0XFA,0XEF,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFB,0XE7,0XFA,0XEF,0XFA,0XEF,0XFC,0XCF,0XFD,0XCF,0XFD,0XC7,0XFD,0XCF,0XFB,0XCF,
N0XFB,0XDF,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFB,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFC,0XD7,0XFC,0XCF,
N0XFC,0XCF,0XFD,0XCF,0XFD,0XCF,0XFB,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XEF,0XFA,0XEF,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XEF,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XEF,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XB9,0XDF,0XBA,0XE7,0XBA,0XDF,0XB9,0XE7,0XFA,0XDF,
N0XFB,0XDF,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFB,0XE7,0XFA,0XDF,0XFA,0XE7,0XBA,0XE7,
N0XBA,0XDF,0XBA,0XDF,0XBA,0XDF,0XFA,0XE7,0XFB,0XE7,0XFB,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFB,0XE7,
N0XFB,0XE7,0XFA,0XE7,0XFA,0XE7,0XFB,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFB,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XEF,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFB,0XE7,0XFB,0XE7,0XFA,0XDF,0XFA,0XDF,0XFA,0XDF,
N0XFB,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XDF,0XFB,0XE7,0XFA,0XDF,0XFA,0XE7,0XFB,0XE7,
N0XFB,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFB,0XE7,0XFA,0XDF,0XFA,0XDF,
N0XFA,0XDF,0XFA,0XE7,0XFB,0XE7,0XFB,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFB,0XE7,0XFA,0XDF,0XFB,0XDF,0XFA,0XDF,0XFA,0XE7,0XFB,0XE7,
N0XFB,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XDF,0XFA,0XDF,
N0XFA,0XDF,0XFA,0XDF,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFB,0XDF,0XFB,0XDF,0XFC,0XD7,0XFC,0XD7,0XFC,0XD7,
N0XFC,0XDF,0XFC,0XDF,0XFC,0XDF,0XFB,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XDF,0XFB,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFC,0XDF,0XFC,0XD7,0XFC,0XD7,0XFC,0XDF,0XFB,0XDF,0XFC,0XDF,
N0XFB,0XDF,0XFB,0XDF,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFB,0XDF,0XFB,0XDF,0XFC,0XD7,0XFC,0XD7,
N0XFC,0XD7,0XFC,0XDF,0XFC,0XDF,0XFC,0XDF,0XFB,0XDF,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XDF,0XFB,0XDF,0XFB,0XDF,0XFC,0XD7,0XFB,0XD7,0XFC,0XD7,0XFB,0XD7,0XFC,0XDF,
N0XFC,0XDF,0XFB,0XDF,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XDF,0XFA,0XE7,0XFB,0XE7,0XFB,0XDF,0XFC,0XDF,0XFC,0XD7,
N0XFC,0XD7,0XFC,0XD7,0XFC,0XDF,0XFC,0XDF,0XFC,0XDF,0XFB,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0X78,0XBF,0X38,0XBF,0X39,0XBF,0X38,0XB7,0XF9,0XA6,0XFA,0X9E,0XFA,0XA6,0XFA,0XA6,
N0XFA,0XA6,0XFA,0XA6,0XFA,0XA6,0XF9,0XB6,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0X78,0XBF,0X38,0XBF,
N0X78,0XB7,0X78,0XB7,0XFA,0XA6,0XFA,0X9E,0XFA,0XA6,0XFA,0XA6,0XFA,0X9E,0X3A,0XA7,
N0XFA,0XA6,0XFA,0XA6,0XFB,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XEF,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0X78,0XBF,0X78,0XB7,0X78,0XBF,0X77,0XB7,0X39,0XB7,0XF9,0XA6,0XFA,0XA6,
N0XF9,0XA6,0XF9,0XA6,0XFA,0XA6,0X3A,0XA7,0XFA,0XA6,0XFB,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0X78,0XBF,0X78,0XBF,
N0X78,0XBF,0X78,0XB7,0XF9,0XA6,0X3A,0XA7,0XFA,0XA6,0XFA,0XA6,0XF9,0XA6,0XFA,0XA6,
N0X3A,0XA7,0XFA,0XA6,0XFB,0XE7,0XFA,0XEF,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0X38,0XC7,0X78,0XBF,0X38,0XBF,0X38,0XB7,0X79,0XB7,0XFB,0XA6,0XFA,0XA6,
N0XFA,0XA6,0XFA,0XA6,0XFB,0XA6,0XFA,0XA6,0XFA,0XA6,0XFC,0XDF,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0X38,0XBF,0XB7,0XCF,0XB8,0XCF,0X78,0XD7,0XF8,0X9E,0XF8,0XA6,0XB9,0XCF,0X79,0XCF,
N0X79,0XCF,0X7A,0XCF,0XF9,0XAE,0XF8,0XAE,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XDF,0XFA,0XDF,0X78,0XBF,0XB9,0XCF,
N0XB8,0XCF,0XB8,0XCF,0XF8,0XA6,0XF9,0XA6,0XB8,0XCF,0XB8,0XCF,0X78,0XCF,0XB9,0XD7,
N0XF9,0XAE,0XF9,0XAE,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XDF,0X38,0XBF,0X37,0XBF,0X78,0XCF,0XB8,0XCF,0XBA,0XC7,0XFA,0X9E,0XB9,0XCF,
N0XB8,0XCF,0X79,0XCF,0X79,0XCF,0XBA,0XC7,0X3A,0XA7,0XFB,0XDF,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFB,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFB,0XE7,0XFA,0XE7,0XFA,0XDF,0X38,0XBF,0XB9,0XCF,
N0X77,0XD7,0X78,0XCF,0XF8,0XA6,0XFA,0X9E,0XB9,0XCF,0X79,0XCF,0XB8,0XCF,0XBA,0XCF,
N0XF8,0XAE,0XFA,0XA6,0XFB,0XE7,0XFA,0XEF,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XDF,0X38,0XBF,0X78,0XBF,0XB8,0XCF,0X78,0XD7,0XBA,0XC7,0XFA,0X9E,0XBA,0XBF,
N0X78,0XCF,0XB8,0XCF,0XB9,0XCF,0XBB,0XC7,0XFA,0XA6,0XFC,0XDF,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0X3A,0XB7,0X79,0XC7,0XBA,0XBF,0X7A,0XCF,0XFA,0X9E,0XF8,0XA6,0XB8,0XCF,0XB9,0XCF,
N0XB9,0XC7,0XB9,0XCF,0XF9,0XAE,0XF8,0XAE,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFB,0XEF,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFB,0XD7,0XFD,0XD7,0X39,0XB7,0X7A,0XC7,
N0XBA,0XC7,0XBA,0XCF,0XF9,0XA6,0XB8,0XA6,0X78,0XD7,0XB9,0XC7,0XB9,0XCF,0XB9,0XCF,
N0XF9,0XAE,0XFA,0XAE,0XFB,0XE7,0XFA,0XEF,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFB,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFB,0XE7,0XFB,0XE7,
N0XFC,0XD7,0X79,0XB7,0X7A,0XBF,0X7A,0XC7,0XBA,0XC7,0XBB,0XBF,0XFA,0X9E,0XB9,0XCF,
N0XB9,0XCF,0XB9,0XCF,0X79,0XCF,0XBB,0XC7,0X3A,0XA7,0XFB,0XDF,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFB,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFB,0XD7,0XFC,0XD7,0X39,0XB7,0XBB,0XBF,
N0XBA,0XC7,0XBA,0XC7,0XFA,0XA6,0XFA,0X9E,0XB8,0XCF,0XB8,0XC7,0XB9,0XCF,0XB8,0XCF,
N0XF9,0XAE,0X3A,0XA7,0XFB,0XE7,0XFA,0XEF,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFB,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFB,0XE7,
N0XFC,0XD7,0X7A,0XBF,0X7A,0XBF,0XBA,0XC7,0X79,0XC7,0XBB,0XBF,0XFA,0X96,0XBA,0XC7,
N0XB8,0XD7,0XB9,0XC7,0XB9,0XCF,0XBB,0XC7,0XFA,0XA6,0XFC,0XDF,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0X9E,0XFB,0X9E,0XFA,0X9E,0XFB,0X9E,0XFA,0X9E,0XF8,0XA6,0X78,0XCF,0X38,0XBF,
N0X38,0XBF,0XB8,0XCF,0XF9,0XA6,0XF8,0XAE,0XBA,0XDF,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XB9,0XDF,0XB9,0XDF,0XB9,0XDF,0XB9,0XDF,
N0XB9,0XDF,0XB9,0XDF,0XBA,0XDF,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XDF,0XF9,0XAE,0X3B,0XA7,0XFB,0X9E,0XFA,0X9E,
N0XFA,0X96,0XFA,0X9E,0XFA,0X96,0XF8,0XA6,0XB9,0XCF,0X37,0XBF,0X37,0XBF,0X77,0XD7,
N0XF8,0XAE,0XF9,0XA6,0XFA,0XD7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XB9,0XDF,
N0XB9,0XDF,0XB9,0XDF,0XB9,0XDF,0XB9,0XDF,0XB9,0XDF,0XBA,0XDF,0XFB,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XEF,0XFB,0XE7,0XFB,0XD7,
N0XFB,0XA6,0XF9,0X9E,0XFA,0X9E,0XFB,0X9E,0XFA,0X9E,0XBA,0X9E,0XB9,0X9E,0XB9,0XCF,
N0XB9,0XCF,0X38,0XB7,0X78,0XCF,0XBA,0XC7,0XFA,0X9E,0XBB,0XDF,0XBA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XB9,0XDF,0XB9,0XDF,0XB9,0XDF,0XB9,0XDF,
N0XB9,0XDF,0XB9,0XDF,0XBA,0XDF,0XFB,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFB,0XE7,0XF9,0XAE,0X3B,0XA7,0XFA,0X9E,0XFA,0X9E,
N0XFA,0X9E,0XFB,0X9E,0XFA,0X9E,0XF9,0X9E,0XB9,0XCF,0X38,0XBF,0X38,0XBF,0XB8,0XCF,
N0XF8,0XAE,0XFA,0XA6,0XBA,0XDF,0XFA,0XEF,0XFB,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XB9,0XDF,
N0XB9,0XDF,0XB9,0XDF,0XB9,0XDF,0XB9,0XDF,0XB9,0XDF,0XBA,0XDF,0XBA,0XDF,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XDF,0XFC,0XD7,
N0XFA,0XA6,0XFA,0X9E,0XFA,0X9E,0XFA,0X9E,0XFA,0X9E,0XFA,0X9E,0XFB,0X9E,0XBA,0XC7,
N0XB9,0XCF,0X38,0XB7,0XB8,0XCF,0XBA,0XCF,0XFA,0X9E,0XFC,0XD7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XB8,0XCF,0XB8,0XCF,0XB8,0XCF,0X78,0XCF,0XB8,0XCF,0X78,0XCF,0X78,0XD7,0XB8,0XD7,
N0XB8,0XD7,0XB8,0XCF,0XF9,0XA6,0XF9,0XAE,0XFB,0XDF,0XFA,0XDF,0XFA,0XDF,0XFA,0XDF,
N0XFA,0XE7,0XFA,0XE7,0XFB,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XB9,0XDF,0XB9,0XDF,0XB9,0XDF,0XB9,0XDF,0XB9,0XDF,0XB9,0XDF,0XB9,0XDF,
N0X79,0XDF,0XB9,0XDF,0X7A,0XDF,0XBA,0XDF,0XFA,0XDF,0XFA,0XDF,0XFA,0XDF,0XFA,0XDF,
N0XFA,0XDF,0XFA,0XDF,0XFA,0XE7,0XBA,0XDF,0XF9,0XAE,0XF8,0XAE,0XB9,0XCF,0X78,0XCF,
N0X79,0XCF,0XB8,0XCF,0XB8,0XCF,0X78,0XCF,0X78,0XD7,0X78,0XD7,0XB8,0XD7,0X77,0XD7,
N0XF9,0XA6,0XFA,0X9E,0XFB,0XDF,0XBA,0XE7,0XBA,0XDF,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XB9,0XDF,0XB9,0XDF,0XB9,0XDF,0XB9,0XDF,
N0XB9,0XDF,0XB9,0XDF,0X79,0XDF,0X7A,0XDF,0X79,0XDF,0X79,0XDF,0XBA,0XE7,0XBA,0XDF,
N0XFA,0XDF,0XFA,0XDF,0XFA,0XDF,0XFA,0XDF,0XFA,0XDF,0XFA,0XDF,0XBA,0XDF,0XFC,0XD7,
N0XF9,0XA6,0XB9,0XCF,0XB7,0XCF,0XB9,0XCF,0XB8,0XCF,0X78,0XCF,0X78,0XC7,0XB8,0XD7,
N0X78,0XD7,0XB9,0XCF,0X78,0XD7,0XBA,0XC7,0XFA,0X9E,0XFB,0XDF,0XBA,0XDF,0XBA,0XDF,
N0XFA,0XE7,0XFA,0XE7,0XFB,0XE7,0XFA,0XE7,0XFA,0XEF,0XFB,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XB9,0XDF,0XB9,0XDF,0XB9,0XDF,0XB9,0XDF,0XB9,0XDF,0X79,0XDF,0X79,0XDF,
N0XB9,0XDF,0XB9,0XDF,0XB9,0XDF,0XF9,0XDF,0XBA,0XDF,0XFB,0XDF,0XFA,0XDF,0XFA,0XDF,
N0XFA,0XDF,0XFA,0XDF,0XFB,0XDF,0XFA,0XDF,0XB9,0XAE,0XF9,0XA6,0XB8,0XCF,0XB8,0XCF,
N0X78,0XCF,0X78,0XCF,0X79,0XCF,0X78,0XCF,0XB8,0XD7,0X79,0XD7,0XB8,0XD7,0X78,0XCF,
N0XF9,0XA6,0XFA,0X9E,0XBA,0XDF,0XBA,0XDF,0XBA,0XE7,0XFB,0XE7,0XFA,0XEF,0XFA,0XEF,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XB9,0XDF,0XB9,0XDF,0XB9,0XDF,0XB9,0XDF,
N0XB9,0XDF,0X79,0XDF,0X79,0XDF,0XB9,0XDF,0XB9,0XDF,0X79,0XDF,0XB9,0XDF,0XFA,0XDF,
N0XFA,0XDF,0XFA,0XDF,0XFA,0XDF,0XFA,0XDF,0XFA,0XE7,0XFA,0XDF,0XBA,0XDF,0XFC,0XD7,
N0XFA,0XA6,0XBA,0XC7,0X79,0XCF,0XB9,0XCF,0X78,0XCF,0X78,0XCF,0XB8,0XCF,0XB8,0XD7,
N0X78,0XD7,0X78,0XD7,0XB7,0XD7,0XBA,0XC7,0XFB,0X9E,0XBB,0XD7,0XBA,0XE7,0XBA,0XDF,
N0XFA,0XEF,0XFB,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XB9,0XCF,0XB8,0XCF,0X79,0XCF,0X78,0XD7,0X78,0XCF,0X78,0XCF,0X78,0XD7,0XB8,0XD7,
N0XB8,0XCF,0XB8,0XCF,0XF9,0X9E,0XFA,0XA6,0XFC,0XD7,0XFC,0XD7,0XFB,0XD7,0XFC,0XD7,
N0XFC,0XD7,0XFB,0XDF,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XB9,0XDF,0XB9,0XDF,0XB9,0XDF,0XB9,0XDF,0X79,0XDF,0X79,0XDF,0X79,0XDF,
N0XBB,0XD7,0XBB,0XD7,0XBB,0XD7,0XFC,0XD7,0XFC,0XD7,0XFC,0XD7,0XFC,0XD7,0XFC,0XDF,
N0XFC,0XD7,0XFC,0XD7,0XFB,0XDF,0XBA,0XDF,0XF9,0XAE,0XF8,0XA6,0XB8,0XCF,0X78,0XC7,
N0X78,0XCF,0XB8,0XCF,0XB8,0XCF,0XB9,0XCF,0XB8,0XD7,0X78,0XCF,0XB8,0XCF,0X78,0XCF,
N0XF8,0XA6,0XB9,0X9E,0XFC,0XD7,0XFB,0XD7,0XFB,0XD7,0XFC,0XDF,0XFC,0XE7,0XFA,0XDF,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XB9,0XDF,0XB9,0XDF,0XB9,0XDF,0XB9,0XDF,
N0XB9,0XDF,0XB9,0XDF,0X79,0XDF,0X7A,0XCF,0XBB,0XD7,0XBB,0XD7,0XFB,0XDF,0XFC,0XD7,
N0XFC,0XDF,0XFC,0XD7,0XFC,0XD7,0XFC,0XDF,0XFC,0XDF,0XFC,0XDF,0XBA,0XDF,0XFB,0XD7,
N0XF9,0XA6,0XB9,0XCF,0XB8,0XCF,0XB9,0XCF,0X78,0XD7,0XB9,0XD7,0X78,0XCF,0XB8,0XD7,
N0XB8,0XD7,0XB9,0XCF,0X78,0XD7,0XBA,0XC7,0XFB,0X96,0XFC,0XCF,0XFC,0XD7,0XFC,0XD7,
N0XFD,0XDF,0XFB,0XDF,0XFA,0XE7,0XFA,0XE7,0XFA,0XEF,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XB9,0XDF,0XB9,0XDF,0XB9,0XDF,0XB9,0XDF,0XB9,0XE7,0X79,0XDF,0X79,0XDF,
N0X7A,0XD7,0XBB,0XD7,0X7B,0XD7,0XFC,0XDF,0XFC,0XDF,0XFC,0XD7,0XFC,0XDF,0XFC,0XDF,
N0XFC,0XD7,0XFC,0XDF,0XFC,0XD7,0XBA,0XDF,0XB9,0XA6,0XF9,0XA6,0X78,0XCF,0XB8,0XCF,
N0XB8,0XC7,0XB8,0XCF,0XB8,0XCF,0XB8,0XC7,0XB8,0XD7,0X78,0XD7,0XB8,0XCF,0X78,0XCF,
N0XF8,0XA6,0XFA,0X9E,0XFC,0XCF,0XFC,0XD7,0XFC,0XD7,0XFB,0XD7,0XFC,0XE7,0XFA,0XE7,
N0XFB,0XE7,0XFA,0XE7,0XFB,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XB9,0XDF,0XB9,0XDF,0XB9,0XDF,0XB9,0XDF,
N0XB9,0XDF,0XB9,0XDF,0X79,0XDF,0X7A,0XDF,0XBB,0XD7,0XBA,0XD7,0XBB,0XD7,0XBC,0XD7,
N0XFC,0XDF,0XFC,0XD7,0XFC,0XD7,0XFC,0XD7,0XFC,0XDF,0XFC,0XD7,0XBA,0XDF,0XFB,0XD7,
N0XFA,0X9E,0XBA,0XC7,0XB9,0XCF,0XB9,0XC7,0XB8,0XD7,0X78,0XD7,0X78,0XCF,0XB9,0XD7,
N0X78,0XD7,0X79,0XCF,0X79,0XCF,0XBA,0XC7,0XFA,0X9E,0XFC,0XC7,0XFC,0XD7,0XFC,0XD7,
N0XFC,0XDF,0XFC,0XDF,0XFB,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFB,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0X77,0XCF,0X38,0XB7,0X37,0XBF,0XB8,0XD7,0X38,0XBF,0X78,0XBF,0X78,0XD7,0X38,0XBF,
N0X78,0XBF,0X78,0XCF,0XF9,0X9E,0XFA,0X9E,0XF9,0X9E,0XFA,0X96,0XFA,0X9E,0XFA,0X9E,
N0XFA,0XA6,0XF9,0XAE,0XFA,0XDF,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XB9,0XDF,
N0XB9,0XDF,0XB9,0XDF,0X79,0XDF,0X79,0XDF,0X79,0XDF,0X79,0XDF,0XB9,0XDF,0X79,0XE7,
N0XFA,0X9E,0XFA,0XA6,0XFA,0XA6,0XF9,0XA6,0XF9,0XA6,0XFA,0XA6,0XFA,0XA6,0XFA,0XA6,
N0X3A,0XA7,0XFA,0XA6,0XB8,0XAE,0XBA,0XDF,0XF8,0XA6,0XF8,0XA6,0X78,0XCF,0X38,0XBF,
N0X37,0XB7,0X78,0XD7,0X38,0XC7,0X38,0XC7,0X78,0XD7,0X38,0XC7,0X38,0XC7,0X78,0XCF,
N0XF8,0XA6,0XFA,0X9E,0XFA,0X96,0XFA,0X9E,0XFA,0X9E,0XFA,0XA6,0XFC,0XDF,0XFA,0XDF,
N0XFB,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XB9,0XDF,0XB9,0XDF,0XB9,0XDF,0XB9,0XDF,0X79,0XDF,0XB9,0XDF,
N0X79,0XDF,0X79,0XDF,0XBA,0XDF,0XF8,0XAE,0XFA,0X9E,0XFA,0XA6,0XFA,0XA6,0XFA,0XA6,
N0XFA,0XA6,0XFA,0XA6,0XFA,0XA6,0XFA,0XA6,0XFB,0XA6,0XF9,0XA6,0XBB,0XD7,0XBB,0XCF,
N0XF9,0X9E,0XB9,0XCF,0XB9,0XCF,0X77,0XB7,0XB8,0XD7,0XB9,0XCF,0X78,0XBF,0XB8,0XD7,
N0XB9,0XD7,0X78,0XBF,0XB8,0XCF,0XBA,0XC7,0XFB,0X9E,0XFA,0X9E,0XFA,0X96,0XFA,0X9E,
N0X3A,0XA7,0XF9,0XAE,0XFA,0XE7,0XFB,0XDF,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XB9,0XDF,
N0XB9,0XDF,0XB9,0XDF,0XB9,0XDF,0X79,0XDF,0XBA,0XDF,0X79,0XE7,0X79,0XDF,0XB9,0XDF,
N0XB8,0XAE,0XFB,0X9E,0XF9,0XA6,0XFA,0XA6,0XFA,0XA6,0XFA,0XA6,0XFA,0XA6,0XFA,0XA6,
N0X3A,0XA7,0XFA,0X9E,0XFA,0X9E,0XFA,0XDF,0XB9,0XA6,0XF9,0X9E,0XB8,0XCF,0X37,0XBF,
N0X38,0XB7,0X78,0XD7,0X37,0XC7,0X78,0XBF,0X78,0XD7,0X37,0XBF,0X78,0XBF,0X78,0XD7,
N0XF8,0XA6,0XFB,0X9E,0XFA,0X9E,0XFB,0X9E,0XFA,0X9E,0XFA,0XA6,0XFC,0XD7,0XFA,0XDF,
N0XFB,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XEF,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XB9,0XDF,0XB9,0XDF,0XB9,0XDF,0X79,0XDF,0X79,0XDF,
N0X79,0XDF,0X79,0XE7,0X79,0XDF,0XBB,0XD7,0XFA,0X9E,0XF9,0XA6,0XFA,0XA6,0XFA,0XA6,
N0XFA,0XA6,0XFA,0XA6,0XF9,0XA6,0X39,0XA7,0XFA,0XA6,0XFA,0X9E,0XFB,0XDF,0XFC,0XD7,
N0XFA,0X9E,0XBA,0XC7,0XB9,0XCF,0X38,0XB7,0XB9,0XCF,0XB9,0XD7,0X38,0XBF,0XB9,0XCF,
N0XB9,0XD7,0X78,0XBF,0X78,0XC7,0XBA,0XCF,0XFA,0X9E,0XFA,0X9E,0XFA,0XA6,0XFA,0X9E,
N0X3B,0XA7,0XF9,0XAE,0XFA,0XDF,0XFA,0XE7,0XFB,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XB9,0XDF,
N0XB8,0XD7,0X78,0XBF,0X38,0XC7,0X78,0XD7,0X38,0XBF,0X37,0XC7,0X78,0XD7,0X38,0XC7,
N0X38,0XBF,0X78,0XCF,0XF9,0X9E,0XF9,0X9E,0X38,0XAF,0X38,0XAF,0X79,0XC7,0XBA,0XC7,
N0XFA,0X9E,0XB9,0XA6,0XBA,0XE7,0XBA,0XDF,0XBA,0XDF,0XFA,0XE7,0XFB,0XE7,0XFA,0XEF,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XB9,0XDF,0XB9,0XDF,
N0XB9,0XDF,0X79,0XDF,0X79,0XDF,0X79,0XDF,0X79,0XDF,0XB9,0XDF,0XB9,0XDF,0X79,0XD7,
N0XFA,0X9E,0XF9,0XA6,0XBA,0XCF,0XB9,0XCF,0XB8,0XCF,0XB8,0XCF,0XB8,0XCF,0XB9,0XC7,
N0X79,0XB7,0XF9,0X9E,0XB9,0XAE,0XBA,0XE7,0XF9,0XA6,0XF8,0XA6,0X78,0XD7,0X37,0XC7,
N0X37,0XBF,0X78,0XD7,0X38,0XBF,0X38,0XBF,0X78,0XD7,0X38,0XBF,0X38,0XBF,0XB8,0XCF,
N0XF8,0XA6,0XFA,0X9E,0X38,0XAF,0X79,0XC7,0X7A,0XC7,0XFA,0X96,0XFC,0XD7,0XBA,0XE7,
N0XBA,0XDF,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XB9,0XDF,0XB9,0XDF,0XB9,0XDF,0X79,0XDF,0X79,0XDF,0X79,0XDF,0X79,0XDF,
N0X79,0XDF,0X79,0XDF,0X79,0XD7,0XB8,0XA6,0XFA,0X9E,0XBB,0XC7,0XB9,0XCF,0XB8,0XCF,
N0XB8,0XCF,0XB8,0XCF,0XB8,0XCF,0X78,0XBF,0X79,0XAF,0XF9,0XA6,0XFB,0XDF,0XFC,0XD7,
N0XF9,0XA6,0XB9,0XCF,0XB9,0XCF,0X38,0XBF,0X78,0XD7,0XB9,0XCF,0X38,0XBF,0XB8,0XD7,
N0X78,0XCF,0X78,0XBF,0X78,0XCF,0XBA,0XC7,0XFB,0X96,0X39,0XAF,0X38,0XBF,0X7A,0XCF,
N0XF9,0X9E,0XF9,0XAE,0XBA,0XE7,0XBA,0XDF,0XBA,0XDF,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XB9,0XDF,0XB9,0XDF,
N0XB9,0XDF,0XB9,0XDF,0X79,0XDF,0X79,0XDF,0X7A,0XDF,0X79,0XDF,0X79,0XDF,0XB9,0XD7,
N0XB8,0XA6,0XBA,0X9E,0XB9,0XCF,0XB9,0XCF,0XB8,0XCF,0XB9,0XCF,0X78,0XCF,0XB9,0XCF,
N0X79,0XB7,0XF9,0XA6,0XFA,0X9E,0XBA,0XDF,0XB9,0XA6,0XFA,0X9E,0XB8,0XD7,0X37,0XBF,
N0X78,0XBF,0X78,0XD7,0X38,0XC7,0X78,0XBF,0X78,0XD7,0X38,0XBF,0X38,0XBF,0XB8,0XD7,
N0XF8,0XA6,0XFA,0X96,0X38,0XAF,0XB9,0XC7,0X7A,0XCF,0XFA,0X9E,0XFC,0XD7,0XBA,0XDF,
N0XBA,0XE7,0XBA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XB9,0XDF,0XB9,0XDF,0XB9,0XDF,0XB9,0XDF,0X79,0XDF,0X79,0XDF,0X79,0XDF,
N0X79,0XDF,0X79,0XE7,0X7A,0XD7,0XBB,0XCF,0XFA,0X9E,0X7A,0XCF,0XB9,0XCF,0XB8,0XCF,
N0XB8,0XCF,0XB8,0XCF,0XB8,0XCF,0X78,0XB7,0X7A,0XB7,0XFA,0X9E,0XFA,0XD7,0XFC,0XD7,
N0XFA,0X9E,0XBA,0XC7,0XB9,0XCF,0X78,0XBF,0XB9,0XCF,0XB9,0XD7,0X38,0XBF,0XB9,0XD7,
N0XB9,0XD7,0X79,0XC7,0XB8,0XCF,0XBA,0XC7,0XFA,0X9E,0X39,0XAF,0X38,0XB7,0X79,0XCF,
N0XF9,0XA6,0XF9,0X9E,0XBA,0XE7,0XFA,0XDF,0XFA,0XDF,0XFA,0XDF,0XB9,0XDF,0XFA,0XDF,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XB9,0XDF,0XB9,0XDF,
N0X78,0XD7,0X37,0XC7,0X38,0XC7,0XB8,0XD7,0X37,0XC7,0X37,0XC7,0X78,0XD7,0X37,0XC7,
N0X37,0XC7,0X78,0XCF,0XF9,0XA6,0XFA,0X9E,0X39,0XA7,0X39,0XAF,0XBB,0XC7,0X7B,0XC7,
N0XFA,0X9E,0XFA,0XA6,0XFB,0XDF,0XFB,0XD7,0XFB,0XD7,0XFC,0XD7,0XFC,0XDF,0XFA,0XDF,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XB9,0XDF,0XB9,0XDF,
N0XB9,0XDF,0X79,0XDF,0X79,0XDF,0X79,0XDF,0X79,0XDF,0X79,0XDF,0XB9,0XDF,0X79,0XD7,
N0XFA,0X9E,0XF9,0XA6,0X7A,0XD7,0XB9,0XC7,0X79,0XCF,0X78,0XCF,0X78,0XCF,0XB9,0XCF,
N0X38,0XBF,0XF9,0XA6,0XB8,0XA6,0XBA,0XE7,0XF9,0XA6,0XF8,0XA6,0X78,0XD7,0X37,0XC7,
N0X37,0XC7,0XB8,0XD7,0X37,0XC7,0X38,0XC7,0X78,0XD7,0X37,0XC7,0X77,0XC7,0XB7,0XCF,
N0XF8,0XA6,0XFA,0X9E,0X39,0XA7,0X7B,0XC7,0X7C,0XBF,0XFA,0X9E,0XFD,0XCF,0XFB,0XD7,
N0XFC,0XDF,0XFC,0XDF,0XFC,0XD7,0XFC,0XE7,0XFB,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XB9,0XDF,0XBA,0XDF,0XB9,0XDF,0X79,0XDF,0X79,0XDF,0XB9,0XDF,0X79,0XDF,
N0X79,0XDF,0X79,0XDF,0X7A,0XD7,0XB9,0XA6,0XF9,0X9E,0XBA,0XCF,0X78,0XCF,0X78,0XCF,
N0XB8,0XCF,0X78,0XD7,0X79,0XCF,0X38,0XBF,0X3A,0XAF,0XF9,0X9E,0XFB,0XD7,0XFC,0XD7,
N0XFA,0X9E,0XB9,0XD7,0XB8,0XD7,0X38,0XC7,0X78,0XD7,0X78,0XD7,0X38,0XC7,0X78,0XD7,
N0X78,0XD7,0X38,0XC7,0X78,0XCF,0XBA,0XC7,0XFB,0X9E,0X39,0XA7,0X38,0XAF,0X7B,0XCF,
N0XFA,0X9E,0XF9,0XA6,0XFC,0XD7,0XFC,0XD7,0XFC,0XD7,0XFC,0XD7,0XFC,0XD7,0XFB,0XDF,
N0XFB,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XB9,0XDF,0XB9,0XDF,
N0XB9,0XE7,0X79,0XDF,0X79,0XDF,0XB9,0XDF,0X79,0XDF,0X79,0XDF,0XB9,0XDF,0X79,0XD7,
N0XB9,0XA6,0XFB,0X9E,0XB9,0XD7,0X79,0XCF,0XB8,0XC7,0X78,0XCF,0X78,0XCF,0XB8,0XCF,
N0X78,0XB7,0XF9,0XA6,0XFA,0X9E,0XBA,0XE7,0XB8,0XA6,0XF9,0X9E,0XB8,0XD7,0X77,0XC7,
N0X38,0XC7,0X78,0XD7,0X37,0XC7,0X37,0XBF,0XB7,0XD7,0X37,0XC7,0X38,0XC7,0XB8,0XCF,
N0XB8,0XA6,0XFA,0X9E,0X3A,0XA7,0XBB,0XC7,0X7B,0XC7,0XFA,0X96,0XFC,0XCF,0XFC,0XD7,
N0XFB,0XD7,0XFB,0XD7,0XFC,0XD7,0XFD,0XDF,0XFB,0XDF,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XB9,0XDF,0XB9,0XDF,0XB9,0XDF,0XB9,0XDF,0X79,0XDF,0X79,0XDF,0X79,0XDF,
N0X79,0XDF,0XB8,0XDF,0X79,0XD7,0XBB,0XCF,0XFB,0X9E,0X79,0XCF,0XB9,0XCF,0X79,0XCF,
N0XB9,0XCF,0X78,0XCF,0X78,0XCF,0X37,0XB7,0X7A,0XAF,0XFA,0X9E,0XBA,0XD7,0XFC,0XD7,
N0XFA,0X9E,0XBA,0XCF,0X79,0XCF,0X38,0XC7,0X78,0XD7,0X78,0XD7,0X37,0XC7,0XB8,0XD7,
N0X78,0XCF,0X38,0XC7,0XB8,0XCF,0XBA,0XC7,0XFA,0X9E,0X39,0XA7,0X39,0XAF,0X7A,0XCF,
N0XF9,0XA6,0XFA,0X9E,0XFD,0XD7,0XFC,0XD7,0XFC,0XD7,0XFC,0XDF,0XFB,0XD7,0XFC,0XDF,
N0XFD,0XDF,0XFB,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XB9,0XDF,0XB9,0XDF,
N0XB9,0XD7,0XB8,0XD7,0X78,0XD7,0X78,0XDF,0XB9,0XD7,0XB8,0XD7,0X78,0XD7,0X78,0XD7,
N0X78,0XD7,0X78,0XCF,0XF9,0XA6,0XFA,0X96,0XF9,0X96,0XFA,0X9E,0XF9,0X9E,0XFA,0X9E,
N0XFA,0X9E,0XF9,0X9E,0XF9,0XA6,0XFA,0XA6,0XFA,0XA6,0X39,0XA7,0X3B,0XA7,0XF8,0XAE,
N0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XB9,0XDF,0X79,0XDF,
N0X79,0XDF,0X79,0XDF,0XBA,0XDF,0X7A,0XDF,0XBA,0XDF,0X7A,0XD7,0X7A,0XD7,0X7A,0XCF,
N0XF9,0X9E,0XB8,0XA6,0X79,0XCF,0X38,0XB7,0X38,0XBF,0X79,0XCF,0XB9,0XCF,0X79,0XC7,
N0X38,0XB7,0XF9,0XA6,0XB8,0XA6,0XBA,0XDF,0XF9,0XA6,0XB8,0XA6,0XB8,0XD7,0XB8,0XD7,
N0X78,0XD7,0X78,0XD7,0X78,0XD7,0X78,0XD7,0X78,0XD7,0X77,0XD7,0XB8,0XD7,0X77,0XD7,
N0XF8,0XA6,0XFB,0X9E,0XFA,0X96,0XFA,0X9E,0XFA,0X9E,0XFA,0X9E,0XF9,0XA6,0XF9,0XA6,
N0XFA,0XA6,0XFA,0XA6,0XFA,0XA6,0XFB,0XA6,0XFB,0XDF,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XB9,0XDF,0XB9,0XDF,0X7A,0XE7,0XB9,0XDF,0X79,0XDF,0XB9,0XDF,0XBA,0XD7,
N0X7A,0XD7,0XB9,0XCF,0X7A,0XD7,0XF8,0XA6,0XF9,0X9E,0X7A,0XC7,0X38,0XBF,0X38,0XB7,
N0XB9,0XC7,0XB8,0XC7,0X79,0XC7,0X37,0XB7,0X39,0XAF,0XF9,0XA6,0XFB,0XDF,0XFC,0XD7,
N0XF9,0X9E,0XB9,0XCF,0X78,0XD7,0XB8,0XD7,0X78,0XD7,0X78,0XD7,0X78,0XD7,0XB8,0XD7,
N0X78,0XD7,0XB9,0XD7,0X78,0XD7,0XBB,0XC7,0XFB,0X9E,0XFA,0X96,0XFA,0X96,0XFA,0X9E,
N0XFA,0X9E,0XFA,0X9E,0XFA,0XA6,0XF9,0XA6,0XF9,0XA6,0X3A,0XA7,0XFA,0XA6,0XF8,0XAE,
N0XBA,0XEF,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,0XFB,0XEF,0XFA,0XE7,0XB9,0XDF,0XB9,0XDF,
N0X79,0XDF,0X79,0XDF,0XBA,0XE7,0XBA,0XDF,0XBA,0XDF,0X7A,0XD7,0X79,0XD7,0X7A,0XD7,
N0XF9,0XA6,0XFA,0X9E,0X79,0XCF,0X38,0XB7,0X78,0XAF,0XB9,0XCF,0X78,0XC7,0X79,0XC7,
N0X39,0XB7,0XF9,0X9E,0XF9,0X9E,0XBA,0XDF,0XB8,0XA6,0XFA,0X9E,0XB8,0XD7,0XB8,0XD7,
N0X78,0XD7,0X78,0XD7,0X78,0XD7,0X78,0XD7,0X78,0XD7,0XB8,0XD7,0XB9,0XD7,0X78,0XCF,
N0XF8,0XA6,0XFB,0X9E,0XF9,0X96,0XFA,0X9E,0XFA,0XA6,0XFA,0X9E,0XFA,0XA6,0XF9,0XA6,
N0XF9,0XA6,0XFA,0XA6,0X39,0XA7,0X3B,0XA7,0XF9,0XAE,0XFA,0XE7,0XFA,0XE7,0XFA,0XE7,
N0XFA,0XE7,0XB9,0XDF,0XB9,0XDF,0X79,0XDF,0XB9,0XDF,0X79,0XE7,0XB9,0XDF,0XBA,0XDF,
N0XBA,0XD7,0XBA,0XCF,0X79,0XD7,0XBB,0XC7,0XFA,0X9E,0X79,0XC7,0X79,0XCF,0X39,0XAF,
N0X79,0XCF,0XB8,0XC7,0X79,0XCF,0X38,0XB7,0X39,0XAF,0XFA,0X9E,0XBB,0XDF,0XFC,0XD7,
N0XFA,0X9E,0XBA,0XCF,0X78,0XD7,0XB9,0XD7,0X78,0XD7,0X78,0XD7,0XB8,0XD7,0XB8,0XD7,
N0X78,0XD7,0XB8,0XD7,0XB8,0XCF,0XBA,0XC7,0XFA,0X9E,0XFA,0X9E,0XFA,0X9E,0XFA,0X9E,
N0XFA,0X9E,0XFA,0X9E,0XF9,0XA6,0XFA,0XA6,0XFA,0XAE,0XF9,0XA6,0X3A,0XA7,0XFA,0XA6,
N0X3B,0X9F,0XFC,0XDF,0XFA,0XE7,0XFB,0XE7,0XFA,0XE7,0XFA,0XE7,0XB9,0XDF,0XB9,0XDF,
N0XB8,0XD7,0X37,0XBF,0X37,0XC7,0XB8,0XD7,0X37,0XBF,0X77,0XC7,0XB8,0XD7,0X37,0XC7,
N0X78,0XBF,0XB8,0XCF,0XF9,0X9E,0XFA,0XA6,0X38,0XAF,0X39,0XAF,0XB9,0XC7,0X79,0XCF,
N0X79,0XC7,0XB9,0XCF,0X79,0XD7,0XB8,0XC7,0XB8,0XCF,0XB9,0XCF,0XB9,0XA6,0XF8,0XAE,
N0XB9,0XDF,0XB9,0XDF,0XB9,0XDF,0XB9,0XDF,0XFA,0XE7,0XFA,0XE7,0XB9,0XDF,0X79,0XDF,
N0X79,0XDF,0X79,0XDF,0X79,0XDF,0XBB,0XD7,0XF9,0XAE,0XFA,0XA6,0XFA,0XA6,0XFA,0X9E,
N0XFB,0X96,0XFA,0X96,0XF9,0X9E,0XFA,0X9E,0XFA,0X9E,0XB9,0X9E,0XF9,0X9E,0XFA,0X9E,
N0XF9,0X9E,0XFA,0X9E,0XB8,0XA6,0XBA,0XE7,0XF9,0XA6,0XF8,0XA6,0XB8,0XD7,0X37,0XC7,
N0X37,0XC7,0XB9,0XD7,0X38,0XC7,0X38,0XBF,0XB9,0XD7,0X38,0XC7,0X38,0XBF,0X78,0XCF,
N0XF8,0XA6,0XFA,0X9E,0X39,0XAF,0XBA,0XC7,0X79,0XC7,0XB9,0XC7,0X79,0XD7,0X79,0XCF,
N0XB8,0XC7,0XB8,0XCF,0XB9,0XC7,0XFA,0X9E,0XBA,0XD7,0X79,0XDF,0XBA,0XDF,0XFB,0XE7,
N0XFA,0XE7,0XB9,0XDF,0XB9,0XDF,0X79,0XE7,0XB9,0XDF,0X79,0XDF,0XB9,0XDF,0XF9,0XAE,
N0XFA,0X9E,0XFA,0X9E,0XFA,0X9E,0XFB,0X9E,0XFA,0X9E,0XF9,0X9E,0XF9,0X9E,0XFA,0X9E,
N0XFA,0X9E,0XFA,0X9E,0XFA,0XA6,0XFA,0X9E,0XFA,0X9E,0XF9,0XA6,0XFB,0XD7,0XFC,0XD7,
N0XFA,0X9E,0XB9,0XCF,0XB9,0XCF,0X38,0XBF,0XB9,0XD7,0XB9,0XCF,0X38,0XBF,0X78,0XD7,
N0XB8,0XD7,0X38,0XBF,0X78,0XCF,0XBA,0XC7,0XFA,0X96,0X39,0XAF,0X38,0XB7,0XB9,0XCF,
N0XB9,0XCF,0XB9,0XCF,0X79,0XD7,0X79,0XCF,0X79,0XCF,0XB9,0XCF,0XF9,0XA6,0XF8,0XAE,
N0X79,0XE7,0XB9,0XDF,0XB9,0XDF,0XB9,0XDF,0XFA,0XE7,0XFA,0XE7,0XB9,0XDF,0XB9,0XDF,
N0X79,0XDF,0X79,0XDF,0X79,0XDF,0X7A,0XD7,0XFA,0XA6,0XFA,0XA6,0XFA,0X9E,0XFA,0X9E,
N0XFA,0X96,0XFB,0X9E,0XF9,0X9E,0XFA,0X9E,0XFA,0X9E,0XB9,0X9E,0XFA,0X9E,0XFA,0XA6,
N0XF9,0X9E,0XFA,0X96,0XFA,0X9E,0XBA,0XDF,0XB8,0XA6,0XFA,0X9E,0XB8,0XD7,0X37,0XC7,
N0X38,0XBF,0XB9,0XD7,0X37,0XC7,0X38,0XBF,0XB8,0XD7,0X37,0XC7,0X37,0XBF,0XB8,0XCF,
N0XF8,0XA6,0XFA,0X9E,0X38,0XB7,0XB9,0XCF,0X79,0XCF,0XB9,0XC7,0XB9,0XCF,0X79,0XD7,
N0X79,0XCF,0XB9,0XC7,0X79,0XCF,0XFA,0X9E,0XF8,0XAE,0XB9,0XDF,0XBA,0XDF,0XBA,0XDF,
N0XFA,0XE7,0XB9,0XDF,0XB9,0XDF,0X79,0XDF,0XB9,0XDF,0X79,0XE7,0XB9,0XDF,0XB9,0XAE,
N0XFA,0XA6,0XFA,0X9E,0XFA,0XA6,0XFA,0X9E,0XFB,0X96,0XFA,0XA6,0XFA,0X9E,0XFA,0X9E,
N0XFA,0X9E,0XFA,0X9E,0XFA,0X9E,0XF9,0X9E,0XFA,0X9E,0XFB,0X96,0XBA,0XDF,0XFC,0XD7,
N0XFA,0X9E,0XBA,0XCF,0XB9,0XCF,0X37,0XC7,0XB8,0XD7,0X79,0XD7,0X37,0XBF,0XB8,0XCF,
N0X78,0XCF,0X37,0XC7,0X78,0XCF,0XBA,0XC7,0XFA,0X9E,0X3A,0XAF,0X38,0XB7,0X79,0XCF,
N0X79,0XCF,0X79,0XC7,0X79,0XD7,0X79,0XD7,0X79,0XD7,0X79,0XCF,0X79,0XC7,0X79,0XCF,
N0XFA,0X9E,0XBB,0XD7,0XB9,0XDF,0XBA,0XE7,0XFB,0XE7,0XFA,0XE7,0XB9,0XDF,0XB9,0XDF,
N0X78,0XD7,0X38,0XBF,0X38,0XC7,0X78,0XD7,0X38,0XC7,0X38,0XC7,0X78,0XD7,0X38,0XC7,
N0X38,0XBF,0X78,0XCF,0XF9,0X9E,0XF9,0XA6,0X37,0XB7,0X38,0XB7,0XB8,0XC7,0X78,0XCF,
N0X78,0XCF,0X78,0XCF,0X78,0XD7,0XB8,0XCF,0X78,0XCF,0XB9,0XCF,0XFA,0XA6,0XF8,0XAE,
N0X79,0XDF,0XB9,0XDF,0XBA,0XDF,0XB9,0XDF,0XFA,0XE7,0XFA,0XE7,0XB9,0XDF,0X79,0XDF,
N0X79,0XDF,0X79,0XDF,0XB9,0XE7,0XBC,0XD7,0XFA,0X9E,0XF9,0XA6,0XF8,0XA6,0XF8,0XA6,
N0XB8,0XA6,0XF8,0XA6,0XF8,0X9E,0XF8,0XA6,0XF8,0XA6,0XF8,0XA6,0XF9,0X9E,0XF9,0X9E,
N0XF9,0XA6,0XFA,0X9E,0XF8,0XA6,0XBA,0XDF,0XF9,0XA6,0XF8,0XA6,0X78,0XD7,0X38,0XBF,
N0X78,0XBF,0XB9,0XD7,0X37,0XBF,0X38,0XC7,0X78,0XDF,0X38,0XBF,0X37,0XC7,0X78,0XCF,
N0XF8,0XA6,0XFA,0XA6,0X38,0XB7,0XB8,0XCF,0XB8,0XCF,0X78,0XCF,0X78,0XDF,0X78,0XD7,
N0X78,0XD7,0X78,0XD7,0X79,0XCF,0XFA,0XA6,0XBA,0XD7,0XBA,0XDF,0XBA,0XE7,0XFB,0XE7,
N0XFA,0XE7,0XB9,0XDF,0XB9,0XDF,0X79,0XE7,0XB9,0XDF,0X79,0XDF,0XBA,0XDF,0XF9,0XA6,
N0XF9,0XA6,0XF8,0XA6,0XF8,0XA6,0XF8,0XA6,0XF8,0XA6,0XF8,0X9E,0XF8,0XA6,0XF9,0XA6,
N0XB9,0XA6,0XF8,0X9E,0XF9,0X9E,0XF9,0XA6,0XF9,0X9E,0XF9,0X9E,0XFB,0XD7,0XFC,0XD7,
N0XFA,0X9E,0XB9,0XCF,0XB8,0XCF,0X38,0XBF,0XB8,0XD7,0XB9,0XCF,0X37,0XBF,0X78,0XCF,
N0XB9,0XCF,0X78,0XBF,0X78,0XCF,0XBA,0XC7,0XFB,0X96,0X38,0XAF,0X37,0XB7,0X78,0XCF,
N0XB8,0XD7,0X78,0XD7,0XB8,0XD7,0X78,0XD7,0X78,0XCF,0XB8,0XCF,0XF9,0XA6,0XF9,0XAE,
N0X79,0XE7,0XB9,0XDF,0XB9,0XDF,0XB9,0XDF,0XFA,0XE7,0XFA,0XE7,0XB9,0XDF,0XB9,0XDF,
N0X79,0XDF,0X79,0XDF,0X79,0XDF,0XBA,0XD7,0XFA,0X9E,0XF9,0XA6,0XF8,0XA6,0XF8,0XA6,
N0XF8,0XA6,0XF7,0XA6,0XF8,0X9E,0XF8,0XA6,0XF8,0X9E,0XF8,0XA6,0XF9,0XA6,0XF9,0XA6,
N0XF9,0XA6,0XF9,0X9E,0XFA,0X9E,0XFA,0XDF,0XB8,0XA6,0XFA,0X9E,0XB8,0XD7,0X37,0XC7,
N0X39,0XBF,0X78,0XD7,0X38,0XC7,0X38,0XBF,0XB8,0XD7,0X38,0XC7,0X38,0XBF,0XB8,0XCF,
N0XB8,0XA6,0XFA,0X96,0X38,0XB7,0XB8,0XCF,0XB8,0XCF,0X78,0XCF,0XB8,0XD7,0X78,0XD7,
N0XB8,0XD7,0XB8,0XCF,0XB8,0XCF,0XFA,0XA6,0XF8,0XB6,0X79,0XDF,0XBA,0XDF,0XBA,0XE7,
N0XFA,0XE7,0XB9,0XDF,0XB9,0XDF,0X79,0XDF,0XB9,0XDF,0X79,0XDF,0XB9,0XDF,0XFA,0XA6,
N0XFA,0XA6,0XF8,0XA6,0XB8,0XA6,0XF8,0XA6,0XB8,0XA6,0XF8,0XA6,0XF8,0X9E,0XB8,0XA6,
N0XF8,0XA6,0XF9,0XA6,0XF9,0XA6,0XF9,0XA6,0XF9,0XA6,0XFA,0X9E,0XBB,0XD7,0XFC,0XD7,
N0XFA,0X9E,0XBA,0XCF,0XB9,0XCF,0X38,0XBF,0XB9,0XD7,0XB9,0XD7,0X38,0XBF,0XB9,0XCF,
N0XB9,0XCF,0X79,0XBF,0X78,0XCF,0XBA,0XC7,0XFA,0X9E,0X39,0XAF,0X37,0XB7,0X78,0XCF,
N0X77,0XCF,0X78,0XCF,0X78,0XD7,0X78,0XD7,0X78,0XD7,0XB8,0XD7,0XB9,0XD7,0X79,0XCF,
N0XFA,0XA6,0XBB,0XD7,0XB9,0XDF,0XBB,0XE7,0XFB,0XE7,0XFA,0XE7,0XB9,0XDF,0XB9,0XDF,
N0XB8,0XD7,0X37,0XBF,0X38,0XC7,0XB8,0XD7,0X38,0XBF,0X37,0XC7,0XB8,0XD7,0X37,0XC7,
N0X38,0XBF,0X78,0XCF,0XF9,0X9E,0XF9,0XA6,0X38,0XB7,0X38,0XB7,0XB8,0XCF,0X78,0XCF,
N0X78,0XD7,0X78,0XD7,0X78,0XD7,0XB8,0XD7,0XB8,0XD7,0XB8,0XCF,0XFA,0XA6,0XB8,0XAE,
N0X79,0XDF,0X79,0XDF,0XB9,0XDF,0XB9,0XDF,0XFA,0XE7,0XFA,0XE7,0XB9,0XDF,0X79,0XDF,
N0X79,0XDF,0X79,0XDF,0X79,0XDF,0XBB,0XD7,0XF9,0XA6,0XB9,0XCF,0XB8,0XCF,0X78,0XCF,
N0X78,0XCF,0X78,0XCF,0X78,0XCF,0XB9,0XCF,0XB8,0XCF,0XB8,0XCF,0X38,0XB7,0X38,0XB7,
N0X38,0XB7,0XF9,0XA6,0XF9,0XA6,0XBB,0XDF,0XF9,0XA6,0XF8,0XA6,0XB8,0XD7,0X38,0XC7,
N0X37,0XC7,0X78,0XD7,0X37,0XBF,0X38,0XBF,0XB8,0XD7,0X38,0XBF,0X78,0XBF,0X77,0XCF,
N0XF8,0XA6,0XFA,0X9E,0X79,0XB7,0XB9,0XCF,0X77,0XCF,0X78,0XD7,0XB8,0XD7,0X78,0XD7,
N0X78,0XD7,0X78,0XCF,0XB9,0XCF,0XFA,0XA6,0XBB,0XD7,0XBA,0XDF,0X79,0XDF,0XFA,0XE7,
N0XFA,0XE7,0XB9,0XDF,0XB9,0XDF,0X79,0XE7,0X79,0XDF,0X79,0XDF,0XBA,0XDF,0XF9,0XA6,
N0X7A,0XC7,0X78,0XD7,0X78,0XCF,0X78,0XCF,0X78,0XCF,0X78,0XCF,0XB8,0XCF,0XB8,0XCF,
N0XB8,0XCF,0X78,0XCF,0X39,0XB7,0X38,0XB7,0X39,0XAF,0XFA,0X9E,0XFB,0XD7,0XFC,0XD7,
N0XFA,0X9E,0XB9,0XD7,0XB9,0XCF,0X38,0XBF,0X78,0XD7,0X79,0XCF,0X37,0XBF,0X78,0XCF,
N0XB9,0XD7,0X38,0XBF,0X78,0XCF,0XBA,0XC7,0XFA,0X9E,0X39,0XB7,0X38,0XB7,0XB8,0XCF,
N0XB9,0XD7,0XB8,0XD7,0XB8,0XD7,0X78,0XD7,0XB8,0XD7,0XB8,0XCF,0XF9,0XA6,0XB9,0XAE,
N0X79,0XE7,0XB9,0XDF,0XB9,0XDF,0XB9,0XDF,0XFA,0XE7,0XFA,0XE7,0XB9,0XDF,0XB9,0XDF,
N0X79,0XDF,0X79,0XDF,0XB9,0XDF,0XBB,0XD7,0XFA,0XA6,0XBA,0XCF,0XB8,0XCF,0X78,0XCF,
N0XB8,0XCF,0X78,0XD7,0X78,0XCF,0X78,0XCF,0XB8,0XD7,0XB8,0XCF,0X37,0XBF,0X38,0XB7,
N0X38,0XB7,0XF9,0XA6,0XFA,0X9E,0XBA,0XDF,0XB8,0XA6,0XFA,0X9E,0XB8,0XD7,0X37,0XC7,
N0X38,0XBF,0X78,0XD7,0X37,0XBF,0X38,0XBF,0XB7,0XD7,0X38,0XC7,0X38,0XBF,0XB8,0XCF,
N0XF8,0XA6,0XFA,0X9E,0X38,0XB7,0XB9,0XC7,0X78,0XCF,0X78,0XD7,0X78,0XD7,0XB8,0XD7,
N0X78,0XD7,0XB8,0XD7,0XB8,0XCF,0XFA,0XA6,0XF9,0XAE,0X79,0XDF,0XB9,0XDF,0XB9,0XDF,
N0XFA,0XE7,0XB9,0XDF,0XB9,0XDF,0X79,0XDF,0XB9,0XDF,0X79,0XDF,0XBA,0XDF,0XFA,0XA6,
N0XF8,0XAE,0XB8,0XCF,0XB8,0XCF,0XB8,0XCF,0XB8,0XCF,0X78,0XCF,0XB8,0XCF,0XB8,0XCF,
N0XB8,0XCF,0XB9,0XC7,0X37,0XB7,0X38,0XB7,0X39,0XB7,0XFA,0X9E,0XBB,0XD7,0XFC,0XCF,
N0XFA,0X9E,0XBA,0XCF,0XB9,0XCF,0X37,0XBF,0XB9,0XD7,0XB9,0XD7,0X38,0XBF,0XB9,0XCF,
N0XB8,0XD7,0X78,0XBF,0XB8,0XCF,0XBA,0XC7,0XFA,0X9E,0X79,0XB7,0X38,0XBF,0X78,0XCF,
N0XB8,0XCF,0XB9,0XD7,0XB8,0XD7,0XB8,0XD7,0XB8,0XD7,0X78,0XD7,0X78,0XD7,0X79,0XCF,
N0XFA,0XA6,0XBB,0XD7,0XB9,0XDF,0X7A,0XDF,0XFA,0XE7,0XFA,0XE7,0XB9,0XDF,0XB9,0XDF,
N0X78,0XD7,0XB8,0XD7,0X78,0XD7,0X78,0XDF,0X78,0XD7,0XB8,0XD7,0X78,0XD7,0XB9,0XD7,
N0XB8,0XD7,0X78,0XCF,0XF9,0X9E,0XF9,0X9E,0X78,0XB7,0X38,0XB7,0XB8,0XCF,0X78,0XD7,
N0X38,0XBF,0X38,0XBF,0X78,0XD7,0X38,0XBF,0X37,0XC7,0XB9,0XCF,0XFA,0XA6,0XF8,0XA6,
N0X79,0XDF,0X79,0XDF,0XB9,0XDF,0XB9,0XDF,0XFA,0XE7,0XFA,0XE7,0XB9,0XDF,0X79,0XDF,
N0X79,0XDF,0X79,0XDF,0X79,0XE7,0XBB,0XD7,0XFB,0X9E,0X38,0XB7,0X38,0XBF,0X78,0XCF,
N0X38,0XBF,0X38,0XC7,0XB8,0XDF,0X38,0XB7,0X37,0XBF,0XB8,0XCF,0X38,0XB7,0X38,0XAF,
N0X38,0XAF,0XF9,0X9E,0XB8,0XA6,0X79,0XCF,0XF9,0XA6,0XB8,0XA6,0XB8,0XD7,0XB8,0XD7,
N0X78,0XD7,0X78,0XD7,0X78,0XD7,0X78,0XD7,0X78,0XD7,0X77,0XD7,0XB8,0XD7,0X78,0XCF,
N0XF8,0XA6,0XFA,0X9E,0X79,0XB7,0XB9,0XCF,0X78,0XCF,0X37,0XBF,0XB9,0XCF,0X78,0XCF,
N0X38,0XBF,0X78,0XCF,0X79,0XD7,0XFA,0XA6,0XBA,0XD7,0X79,0XE7,0X79,0XDF,0XFA,0XE7,
N0XFA,0XE7,0XB9,0XDF,0XB9,0XDF,0X79,0XE7,0XB9,0XDF,0X79,0XDF,0XBA,0XDF,0XF9,0X9E,
N0X39,0XB7,0X38,0XB7,0XB9,0XCF,0X37,0XBF,0X37,0XBF,0XB8,0XD7,0X37,0XBF,0X38,0XBF,
N0XB9,0XCF,0X79,0XCF,0X38,0XB7,0X38,0XB7,0X3A,0XA7,0XF9,0X9E,0X7A,0XC7,0XBB,0XC7,
N0XFA,0X9E,0XB9,0XD7,0XB8,0XD7,0XB8,0XD7,0X78,0XD7,0X78,0XD7,0XB8,0XD7,0XB8,0XD7,
N0XB8,0XD7,0XB9,0XD7,0X78,0XD7,0XBB,0XC7,0XFB,0X96,0X39,0XB7,0X37,0XBF,0XB8,0XCF,
N0X37,0XBF,0X38,0XC7,0X78,0XDF,0X37,0XBF,0X37,0XBF,0XB9,0XD7,0XF9,0XA6,0XF9,0XAE,
N0X79,0XE7,0XB9,0XDF,0XB9,0XDF,0XB9,0XDF,0XFA,0XE7,0XFA,0XE7,0XB9,0XDF,0XB9,0XDF,
N0X79,0XDF,0X79,0XDF,0X79,0XDF,0XBB,0XD7,0XFA,0X9E,0X7A,0XB7,0X37,0XBF,0XB8,0XCF,
N0X37,0XBF,0X38,0XBF,0X78,0XDF,0X37,0XBF,0X78,0XB7,0XB8,0XD7,0X37,0XB7,0X38,0XB7,
N0X38,0XAF,0XF8,0X96,0XFA,0X96,0X79,0XCF,0XB9,0XA6,0XFA,0X9E,0XB8,0XD7,0XB8,0XD7,
N0X78,0XD7,0X78,0XD7,0X78,0XD7,0X78,0XD7,0X78,0XD7,0X78,0XD7,0XB8,0XD7,0X78,0XCF,
N0XF8,0XA6,0XFB,0X9E,0X38,0XB7,0XB8,0XCF,0XB9,0XD7,0X38,0XBF,0XB9,0XCF,0X78,0XD7,
N0X37,0XC7,0X37,0XBF,0XB9,0XCF,0XFA,0XA6,0XF9,0XAE,0X79,0XDF,0X79,0XDF,0XB9,0XDF,
N0XFA,0XE7,0XB9,0XDF,0XB9,0XDF,0X79,0XDF,0XB9,0XDF,0X79,0XDF,0XB9,0XE7,0XFA,0X9E,
N0XF9,0X9E,0X38,0XB7,0XB8,0XCF,0XB9,0XCF,0X37,0XBF,0X77,0XD7,0XB9,0XCF,0X37,0XB7,
N0X78,0XCF,0XB8,0XC7,0X38,0XB7,0X38,0XAF,0X3A,0XA7,0XFB,0X96,0X79,0XCF,0X7A,0XC7,
N0XFA,0X9E,0XBA,0XCF,0XB8,0XD7,0XB9,0XD7,0X78,0XD7,0X78,0XD7,0XB8,0XD7,0XB8,0XD7,
N0X78,0XD7,0XB8,0XD7,0XB8,0XD7,0XBA,0XC7,0XFA,0X9E,0X7A,0XAF,0X37,0XBF,0XB9,0XD7,
N0X37,0XBF,0X37,0XBF,0X78,0XD7,0X78,0XC7,0X38,0XBF,0X78,0XD7,0X78,0XD7,0XB9,0XCF,
N0XFA,0X9E,0XBB,0XD7,0XB9,0XDF,0X79,0XDF,0XFA,0XE7,0XFA,0XE7,0XB9,0XDF,0XB9,0XDF,
N0XB8,0XD7,0XB8,0XD7,0X79,0XD7,0XB8,0XD7,0X78,0XD7,0X78,0XD7,0XB8,0XD7,0XB8,0XD7,
N0X78,0XD7,0XB8,0XCF,0XF9,0X9E,0XF9,0XA6,0X78,0XB7,0X38,0XB7,0XB8,0XCF,0XB8,0XD7,
N0X38,0XBF,0X78,0XBF,0XB8,0XD7,0X78,0XBF,0X37,0XC7,0X78,0XD7,0XF9,0XA6,0XF8,0XAE,
N0X79,0XDF,0X79,0XDF,0XB9,0XDF,0XB9,0XDF,0XFA,0XE7,0XFA,0XE7,0XB9,0XDF,0X79,0XDF,
N0X79,0XDF,0X79,0XDF,0X79,0XDF,0XBB,0XD7,0XFA,0X9E,0X39,0XB7,0X38,0XBF,0X78,0XD7,
N0X38,0XBF,0X78,0XC7,0X78,0XD7,0X78,0XBF,0X38,0XB7,0X78,0XD7,0X38,0XB7,0X38,0XB7,
N0X37,0XAF,0XF9,0X96,0XF9,0X9E,0X79,0XC7,0XF9,0X9E,0XF8,0XA6,0X78,0XCF,0XB8,0XD7,
N0XB8,0XD7,0X78,0XD7,0XB8,0XD7,0X78,0XD7,0XB8,0XD7,0XB8,0XD7,0XB8,0XD7,0X78,0XCF,
N0XF8,0XA6,0XFA,0X9E,0X79,0XB7,0XB8,0XCF,0XB8,0XD7,0X38,0XBF,0XB8,0XCF,0X78,0XD7,
N0X78,0XBF,0XB9,0XD7,0X79,0XD7,0XFA,0XA6,0XBA,0XD7,0XB9,0XDF,0X79,0XDF,0XFA,0XE7,
N0XFA,0XE7,0XB9,0XDF,0XB9,0XDF,0X79,0XE7,0X79,0XDF,0X79,0XDF,0XBA,0XDF,0XF9,0XA6,
N0X39,0XB7,0X38,0XBF,0X78,0XCF,0X77,0XC7,0X38,0XBF,0X78,0XD7,0X38,0XBF,0X38,0XBF,
N0XB9,0XCF,0XB8,0XC7,0X39,0XB7,0X38,0XAF,0X39,0XA7,0XFA,0X96,0X7A,0XC7,0X7A,0XBF,
N0XFA,0X9E,0XB9,0XCF,0XB8,0XD7,0X78,0XD7,0XB9,0XD7,0X78,0XD7,0X78,0XD7,0X78,0XD7,
N0XB8,0XD7,0X78,0XD7,0X77,0XCF,0XBA,0XC7,0XFB,0X9E,0X39,0XB7,0X38,0XB7,0XB8,0XD7,
N0X38,0XBF,0X37,0XC7,0X78,0XD7,0X38,0XBF,0X37,0XBF,0X78,0XD7,0XF9,0XA6,0XB9,0XAE,
N0X79,0XE7,0XB9,0XDF,0XB9,0XDF,0XB9,0XDF,0XFA,0XE7,0XFA,0XE7,0XB9,0XDF,0X79,0XDF,
N0X79,0XDF,0X79,0XDF,0X79,0XDF,0XBB,0XD7,0XFA,0X9E,0X39,0XB7,0X38,0XBF,0X78,0XCF,
N0X37,0XC7,0X38,0XBF,0X78,0XD7,0X37,0XB7,0X38,0XBF,0X78,0XCF,0X37,0XB7,0X39,0XB7,
N0X38,0XAF,0XF8,0X96,0XFA,0X96,0XB9,0XC7,0XFA,0XA6,0XFA,0X9E,0X78,0XD7,0XB8,0XD7,
N0XB8,0XD7,0X78,0XD7,0X78,0XD7,0XB8,0XD7,0XB8,0XD7,0X78,0XD7,0XB8,0XD7,0X78,0XCF,
N0XF8,0XA6,0XFA,0X96,0X38,0XB7,0XB8,0XCF,0X79,0XCF,0X38,0XBF,0XB9,0XCF,0XB8,0XD7,
N0X38,0XBF,0X37,0XBF,0X78,0XD7,0XFA,0XA6,0XB8,0XB6,0XB9,0XDF,0XB9,0XDF,0XB9,0XDF,
N0XFA,0XE7,0XB9,0XDF,0XB9,0XDF,0X79,0XDF,0X79,0XDF,0X79,0XDF,0XBA,0XDF,0XFA,0X9E,
N0XF9,0XA6,0X78,0XB7,0XB8,0XCF,0XB9,0XCF,0X78,0XBF,0X78,0XD7,0XB9,0XCF,0X38,0XBF,
N0X78,0XCF,0XB9,0XCF,0X38,0XB7,0X38,0XB7,0X3A,0XAF,0XFB,0X96,0X79,0XC7,0XBB,0XC7,
N0XFA,0X9E,0XBA,0XCF,0XB8,0XD7,0XB8,0XD7,0XB8,0XDF,0XB8,0XD7,0X78,0XD7,0X78,0XD7,
N0XB8,0XD7,0X78,0XD7,0X78,0XCF,0XBA,0XC7,0XFA,0X9E,0X79,0XB7,0X37,0XBF,0X78,0XCF,
N0X38,0XBF,0X38,0XBF,0XB8,0XD7,0X37,0XBF,0X38,0XBF,0X78,0XD7,0X78,0XD7,0X79,0XD7,
N0XFA,0X9E,0XBB,0XD7,0XB9,0XDF,0X7A,0XDF,0XFA,0XE7,0XFA,0XE7,0XB9,0XDF,0XB9,0XDF,
N0X78,0XD7,0XB8,0XCF,0X78,0XD7,0XB8,0XD7,0X78,0XD7,0X78,0XD7,0X78,0XD7,0X78,0XD7,
N0XB8,0XD7,0X77,0XCF,0XF9,0X9E,0XF9,0XA6,0X78,0XB7,0X38,0XB7,0XB8,0XCF,0XB9,0XD7,
N0X38,0XC7,0X38,0XC7,0XB8,0XD7,0X78,0XBF,0X37,0XC7,0X79,0XD7,0XFA,0X9E,0XB8,0XAE,
N0X79,0XDF,0X79,0XDF,0XB9,0XDF,0XB9,0XDF,0XFA,0XE7,0XFA,0XE7,0XB9,0XDF,0X79,0XDF,
N0X79,0XDF,0X79,0XDF,0X79,0XDF,0XBB,0XD7,0XFA,0X9E,0X78,0XB7,0X78,0XBF,0X78,0XD7,
N0X38,0XBF,0X38,0XC7,0X78,0XD7,0X78,0XBF,0X37,0XB7,0X77,0XCF,0X37,0XB7,0X38,0XB7,
N0X37,0XB7,0XB9,0X9E,0XF9,0X9E,0X38,0XAF,0XF9,0X9E,0XF8,0XA6,0X78,0XCF,0XB9,0XD7,
N0XB8,0XD7,0X78,0XD7,0X78,0XD7,0X78,0XD7,0X78,0XD7,0X78,0XD7,0X78,0XCF,0X78,0XCF,
N0XF8,0XA6,0XFA,0X9E,0X79,0XB7,0XB8,0XCF,0X78,0XCF,0X38,0XBF,0XB9,0XD7,0X78,0XD7,
N0X78,0XBF,0X78,0XCF,0XB9,0XCF,0XFA,0XA6,0XBA,0XD7,0X79,0XE7,0X79,0XDF,0XFA,0XE7,
N0XFA,0XE7,0XB9,0XDF,0XB9,0XDF,0X79,0XE7,0X79,0XDF,0X79,0XDF,0XBA,0XDF,0XF9,0XA6,
N0X79,0XB7,0X78,0XB7,0X78,0XD7,0X37,0XBF,0X38,0XBF,0XB8,0XD7,0X37,0XBF,0X37,0XB7,
N0XB8,0XCF,0X79,0XCF,0X38,0XB7,0X37,0XB7,0X39,0XAF,0XB9,0X96,0X39,0XAF,0X39,0XAF,
N0XF9,0XA6,0XB8,0XC7,0X78,0XD7,0X78,0XD7,0X78,0XD7,0X78,0XD7,0X78,0XD7,0X78,0XD7,
N0XB8,0XD7,0X79,0XD7,0X78,0XCF,0XBA,0XCF,0XFB,0X96,0X39,0XB7,0X38,0XBF,0X78,0XCF,
N0X38,0XC7,0X38,0XC7,0X78,0XD7,0X38,0XBF,0X37,0XC7,0XB8,0XD7,0XF9,0XA6,0XB9,0XAE,
N0X79,0XE7,0XB9,0XDF,0XB9,0XDF,0XB9,0XDF,0XFA,0XE7,0XFA,0XE7,0XB9,0XDF,0X79,0XDF,
N0X79,0XDF,0X79,0XDF,0X79,0XDF,0XBB,0XD7,0XFA,0X9E,0X39,0XB7,0X37,0XBF,0X78,0XD7,
N0X78,0XC7,0X78,0XBF,0X78,0XD7,0X38,0XBF,0X78,0XBF,0XB8,0XCF,0X37,0XBF,0X38,0XB7,
N0X38,0XB7,0XB8,0X9E,0XFA,0X96,0X38,0XAF,0XF9,0XA6,0XF9,0X9E,0XB8,0XCF,0X78,0XCF,
N0X78,0XD7,0X78,0XD7,0X78,0XD7,0X78,0XD7,0XB8,0XD7,0X78,0XD7,0XB8,0XCF,0X78,0XD7,
N0XF8,0XA6,0XFA,0X9E,0X38,0XB7,0XB8,0XC7,0XB8,0XCF,0X37,0XBF,0X79,0XCF,0XB8,0XD7,
N0X38,0XC7,0X37,0XC7,0X78,0XD7,0XFA,0XA6,0XB8,0XB6,0XB9,0XDF,0XB9,0XDF,0XB9,0XDF,
N0XFA,0XE7,0XB9,0XDF,0XB9,0XDF,0X79,0XDF,0X79,0XDF,0X79,0XDF,0XBA,0XDF,0XFA,0XA6,
N0XF9,0XA6,0X78,0XB7,0XB8,0XD7,0X78,0XCF,0X38,0XBF,0X78,0XD7,0XB9,0XCF,0X78,0XB7,
N0XB7,0XCF,0XB8,0XCF,0X37,0XB7,0X38,0XB7,0X39,0XAF,0XB9,0X96,0X38,0XAF,0X39,0XA7,
N0XFA,0X96,0XBA,0XC7,0X79,0XCF,0XB8,0XCF,0X78,0XD7,0X78,0XD7,0X78,0XD7,0X78,0XD7,
N0XB8,0XD7,0X78,0XD7,0X78,0XCF,0XBA,0XC7,0XFA,0X9E,0X79,0XB7,0X37,0XB7,0XB8,0XCF,
N0X38,0XC7,0X37,0XC7,0X78,0XD7,0X38,0XC7,0X38,0XBF,0X78,0XD7,0X78,0XD7,0X79,0XD7,
N0XFA,0X9E,0XBB,0XD7,0XB9,0XDF,0X7A,0XDF,0XFA,0XE7,0XFA,0XE7,0XB9,0XDF,0XB9,0XDF,
N0XB8,0XCF,0X37,0XC7,0X38,0XC7,0X78,0XD7,0X37,0XC7,0X37,0XC7,0X78,0XD7,0X37,0XC7,
N0X37,0XC7,0XB8,0XCF,0XF9,0X9E,0XF9,0XA6,0X78,0XB7,0X38,0XB7,0XB8,0XCF,0X78,0XD7,
N0XB9,0XD7,0XB8,0XD7,0X78,0XD7,0XB9,0XD7,0XB8,0XD7,0X78,0XD7,0XFA,0X9E,0XB8,0XAE,
N0X79,0XDF,0X79,0XDF,0XB9,0XDF,0XB9,0XDF,0XFA,0XE7,0XFA,0XE7,0XB9,0XDF,0X79,0XDF,
N0X79,0XDF,0X79,0XDF,0XB9,0XDF,0XBB,0XD7,0XF9,0XA6,0X79,0XC7,0XB8,0XCF,0XB8,0XD7,
N0XB8,0XD7,0XB8,0XD7,0X77,0XD7,0XB9,0XCF,0XBB,0XC7,0XFA,0X9E,0XFA,0X9E,0XFA,0X9E,
N0XFA,0X9E,0XFA,0X96,0XFA,0X96,0XFA,0X96,0XFA,0X9E,0XF8,0XA6,0X78,0XCF,0X37,0XC7,
N0X37,0XC7,0X78,0XD7,0X37,0XC7,0X37,0XC7,0X78,0XD7,0X37,0XC7,0X37,0XC7,0X78,0XCF,
N0XF8,0XA6,0XFA,0X9E,0X79,0XB7,0XB9,0XCF,0X78,0XCF,0X78,0XD7,0X78,0XD7,0X78,0XD7,
N0XB8,0XD7,0X78,0XD7,0XB9,0XD7,0XFA,0XA6,0XBA,0XD7,0X79,0XE7,0X79,0XDF,0XFA,0XE7,
N0XFA,0XE7,0XB9,0XDF,0XB9,0XDF,0X79,0XE7,0X79,0XDF,0X79,0XDF,0XBA,0XDF,0XF9,0XA6,
N0XBA,0XC7,0X78,0XCF,0X78,0XD7,0XB8,0XCF,0X78,0XD7,0X78,0XD7,0X78,0XD7,0XB9,0XC7,
N0XF9,0XA6,0XFA,0X9E,0XFA,0X96,0XFA,0X9E,0XFA,0X9E,0XFB,0X96,0XFA,0X96,0XFA,0X96,
N0XF9,0X9E,0XB9,0XC7,0XB8,0XCF,0X38,0XBF,0XB8,0XD7,0XB9,0XCF,0X37,0XC7,0XB8,0XD7,
N0XB8,0XCF,0X38,0XC7,0XB8,0XCF,0XBA,0XC7,0XFB,0X96,0X39,0XB7,0X37,0XBF,0X78,0XCF,
N0XB9,0XD7,0X78,0XD7,0X78,0XD7,0X78,0XD7,0X78,0XD7,0XB9,0XD7,0XF9,0XA6,0XB9,0XAE,
N0X79,0XE7,0XB9,0XDF,0XB9,0XDF,0XB9,0XDF,0XFA,0XE7,0XFA,0XE7,0XB9,0XDF,0X79,0XDF,
N0X79,0XDF,0X79,0XDF,0X79,0XDF,0XBB,0XD7,0XFA,0XA6,0XBA,0XC7,0XB8,0XCF,0X77,0XD7,
N0X78,0XD7,0X78,0XD7,0XB8,0XD7,0XB8,0XCF,0XB8,0XC7,0XFA,0X9E,0XFA,0X9E,0XFA,0X96,
N0XFA,0X9E,0XFA,0X96,0XFA,0X8E,0XFA,0X96,0XFA,0X9E,0XFA,0X9E,0XB8,0XCF,0X37,0XC7,
N0X38,0XC7,0XB9,0XD7,0X37,0XC7,0X38,0XC7,0XB8,0XD7,0X37,0XC7,0X37,0XBF,0X78,0XCF,
N0XF8,0XA6,0XFB,0X9E,0X38,0XB7,0XB8,0XC7,0X78,0XD7,0X78,0XCF,0X78,0XD7,0XB8,0XD7,
N0XB9,0XD7,0XB8,0XD7,0X78,0XD7,0XFA,0XA6,0XB8,0XB6,0XB9,0XDF,0XB9,0XDF,0XB9,0XDF,
N0XFA,0XE7,0XB9,0XDF,0XB9,0XDF,0X79,0XDF,0X79,0XDF,0XB9,0XDF,0XBA,0XDF,0XFA,0XA6,
N0XF9,0XAE,0X78,0XCF,0X78,0XCF,0X78,0XD7,0XB8,0XD7,0X78,0XD7,0XB8,0XD7,0X79,0XD7,
N0XF9,0XA6,0XFA,0X9E,0XFB,0X9E,0XFA,0X9E,0XFA,0X9E,0XFB,0X96,0XF9,0X96,0XFA,0X96,
N0XFB,0X96,0XBA,0XC7,0X79,0XCF,0X38,0XBF,0XB9,0XD7,0XB8,0XD7,0X38,0XC7,0XB8,0XCF,
N0X78,0XD7,0X37,0XC7,0X78,0XCF,0XBA,0XC7,0XFB,0X9E,0X79,0XB7,0X78,0XBF,0X78,0XD7,
N0XB8,0XD7,0XB8,0XD7,0X78,0XD7,0X78,0XD7,0X78,0XD7,0X78,0XD7,0X78,0XD7,0XB9,0XCF,
N0XFA,0X9E,0XBB,0XD7,0XB9,0XDF,0X7A,0XDF,0XFA,0XE7,0XFA,0XE7,0XB9,0XDF,0XB9,0XDF,
N0XB8,0XCF,0X38,0XBF,0X38,0XC7,0X78,0XD7,0X38,0XBF,0X37,0XC7,0X78,0XD7,0X38,0XC7,
N0X38,0XBF,0X78,0XCF,0XF9,0X9E,0XF9,0XA6,0X78,0XB7,0X38,0XB7,0XB8,0XCF,0X78,0XD7,
N0X79,0XD7,0X78,0XCF,0X78,0XD7,0XB9,0XCF,0X78,0XD7,0XB9,0XD7,0XFA,0XA6,0XB8,0XAE,
N0X79,0XDF,0X79,0XDF,0XB9,0XDF,0XB9,0XDF,0XFA,0XE7,0XFA,0XE7,0XB9,0XDF,0X79,0XDF,
N0X79,0XDF,0X79,0XDF,0XB9,0XDF,0XBB,0XD7,0XFA,0XA6,0X79,0XC7,0XB9,0XCF,0X78,0XDF,
N0X78,0XCF,0X78,0XCF,0X77,0XD7,0XB8,0XCF,0XB9,0XC7,0XFA,0X96,0XF9,0XA6,0XF8,0XA6,
N0XF8,0XA6,0XF8,0X9E,0XF8,0X9E,0XF9,0X9E,0XFA,0X9E,0XF8,0XA6,0X78,0XCF,0X38,0XBF,
N0X38,0XBF,0X78,0XD7,0X37,0XBF,0X38,0XBF,0X78,0XD7,0X38,0XBF,0X78,0XBF,0X78,0XCF,
N0XF8,0XA6,0XFA,0X9E,0X79,0XB7,0XB9,0XCF,0XB8,0XCF,0X79,0XD7,0XB9,0XD7,0X78,0XD7,
N0X79,0XD7,0X78,0XD7,0X79,0XD7,0XFB,0XA6,0XBA,0XD7,0X79,0XE7,0X79,0XDF,0XFA,0XE7,
N0XFA,0XE7,0XB9,0XDF,0XB9,0XDF,0X79,0XE7,0X79,0XDF,0X79,0XDF,0XBA,0XDF,0XF9,0XA6,
N0X7A,0XC7,0X79,0XCF,0XB8,0XD7,0X78,0XD7,0X78,0XD7,0XB9,0XD7,0X78,0XCF,0XB9,0XC7,
N0XFA,0X9E,0XF9,0X9E,0XB8,0XA6,0XF9,0XA6,0XF8,0XA6,0XF9,0XA6,0XF9,0X9E,0XF9,0X9E,
N0XF9,0X9E,0XB9,0XCF,0XB8,0XCF,0X38,0XBF,0XB8,0XD7,0XB9,0XCF,0X38,0XBF,0XB8,0XD7,
N0XB8,0XCF,0X78,0XBF,0XB8,0XCF,0XBA,0XC7,0XFB,0X96,0X39,0XB7,0X38,0XB7,0X78,0XCF,
N0XB9,0XCF,0X78,0XCF,0X78,0XD7,0XB8,0XD7,0X78,0XD7,0XB9,0XD7,0XF9,0XA6,0XB9,0XAE,
N0X79,0XE7,0XB9,0XDF,0XB9,0XDF,0XB9,0XDF,0XFA,0XE7,0XFA,0XE7,0XB9,0XDF,0X79,0XDF,
N0X79,0XDF,0X79,0XDF,0X79,0XDF,0XBB,0XD7,0XFA,0X9E,0X7A,0XC7,0XB8,0XCF,0X78,0XD7,
N0X78,0XD7,0X78,0XD7,0XB8,0XD7,0XB8,0XCF,0XB9,0XC7,0XFB,0X9E,0XF9,0XA6,0XB8,0XA6,
N0XF9,0XA6,0XB8,0XA6,0XF8,0XA6,0XFA,0X96,0XB9,0X9E,0XFA,0X9E,0XB8,0XCF,0X37,0XBF,
N0X38,0XBF,0XB9,0XD7,0X38,0XBF,0X38,0XBF,0XB8,0XD7,0X38,0XBF,0X38,0XBF,0XB8,0XCF,
N0XF8,0XA6,0XFA,0X9E,0X38,0XB7,0XB8,0XCF,0X78,0XD7,0X78,0XCF,0X78,0XD7,0X77,0XD7,
N0XB9,0XD7,0X78,0XCF,0XB8,0XD7,0XFA,0XA6,0XB8,0XB6,0XB9,0XDF,0XB9,0XDF,0XB9,0XDF,
N0XFA,0XE7,0XB9,0XDF,0XB9,0XDF,0X79,0XDF,0X79,0XDF,0XB9,0XDF,0XBA,0XDF,0XFA,0XA6,
N0XF9,0XAE,0XB9,0XCF,0XB9,0XD7,0XB9,0XD7,0XB8,0XD7,0XB8,0XD7,0XB8,0XD7,0XB9,0XCF,
N0XFA,0X9E,0XF9,0X96,0XB8,0XA6,0XF8,0XA6,0XF8,0XA6,0XF8,0XA6,0XF8,0X9E,0XF9,0X9E,
N0XFB,0X96,0XBA,0XC7,0XB9,0XCF,0X78,0XBF,0XB9,0XCF,0XB9,0XD7,0X78,0XBF,0XB9,0XCF,
N0X79,0XCF,0X78,0XBF,0XB8,0XCF,0XBA,0XC7,0XFB,0X9E,0X79,0XB7,0X37,0XBF,0X78,0XCF,
N0X78,0XCF,0XB9,0XD7,0XB8,0XD7,0X78,0XD7,0XB9,0XD7,0X78,0XD7,0X78,0XD7,0XB9,0XD7,
N0XFA,0X9E,0XBB,0XD7,0XB9,0XDF,0X7A,0XDF,0XFA,0XE7,0XFA,0XE7,0XB9,0XDF,0XB9,0XDF,
N0XB8,0XCF,0X37,0XC7,0X38,0XC7,0X78,0XD7,0X37,0XBF,0X37,0XC7,0X78,0XD7,0X37,0XC7,
N0X38,0XBF,0X78,0XD7,0XF9,0X9E,0XF9,0XA6,0X78,0XB7,0X38,0XB7,0XB9,0XCF,0XB8,0XD7,
N0X38,0XC7,0X38,0XC7,0X78,0XCF,0X78,0XBF,0X37,0XBF,0X78,0XD7,0XFA,0XA6,0XB8,0XAE,
N0X79,0XDF,0X79,0XDF,0XB9,0XDF,0XB9,0XDF,0XFA,0XE7,0XFA,0XE7,0XB9,0XDF,0X79,0XDF,
N0X79,0XDF,0X79,0XDF,0X79,0XDF,0XBB,0XD7,0XFA,0X9E,0X38,0XB7,0X37,0XBF,0XB8,0XD7,
N0X38,0XBF,0X38,0XC7,0X78,0XD7,0X79,0XB7,0X79,0XB7,0XFA,0X9E,0X79,0XCF,0X78,0XCF,
N0XB8,0XCF,0X78,0XCF,0X79,0XCF,0X38,0XB7,0XFA,0XA6,0XF8,0XA6,0X78,0XCF,0X38,0XBF,
N0X38,0XBF,0X78,0XD7,0X37,0XBF,0X38,0XC7,0X78,0XD7,0X38,0XBF,0X78,0XBF,0X78,0XCF,
N0XF8,0XA6,0XF9,0X9E,0X79,0XB7,0XB9,0XCF,0XB8,0XCF,0X78,0XBF,0XB9,0XD7,0X78,0XD7,
N0X78,0XBF,0XB9,0XCF,0X79,0XCF,0XFB,0XA6,0XBA,0XD7,0X79,0XE7,0X79,0XDF,0XFA,0XE7,
N0XFA,0XE7,0XB9,0XDF,0XB9,0XDF,0X79,0XE7,0X79,0XDF,0X79,0XDF,0XBA,0XDF,0XF9,0XA6,
N0X79,0XB7,0X38,0XB7,0X78,0XD7,0X37,0XC7,0X37,0XBF,0XB8,0XD7,0X37,0XB7,0X78,0XB7,
N0XF9,0X9E,0XF8,0XA6,0X78,0XCF,0XB8,0XCF,0X78,0XCF,0X78,0XCF,0X38,0XB7,0X39,0XAF,
N0XFA,0X9E,0XB9,0XCF,0XB8,0XCF,0X38,0XBF,0X78,0XDF,0XB9,0XCF,0X38,0XBF,0XB8,0XD7,
N0XB8,0XD7,0X79,0XBF,0X78,0XCF,0XBA,0XC7,0XFA,0X9E,0X39,0XB7,0X38,0XB7,0X78,0XCF,
N0X38,0XBF,0X37,0XC7,0XB8,0XDF,0X79,0XBF,0X38,0XBF,0X78,0XD7,0XF9,0XA6,0XB9,0XAE,
N0X79,0XE7,0XB9,0XDF,0XB9,0XDF,0XB9,0XDF,0XFA,0XE7,0XFA,0XE7,0XB9,0XDF,0X79,0XDF,
N0X79,0XDF,0X79,0XDF,0X79,0XDF,0XBB,0XD7,0XFA,0X9E,0X39,0XB7,0X37,0XBF,0X78,0XD7,
N0X38,0XBF,0X78,0XBF,0XB8,0XD7,0X38,0XBF,0X78,0XB7,0XFA,0X9E,0X7B,0XBF,0X38,0XCF,
N0XB8,0XCF,0X78,0XCF,0X78,0XCF,0X39,0XB7,0XF8,0XA6,0XFA,0XA6,0XB8,0XCF,0X37,0XC7,
N0X38,0XBF,0X78,0XD7,0X38,0XC7,0X78,0XBF,0X78,0XD7,0X38,0XC7,0X38,0XBF,0X78,0XCF,
N0XF8,0XA6,0XFA,0X9E,0X38,0XB7,0XB8,0XCF,0XB8,0XCF,0X38,0XBF,0XB9,0XCF,0X78,0XD7,
N0X38,0XBF,0X37,0XBF,0X78,0XD7,0XFA,0XA6,0XB8,0XB6,0XB9,0XDF,0XB9,0XDF,0XB9,0XDF,
N0XFA,0XE7,0XB9,0XDF,0XB9,0XDF,0X79,0XDF,0X79,0XDF,0XB9,0XDF,0XBA,0XDF,0XFA,0XA6,
N0XF9,0XA6,0X79,0XB7,0XB8,0XD7,0X78,0XD7,0X39,0XB7,0X77,0XD7,0XB8,0XD7,0X38,0XBF,
N0XFA,0X9E,0XF8,0XA6,0X79,0XCF,0X79,0XCF,0X78,0XCF,0X78,0XCF,0X38,0XB7,0X39,0XAF,
N0XFB,0X9E,0XBA,0XC7,0XB9,0XCF,0X78,0XBF,0XB9,0XCF,0X79,0XD7,0X38,0XBF,0XB9,0XCF,
N0X79,0XD7,0X78,0XBF,0XB8,0XCF,0XB9,0XC7,0XFB,0X9E,0X79,0XB7,0X38,0XB7,0X78,0XCF,
N0X38,0XBF,0X38,0XBF,0X78,0XD7,0X37,0XBF,0X78,0XBF,0XB8,0XD7,0X78,0XD7,0XB8,0XD7,
N0XFA,0X9E,0XBB,0XD7,0XB9,0XDF,0X7A,0XDF,0XFA,0XE7,0XFA,0XE7,0XB9,0XDF,0XB9,0XDF,
N0XB8,0XCF,0XB8,0XD7,0X78,0XD7,0X78,0XDF,0X78,0XD7,0X78,0XD7,0XB8,0XD7,0X78,0XD7,
N0X78,0XD7,0X78,0XCF,0XF9,0XA6,0XF9,0X9E,0X38,0XB7,0X78,0XB7,0XB9,0XCF,0XB7,0XD7,
N0X38,0XBF,0X78,0XBF,0XB8,0XD7,0X78,0XBF,0X77,0XBF,0X78,0XCF,0XFA,0XA6,0XF8,0XAE,
N0X79,0XE7,0X7A,0XE7,0XB9,0XDF,0X79,0XDF,0X79,0XDF,0X79,0XDF,0XB9,0XDF,0XB9,0XDF,
N0XB9,0XDF,0XB9,0XDF,0XBA,0XDF,0XBB,0XD7,0XF9,0X9E,0X38,0XAF,0X37,0XBF,0XB8,0XDF,
N0X38,0XBF,0X37,0XBF,0X77,0XDF,0X78,0XB7,0X7A,0XB7,0XFB,0X9E,0X78,0XCF,0XB9,0XC7,
N0X78,0XB7,0XB8,0XCF,0XB9,0XCF,0X37,0XAF,0XF8,0X9E,0XF8,0X9E,0X78,0XD7,0XB8,0XCF,
N0X77,0XCF,0XB8,0XD7,0X77,0XD7,0X78,0XD7,0X78,0XD7,0X78,0XCF,0XB8,0XCF,0X78,0XD7,
N0XF9,0XA6,0XFA,0X9E,0X37,0XB7,0XB9,0XCF,0XB8,0XCF,0X77,0XB7,0XB8,0XCF,0X78,0XD7,
N0X78,0XBF,0X79,0XCF,0X79,0XD7,0XFA,0X9E,0XBA,0XD7,0XBA,0XE7,0XB9,0XE7,0X79,0XDF,
N0X79,0XDF,0XB9,0XDF,0XB9,0XDF,0X79,0XDF,0XB9,0XDF,0X79,0XDF,0X79,0XCF,0XFA,0X9E,
N0X79,0XAF,0X38,0XB7,0XB8,0XCF,0X37,0XB7,0X37,0XB7,0X78,0XD7,0X38,0XB7,0X39,0XB7,
N0XFA,0X9E,0XF8,0XA6,0X78,0XCF,0X36,0XB7,0X37,0XBF,0X78,0XCF,0X37,0XB7,0X39,0XAF,
N0XFA,0X9E,0XB9,0XC7,0X78,0XD7,0X78,0XD7,0X78,0XD7,0X78,0XD7,0X78,0XD7,0X78,0XD7,
N0XB8,0XD7,0XB9,0XD7,0XB8,0XCF,0XBA,0XC7,0XFB,0X96,0X39,0XB7,0X38,0XBF,0XB8,0XCF,
N0X38,0XBF,0X38,0XBF,0X78,0XD7,0X78,0XBF,0X37,0XBF,0X78,0XD7,0XF9,0XAE,0XF8,0XAE,
N0X79,0XE7,0XB9,0XDF,0XB9,0XDF,0X79,0XDF,0X79,0XDF,0X79,0XDF,0XB9,0XDF,0XB9,0XDF,
N0X79,0XE7,0XB9,0XDF,0XBA,0XDF,0XBB,0XD7,0XFA,0XA6,0X39,0XAF,0X38,0XBF,0X78,0XD7,
N0X37,0XC7,0X78,0XBF,0X78,0XD7,0X37,0XBF,0X79,0XB7,0XFA,0X9E,0XBA,0XC7,0XB8,0XCF,
N0X38,0XB7,0XB8,0XC7,0X78,0XD7,0X37,0XA7,0XF8,0X9E,0XF9,0X9E,0XB8,0XCF,0X78,0XCF,
N0X78,0XCF,0X78,0XD7,0X78,0XD7,0XB8,0XD7,0X78,0XD7,0X78,0XD7,0XB8,0XD7,0XB7,0XD7,
N0XF9,0XA6,0XFA,0X9E,0X37,0XB7,0XB9,0XCF,0XB8,0XCF,0X37,0XB7,0XB9,0XCF,0X78,0XDF,
N0X38,0XBF,0X37,0XC7,0XB8,0XD7,0XFA,0XA6,0XB8,0XB6,0X79,0XDF,0XB9,0XDF,0X79,0XDF,
N0X79,0XDF,0XB9,0XDF,0X79,0XDF,0X79,0XDF,0XB9,0XDF,0XBA,0XDF,0X79,0XD7,0XFA,0X9E,
N0XF9,0X9E,0X37,0XAF,0X78,0XCF,0XB8,0XCF,0X77,0XB7,0XB8,0XCF,0XB9,0XCF,0X38,0XB7,
N0XFA,0X9E,0XF8,0XA6,0X78,0XCF,0X77,0XB7,0X37,0XBF,0X78,0XCF,0X37,0XB7,0X38,0XA7,
N0XFB,0X96,0XBA,0XC7,0XB8,0XCF,0XB8,0XD7,0XB8,0XD7,0X78,0XD7,0X78,0XD7,0XB8,0XD7,
N0X78,0XD7,0XB8,0XD7,0X78,0XCF,0XBA,0XC7,0XFA,0X9E,0X79,0XAF,0X37,0XB7,0X78,0XCF,
N0X37,0XBF,0X37,0XBF,0XB8,0XD7,0X37,0XBF,0X37,0XBF,0X78,0XDF,0XB8,0XCF,0XB9,0XCF,
N0XFA,0X9E,0XBA,0XD7,0XBA,0XE7,0XB9,0XE7,0X79,0XDF,0X79,0XDF,0XB9,0XDF,0X79,0XDF,
N0XB8,0XD7,0XB8,0XCF,0XB8,0XD7,0X78,0XD7,0XB8,0XD7,0X78,0XCF,0X78,0XD7,0XB8,0XD7,
N0XB8,0XCF,0XB8,0XCF,0XF9,0XA6,0XF9,0X9E,0X38,0XB7,0X78,0XB7,0XB9,0XCF,0XB8,0XCF,
N0X38,0XC7,0X78,0XC7,0XB8,0XD7,0X78,0XC7,0X77,0XC7,0XB8,0XCF,0XFA,0X9E,0XF8,0XAE,
N0X79,0XDF,0X7A,0XDF,0X79,0XDF,0XB9,0XDF,0X79,0XDF,0X79,0XDF,0X79,0XDF,0XB9,0XDF,
N0X79,0XDF,0X79,0XDF,0X79,0XDF,0XBB,0XD7,0XFA,0X9E,0X39,0XB7,0X37,0XBF,0XB9,0XD7,
N0X38,0XC7,0X78,0XC7,0X78,0XD7,0X38,0XBF,0X7A,0XB7,0XFB,0X96,0X79,0XD7,0X78,0XCF,
N0X78,0XB7,0XB8,0XC7,0XB8,0XCF,0X37,0XAF,0XF8,0X96,0XF7,0X9E,0X78,0XCF,0X78,0XC7,
N0X78,0XCF,0XB9,0XD7,0XB8,0XCF,0XB9,0XCF,0XB8,0XD7,0X78,0XCF,0XB8,0XCF,0X77,0XD7,
N0XF8,0XA6,0XFA,0X9E,0X37,0XAF,0XB8,0XCF,0XB8,0XCF,0X37,0XBF,0XB8,0XCF,0XB8,0XCF,
N0X78,0XC7,0X78,0XCF,0XB8,0XCF,0XFA,0XA6,0XBA,0XD7,0X79,0XE7,0X79,0XDF,0X79,0XDF,
N0XB9,0XDF,0XB9,0XDF,0X79,0XDF,0X79,0XDF,0XB9,0XDF,0X79,0XDF,0X7A,0XD7,0XFA,0XA6,
N0X78,0XB7,0X37,0XBF,0XB8,0XCF,0X37,0XBF,0X37,0XBF,0X78,0XD7,0X77,0XBF,0X39,0XB7,
N0XF9,0X9E,0XF8,0XA6,0X79,0XCF,0X37,0XB7,0X37,0XB7,0X77,0XC7,0X36,0XAF,0X39,0XAF,
N0XF9,0X9E,0XB8,0XCF,0XB8,0XCF,0XB8,0XD7,0XB8,0XD7,0XB8,0XD7,0XB8,0XCF,0X78,0XD7,
N0X78,0XD7,0XB9,0XCF,0XB8,0XCF,0XBA,0XC7,0XFB,0X96,0X79,0XB7,0X37,0XB7,0XB8,0XCF,
N0X78,0XC7,0X37,0XC7,0X78,0XD7,0X77,0XC7,0X77,0XC7,0XB8,0XD7,0XF9,0XA6,0XB9,0XAE,
N0X79,0XDF,0X7A,0XDF,0X79,0XDF,0X79,0XDF,0X79,0XE7,0X79,0XE7,0X79,0XDF,0XB9,0XDF,
N0XB9,0XDF,0X7A,0XDF,0X7A,0XDF,0XBB,0XD7,0XFA,0X9E,0X39,0XBF,0X37,0XC7,0X77,0XD7,
N0X38,0XCF,0X77,0XC7,0X78,0XD7,0X37,0XBF,0X78,0XB7,0XFA,0X96,0XBA,0XC7,0X78,0XCF,
N0X78,0XB7,0XB8,0XBF,0X78,0XCF,0X37,0XAF,0XB8,0X9E,0XF9,0X9E,0X77,0XCF,0XB8,0XCF,
N0X78,0XCF,0XB8,0XD7,0X78,0XCF,0XB8,0XCF,0XB8,0XD7,0XB8,0XCF,0XB9,0XCF,0X78,0XD7,
N0XF8,0XA6,0XFA,0X9E,0X37,0XB7,0XB8,0XCF,0X77,0XCF,0X36,0XBF,0X78,0XCF,0X78,0XD7,
N0X78,0XC7,0X78,0XC7,0X78,0XCF,0XFA,0XA6,0XB8,0XAE,0X79,0XDF,0X79,0XDF,0X79,0XDF,
N0XB9,0XDF,0XB9,0XDF,0X79,0XDF,0X79,0XDF,0X79,0XDF,0X79,0XE7,0X79,0XD7,0XFA,0X9E,
N0XF8,0X9E,0X37,0XB7,0X78,0XCF,0XB8,0XCF,0X37,0XBF,0X78,0XCF,0X78,0XCF,0X38,0XBF,
N0XFA,0X96,0XF8,0XA6,0X78,0XCF,0X36,0XB7,0X37,0XBF,0X77,0XCF,0XF7,0XB6,0X38,0XA7,
N0XFA,0X9E,0XBA,0XC7,0XB8,0XCF,0XB8,0XCF,0XB9,0XD7,0XB9,0XD7,0X78,0XCF,0XB8,0XD7,
N0XB9,0XD7,0XB8,0XCF,0XB9,0XCF,0XBA,0XC7,0XFA,0X9E,0X39,0XB7,0X37,0XBF,0X78,0XD7,
N0X37,0XC7,0X37,0XC7,0XB8,0XD7,0X37,0XCF,0X37,0XC7,0X78,0XD7,0X78,0XD7,0X79,0XD7,
N0XFA,0XA6,0XBB,0XD7,0XBA,0XDF,0X79,0XDF,0X79,0XDF,0XB9,0XDF,0XB9,0XDF,0X79,0XDF,
N0X78,0XCF,0X37,0XB7,0X36,0XBF,0X78,0XD7,0X37,0XBF,0X37,0XC7,0XB8,0XD7,0X37,0XC7,
N0X37,0XBF,0XB8,0XCF,0XF9,0XA6,0XF9,0X9E,0X78,0XB7,0X78,0XB7,0XB8,0XCF,0X78,0XCF,
N0X78,0XCF,0XB8,0XD7,0X77,0XD7,0X78,0XCF,0X78,0XCF,0XB9,0XCF,0XFB,0X9E,0XF9,0XA6,
N0X79,0XD7,0X79,0XDF,0X79,0XD7,0X78,0XD7,0X78,0XD7,0X78,0XDF,0X78,0XDF,0X78,0XD7,
N0X78,0XD7,0X79,0XDF,0X7A,0XD7,0X7B,0XCF,0XF9,0X9E,0X79,0XCF,0X77,0XCF,0X78,0XD7,
N0X78,0XDF,0XB8,0XD7,0XB8,0XD7,0X77,0XCF,0X79,0XC7,0XFA,0X9E,0X79,0XCF,0XB8,0XC7,
N0X37,0XB7,0X78,0XC7,0X38,0XC7,0X38,0XAF,0XB9,0X9E,0X77,0X9E,0X38,0XCF,0XF6,0XBE,
N0X37,0XBF,0X78,0XCF,0X37,0XBF,0X38,0XBF,0X78,0XD7,0X37,0XBF,0X37,0XBF,0X78,0XCF,
N0XB8,0X9E,0XB9,0X96,0X37,0XB7,0X78,0XC7,0X77,0XC7,0X77,0XCF,0X77,0XCF,0X77,0XCF,
N0X78,0XCF,0X78,0XCF,0XB9,0XCF,0XFB,0XA6,0XBB,0XD7,0XB9,0XDF,0X79,0XDF,0X79,0XDF,
N0X79,0XDF,0X79,0XDF,0X79,0XDF,0X79,0XDF,0XB9,0XDF,0X79,0XD7,0X7A,0XCF,0XF9,0X9E,
N0XB9,0XBF,0X78,0XCF,0X77,0XC7,0X78,0XD7,0XB7,0XD7,0X77,0XCF,0X77,0XCF,0X78,0XCF,
N0XF8,0XA6,0XF7,0XA6,0X78,0XCF,0X37,0XBF,0XF6,0XB6,0X78,0XCF,0XF7,0XB6,0XF9,0XAE,
N0XB8,0X9E,0X79,0XCF,0X79,0XC7,0X37,0XBF,0X78,0XD7,0XB8,0XCF,0X37,0XBF,0XB8,0XD7,
N0XB8,0XD7,0X78,0XBF,0XB8,0XCF,0XBA,0XC7,0XFB,0X9E,0X79,0XB7,0X37,0XB7,0X78,0XCF,
N0XB9,0XD7,0X78,0XD7,0XB9,0XD7,0X78,0XD7,0XB8,0XD7,0XB8,0XCF,0XF9,0XA6,0XF9,0XA6,
N0X79,0XD7,0X79,0XD7,0X78,0XD7,0XB8,0XDF,0X78,0XDF,0X78,0XDF,0X78,0XD7,0X78,0XD7,
N0X78,0XD7,0X79,0XDF,0X79,0XD7,0XBB,0XCF,0XFB,0X9E,0X7A,0XC7,0XB8,0XCF,0X77,0XD7,
N0X78,0XD7,0X78,0XD7,0X78,0XD7,0X78,0XD7,0XB9,0XCF,0XFA,0X9E,0X7A,0XC7,0X77,0XCF,
N0X37,0XB7,0XB8,0XC7,0X37,0XCF,0X38,0XAF,0XB8,0X9E,0XB9,0X9E,0X78,0XC7,0X37,0XB7,
N0X37,0XB7,0X78,0XCF,0X77,0XBF,0X37,0XBF,0X78,0XD7,0X36,0XBF,0X37,0XB7,0X78,0XCF,
N0XB7,0X9E,0XB9,0X96,0X38,0XAF,0X78,0XC7,0X78,0XCF,0X77,0XCF,0X77,0XCF,0X77,0XCF,
N0XB8,0XCF,0X78,0XD7,0XB8,0XCF,0XFA,0XA6,0XF8,0XAE,0XB9,0XDF,0XB9,0XDF,0X79,0XDF,
N0X79,0XDF,0X79,0XDF,0X79,0XDF,0X79,0XDF,0XB9,0XDF,0X7A,0XDF,0X7A,0XD7,0XBA,0X9E,
N0XB7,0XA6,0X78,0XCF,0X37,0XC7,0X77,0XCF,0X77,0XCF,0X78,0XD7,0X77,0XD7,0X78,0XCF,
N0XF9,0X96,0XB8,0XA6,0X78,0XCF,0X37,0XAF,0XF7,0XB6,0X78,0XC7,0XF7,0XAE,0X39,0XAF,
N0XB9,0X96,0X7A,0XC7,0X79,0XCF,0X37,0XB7,0XB9,0XCF,0XB8,0XD7,0X37,0XBF,0XB9,0XD7,
N0XB9,0XD7,0X78,0XBF,0XB9,0XCF,0XBA,0XC7,0XFA,0X9E,0X79,0XB7,0X37,0XB7,0XB8,0XCF,
N0XB7,0XCF,0X77,0XCF,0X77,0XCF,0X77,0XD7,0X77,0XCF,0X77,0XD7,0X77,0XD7,0X79,0XC7,
N0XFA,0X9E,0XBB,0XD7,0XBA,0XDF,0X79,0XDF,0X79,0XDF,0X79,0XDF,0X79,0XDF,0X79,0XDF,
N0X77,0XC7,0X36,0XAF,0XF5,0XB6,0X77,0XD7,0X37,0XBF,0X37,0XBF,0X78,0XD7,0X38,0XBF,
N0X38,0XB7,0X78,0XCF,0XF9,0XA6,0XF9,0X9E,0X78,0XB7,0XF9,0X9E,0X7A,0XC7,0XB9,0XCF,
N0XFA,0XA6,0XF8,0XAE,0XB9,0XCF,0XFA,0XA6,0XF8,0XA6,0X78,0XCF,0XF9,0XA6,0XF7,0XA6,
N0X78,0XD7,0X78,0XCF,0XB8,0XC7,0X70,0X76,0X6F,0X6E,0X6F,0X6E,0X6F,0X6E,0X70,0X76,
N0X30,0X86,0X78,0XCF,0X77,0XD7,0X79,0XC7,0XF9,0X96,0XFA,0X9E,0XB8,0XA6,0XB9,0XCF,
N0XFA,0X9E,0XF9,0XA6,0X78,0XCF,0XBA,0X96,0XBA,0X96,0XB9,0X8E,0X77,0XC7,0X77,0XC7,
N0X77,0XC7,0X2F,0X7E,0X6E,0X66,0X6E,0X66,0X6F,0X5E,0X6F,0X5E,0X6F,0X66,0XF6,0X86,
N0XB6,0X96,0X77,0XC7,0XF8,0XA6,0XB7,0XA6,0X77,0XCF,0XF7,0X9E,0XB7,0X9E,0X77,0XCF,
N0X30,0X76,0X71,0X66,0X6F,0X66,0X6F,0X66,0X6F,0X66,0X6F,0X6E,0XB6,0XBF,0X77,0XC7,
N0X37,0XB7,0X78,0XC7,0X78,0XC7,0XFB,0X9E,0XBB,0XCF,0X79,0XDF,0X79,0XDF,0X79,0XDF,
N0X79,0XDF,0X79,0XDF,0XB8,0XDF,0X79,0XDF,0X78,0XD7,0X78,0XCF,0X78,0XC7,0X30,0X6E,
N0X6F,0X6E,0X6F,0X66,0X6F,0X66,0XAF,0X66,0X2F,0X76,0X77,0XC7,0X36,0XAF,0X36,0X9F,
N0XF8,0X8E,0XB7,0X96,0X77,0XB7,0X2F,0X6E,0X6F,0X66,0X6E,0X66,0X6E,0X66,0X6F,0X66,
N0X30,0X6E,0XB6,0XBF,0X77,0XBF,0X36,0XAF,0X78,0XCF,0XB8,0XC7,0X37,0XBF,0XB8,0XD7,
N0X78,0XCF,0X78,0XB7,0XB8,0XCF,0XBA,0XC7,0XFA,0X96,0X79,0XB7,0X38,0XBF,0XB8,0XCF,
N0X37,0XBF,0X37,0XC7,0XB8,0XD7,0X37,0XB7,0X77,0XBF,0XB9,0XD7,0XF9,0XA6,0XB8,0XA6,
N0X78,0XD7,0X78,0XCF,0XF8,0XC7,0X70,0X76,0X6F,0X6E,0X6F,0X6E,0X6F,0X6E,0X70,0X76,
N0X30,0X7E,0X78,0XD7,0X79,0XCF,0X79,0XC7,0XFA,0X9E,0X38,0XB7,0X37,0XBF,0X78,0XD7,
N0X37,0XC7,0X37,0XBF,0XB8,0XCF,0X36,0XBF,0X37,0XB7,0XB9,0X96,0X79,0XBF,0X77,0XCF,
N0X78,0XC7,0X30,0X7E,0X6F,0X6E,0X6F,0X66,0X6F,0X66,0X6F,0X66,0X2E,0X66,0X75,0X9F,
N0X36,0XA7,0X77,0XCF,0X37,0XBF,0X37,0XB7,0X77,0XCF,0X36,0XB7,0XF7,0XAE,0X78,0XC7,
N0X31,0X76,0X70,0X66,0X6E,0X66,0X6E,0X66,0X6F,0X66,0X6E,0X66,0XB7,0XBF,0X77,0XC7,
N0X37,0XAF,0X36,0XB7,0X79,0XCF,0XFA,0X9E,0XB8,0XA6,0X79,0XDF,0XB9,0XDF,0X79,0XDF,
N0X79,0XDF,0X79,0XDF,0X79,0XDF,0X78,0XDF,0X77,0XDF,0X78,0XD7,0X77,0XCF,0X31,0X6E,
N0X70,0X6E,0X6F,0X66,0X6F,0X66,0X6F,0X66,0X6F,0X6E,0X77,0XB7,0X79,0XAF,0XB9,0X8E,
N0XF9,0X86,0XB7,0X96,0X77,0XBF,0X2E,0X66,0X6F,0X66,0X2E,0X66,0X2E,0X66,0X70,0X66,
N0X70,0X5E,0XB7,0XB7,0X77,0XBF,0X36,0XAF,0X78,0XCF,0XB8,0XCF,0X37,0XB7,0XB8,0XCF,
N0XB9,0XCF,0X37,0XB7,0XB8,0XC7,0XBA,0XC7,0XFA,0X96,0X38,0XA7,0XF6,0XB6,0X77,0XC7,
N0X77,0XC7,0X77,0XC7,0X6E,0X66,0X6F,0X6E,0X6F,0X6E,0X6E,0X5E,0X30,0X76,0X38,0XCF,
N0XFA,0X96,0XBB,0XCF,0X79,0XD7,0X79,0XDF,0X79,0XDF,0X79,0XDF,0X79,0XDF,0XB9,0XDF,
N0XB7,0XB7,0X76,0XA7,0X35,0XAF,0XB7,0XCF,0X36,0XB7,0X36,0XBF,0X78,0XD7,0X37,0XBF,
N0X37,0XBF,0X78,0XCF,0XF9,0X9E,0XF8,0X9E,0X78,0XB7,0XF9,0X9E,0XBA,0XC7,0X78,0XCF,
N0XFA,0XA6,0XF9,0XA6,0XB7,0XCF,0XF9,0X9E,0XF8,0XA6,0XB8,0XCF,0XF9,0X9E,0XF8,0X9E,
N0XB7,0XBF,0XB7,0XBF,0XF7,0XB7,0XAF,0X6E,0XAE,0X6E,0XAE,0X6E,0X6E,0X6E,0XAF,0X6E,
N0X70,0X76,0XB7,0XBF,0XB8,0XBF,0XBA,0XBF,0XF9,0X96,0XFA,0X96,0XF8,0XA6,0X78,0XCF,
N0XFA,0X9E,0XF8,0XA6,0X78,0XCF,0XF9,0X96,0XF9,0X96,0XF9,0X96,0XB7,0XB7,0XB7,0XB7,
N0XB7,0XBF,0X6F,0X6E,0XAF,0X66,0X6E,0X5E,0X6E,0X56,0X6E,0X5E,0X6F,0X66,0X35,0X87,
N0XF5,0X8E,0XB6,0XB7,0XF6,0X9E,0XB6,0XA6,0X77,0XCF,0XF6,0X9E,0XF6,0X96,0XB7,0XAF,
N0X2F,0X66,0X6F,0X5E,0X6E,0X5E,0X6E,0X66,0X6E,0X66,0XAE,0X66,0XF6,0XAF,0XB7,0XB7,
N0X76,0XA7,0XB8,0XC7,0X78,0XC7,0XFB,0X96,0XBB,0XCF,0X78,0XDF,0XB9,0XDF,0X79,0XDF,
N0X79,0XDF,0X79,0XDF,0XB8,0XDF,0XB9,0XDF,0XB8,0XCF,0XB7,0XC7,0XB7,0XBF,0X6E,0X6E,
N0X6E,0X66,0XAE,0X5E,0X6E,0X66,0XAE,0X6E,0X6E,0X6E,0XF6,0XB7,0X35,0X9F,0X76,0X9F,
N0X37,0X8F,0XF6,0X8E,0XB6,0XAF,0X6E,0X66,0X6E,0X66,0X6E,0X66,0X6E,0X66,0X6E,0X5E,
N0X70,0X66,0XF7,0XB7,0XB7,0XB7,0X75,0XAF,0XB7,0XCF,0XB7,0XC7,0X36,0XBF,0XB8,0XD7,
N0X78,0XD7,0X78,0XBF,0X78,0XCF,0XBA,0XC7,0XFA,0X96,0X39,0XB7,0X38,0XBF,0X78,0XCF,
N0X78,0XBF,0X38,0XC7,0XB8,0XD7,0X78,0XBF,0X38,0XBF,0XB8,0XCF,0XF8,0X9E,0XF8,0X9E,
N0XB7,0XC7,0XB7,0XBF,0XF7,0XB7,0XB0,0X76,0X6E,0X66,0XAE,0X66,0XAE,0X66,0XAF,0X6E,
N0X70,0X76,0XB8,0XBF,0XB8,0XBF,0XB9,0XB7,0XF9,0X96,0X78,0XAF,0X37,0XB7,0X78,0XCF,
N0X36,0XBF,0X77,0XBF,0XB8,0XD7,0X36,0XB7,0X37,0XAF,0XB9,0X8E,0XB9,0XB7,0XB6,0XBF,
N0XB7,0XB7,0X6F,0X6E,0XAE,0X66,0X6E,0X66,0XAE,0X5E,0X6E,0X5E,0X6E,0X5E,0X75,0X97,
N0X75,0X9F,0XB7,0XBF,0X76,0XB7,0X36,0XB7,0X77,0XD7,0X35,0XAF,0X76,0XA7,0XB7,0XBF,
N0X2F,0X6E,0X6F,0X5E,0X6E,0X66,0X6E,0X5E,0X6E,0X66,0XAE,0X66,0XF6,0XA7,0XB7,0XB7,
N0X76,0XA7,0X35,0XAF,0X78,0XCF,0XFA,0X9E,0XF8,0XA6,0X79,0XDF,0XB9,0XDF,0X79,0XDF,
N0XB9,0XDF,0X79,0XDF,0XB9,0XDF,0XB8,0XDF,0XB8,0XC7,0XF8,0XC7,0XB7,0XBF,0X6F,0X6E,
N0XAE,0X66,0X6E,0X5E,0X6E,0X66,0XAE,0X5E,0XAF,0X66,0XB6,0XAF,0XB8,0XAF,0XF7,0X86,
N0XF7,0X8E,0XF6,0X8E,0XB7,0XAF,0X6E,0X66,0X6F,0X66,0X6E,0X66,0X6E,0X66,0X6F,0X66,
N0X6F,0X5E,0XF7,0XB7,0XB7,0XB7,0X75,0X9F,0XB7,0XC7,0XB8,0XCF,0X36,0XB7,0XB8,0XD7,
N0XB8,0XD7,0X36,0XB7,0XB8,0XCF,0XB9,0XC7,0XF9,0X96,0X38,0XA7,0X36,0XA7,0XB7,0XB7,
N0XB7,0XB7,0XB6,0XB7,0XAE,0X6E,0XAE,0X6E,0X6F,0X6E,0XAE,0X66,0X6F,0X6E,0X78,0XC7,
N0XFA,0X9E,0XBA,0XCF,0X79,0XD7,0X79,0XDF,0X79,0XDF,0X79,0XDF,0XB9,0XDF,0XB8,0XDF,
N0X6F,0X66,0X6F,0X66,0XF0,0X7D,0X77,0XCF,0X37,0XD7,0X77,0XCF,0X77,0XCF,0X76,0XCF,
N0X77,0XCF,0X77,0XC7,0XB8,0X9E,0XB8,0X9E,0X37,0XAF,0XF8,0X96,0X7A,0XC7,0X78,0XCF,
N0XFA,0X9E,0XF9,0XA6,0XB8,0XC7,0XF9,0X9E,0XB8,0XAE,0X78,0XC7,0XB8,0X96,0XF7,0X8E,
N0X30,0X66,0X6F,0X66,0X6E,0X66,0XEE,0X6E,0XEE,0X66,0X2E,0X67,0XEE,0X66,0X2F,0X6F,
N0XF0,0X6E,0X6E,0X66,0X30,0X66,0X33,0X6E,0XB9,0X8E,0XB9,0X8E,0XB8,0X96,0X78,0XC7,
N0XF9,0X9E,0XB8,0XA6,0X37,0XCF,0XB9,0X8E,0XBA,0X8E,0XB8,0X86,0X31,0X66,0X30,0X66,
N0X6F,0X5E,0XEF,0X66,0X2E,0X67,0X2E,0X67,0X2E,0X67,0X2E,0X67,0XEF,0X66,0X6E,0X56,
N0X6F,0X5E,0X6F,0X66,0X76,0XB7,0X76,0XC7,0X76,0XC7,0X2F,0X76,0X6F,0X66,0X2E,0X5E,
N0XF0,0X66,0XEF,0X66,0XEE,0X66,0XEE,0X66,0XEE,0X66,0XEE,0X6E,0X6D,0X5E,0X2E,0X66,
N0X2E,0X66,0XB7,0XBF,0X77,0XC7,0XBA,0X96,0X79,0XCF,0X78,0XDF,0X78,0XDF,0X78,0XDF,
N0X78,0XDF,0X78,0XDF,0X37,0XD7,0X77,0XCF,0X30,0X7E,0X2F,0X66,0X6F,0X66,0XEF,0X6E,
N0XEE,0X66,0XEE,0X66,0XEE,0X66,0X2E,0X67,0XEE,0X6E,0X6E,0X5E,0X6F,0X5E,0X2F,0X5E,
N0X6F,0X5E,0X6F,0X5E,0X6E,0X5E,0XEF,0X66,0XEE,0X66,0XEE,0X66,0X2E,0X67,0XEE,0X66,
N0XEF,0X66,0X6E,0X66,0X6F,0X66,0X2F,0X76,0X77,0XC7,0X37,0XCF,0X37,0XD7,0X77,0XCF,
N0X77,0XD7,0X77,0XCF,0X77,0XCF,0X7A,0XC7,0XB9,0X8E,0XF8,0XAE,0X37,0XB7,0X78,0XD7,
N0X77,0XB7,0X37,0XBF,0X78,0XDF,0X77,0XBF,0X37,0XB7,0X77,0XC7,0XB8,0X96,0XF6,0X86,
N0X30,0X6E,0X2F,0X66,0XAE,0X66,0XEF,0X6E,0XEE,0X66,0XEE,0X66,0X2E,0X67,0X2F,0X6F,
N0XEF,0X6E,0X6E,0X66,0X2F,0X66,0X31,0X6E,0XB9,0X8E,0X39,0XAF,0XF7,0XB6,0X78,0XD7,
N0X36,0XBF,0X37,0XB7,0X77,0XC7,0XF6,0XAE,0XF7,0XA6,0XB8,0X8E,0X32,0X6E,0X6F,0X66,
N0X6F,0X5E,0XEF,0X66,0XED,0X66,0XEE,0X66,0XEE,0X66,0X2E,0X67,0XEE,0X66,0X6E,0X56,
N0X6F,0X5E,0X6F,0X6E,0X76,0XB7,0X36,0XC7,0X36,0XCF,0X2F,0X7E,0X6F,0X6E,0X2E,0X66,
N0XEF,0X66,0X2E,0X67,0XEE,0X66,0X2E,0X67,0XEE,0X66,0XEE,0X66,0X6D,0X66,0X2E,0X66,
N0X6F,0X66,0X30,0X76,0X78,0XCF,0XB9,0X9E,0XB7,0XA6,0X78,0XD7,0X77,0XD7,0X78,0XD7,
N0X78,0XD7,0X38,0XDF,0X78,0XDF,0X77,0XCF,0X2F,0X6E,0X70,0X6E,0X6F,0X66,0XEF,0X6E,
N0X2F,0X6F,0XEE,0X66,0XEE,0X66,0XEE,0X66,0XEF,0X6E,0X2E,0X5E,0X6F,0X5E,0X6F,0X5E,
N0X6F,0X5E,0X6F,0X5E,0X6F,0X5E,0XEE,0X66,0XEE,0X66,0XEF,0X66,0X2D,0X67,0XEE,0X66,
N0X2F,0X5F,0X6F,0X66,0X2F,0X66,0X6F,0X66,0XB7,0XBF,0X77,0XCF,0X77,0XCF,0XB7,0XD7,
N0XB7,0XCF,0X77,0XCF,0X77,0XCF,0X7A,0XBF,0XB9,0X8E,0X39,0XA7,0X75,0X9F,0X6F,0X66,
N0X6E,0X66,0X6E,0X66,0X2D,0X67,0XEE,0X66,0X2E,0X67,0XEE,0X66,0XAF,0X76,0X78,0XC7,
N0XBA,0X96,0X7A,0XCF,0X78,0XDF,0X78,0XDF,0X78,0XDF,0X78,0XDF,0X78,0XD7,0X78,0XD7,
N0XED,0X66,0XEE,0X66,0XAF,0X66,0X6F,0X6E,0X6F,0X6E,0X2F,0X76,0X76,0XBF,0XB6,0X96,
N0XF6,0X8E,0X30,0X76,0X71,0X66,0X31,0X6E,0X36,0X9F,0XB8,0X8E,0XB9,0XBF,0X77,0XC7,
N0X78,0XC7,0X77,0XC7,0X77,0XC7,0X78,0XC7,0XB7,0XBF,0X6F,0X6E,0X2F,0X56,0X6F,0X56,
N0XEF,0X66,0XEE,0X66,0XEE,0X66,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,
N0X2E,0X5F,0XEE,0X66,0XEE,0X66,0XF0,0X66,0X6F,0X5E,0X70,0X5E,0X30,0X66,0X76,0XC7,
N0X78,0XBF,0XB8,0XAF,0X2F,0X66,0X6F,0X5E,0X6F,0X5E,0X2F,0X56,0X6E,0X56,0X6D,0X4E,
N0X2E,0X5F,0XEE,0X5E,0XEE,0X5E,0XEE,0X5E,0XEE,0X5E,0X2E,0X5F,0XEE,0X5E,0X2E,0X67,
N0XEE,0X66,0XED,0X5E,0X6D,0X56,0X2E,0X5E,0X2E,0X66,0XEF,0X66,0XEE,0X66,0X2F,0X67,
N0XEE,0X5E,0XEE,0X5E,0XEE,0X5E,0XED,0X5E,0XEC,0X5E,0XED,0X5E,0X2E,0X67,0X2E,0X67,
N0XED,0X5E,0X6E,0X5E,0X2F,0X5E,0X70,0X66,0XF6,0X8E,0XF8,0X96,0X78,0XC7,0X30,0X76,
N0X70,0X66,0X6E,0X6E,0X6E,0X66,0X2F,0X66,0X6E,0X5E,0XEF,0X66,0XEE,0X66,0XEE,0X5E,
N0XED,0X5E,0XEE,0X5E,0XEE,0X5E,0XEE,0X5E,0XEE,0X5E,0XEE,0X5E,0XEE,0X5E,0XEE,0X5E,
N0X6D,0X4E,0X6E,0X56,0X6C,0X4E,0XEE,0X5E,0XEE,0X5E,0XEE,0X5E,0XEE,0X5E,0XEE,0X5E,
N0XEE,0X5E,0XEE,0X66,0X2E,0X67,0XEF,0X66,0X6E,0X66,0X2F,0X66,0X2E,0X6E,0X75,0XB7,
N0X78,0XB7,0XB8,0X8E,0X31,0X6E,0X70,0X6E,0X31,0X66,0X36,0XA7,0X35,0XAF,0X37,0XCF,
N0X78,0XCF,0X78,0XCF,0X77,0XCF,0X77,0XC7,0XB6,0XAF,0XAF,0X6E,0X6F,0X5E,0X6E,0X56,
N0XEE,0X66,0XEE,0X66,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,
N0X2E,0X5F,0X2F,0X67,0X2F,0X67,0XF0,0X66,0X6F,0X5E,0X6F,0X5E,0X2F,0X76,0X76,0XC7,
N0X76,0XBF,0X76,0XBF,0X6F,0X6E,0X2F,0X5E,0X6F,0X5E,0X70,0X5E,0X6E,0X56,0X6E,0X56,
N0XEE,0X5E,0XEE,0X5E,0XED,0X5E,0XEE,0X5E,0XEE,0X5E,0XEE,0X5E,0XEE,0X5E,0XEE,0X66,
N0XEF,0X66,0XEE,0X66,0X2D,0X5E,0X2E,0X5E,0X2E,0X5E,0XEF,0X66,0XEE,0X66,0X2E,0X67,
N0XEE,0X5E,0XEE,0X5E,0XEE,0X5E,0XED,0X5E,0XED,0X5E,0XED,0X5E,0XED,0X5E,0XEE,0X66,
N0X2E,0X67,0XEF,0X66,0X2F,0X5E,0X70,0X66,0X32,0X6E,0XB8,0X96,0X78,0XC7,0XB7,0XBF,
N0X70,0X6E,0X6F,0X6E,0X6F,0X66,0X2F,0X66,0X6E,0X5E,0X6D,0X5E,0XEE,0X66,0XED,0X5E,
N0XEE,0X5E,0XEE,0X56,0XEE,0X5E,0XEE,0X5E,0XEE,0X5E,0XEF,0X5E,0XEE,0X5E,0XEE,0X5E,
N0X6D,0X4E,0X6D,0X56,0X6D,0X56,0XEE,0X5E,0XEE,0X5E,0XEE,0X5E,0XEE,0X5E,0XEE,0X5E,
N0XEE,0X56,0X2E,0X67,0X2E,0X67,0XEE,0X5E,0X6E,0X66,0X2F,0X66,0X2F,0X6E,0XB6,0XBF,
N0X77,0XC7,0X36,0XAF,0X30,0X76,0X70,0X6E,0X6F,0X5E,0X6F,0X5E,0X6E,0X5E,0X6E,0X56,
N0XEF,0X5E,0XEE,0X5E,0XEE,0X5E,0XEE,0X5E,0XEE,0X5E,0X2D,0X5F,0XEE,0X5E,0X2F,0X66,
N0X70,0X66,0XF6,0X8E,0XB7,0X96,0X78,0XC7,0X30,0X7E,0X6F,0X6E,0X6F,0X6E,0X6F,0X66,
N0X2D,0X5F,0X2E,0X67,0XEE,0X66,0XAE,0X5E,0X6F,0X66,0X6F,0X76,0XB5,0XAF,0XF5,0X8E,
N0X34,0X7F,0X6F,0X66,0X6F,0X5E,0X70,0X6E,0X75,0X97,0XF6,0X8E,0XB7,0XAF,0XB7,0XB7,
N0XB6,0XBF,0X76,0XBF,0X77,0XBF,0X76,0XB7,0XB6,0XAF,0XAF,0X6E,0X6E,0X56,0XAD,0X5E,
N0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2D,0X5F,0X2D,0X5F,0X2E,0X5F,
N0X2E,0X5F,0X2D,0X5F,0X2F,0X67,0XEF,0X66,0X6E,0X5E,0X6F,0X5E,0X2F,0X66,0XB6,0XAF,
N0XB6,0XB7,0XB4,0X9F,0X6E,0X5E,0X6E,0X56,0X6E,0X56,0X6E,0X4E,0X6D,0X4E,0XAD,0X56,
N0XEE,0X5E,0XEE,0X5E,0XEE,0X5E,0XEE,0X5E,0X2D,0X57,0X2E,0X57,0X2D,0X57,0X2D,0X5F,
N0X2E,0X5F,0X2D,0X5F,0XAD,0X56,0X6D,0X56,0X6D,0X56,0XEE,0X5E,0X2E,0X67,0X2E,0X5F,
N0XED,0X5E,0X2E,0X5F,0X2E,0X5F,0XEE,0X5E,0XEE,0X5E,0XEE,0X5E,0XEE,0X5E,0XEE,0X66,
N0XED,0X5E,0XAD,0X5E,0X6E,0X5E,0X6F,0X5E,0X34,0X87,0XF5,0X86,0XB7,0XBF,0X6F,0X76,
N0XAF,0X66,0X6E,0X6E,0XAE,0X5E,0X6E,0X66,0X6E,0X5E,0XEE,0X66,0XED,0X5E,0XEE,0X5E,
N0XEE,0X5E,0XEE,0X56,0XED,0X56,0X2D,0X5F,0XED,0X5E,0XED,0X5E,0XED,0X56,0XED,0X5E,
N0XAD,0X4E,0X6C,0X4E,0X6C,0X4E,0XEE,0X5E,0XEE,0X5E,0XED,0X5E,0XED,0X5E,0XED,0X5E,
N0X2D,0X5F,0X2D,0X5F,0X2E,0X67,0XEE,0X66,0XAE,0X5E,0X6F,0X66,0X6F,0X6E,0XB6,0XAF,
N0XB7,0XAF,0XF6,0X86,0X70,0X6E,0X6F,0X66,0XAF,0X5E,0X76,0X97,0X75,0X9F,0XB6,0XB7,
N0XB6,0XBF,0X76,0XBF,0X77,0XCF,0XB7,0XBF,0XF6,0XAF,0XAE,0X6E,0X6E,0X56,0X6D,0X56,
N0XEE,0X66,0X2E,0X67,0X2D,0X5F,0X2D,0X5F,0X2D,0X5F,0X2D,0X5F,0X2D,0X5F,0X2E,0X57,
N0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0XEF,0X5E,0X6E,0X56,0X6E,0X5E,0X2E,0X66,0XB6,0XB7,
N0XB5,0XB7,0XF6,0XBF,0XAF,0X6E,0X6E,0X5E,0X6D,0X56,0X6E,0X56,0X6D,0X4E,0X6D,0X4E,
N0XEE,0X5E,0XEE,0X5E,0XEE,0X5E,0XEE,0X5E,0XEE,0X5E,0XEE,0X5E,0XED,0X56,0X2D,0X5F,
N0X2E,0X67,0XED,0X66,0X6C,0X56,0X6D,0X56,0X6D,0X56,0XEE,0X66,0X2E,0X67,0X2D,0X67,
N0XED,0X5E,0X2D,0X57,0XED,0X5E,0XED,0X5E,0XEE,0X5E,0XEE,0X5E,0XEE,0X5E,0XEE,0X66,
N0XEE,0X5E,0XEE,0X5E,0X6E,0X5E,0XAF,0X5E,0X70,0X66,0XF6,0X86,0XB6,0XB7,0XF6,0XAF,
N0XAF,0X6E,0XAE,0X6E,0XAE,0X66,0X6E,0X66,0X6D,0X56,0XAD,0X56,0XEE,0X66,0XEE,0X5E,
N0XEE,0X5E,0XEE,0X5E,0XEE,0X5E,0XEE,0X5E,0XED,0X5E,0XEE,0X5E,0X2D,0X57,0XED,0X56,
N0X6D,0X4E,0X6D,0X4E,0X6D,0X4E,0XEE,0X5E,0XEE,0X5E,0XED,0X5E,0XEE,0X5E,0XED,0X5E,
N0X2E,0X57,0X2E,0X5F,0X2E,0X67,0XEE,0X66,0XAE,0X5E,0X6E,0X66,0X6F,0X66,0XF5,0XA7,
N0XB6,0XAF,0X75,0X9F,0XAF,0X6E,0XAF,0X66,0X6E,0X5E,0X6E,0X56,0XAE,0X56,0X6E,0X56,
N0XEE,0X56,0XEE,0X5E,0XEF,0X5E,0X2E,0X57,0XED,0X5E,0XED,0X5E,0XED,0X5E,0X6E,0X56,
N0X6F,0X5E,0X35,0X87,0XF5,0X86,0XB7,0XB7,0X6F,0X76,0XAF,0X66,0X6E,0X66,0X6E,0X66,
N0XED,0X5E,0X6C,0X4E,0X6D,0X56,0X6D,0X56,0X6E,0X5E,0X6E,0X5E,0X6E,0X5E,0X6E,0X66,
N0X6E,0X5E,0X2F,0X67,0XEF,0X66,0XF0,0X66,0X6F,0X56,0X2F,0X5E,0X6F,0X5E,0X2F,0X66,
N0X6F,0X6E,0X2F,0X76,0X76,0XC7,0X6F,0X6E,0X6E,0X66,0XEF,0X66,0XEE,0X5E,0XEE,0X5E,
N0XEE,0X5E,0X2E,0X5F,0X2E,0X5F,0X2D,0X5F,0X2D,0X5F,0X2D,0X5F,0X2D,0X5F,0X2D,0X5F,
N0X2D,0X5F,0XED,0X5E,0XEE,0X56,0XEE,0X5E,0X6E,0X56,0X6E,0X4E,0X6E,0X56,0X6E,0X5E,
N0X6E,0X5E,0X6D,0X56,0XEF,0X66,0XEE,0X66,0X2E,0X67,0XEE,0X5E,0XEE,0X5E,0XEF,0X5E,
N0X6D,0X4E,0X6D,0X56,0X6C,0X4E,0XED,0X5E,0XEC,0X5E,0XEC,0X5E,0X2D,0X5F,0X2D,0X5F,
N0X2E,0X5F,0X2E,0X5F,0X2E,0X57,0XEE,0X5E,0XEE,0X5E,0X6C,0X56,0X6C,0X56,0XED,0X5E,
N0XED,0X5E,0XED,0X5E,0XED,0X5E,0X6C,0X56,0X6D,0X56,0X6D,0X56,0X6D,0X56,0X6D,0X56,
N0X2D,0X56,0XEE,0X5E,0XEE,0X5E,0XEF,0X66,0X6E,0X5E,0X70,0X5E,0X2F,0X56,0XEF,0X6E,
N0XEF,0X6E,0XEE,0X66,0XED,0X66,0XEE,0X66,0XEE,0X56,0X6C,0X4E,0X6D,0X56,0X6D,0X4E,
N0XEE,0X5E,0XED,0X5E,0XED,0X5E,0X2D,0X5F,0X2D,0X5F,0X2D,0X5F,0XEC,0X56,0XED,0X5E,
N0XED,0X5E,0XED,0X5E,0XED,0X5E,0X6D,0X4E,0X6C,0X4E,0XED,0X5E,0XED,0X5E,0XED,0X5E,
N0XED,0X5E,0XED,0X5E,0XEE,0X5E,0X6D,0X56,0X6D,0X56,0X6E,0X56,0X6E,0X5E,0X6E,0X5E,
N0X6E,0X5E,0X6E,0X5E,0XEF,0X66,0X2F,0X67,0X2E,0X67,0X6F,0X66,0X6F,0X5E,0X6F,0X66,
N0X70,0X6E,0X2F,0X7E,0X76,0XC7,0X2E,0X66,0XAE,0X5E,0XEF,0X6E,0X2E,0X67,0X2E,0X5F,
N0X2E,0X57,0X2E,0X57,0X2D,0X5F,0X2D,0X5F,0X2D,0X5F,0X2D,0X5F,0X2D,0X5F,0X2D,0X5F,
N0XED,0X5E,0XEE,0X5E,0XEE,0X5E,0XEE,0X5E,0XED,0X5E,0XEE,0X66,0XEE,0X66,0X2D,0X5E,
N0X2E,0X5E,0X6D,0X56,0X2E,0X6F,0X2E,0X67,0XEE,0X66,0XEE,0X5E,0XEE,0X56,0XEF,0X5E,
N0X6D,0X4E,0X6D,0X4E,0X6D,0X4E,0XED,0X56,0XED,0X5E,0XED,0X5E,0X2D,0X57,0X2D,0X5F,
N0X2E,0X5F,0X2E,0X5F,0XEE,0X56,0XEE,0X5E,0X2E,0X57,0X6C,0X4E,0X6C,0X4E,0X2D,0X5F,
N0XED,0X56,0XEC,0X5E,0XED,0X5E,0X6C,0X4E,0X6D,0X4E,0X6D,0X4E,0X6D,0X56,0X6D,0X56,
N0X6C,0X56,0X6D,0X4E,0X2F,0X57,0X2F,0X67,0XF0,0X6E,0X70,0X56,0X6F,0X5E,0X6E,0X56,
N0XEF,0X6E,0XEE,0X66,0XEE,0X66,0X2E,0X67,0X2E,0X5F,0XEE,0X5E,0X6D,0X56,0X6D,0X56,
N0X6C,0X56,0XED,0X5E,0XED,0X56,0XED,0X56,0X2D,0X5F,0X2C,0X57,0X2D,0X5F,0X2D,0X5F,
N0XED,0X5E,0XED,0X5E,0XED,0X5E,0X6D,0X4E,0X6D,0X4E,0XED,0X5E,0XED,0X5E,0XEC,0X5E,
N0XEC,0X5E,0XEC,0X5E,0XED,0X5E,0X6C,0X56,0X2D,0X4E,0X2C,0X4E,0X6D,0X56,0X6E,0X56,
N0X6E,0X5E,0X2F,0X5E,0XEF,0X66,0XEE,0X66,0X2D,0X67,0XED,0X5E,0XEE,0X5E,0XED,0X56,
N0X6C,0X4E,0X6C,0X4E,0X6D,0X56,0X2D,0X5F,0XED,0X5E,0XED,0X5E,0XEC,0X56,0XED,0X56,
N0XEE,0X5E,0X6E,0X56,0X70,0X5E,0X2F,0X5E,0XF0,0X6E,0XEF,0X6E,0XEE,0X66,0XEE,0X66,
N0X6B,0X4E,0XED,0X5E,0XED,0X5E,0XED,0X5E,0XEE,0X5E,0XEE,0X5E,0XEE,0X5E,0XEF,0X5E,
N0XEE,0X5E,0XEE,0X5E,0XEE,0X5E,0XEF,0X5E,0XEF,0X66,0XEE,0X66,0XEF,0X66,0XEF,0X66,
N0XEF,0X66,0XAF,0X6E,0X2E,0X6E,0X2E,0X56,0X6D,0X56,0XEE,0X66,0XEE,0X56,0XED,0X5E,
N0XED,0X5E,0X2D,0X57,0X2D,0X57,0X2D,0X57,0XED,0X5E,0XED,0X5E,0X2C,0X5F,0XEC,0X5E,
N0XED,0X5E,0XEE,0X5E,0XED,0X5E,0XEE,0X5E,0X6D,0X56,0X6D,0X4E,0X6D,0X56,0XEE,0X66,
N0XEF,0X66,0XEF,0X66,0X2E,0X67,0X2E,0X5F,0X2E,0X5F,0X2D,0X5F,0X2D,0X5F,0X2D,0X5F,
N0XED,0X5E,0XEE,0X5E,0XEE,0X5E,0X6C,0X4E,0X6C,0X4E,0XAD,0X56,0XED,0X56,0X2D,0X5F,
N0X2D,0X5F,0X2D,0X5F,0XED,0X56,0XED,0X5E,0XED,0X5E,0X6C,0X4E,0X6D,0X4E,0XED,0X5E,
N0XAC,0X4E,0X6C,0X4E,0X6C,0X56,0XED,0X5E,0XED,0X5E,0XED,0X5E,0XED,0X5E,0XED,0X5E,
N0X2D,0X5F,0X6C,0X56,0X6C,0X56,0X6D,0X4E,0XEE,0X5E,0XEE,0X5E,0XEF,0X5E,0XEE,0X5E,
N0X2E,0X5F,0X2E,0X5F,0X2D,0X5F,0X2D,0X5F,0X2D,0X5F,0XED,0X5E,0XED,0X5E,0XED,0X5E,
N0XAC,0X56,0X6C,0X4E,0X6C,0X4E,0XED,0X56,0XEC,0X5E,0X2D,0X5F,0X2D,0X5F,0X2D,0X5F,
N0X2D,0X5F,0XEC,0X5E,0XED,0X5E,0X6D,0X56,0X6C,0X4E,0XEC,0X5E,0XED,0X5E,0XED,0X56,
N0X6C,0X4E,0X6C,0X4E,0X6C,0X56,0XED,0X5E,0XEE,0X5E,0XEE,0X5E,0XEE,0X5E,0XEF,0X66,
N0XEE,0X5E,0XEE,0X5E,0XEF,0X66,0XEE,0X5E,0X2E,0X5F,0XEF,0X66,0XEF,0X66,0XEE,0X66,
N0XEE,0X6E,0XEF,0X6E,0XEE,0X6D,0X6E,0X5E,0X6D,0X56,0XEE,0X66,0X2D,0X5F,0XED,0X5E,
N0XED,0X5E,0XED,0X5E,0XEC,0X5E,0XEC,0X5E,0XEC,0X5E,0XED,0X5E,0XEC,0X5E,0X2D,0X57,
N0X2D,0X5F,0XED,0X5E,0X2D,0X57,0XED,0X56,0X6D,0X4E,0X6D,0X56,0X6C,0X4E,0XEF,0X5E,
N0XEF,0X66,0XEF,0X66,0X2D,0X67,0X2E,0X57,0X2D,0X5F,0X2D,0X5F,0X2D,0X5F,0X2D,0X5F,
N0XED,0X5E,0XED,0X5E,0XEE,0X5E,0X6C,0X4E,0X6C,0X4E,0X6C,0X4E,0XED,0X56,0X2D,0X5F,
N0X2E,0X5F,0X2D,0X57,0XEE,0X56,0X2D,0X5F,0XED,0X56,0X6D,0X56,0X6D,0X56,0XEE,0X5E,
N0X6B,0X4E,0X6C,0X4E,0X6C,0X4E,0XED,0X5E,0XED,0X5E,0XEE,0X5E,0XED,0X5E,0XED,0X5E,
N0XEE,0X5E,0XAD,0X5E,0X6C,0X4E,0X6D,0X56,0X6D,0X56,0XEF,0X5E,0XEE,0X5E,0XEE,0X5E,
N0X2E,0X67,0X2E,0X5F,0X2D,0X5F,0X2D,0X5F,0X2E,0X5F,0X2E,0X5F,0XED,0X5E,0XEE,0X5E,
N0XEE,0X56,0X6C,0X4E,0X6C,0X4E,0X6C,0X4E,0XED,0X5E,0X2D,0X5F,0X2D,0X5F,0X2D,0X5F,
N0XED,0X5E,0XED,0X5E,0XEC,0X5E,0X6C,0X56,0X6C,0X4E,0XED,0X5E,0XED,0X5E,0XED,0X5E,
N0X6C,0X4E,0X6D,0X4E,0X6C,0X56,0XEE,0X66,0X6D,0X56,0X6D,0X56,0X6D,0X56,0XEF,0X66,
N0XEE,0X5E,0XEE,0X5E,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2D,0X5F,0X2D,0X5F,
N0XED,0X56,0XEE,0X5E,0XEE,0X5E,0X6C,0X56,0X6C,0X4E,0X6D,0X56,0XAD,0X5E,0X6C,0X56,
N0X6D,0X56,0XEE,0X5E,0XEE,0X5E,0XEE,0X5E,0XEE,0X5E,0X2E,0X5F,0X2D,0X5F,0X2D,0X5F,
N0X6C,0X4E,0XED,0X56,0XEC,0X5E,0XEC,0X5E,0XED,0X5E,0XED,0X5E,0XED,0X5E,0X2D,0X57,
N0XEE,0X56,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2D,0X5F,0X2E,0X67,0XEE,0X5E,
N0XEE,0X66,0XEE,0X66,0X6D,0X56,0X6D,0X56,0X6D,0X56,0XEE,0X5E,0XEE,0X5E,0XEC,0X5E,
N0XED,0X5E,0XED,0X5E,0XED,0X5E,0XED,0X5E,0XED,0X5E,0XED,0X5E,0XED,0X5E,0XEE,0X5E,
N0XED,0X5E,0X2D,0X5F,0XED,0X5E,0XED,0X5E,0X6C,0X4E,0X6C,0X4E,0X6C,0X4E,0XED,0X5E,
N0X2D,0X5F,0X2D,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2D,0X5F,0X2D,0X5F,0X2D,0X5F,
N0X2C,0X57,0XEC,0X5E,0XED,0X5E,0X6C,0X4E,0X6C,0X56,0X6C,0X4E,0XEE,0X5E,0X2D,0X5F,
N0X2D,0X5F,0X2C,0X5F,0XED,0X5E,0XED,0X5E,0XED,0X5E,0X6C,0X56,0X6C,0X4E,0XED,0X5E,
N0X6D,0X56,0X6D,0X56,0X6C,0X4E,0XED,0X56,0XEC,0X5E,0XED,0X5E,0XED,0X5E,0XED,0X5E,
N0XED,0X5E,0XAC,0X56,0X6C,0X4E,0X6C,0X4E,0XED,0X5E,0X2D,0X5F,0XEE,0X5E,0X2E,0X5F,
N0X2E,0X5F,0X2E,0X5F,0X2D,0X5F,0X2D,0X5F,0X2D,0X5F,0X2D,0X5F,0X2C,0X5F,0XEC,0X56,
N0XAC,0X4E,0X6C,0X56,0X6C,0X4E,0XED,0X5E,0XED,0X5E,0X2D,0X5F,0X2D,0X5F,0X2D,0X5F,
N0X2D,0X5F,0XED,0X5E,0XED,0X5E,0X6C,0X4E,0X6C,0X56,0XED,0X5E,0XEE,0X5E,0XEE,0X5E,
N0X6C,0X4E,0X6C,0X4E,0XAC,0X4E,0XED,0X5E,0XED,0X5E,0XED,0X5E,0XED,0X5E,0X2D,0X57,
N0XED,0X5E,0XED,0X5E,0X2E,0X5F,0XEE,0X56,0X2E,0X5F,0X2D,0X5F,0X2D,0X5F,0X2D,0X5F,
N0X2E,0X5F,0XEE,0X5E,0X6D,0X56,0X6D,0X4E,0XAD,0X4E,0XEE,0X5E,0XED,0X5E,0XED,0X5E,
N0XED,0X5E,0XED,0X5E,0X2D,0X5F,0XED,0X5E,0XED,0X5E,0XED,0X5E,0XED,0X5E,0XEE,0X5E,
N0XED,0X5E,0X2D,0X5F,0XED,0X5E,0XEE,0X5E,0X6C,0X4E,0X6C,0X4E,0XAC,0X4E,0XED,0X5E,
N0X2E,0X5F,0X2D,0X5F,0X2E,0X5F,0X2E,0X5F,0X2D,0X5F,0X2D,0X5F,0X2D,0X5F,0X2D,0X5F,
N0XEC,0X5E,0XEC,0X5E,0XED,0X5E,0X6C,0X4E,0X6C,0X56,0X6C,0X4E,0XED,0X5E,0X2D,0X5F,
N0X2D,0X5F,0X2D,0X5F,0X2D,0X5F,0XED,0X5E,0XED,0X5E,0X6D,0X56,0X6C,0X56,0XED,0X5E,
N0X6D,0X56,0X6C,0X4E,0X6C,0X4E,0XED,0X5E,0XEC,0X5E,0XEC,0X5E,0XED,0X5E,0XED,0X5E,
N0XED,0X5E,0XED,0X5E,0X6C,0X4E,0X6C,0X56,0X6C,0X4E,0XED,0X5E,0X2D,0X57,0X2D,0X57,
N0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2D,0X5F,0X2D,0X5F,0X2D,0X5F,0X2D,0X5F,0XED,0X5E,
N0XED,0X56,0X6C,0X4E,0X6C,0X4E,0X6C,0X4E,0XED,0X5E,0X2D,0X5F,0X2C,0X5F,0X2D,0X5F,
N0XED,0X5E,0XED,0X5E,0XED,0X5E,0X6C,0X4E,0X6C,0X56,0XED,0X5E,0XED,0X5E,0XEE,0X5E,
N0X6D,0X56,0X6D,0X56,0X6C,0X56,0XED,0X5E,0X6C,0X4E,0X6C,0X4E,0X6C,0X4E,0XED,0X5E,
N0XED,0X56,0X2D,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2D,0X5F,0X2D,0X5F,0X2D,0X5F,
N0X2D,0X5F,0XEC,0X5E,0XEC,0X5E,0X6C,0X4E,0X6C,0X4E,0X6C,0X56,0X6C,0X4E,0X6C,0X56,
N0X6C,0X4E,0XED,0X5E,0X2D,0X5F,0X2D,0X57,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2D,0X5F,
N0XEC,0X56,0XED,0X5E,0XED,0X5E,0XED,0X5E,0XED,0X5E,0X2D,0X5F,0X2D,0X5F,0X2D,0X5F,
N0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X57,
N0X2E,0X5F,0X2E,0X5F,0XEE,0X56,0XEE,0X5E,0XEF,0X5E,0X6D,0X56,0X6D,0X56,0X6C,0X4E,
N0XEC,0X5E,0XED,0X5E,0XED,0X5E,0X6D,0X56,0X6D,0X56,0X6C,0X4E,0X6D,0X4E,0X6D,0X4E,
N0X6B,0X4E,0XEC,0X5E,0X6D,0X56,0X6C,0X4E,0XED,0X5E,0XED,0X5E,0XED,0X5E,0XED,0X5E,
N0X2D,0X5F,0X2D,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,
N0X2D,0X5F,0X2D,0X5F,0X2D,0X5F,0XED,0X5E,0XED,0X5E,0X2D,0X5F,0X6D,0X56,0XEE,0X5E,
N0XED,0X5E,0XED,0X5E,0XED,0X5E,0XEE,0X5E,0X6C,0X4E,0X6D,0X56,0X6D,0X56,0X6D,0X56,
N0X6D,0X56,0X6C,0X56,0XED,0X5E,0XED,0X5E,0XED,0X5E,0XED,0X5E,0XED,0X5E,0XED,0X5E,
N0X6C,0X56,0XEE,0X5E,0XED,0X5E,0XEC,0X5E,0X2D,0X5F,0X2D,0X5F,0X2D,0X5F,0X2E,0X5F,
N0X2E,0X5F,0X2E,0X5F,0X2E,0X57,0X2E,0X5F,0X2E,0X5F,0X2D,0X5F,0X2D,0X5F,0X2D,0X5F,
N0X2D,0X5F,0XED,0X5E,0XED,0X56,0X6C,0X4E,0X6C,0X56,0XED,0X5E,0XEC,0X5E,0XEC,0X5E,
N0XED,0X5E,0XEC,0X5E,0XED,0X5E,0X6D,0X56,0X6D,0X56,0X6C,0X56,0X6C,0X56,0X6C,0X4E,
N0X6C,0X4E,0XED,0X5E,0XED,0X5E,0XED,0X5E,0XED,0X5E,0XED,0X5E,0XED,0X5E,0X2D,0X5F,
N0X2D,0X5F,0X2D,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,
N0X2E,0X5F,0X2E,0X5F,0XEE,0X5E,0XEE,0X5E,0XEE,0X5E,0X6D,0X56,0X6C,0X4E,0X6C,0X4E,
N0XED,0X5E,0XEC,0X5E,0XEE,0X5E,0X6D,0X4E,0X6D,0X56,0X6D,0X4E,0X6D,0X4E,0X6C,0X4E,
N0X6C,0X4E,0XED,0X5E,0X6C,0X4E,0X6C,0X4E,0XEC,0X5E,0XED,0X5E,0XED,0X5E,0XED,0X56,
N0X2D,0X5F,0X2D,0X5F,0X2E,0X5F,0X2E,0X57,0X2E,0X57,0X2E,0X5F,0X2E,0X57,0X2E,0X5F,
N0X2D,0X5F,0X2D,0X5F,0X2D,0X5F,0XED,0X5E,0XEC,0X5E,0XED,0X5E,0X6C,0X56,0XEE,0X5E,
N0XED,0X5E,0XEC,0X5E,0XED,0X5E,0XED,0X5E,0X6C,0X4E,0X6D,0X56,0X6D,0X4E,0X6D,0X4E,
N0X6D,0X56,0X6D,0X4E,0XED,0X5E,0XED,0X5E,0XED,0X5E,0XED,0X5E,0XEC,0X56,0XED,0X5E,
N0X6C,0X4E,0X6C,0X4E,0X2C,0X5F,0XED,0X5E,0XEC,0X5E,0X2D,0X5F,0X2D,0X5F,0X2D,0X5F,
N0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2D,0X5F,0X2D,0X5F,0X2D,0X5F,
N0X2D,0X5F,0XED,0X5E,0XED,0X5E,0XEE,0X5E,0X6D,0X4E,0XEC,0X5E,0XED,0X5E,0XED,0X5E,
N0XED,0X5E,0XED,0X5E,0XEC,0X5E,0X6D,0X4E,0X6D,0X4E,0X6D,0X4E,0X6D,0X4E,0X6D,0X4E,
N0X6C,0X4E,0XED,0X5E,0XEE,0X5E,0X6D,0X56,0XEE,0X66,0XED,0X5E,0XED,0X5E,0XED,0X5E,
N0XED,0X5E,0X2D,0X5F,0X2D,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X57,0X2E,0X5F,
N0X2D,0X5F,0X2D,0X5F,0X2D,0X5F,0XEC,0X5E,0XED,0X5E,0XED,0X5E,0XED,0X5E,0XED,0X5E,
N0XED,0X5E,0X2D,0X5F,0X2D,0X5F,0X2D,0X5F,0X2D,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,
N0X6C,0X4E,0X6C,0X4E,0X6C,0X4E,0XED,0X5E,0XED,0X5E,0XED,0X5E,0X2D,0X5F,0X2D,0X5F,
N0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,
N0X2E,0X5F,0X2E,0X5F,0X2D,0X5F,0XED,0X56,0X2E,0X5F,0X2E,0X5F,0XEE,0X5E,0XAD,0X56,
N0X6C,0X4E,0X6C,0X4E,0X6C,0X4E,0XEE,0X5E,0XED,0X5E,0XEE,0X5E,0XED,0X5E,0XED,0X5E,
N0XED,0X5E,0X6C,0X4E,0X6D,0X56,0XAD,0X56,0XED,0X5E,0XEC,0X5E,0XED,0X5E,0X2D,0X5F,
N0X2D,0X5F,0X2D,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,
N0X2E,0X5F,0X2E,0X5F,0X2D,0X5F,0XED,0X5E,0XEC,0X5E,0XEE,0X5E,0X6D,0X56,0XED,0X5E,
N0XED,0X5E,0X6C,0X4E,0X6C,0X4E,0XAD,0X56,0XEE,0X5E,0XED,0X5E,0XED,0X5E,0XED,0X5E,
N0XED,0X5E,0XED,0X5E,0X6C,0X4E,0X6C,0X56,0X6C,0X4E,0XED,0X5E,0X2C,0X5F,0XED,0X5E,
N0X6D,0X56,0XEE,0X5E,0XED,0X5E,0X2D,0X5F,0X2E,0X5F,0X2D,0X5F,0X2D,0X5F,0X2E,0X5F,
N0X2E,0X5F,0X2E,0X5F,0X2E,0X57,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2D,0X5F,0X2E,0X5F,
N0X2D,0X5F,0X2D,0X5F,0XED,0X5E,0X6C,0X4E,0X6C,0X4E,0XED,0X5E,0XEC,0X5E,0XED,0X5E,
N0X6C,0X4E,0X6C,0X4E,0X6C,0X4E,0XEE,0X5E,0XEE,0X5E,0XEE,0X5E,0XED,0X5E,0XED,0X5E,
N0XEE,0X66,0X6C,0X4E,0X6C,0X4E,0X6C,0X4E,0XED,0X5E,0XED,0X5E,0XEC,0X5E,0X2D,0X5F,
N0X2D,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X57,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,
N0X2E,0X57,0X2E,0X5F,0X2D,0X5F,0XED,0X5E,0X2E,0X5F,0XEE,0X5E,0XED,0X5E,0XED,0X5E,
N0X6C,0X4E,0X6C,0X4E,0XAC,0X56,0XED,0X5E,0XED,0X5E,0XED,0X5E,0XED,0X5E,0XED,0X5E,
N0XAE,0X5E,0X6C,0X4E,0X2C,0X4E,0X6C,0X4E,0X2C,0X57,0XED,0X5E,0XED,0X5E,0X2D,0X5F,
N0X2D,0X5F,0X2D,0X5F,0X2E,0X5F,0X2E,0X57,0X2E,0X57,0X2E,0X5F,0X2E,0X57,0X2E,0X5F,
N0X2E,0X5F,0X2D,0X5F,0X2D,0X5F,0XEC,0X5E,0XEC,0X5E,0XED,0X5E,0X6D,0X56,0XED,0X5E,
N0XED,0X5E,0X6C,0X4E,0X6D,0X4E,0X6C,0X4E,0XEE,0X5E,0XED,0X5E,0XED,0X5E,0XED,0X5E,
N0XEE,0X5E,0XEE,0X5E,0X6C,0X4E,0X6C,0X56,0X6C,0X4E,0XED,0X5E,0XEC,0X5E,0XED,0X5E,
N0X6D,0X56,0X6D,0X4E,0XEC,0X5E,0X2D,0X5F,0X2D,0X5F,0X2D,0X5F,0X2E,0X5F,0X2E,0X5F,
N0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2D,0X5F,0X2D,0X5F,
N0X2D,0X5F,0X2D,0X5F,0XEC,0X5E,0XEE,0X5E,0X6D,0X4E,0XED,0X5E,0X2D,0X57,0XED,0X5E,
N0X6C,0X4E,0X6C,0X4E,0X6C,0X4E,0XED,0X5E,0XED,0X5E,0XED,0X5E,0XED,0X5E,0XED,0X5E,
N0XEE,0X5E,0XAC,0X56,0X6D,0X56,0X6D,0X56,0XED,0X5E,0XEC,0X5E,0XED,0X5E,0X2D,0X5F,
N0X2D,0X5F,0X2D,0X5F,0X2D,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X57,0X2E,0X5F,
N0X2E,0X5F,0X2E,0X5F,0X2D,0X5F,0X2D,0X5F,0X2D,0X5F,0X2D,0X5F,0X2D,0X5F,0XED,0X5E,
N0X2D,0X5F,0X2D,0X5F,0X2D,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,
N0X6C,0X4E,0X6C,0X4E,0XAD,0X56,0XEE,0X5E,0XED,0X5E,0XED,0X56,0X2E,0X5F,0X2D,0X5F,
N0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,
N0X2E,0X5F,0X2E,0X5F,0X2D,0X5F,0XEC,0X56,0XED,0X5E,0XEE,0X5E,0XEE,0X5E,0XED,0X5E,
N0X6C,0X4E,0X6C,0X4E,0XAC,0X4E,0XEC,0X5E,0XEC,0X56,0XEC,0X56,0XEC,0X56,0X2D,0X5F,
N0XED,0X5E,0X6C,0X4E,0X6C,0X4E,0XAD,0X56,0XEE,0X5E,0XED,0X5E,0XED,0X5E,0X2D,0X5F,
N0X2D,0X5F,0X2D,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,
N0X2E,0X57,0X2E,0X57,0X2E,0X5F,0X2D,0X5F,0XED,0X56,0XED,0X5E,0X6D,0X4E,0XAD,0X5E,
N0XED,0X56,0X6C,0X4E,0X6C,0X4E,0X6C,0X4E,0XED,0X5E,0XEC,0X56,0XEC,0X56,0XEC,0X56,
N0XEC,0X56,0XED,0X56,0X6C,0X4E,0X6C,0X4E,0X6C,0X4E,0XEE,0X5E,0XED,0X5E,0XED,0X5E,
N0X6C,0X4E,0XED,0X5E,0XED,0X56,0X2D,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,
N0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,
N0X2D,0X5F,0X2D,0X5F,0X2D,0X5F,0XAC,0X4E,0X6C,0X4E,0XED,0X5E,0XEE,0X5E,0XED,0X5E,
N0X6C,0X4E,0X6D,0X56,0X6C,0X4E,0XED,0X5E,0XEC,0X56,0XEC,0X56,0XEC,0X56,0XEC,0X56,
N0X2D,0X5F,0X6C,0X4E,0X6C,0X4E,0X6C,0X56,0XEE,0X5E,0XEE,0X5E,0XED,0X5E,0XED,0X5E,
N0X2D,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X57,
N0X2E,0X57,0X2E,0X5F,0X2D,0X5F,0XEC,0X5E,0XED,0X5E,0XED,0X5E,0XED,0X5E,0XED,0X5E,
N0X6C,0X4E,0X6C,0X4E,0X6C,0X4E,0XED,0X56,0XED,0X5E,0XED,0X56,0XED,0X56,0X2D,0X5F,
N0XED,0X5E,0X6C,0X4E,0X6C,0X4E,0XAD,0X56,0XEE,0X5E,0XEE,0X5E,0XED,0X56,0X2D,0X5F,
N0X2D,0X5F,0X2D,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,
N0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2D,0X57,0XED,0X5E,0XED,0X5E,0X6D,0X4E,0XEE,0X5E,
N0XEE,0X5E,0X6C,0X4E,0X6C,0X56,0X6C,0X4E,0XED,0X5E,0XED,0X5E,0XED,0X56,0XED,0X56,
N0XED,0X56,0XEC,0X5E,0X6C,0X4E,0X6C,0X4E,0X6C,0X4E,0XED,0X5E,0XEE,0X5E,0XEE,0X5E,
N0X6C,0X4E,0X6B,0X4E,0XED,0X56,0X2D,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,
N0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,
N0X2E,0X5F,0X2D,0X5F,0XED,0X5E,0XED,0X5E,0X6B,0X4E,0XEE,0X5E,0XED,0X5E,0XEE,0X5E,
N0X6C,0X4E,0X6C,0X4E,0X6C,0X4E,0XED,0X5E,0XED,0X56,0XED,0X56,0XED,0X56,0XEC,0X56,
N0X2D,0X5F,0X6C,0X4E,0X6C,0X56,0X6B,0X4E,0XAD,0X5E,0XED,0X5E,0XED,0X5E,0X2E,0X5F,
N0X2D,0X5F,0X2D,0X5F,0X2D,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X57,0X2E,0X5F,
N0X2E,0X5F,0X2E,0X5F,0X2E,0X57,0X2D,0X5F,0X2D,0X5F,0X2D,0X5F,0X2D,0X5F,0XED,0X5E,
N0X2D,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,
N0XEC,0X56,0X2D,0X5F,0XEE,0X5E,0X6C,0X4E,0X6D,0X56,0X6C,0X4E,0XED,0X5E,0X2D,0X5F,
N0X2E,0X5F,0X2D,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,
N0X2E,0X5F,0X2E,0X5F,0X2D,0X5F,0XED,0X5E,0XEE,0X5E,0X6D,0X56,0X6D,0X56,0X6C,0X4E,
N0XED,0X5E,0XEC,0X5E,0XEC,0X5E,0X2D,0X5F,0X2D,0X5F,0X2D,0X5F,0X2D,0X5F,0X2D,0X5F,
N0X2D,0X5F,0XEC,0X5E,0XED,0X5E,0XED,0X5E,0X6C,0X56,0X6C,0X4E,0X6C,0X4E,0X2D,0X5F,
N0X2D,0X5F,0X2D,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,
N0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2D,0X5F,0X2D,0X5F,0XEE,0X5E,0X6D,0X4E,0X6C,0X4E,
N0X6C,0X4E,0XEC,0X5E,0XED,0X5E,0X2D,0X5F,0X2D,0X5F,0X2D,0X5F,0X2D,0X5F,0X2D,0X5F,
N0X2D,0X5F,0X2D,0X5F,0XED,0X5E,0XED,0X5E,0XED,0X5E,0X6D,0X4E,0X6D,0X56,0X6C,0X4E,
N0XED,0X5E,0X2D,0X5F,0X2D,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,
N0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,
N0X2E,0X5F,0X2E,0X5F,0X2D,0X5F,0X2C,0X5F,0XED,0X5E,0X6C,0X4E,0X6C,0X56,0X6C,0X4E,
N0XEE,0X5E,0XED,0X5E,0XED,0X5E,0X2D,0X5F,0X2D,0X5F,0X2D,0X5F,0X2D,0X5F,0X2D,0X5F,
N0X2D,0X5F,0X2D,0X5F,0XEC,0X5E,0XED,0X5E,0X6C,0X4E,0X6D,0X4E,0X6C,0X4E,0XED,0X56,
N0XEC,0X56,0X2D,0X5F,0X2E,0X5F,0X2E,0X57,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,
N0X2E,0X5F,0X2E,0X5F,0X2D,0X5F,0XEC,0X5E,0XEE,0X5E,0X6D,0X56,0X6D,0X4E,0XAC,0X56,
N0XED,0X5E,0XEC,0X5E,0X2D,0X57,0X2D,0X5F,0X2D,0X5F,0X2D,0X5F,0X2D,0X5F,0X2D,0X5F,
N0X2D,0X5F,0XED,0X5E,0XEC,0X5E,0XED,0X5E,0X6D,0X4E,0X6D,0X4E,0X6C,0X4E,0XED,0X56,
N0X2D,0X5F,0X2D,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,
N0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2D,0X5F,0XEC,0X56,0XED,0X5E,0X6C,0X56,0X6D,0X56,
N0X6C,0X4E,0XED,0X5E,0XED,0X5E,0XED,0X5E,0X2D,0X5F,0X2D,0X5F,0X2D,0X5F,0X2D,0X5F,
N0X2D,0X5F,0X2D,0X5F,0XED,0X5E,0XEC,0X5E,0XED,0X5E,0X6C,0X4E,0X6D,0X56,0X6C,0X4E,
N0XED,0X5E,0XED,0X5E,0X2D,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,
N0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,
N0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2D,0X5F,0XED,0X5E,0X6C,0X4E,0X6D,0X4E,0X6C,0X4E,
N0XED,0X5E,0XED,0X5E,0XED,0X5E,0X2D,0X5F,0X2D,0X5F,0X2D,0X5F,0X2D,0X5F,0X2D,0X5F,
N0X2D,0X5F,0XED,0X5E,0XED,0X5E,0XED,0X5E,0X6C,0X4E,0X6D,0X4E,0X6C,0X56,0XEE,0X5E,
N0X2D,0X5F,0X2D,0X5F,0X2D,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,
N0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2D,0X57,0X2D,0X5F,0X2D,0X5F,0X2D,0X5F,0X2D,0X5F,
N0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,
N0X2D,0X5F,0X2D,0X5F,0X2E,0X67,0XED,0X5E,0XEE,0X5E,0XED,0X5E,0XAC,0X4E,0X2D,0X5F,
N0X2D,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,
N0X2E,0X5F,0X2E,0X5F,0X2D,0X5F,0X6C,0X4E,0X6C,0X56,0XEE,0X5E,0XEE,0X5E,0XED,0X5E,
N0X2D,0X5F,0X2D,0X5F,0X2D,0X5F,0X2D,0X5F,0X2D,0X5F,0X2D,0X5F,0X2D,0X5F,0X2D,0X5F,
N0X2D,0X5F,0X2D,0X5F,0X2D,0X5F,0X2E,0X67,0XED,0X5E,0XEE,0X5E,0XEE,0X5E,0XAC,0X4E,
N0XED,0X5E,0X2D,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,
N0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2D,0X5F,0XAC,0X56,0XAC,0X56,0XEE,0X5E,0XEE,0X5E,
N0XED,0X5E,0X2D,0X5F,0X2D,0X5F,0X2D,0X5F,0X2D,0X5F,0X2D,0X5F,0X2D,0X5F,0X2D,0X5F,
N0X2D,0X5F,0X2D,0X5F,0X2D,0X5F,0XEC,0X5E,0X2D,0X5F,0XEE,0X5E,0X6D,0X56,0X6C,0X4E,
N0XED,0X5E,0X2D,0X5F,0X2D,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,
N0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,
N0X2E,0X5F,0X2E,0X5F,0X2D,0X57,0X2D,0X57,0XED,0X5E,0X6D,0X4E,0XEE,0X5E,0XED,0X5E,
N0X2D,0X5F,0X2D,0X5F,0X2D,0X5F,0X2D,0X5F,0X2D,0X5F,0X2D,0X5F,0X2D,0X5F,0X2D,0X5F,
N0X2D,0X5F,0X2D,0X5F,0X2D,0X5F,0X2D,0X5F,0XEE,0X5E,0XEE,0X5E,0XEE,0X5E,0XAD,0X56,
N0XAC,0X4E,0X2D,0X5F,0X2D,0X5F,0X2E,0X57,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,
N0X2E,0X5F,0X2D,0X5F,0X2D,0X5F,0XAC,0X4E,0XAD,0X56,0XEE,0X5E,0XED,0X5E,0XED,0X5E,
N0X2D,0X5F,0X2D,0X5F,0X2D,0X5F,0X2D,0X5F,0X2D,0X5F,0X2D,0X5F,0X2D,0X5F,0X2E,0X5F,
N0X2D,0X5F,0X2D,0X5F,0X2D,0X5F,0X2E,0X5F,0XEE,0X5E,0XEE,0X5E,0XED,0X5E,0XAC,0X56,
N0X2E,0X5F,0X2D,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,
N0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2D,0X5F,0XAC,0X4E,0X6C,0X4E,0XED,0X5E,0XEE,0X5E,
N0XED,0X5E,0X2D,0X5F,0X2D,0X5F,0X2D,0X5F,0X2D,0X5F,0X2E,0X5F,0X2D,0X5F,0X2E,0X5F,
N0X2D,0X5F,0X2D,0X5F,0X2D,0X5F,0XED,0X5E,0XED,0X5E,0XED,0X56,0X6D,0X56,0X6C,0X4E,
N0XED,0X5E,0XEC,0X5E,0X2D,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,
N0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,
N0X2E,0X5F,0X2E,0X5F,0X2D,0X5F,0X2D,0X5F,0XED,0X5E,0X6C,0X56,0XAD,0X56,0XED,0X5E,
N0XED,0X5E,0X2D,0X5F,0X2D,0X5F,0X2D,0X5F,0X2D,0X5F,0X2D,0X5F,0X2D,0X5F,0X2D,0X5F,
N0X2D,0X5F,0X2D,0X5F,0X2D,0X5F,0X2D,0X5F,0XED,0X56,0XEE,0X5E,0XEE,0X5E,0XAC,0X56,
N0XAC,0X4E,0X2D,0X5F,0X2D,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,
N0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2D,0X5F,0X2D,0X5F,0XAD,0X56,0XED,0X56,0X2D,0X5F,
N0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,
N0X2D,0X5F,0X2E,0X5F,0X2D,0X5F,0XEC,0X56,0XEC,0X5E,0XED,0X5E,0XAC,0X4E,0X2D,0X5F,
N0X2D,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,
N0X2E,0X5F,0X2D,0X5F,0X2D,0X5F,0XAC,0X4E,0XAC,0X56,0XEC,0X5E,0X2C,0X5F,0XEC,0X56,
N0X2D,0X5F,0X2D,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,
N0X2E,0X5F,0X2D,0X5F,0X2E,0X5F,0X2D,0X5F,0XEC,0X5E,0XEC,0X5E,0XED,0X5E,0XAC,0X4E,
N0X2D,0X5F,0X2D,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,
N0X2E,0X57,0X2E,0X57,0X2E,0X5F,0X2D,0X5F,0X6B,0X46,0X6B,0X4E,0XED,0X5E,0XEC,0X5E,
N0X2D,0X5F,0X2D,0X5F,0X2D,0X5F,0X2D,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,
N0X2E,0X5F,0X2E,0X5F,0X2D,0X5F,0X2D,0X57,0XED,0X5E,0XED,0X5E,0X6B,0X4E,0X6C,0X4E,
N0XED,0X5E,0X2D,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,
N0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,
N0X2E,0X5F,0X2E,0X5F,0X2D,0X57,0X2D,0X57,0XED,0X5E,0X6C,0X4E,0XED,0X5E,0XEC,0X56,
N0X2C,0X57,0XED,0X5E,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,
N0X2E,0X5F,0X2D,0X5F,0X2D,0X5F,0X2D,0X5F,0X2D,0X5F,0XEC,0X5E,0XEC,0X5E,0X6C,0X4E,
N0XAC,0X4E,0X2D,0X5F,0X2D,0X5F,0X2E,0X57,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,
N0X2E,0X5F,0X2D,0X5F,0X2D,0X5F,0X6C,0X4E,0X6B,0X4E,0XEC,0X5E,0X2D,0X5F,0XED,0X56,
N0X2D,0X5F,0X2D,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,
N0X2E,0X5F,0X2D,0X5F,0X2D,0X5F,0X2D,0X57,0X2C,0X5F,0XEC,0X5E,0XED,0X5E,0XAC,0X4E,
N0X2E,0X5F,0X2D,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,
N0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2D,0X5F,0X6B,0X4E,0X6C,0X4E,0X2C,0X57,0X2D,0X5F,
N0XEC,0X56,0X2D,0X5F,0X2D,0X5F,0X2D,0X57,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,
N0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0XED,0X56,0X2D,0X5F,0XEC,0X56,0X6B,0X4E,0X6B,0X4E,
N0XED,0X5E,0XEC,0X5E,0X2D,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,
N0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,
N0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2D,0X5F,0XED,0X5E,0X6C,0X4E,0X6B,0X4E,0X2D,0X5F,
N0XED,0X5E,0X2D,0X57,0X2D,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,
N0X2E,0X5F,0X2E,0X5F,0X2D,0X5F,0X2D,0X5F,0X2D,0X5F,0XEC,0X5E,0XED,0X5E,0XAC,0X4E,
N0X6B,0X4E,0X2D,0X5F,0X2D,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,
N0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2D,0X5F,0XED,0X5E,0XAC,0X4E,0XAC,0X4E,0X2E,0X5F,
N0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,
N0X2E,0X57,0X2E,0X5F,0X2E,0X5F,0X2D,0X5F,0X2D,0X5F,0X2D,0X5F,0X2E,0X5F,0X2D,0X5F,
N0X2D,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,
N0X2E,0X5F,0X2E,0X5F,0X2D,0X5F,0X2D,0X5F,0X2D,0X5F,0X2D,0X5F,0X2D,0X5F,0X2E,0X5F,
N0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,
N0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2D,0X5F,0X2D,0X5F,0X2D,0X5F,0X2D,0X5F,0X2D,0X5F,
N0X2D,0X5F,0X2D,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,
N0X2E,0X57,0X2E,0X57,0X2D,0X5F,0X2D,0X5F,0X2D,0X5F,0X2E,0X5F,0X2D,0X5F,0X2D,0X5F,
N0X2D,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,
N0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2D,0X5F,0X2D,0X5F,0X2D,0X5F,
N0X2D,0X5F,0X2D,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,
N0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,
N0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2D,0X5F,0X2D,0X5F,0X2D,0X5F,0X2D,0X5F,0X2D,0X5F,
N0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,
N0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2D,0X5F,0X2D,0X5F,0X2D,0X5F,0X2D,0X5F,0X2D,0X5F,
N0X2D,0X5F,0X2D,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,
N0X2E,0X5F,0X2E,0X5F,0X2D,0X5F,0X2D,0X5F,0X2D,0X5F,0X2D,0X5F,0X2D,0X5F,0X2D,0X5F,
N0X2D,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,
N0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2D,0X5F,0X2D,0X5F,0X2D,0X5F,0X2D,0X5F,
N0X2D,0X5F,0X2D,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,
N0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2D,0X5F,0X2D,0X5F,0X2D,0X5F,0X2D,0X5F,0X2D,0X5F,
N0X2D,0X5F,0X2D,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,
N0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2D,0X5F,0X2D,0X5F,0X2D,0X5F,0X2D,0X5F,
N0X2D,0X5F,0X2D,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,
N0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,
N0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2D,0X5F,0X2D,0X5F,0X2D,0X5F,0X2D,0X5F,
N0X2D,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,
N0X2E,0X57,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2D,0X5F,0X2D,0X5F,0X2D,0X5F,0X2D,0X5F,
N0X2D,0X5F,0X2D,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,
N0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2D,0X5F,0X2D,0X5F,0X2D,0X5F,0X2E,0X57,
N0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,
N0X2E,0X57,0X2E,0X57,0X2E,0X5F,0X2E,0X5F,0X2D,0X5F,0X2D,0X5F,0X2D,0X5F,0X2E,0X5F,
N0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,
N0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2D,0X5F,0X2D,0X5F,0X2E,0X5F,0X2E,0X5F,
N0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,
N0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2D,0X5F,
N0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,
N0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2D,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,
N0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,
N0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2D,0X5F,0X2E,0X5F,0X2D,0X5F,
N0X2D,0X5F,0X2E,0X5F,0X2E,0X57,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,
N0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,
N0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2D,0X5F,0X2E,0X5F,
N0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,
N0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2D,0X5F,
N0X2D,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,
N0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2D,0X5F,0X2D,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,
N0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,
N0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2D,0X5F,0X2D,0X5F,0X2E,0X5F,0X2E,0X5F,
N0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,
N0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2D,0X5F,0X2D,0X5F,0X2D,0X5F,
N0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,
N0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,
N0X2D,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,
N0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,
N0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,
N0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,
N0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2D,0X5F,0X2E,0X5F,0X2E,0X5F,
N0X2E,0X5F,0X2D,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,
N0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X57,
N0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,
N0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,
N0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,
N0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,
N0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,
N0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,
N0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,
N0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,
N0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,
N0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,
N0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,
N0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,
N0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,
N0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,
N0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,
N0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,
N0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,
N0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,
N0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,
N0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,
N0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,
N0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,
N0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,
N0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,
N0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,
N0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,
N0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,
N0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,
N0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,
N0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,
N0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,
N0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,
N0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,
N0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,
N0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,
N0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,
N0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,
N0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,
N0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,
N0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,
N0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,
N0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,
N0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,
N0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,
N0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,
N0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,
N0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,
N0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,
N0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,
N0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,
N0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,
N0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,
N0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,
N0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,
N0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,
N0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,
N0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,
N0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,
N0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,
N0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,
N0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,
N0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,
N0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,
N0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,
N0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,
N0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,
N0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,
N0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,
N0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,
N0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,
N0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,
N0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,
N0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,
N0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,
N0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,
N0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,
N0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,
N0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,
N0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,
N0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,
N0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,
N0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,
N0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,
N0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,
N0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,
N0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,
N0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,
N0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,
N0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,
N0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,
N0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,
N0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,
N0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,
N0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,
N0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,
N0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,
N0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,
N0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,
N0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,
N0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,
N0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,
N0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,
N0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,
N0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,
N0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,
N0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,
N0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,
N0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,
N0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,
N0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,
N0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,
N0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,
N0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,
N0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,
N0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,
N0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,
N0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,
N0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,
N0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,
N0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,
N0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,
N0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,
N0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,
N0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,
N0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,
N0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,
N0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,
N0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,
N0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,
N0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,
N0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,
N0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,
N0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,
N0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,
N0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,
N0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,
N0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,
N0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,
N0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,
N0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,
N0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,
N0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,
N0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,
N0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,
N0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,
N0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,
N0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,
N0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,
N0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,
N0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,
N0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,
N0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,
N0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,
N0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,
N0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,
N0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,
N0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,
N0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,
N0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,
N0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,
N0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,
N0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,
N0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,
N0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,
N0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,
N0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,
N0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,
N0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,
N0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,
N0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,
N0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,
N0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,
N0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,
N0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,
N0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,
N0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,
N0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,
N0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,
N0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,
N0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,
N0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,0X2E,0X5F,
N0X2E,0X57,0X2E,0X57,0X2E,0X57,0X2E,0X57,0X2E,0X57,0X2E,0X57,0X2E,0X57,0X2E,0X57,
N0X2E,0X57,0X2E,0X57,0X2E,0X57,0X2E,0X57,0X2E,0X57,0X2E,0X57,0X2E,0X57,0X2E,0X57,
N0X2E,0X57,0X2E,0X57,0X2E,0X57,0X2E,0X57,0X2E,0X57,0X2E,0X57,0X2E,0X57,0X2E,0X57,
N0X2E,0X57,0X2E,0X57,0X2E,0X57,0X2E,0X57,0X2E,0X57,0X2E,0X57,0X2E,0X57,0X2E,0X57,
N0X2E,0X57,0X2E,0X57,0X2E,0X57,0X2E,0X57,0X2E,0X57,0X2E,0X57,0X2E,0X57,0X2E,0X57,
N0X2E,0X57,0X2E,0X57,0X2E,0X57,0X2E,0X57,0X2E,0X57,0X2E,0X57,0X2E,0X57,0X2E,0X57,
N0X2E,0X57,0X2E,0X57,0X2E,0X57,0X2E,0X57,0X2E,0X57,0X2E,0X57,0X2E,0X57,0X2E,0X57,
N0X2E,0X57,0X2E,0X57,0X2E,0X57,0X2E,0X57,0X2E,0X57,0X2E,0X57,0X2E,0X57,0X2E,0X57,
N0X2E,0X57,0X2E,0X57,0X2E,0X57,0X2E,0X57,0X2E,0X57,0X2E,0X57,0X2E,0X57,0X2E,0X57,
N0X2E,0X57,0X2E,0X57,0X2E,0X57,0X2E,0X57,0X2E,0X57,0X2E,0X57,0X2E,0X57,0X2E,0X57,
N0X2E,0X57,0X2E,0X57,0X2E,0X57,0X2E,0X57,0X2E,0X57,0X2E,0X57,0X2E,0X57,0X2E,0X57,
N0X2E,0X57,0X2E,0X57,0X2E,0X57,0X2E,0X57,0X2E,0X57,0X2E,0X57,0X2E,0X57,0X2E,0X57,
N0X2E,0X57,0X2E,0X57,0X2E,0X57,0X2E,0X57,0X2E,0X57,0X2E,0X57,0X2E,0X57,0X2E,0X57,
N0X2E,0X57,0X2E,0X57,0X2E,0X57,0X2E,0X57,0X2E,0X57,0X2E,0X57,0X2E,0X57,0X2E,0X57,
N0X2E,0X57,0X2E,0X57,0X2E,0X57,0X2E,0X57,0X2E,0X57,0X2E,0X57,0X2E,0X57,0X2E,0X57,
N0X2E,0X57,0X2E,0X57,0X2E,0X57,0X2E,0X57,0X2E,0X57,0X2E,0X57,0X2E,0X57,0X2E,0X57,
N0X2E,0X57,0X2E,0X57,0X2E,0X57,0X2E,0X57,0X2E,0X57,0X2E,0X57,0X2E,0X57,0X2E,0X57,
N0X2E,0X57,0X2E,0X57,0X2E,0X57,0X2E,0X57,0X2E,0X57,0X2E,0X57,0X2E,0X57,0X2E,0X57,
N0X2E,0X57,0X2E,0X57,0X2E,0X57,0X2E,0X57,0X2E,0X57,0X2E,0X57,0X2E,0X57,0X2E,0X57,
N0X2E,0X57,0X2E,0X57,0X2E,0X57,0X2E,0X57,0X2E,0X57,0X2E,0X57,0X2E,0X57,0X2E,0X57,
N0X2E,0X57,0X2E,0X57,0X2E,0X57,0X2E,0X57,0X2E,0X57,0X2E,0X57,0X2E,0X57,0X2E,0X57,
N0X2E,0X57,0X2E,0X57,0X2E,0X57,0X2E,0X57,0X2E,0X57,0X2E,0X57,0X2E,0X57,0X2E,0X57,
N0X2E,0X57,0X2E,0X57,0X2E,0X57,0X2E,0X57,0X2E,0X57,0X2E,0X57,0X2E,0X57,0X2E,0X57,
N0X2E,0X57,0X2E,0X57,0X2E,0X57,0X2E,0X57,0X2E,0X57,0X2E,0X57,0X2E,0X57,0X2E,0X57,
N0X2E,0X57,0X2E,0X57,0X2E,0X57,0X2E,0X57,0X2E,0X57,0X2E,0X57,0X2E,0X57,0X2E,0X57,
N0X2E,0X57,0X2E,0X57,0X2E,0X57,0X2E,0X57,0X2E,0X57,0X2E,0X57,0X2E,0X57,0X2E,0X57,
N0X2E,0X57,0X2E,0X57,0X2E,0X57,0X2E,0X57,0X2E,0X57,0X2E,0X57,0X2E,0X57,0X2E,0X57,
N0X2E,0X57,0X2E,0X57,0X2E,0X57,0X2E,0X57,0X2E,0X57,0X2E,0X57,0X2E,0X57,0X2E,0X57,
N0X2E,0X57,0X2E,0X57,0X2E,0X57,0X2D,0X57,0X2D,0X57,0X2D,0X57,0X2D,0X57,0X2D,0X57,
N0X2E,0X57,0X2E,0X57,0X2E,0X57,0X2E,0X57,0X2E,0X57,0X2E,0X57,0X2E,0X57,0X2E,0X57,
N0X6D,0X4F,0X6D,0X57,0X6D,0X57,0X6D,0X4F,0X6D,0X57,0X6D,0X57,0X6D,0X4F,0X6D,0X57,
N0X6D,0X57,0X6D,0X57,0X6D,0X57,0X6D,0X57,0X2D,0X4F,0X6D,0X57,0X6D,0X57,0X6D,0X57,
N0X6D,0X57,0X6D,0X57,0X6D,0X57,0X6D,0X57,0X6D,0X57,0X6D,0X57,0X6D,0X57,0X6D,0X57,
N0X6D,0X57,0X6D,0X57,0X6D,0X57,0X6D,0X57,0X6D,0X57,0X6D,0X57,0X6D,0X57,0X6D,0X57,
N0X6D,0X57,0X6D,0X57,0X6D,0X57,0X6D,0X57,0X6D,0X57,0X6D,0X57,0X6D,0X57,0X6D,0X57,
N0X6D,0X57,0X6D,0X57,0X6D,0X57,0X6D,0X57,0X6D,0X57,0X6D,0X57,0X6D,0X57,0X6D,0X57,
N0X6D,0X57,0X6D,0X57,0X6D,0X57,0X6D,0X57,0X6D,0X57,0X6D,0X4F,0X6D,0X4F,0X6D,0X4F,
N0X6D,0X4F,0X6D,0X4F,0X6D,0X4F,0X6D,0X4F,0X6E,0X57,0X6D,0X4F,0X6D,0X4F,0X6D,0X57,
N0X6D,0X4F,0X6D,0X57,0X6D,0X57,0X6D,0X4F,0X6D,0X57,0X6D,0X57,0X6D,0X4F,0X6D,0X57,
N0X6D,0X57,0X6D,0X4F,0X6D,0X57,0X6D,0X57,0X6D,0X4F,0X6D,0X57,0X6D,0X57,0X6D,0X4F,
N0X6D,0X57,0X6D,0X4F,0X6D,0X4F,0X6D,0X57,0X6D,0X4F,0X6D,0X4F,0X6D,0X57,0X6D,0X4F,
N0X6D,0X4F,0X6D,0X57,0X6D,0X4F,0X6D,0X4F,0X6D,0X57,0X6D,0X4F,0X6D,0X4F,0X6D,0X57,
N0X6D,0X4F,0X6D,0X57,0X6D,0X57,0X6D,0X4F,0X6D,0X57,0X6D,0X57,0X6D,0X4F,0X6E,0X57,
N0X6E,0X57,0X6D,0X4F,0X6D,0X57,0X6D,0X57,0X6D,0X4F,0X6D,0X57,0X6D,0X57,0X6D,0X4F,
N0X6D,0X57,0X6D,0X4F,0X6D,0X4F,0X6D,0X57,0X6D,0X4F,0X6D,0X4F,0X6E,0X57,0X6D,0X4F,
N0X6D,0X4F,0X6D,0X57,0X6D,0X4F,0X6D,0X4F,0X6D,0X57,0X6D,0X4F,0X6D,0X4F,0X6D,0X57,
N0X6D,0X4F,0X6D,0X57,0X6D,0X57,0X6D,0X4F,0X6D,0X57,0X6D,0X57,0X6D,0X4F,0X6D,0X57,
N0X6D,0X57,0X6D,0X4F,0X6D,0X57,0X6D,0X57,0X6D,0X4F,0X6D,0X57,0X6D,0X57,0X6D,0X4F,
N0X6D,0X57,0X6D,0X4F,0X6D,0X4F,0X6D,0X57,0X6D,0X4F,0X6D,0X4F,0X6D,0X57,0X6D,0X4F,
N0X6D,0X4F,0X6D,0X57,0X6D,0X4F,0X6D,0X4F,0X6D,0X57,0X6D,0X4F,0X6D,0X4F,0X6D,0X57,
N0X6D,0X4F,0X6D,0X57,0X6D,0X57,0X6D,0X4F,0X6D,0X57,0X6D,0X57,0X6D,0X4F,0X6D,0X57,
N0X6D,0X57,0X6D,0X4F,0X6E,0X57,0X6E,0X57,0X6D,0X4F,0X6E,0X57,0X6D,0X57,0X6D,0X4F,
N0X6D,0X57,0X6D,0X4F,0X6D,0X4F,0X6D,0X57,0X6D,0X4F,0X6D,0X4F,0X6D,0X57,0X6D,0X4F,
N0X6D,0X4F,0X6D,0X4F,0X6D,0X4F,0X6D,0X4F,0X6D,0X4F,0X6D,0X4F,0X6D,0X4F,0X6E,0X4F,
N0X6D,0X4F,0X6D,0X4F,0X6D,0X4F,0X6D,0X4F,0X6D,0X4F,0X6D,0X4F,0X6D,0X4F,0X6D,0X4F,
N0X6D,0X4F,0X6D,0X4F,0X6D,0X4F,0X6E,0X4F,0X6D,0X4F,0X6E,0X4F,0X6E,0X4F,0X6D,0X4F,
N0X6D,0X57,0X6D,0X57,0X6D,0X57,0X6D,0X57,0X6D,0X57,0X6D,0X57,0X6D,0X57,0X6D,0X57,
N0X6D,0X57,0X6D,0X57,0X6D,0X4F,0X6D,0X4F,0X6D,0X4F,0X6D,0X4F,0X6D,0X57,0X6D,0X57,
N0X6D,0X57,0X6D,0X57,0X6D,0X57,0X2D,0X57,0X2D,0X57,0X2D,0X57,0X6E,0X57,0X2D,0X57,
N0X6D,0X57,0X6D,0X4F,0X6D,0X57,0X6D,0X57,0X6D,0X4F,0X6E,0X57,0X6E,0X57,0X6D,0X4F,
N};
L 3 "app\game.c" 2
N#include "flappybird_logo.c"
L 1 ".\app\RES\Pic\flappybird_logo.c" 1
Nconst unsigned char gImage_flappybird_Logo[9720] = { /* 0X00,0X10,0X87,0X00,0X24,0X00,0X01,0X1B, */
N0X1B,0X46,0XFA,0X45,0XF9,0X4D,0XB7,0X5D,0X76,0X6D,0X6A,0X22,0XE9,0X29,0XE9,0X39,
N0X09,0X3A,0XC8,0X31,0X08,0X32,0X08,0X32,0XE8,0X31,0X09,0X3A,0XEA,0X39,0XE9,0X39,
N0X29,0X32,0X29,0X32,0X09,0X3A,0XE9,0X39,0X29,0X3A,0X2A,0X2A,0X6B,0X1A,0X97,0X6D,
N0XD8,0X5D,0XF9,0X4D,0XF9,0X4D,0XFA,0X4D,0XDA,0X4D,0XDA,0X55,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XFA,0X4D,0XFA,0X4D,0XFA,0X45,0X1A,0X46,0X19,0X46,0X19,0X46,
N0XF9,0X45,0XF9,0X45,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X45,0XF9,0X45,
N0XF9,0X4D,0XF9,0X4D,0X1A,0X46,0XFA,0X45,0XFA,0X4D,0XDA,0X55,0XF9,0X4D,0XF9,0X45,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XD9,0X55,0XD9,0X55,0XF9,0X4D,0XF9,0X45,0XF9,0X45,
N0XFA,0X45,0XFA,0X45,0XDA,0X45,0XFA,0X4D,0XFA,0X4D,0XFA,0X4D,0XF9,0X45,0XF9,0X45,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0X19,0X46,0X19,0X46,0XF9,0X45,0XF9,0X4D,0XFA,0X4D,
N0X1A,0X56,0XD9,0X5D,0X6B,0X1A,0X2A,0X2A,0X29,0X32,0X08,0X32,0X09,0X42,0XE9,0X39,
N0XE9,0X31,0XEA,0X39,0XC9,0X39,0XC9,0X31,0X2B,0X32,0X0A,0X1A,0X98,0X6D,0XD9,0X5D,
N0XD9,0X4D,0X1A,0X4E,0XDA,0X45,0X1B,0X4E,0XFA,0X45,0XFA,0X3D,0XFA,0X45,0XFA,0X45,
N0XFA,0X55,0XD9,0X4D,0X19,0X46,0X19,0X46,0XF8,0X4D,0XD8,0X4D,0X1A,0X56,0XF9,0X4D,
N0XD9,0X4D,0XD9,0X4D,0XF9,0X45,0X19,0X46,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X45,
N0XFA,0X45,0XFA,0X45,0X1A,0X4E,0XB8,0X45,0XF9,0X55,0X97,0X65,0X2A,0X2A,0XE9,0X31,
N0X29,0X3A,0XE8,0X31,0X28,0X32,0X08,0X32,0XE8,0X31,0X09,0X32,0X4B,0X32,0XDA,0X3D,
N0XFA,0X4D,0XF9,0X5D,0X97,0X65,0X76,0X7D,0X29,0X2A,0X09,0X32,0XE8,0X39,0XE8,0X39,
N0XE8,0X39,0X08,0X32,0XE8,0X31,0XC8,0X31,0XC8,0X31,0XC9,0X39,0XC8,0X39,0XC7,0X29,
N0X08,0X32,0XC8,0X31,0X2A,0X42,0X87,0X29,0X09,0X2A,0X4A,0X1A,0XB8,0X6D,0XD8,0X55,
N0XF9,0X4D,0XF9,0X45,0XFA,0X4D,0XDA,0X4D,0XDA,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XFA,0X4D,0XFA,0X4D,0XFA,0X4D,0XFA,0X45,0XFA,0X45,0X19,0X46,0X1A,0X4E,
N0X19,0X4E,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X45,0XF9,0X4D,
N0XF9,0X4D,0X19,0X46,0XFA,0X4D,0XDA,0X4D,0XDA,0X55,0XF9,0X4D,0X19,0X46,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XD9,0X55,0XD9,0X55,0XF9,0X4D,0XF9,0X45,0XF9,0X45,0XF9,0X45,
N0XF9,0X4D,0X1A,0X4E,0XF9,0X4D,0XFA,0X4D,0X1A,0X4E,0XFA,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X45,0X19,0X46,0X19,0X46,0XF9,0X45,0XF9,0X4D,0XF9,0X4D,0XFA,0X4D,
N0XB8,0X5D,0X2A,0X1A,0X09,0X2A,0X29,0X3A,0XC7,0X31,0XC7,0X39,0XC8,0X39,0XC8,0X31,
N0XA8,0X31,0XA8,0X31,0XC8,0X31,0X09,0X32,0X09,0X22,0X77,0X7D,0X77,0X65,0XF9,0X55,
N0XFA,0X4D,0XD9,0X4D,0XDA,0X4D,0X1A,0X4E,0XFA,0X45,0X1A,0X4E,0XFA,0X45,0XFA,0X4D,
N0XFA,0X4D,0X19,0X4E,0XF8,0X45,0X19,0X4E,0XF9,0X4D,0XD9,0X45,0XF9,0X4D,0XFA,0X4D,
N0XFA,0X4D,0XF9,0X45,0XF9,0X45,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XFA,0X4D,
N0XFA,0X4D,0XD9,0X45,0XF9,0X4D,0XD8,0X4D,0X97,0X65,0X2A,0X2A,0X09,0X3A,0XE8,0X31,
N0X08,0X32,0XC7,0X29,0XE8,0X31,0X08,0X3A,0XE8,0X31,0XE9,0X29,0XF9,0X4D,0XB8,0X4D,
N0X56,0X65,0X4A,0X1A,0XE8,0X21,0XFF,0XF7,0XFF,0XF7,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
N0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XC9,0X41,0XC8,0X41,0XFF,0XFF,0XFF,0XFF,
N0XFF,0XFF,0XDF,0XFF,0XFF,0XFF,0XFF,0XEF,0X4A,0X1A,0XB8,0X6D,0XD8,0X55,0XF9,0X4D,
N0X19,0X46,0X19,0X46,0XFA,0X45,0XFA,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XFA,0X4D,0XFA,0X4D,0XFA,0X4D,0XFA,0X4D,0XFA,0X4D,0XF9,0X4D,0XFA,0X4D,0XFA,0X4D,
N0XD9,0X4D,0XD9,0X55,0XD9,0X55,0XF9,0X4D,0XFA,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XDA,0X55,0XDA,0X4D,0XFA,0X45,0X19,0X46,0X1A,0X4E,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X45,0XF9,0X45,0X19,0X4E,0XD9,0X45,
N0XF9,0X45,0XF9,0X45,0XD8,0X45,0XD9,0X4D,0XD9,0X45,0XD9,0X4D,0XD9,0X4D,0XD9,0X4D,
N0XF9,0X45,0X19,0X46,0X19,0X3E,0XF9,0X45,0XD9,0X4D,0XD9,0X55,0XD8,0X4D,0XB8,0X65,
N0X8B,0X32,0XDF,0XF7,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
N0XDF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0X08,0X2A,0X6B,0X22,0XB7,0X65,0XB8,0X4D,
N0XD9,0X55,0XD9,0X55,0XB9,0X4D,0XDA,0X4D,0XFA,0X45,0XF9,0X45,0XD9,0X45,0XD9,0X45,
N0XF9,0X4D,0XFA,0X4D,0XD9,0X4D,0XFA,0X4D,0XF9,0X4D,0X1A,0X4E,0XFA,0X4D,0XFA,0X4D,
N0XF9,0X45,0XF9,0X45,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XD9,0X4D,0XFA,0X55,
N0XDA,0X4D,0XB9,0X4D,0XF8,0X55,0X97,0X65,0X09,0X2A,0XBF,0XFF,0XFF,0XFF,0XFF,0XFF,
N0XFF,0XFF,0XFF,0XFF,0XDF,0XFF,0X09,0X3A,0X0A,0X32,0XB8,0X55,0XF8,0X6D,0X8B,0X22,
N0XFF,0XEF,0XFF,0XFF,0XFF,0XFF,0XFF,0XF7,0XFF,0XF7,0XFE,0XFF,0XDE,0XF7,0XDE,0XF7,
N0XFF,0XFF,0XBE,0XF7,0XFF,0XFF,0XC8,0X49,0XC7,0X41,0XFF,0XFF,0XFE,0XFF,0XDF,0XFF,
N0XFF,0XFF,0XDF,0XFF,0XFF,0XF7,0X4A,0X22,0X97,0X6D,0XD9,0X55,0X19,0X46,0X19,0X46,
N0X19,0X46,0XFA,0X45,0XFA,0X45,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XDA,0X4D,0XFA,0X4D,0XFA,0X4D,0XFA,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XD9,0X55,
N0XD9,0X55,0XD9,0X55,0XF9,0X4D,0XFA,0X4D,0XFA,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XFA,0X4D,0XFA,0X4D,0XFA,0X45,0X1A,0X46,0X1A,0X4E,0XFA,0X4D,0XFA,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0X19,0X4E,
N0XF9,0X4D,0XF8,0X4D,0X19,0X4E,0X19,0X4E,0XD9,0X45,0XFA,0X4D,0XFA,0X4D,0XFA,0X4D,
N0X1A,0X46,0X1A,0X46,0XF9,0X45,0XD9,0X4D,0XD9,0X55,0XD8,0X55,0XB8,0X6D,0X2A,0X2A,
N0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFE,0XFF,0XFE,0XFF,0XFF,0XFF,0XFF,0XFF,0XFE,0XFF,
N0XFE,0XFF,0X9D,0XF7,0XFF,0XFF,0X9E,0XEF,0XFF,0XF7,0X8B,0X12,0XD8,0X65,0X98,0X55,
N0XD9,0X55,0XFA,0X55,0XD9,0X4D,0XF9,0X45,0X19,0X4E,0X19,0X46,0XD8,0X45,0XFA,0X4D,
N0XD9,0X4D,0XFA,0X4D,0XD9,0X45,0XFA,0X4D,0XB9,0X45,0XF9,0X4D,0XF9,0X4D,0XFA,0X4D,
N0XFA,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XD9,0X4D,0XDA,0X4D,0XDA,0X4D,
N0XFA,0X4D,0XB8,0X55,0XB8,0X75,0XE9,0X29,0XDF,0XFF,0XBF,0XFF,0XFF,0XFF,0XFF,0XFF,
N0XFF,0XFF,0XDF,0XFF,0XE8,0X39,0X09,0X32,0X56,0X6D,0X56,0X75,0X4A,0X2A,0XBF,0XEF,
N0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFE,0XF7,0XFE,0XFF,0XFF,0XFF,0XFF,0XFF,0XDE,0XF7,
N0XFF,0XFF,0XDF,0XFF,0XA7,0X41,0XE7,0X49,0XFE,0XFF,0XFE,0XFF,0XDE,0XFF,0XFF,0XFF,
N0XFF,0XFF,0XFF,0XF7,0X4B,0X22,0XB8,0X6D,0XD9,0X55,0X19,0X46,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XD9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XD9,0X55,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0X19,0X46,0XFA,0X45,
N0XFA,0X4D,0XFA,0X4D,0XFA,0X45,0XFA,0X45,0XFA,0X4D,0XF9,0X4D,0XF9,0X4D,0XFA,0X45,
N0XFA,0X45,0XFA,0X4D,0XFA,0X4D,0XFA,0X4D,0XFA,0X4D,0XD9,0X4D,0XD9,0X45,0XF9,0X4D,
N0XF9,0X45,0XD8,0X45,0XF8,0X45,0XF9,0X45,0XD9,0X45,0XD9,0X4D,0XDA,0X4D,0XDA,0X4D,
N0XFA,0X45,0XD9,0X45,0XD9,0X4D,0XD8,0X4D,0X19,0X66,0XB7,0X6D,0X4A,0X32,0XFF,0XFF,
N0XFF,0XFF,0XFE,0XF7,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFE,0XF7,0XFE,0XF7,0XFE,0XF7,
N0XFE,0XF7,0XFE,0XF7,0XDE,0XF7,0XDF,0XEF,0X4A,0X2A,0X56,0X75,0XB7,0X65,0XD8,0X55,
N0XD8,0X4D,0XF8,0X4D,0XF8,0X45,0X19,0X4E,0XD8,0X45,0X19,0X4E,0XF9,0X45,0XFA,0X4D,
N0XFA,0X4D,0XFA,0X4D,0XF9,0X4D,0X1A,0X4E,0XD9,0X4D,0XD9,0X4D,0XFA,0X4D,0XFA,0X4D,
N0XDA,0X4D,0XFA,0X4D,0XF9,0X4D,0XF9,0X4D,0XFA,0X4D,0XFA,0X4D,0X99,0X45,0X1A,0X56,
N0XD9,0X5D,0X57,0X6D,0XC9,0X31,0XBF,0XFF,0XFF,0XFF,0XFF,0XF7,0XDE,0XF7,0XDF,0XFF,
N0XDF,0XFF,0XC8,0X39,0X09,0X32,0XF1,0X5B,0X6A,0X2A,0XFF,0XF7,0XDF,0XF7,0XFE,0XF7,
N0XFE,0XF7,0XFE,0XF7,0XFF,0XFF,0XDE,0XFF,0XFF,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,
N0XFF,0XFF,0X87,0X41,0XC7,0X41,0XDE,0XFF,0XFE,0XFF,0XFE,0XFF,0XFF,0XFF,0XFF,0XFF,
N0XFF,0XF7,0X4B,0X22,0X98,0X6D,0XD9,0X55,0XF9,0X4D,0XF9,0X4D,0XD9,0X55,0XD9,0X4D,
N0XD9,0X55,0XD9,0X55,0XD9,0X55,0XF9,0X55,0XF9,0X4D,0XD9,0X55,0XD9,0X55,0XD9,0X55,
N0XD9,0X55,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XD9,0X55,0XD9,0X55,0XD9,0X55,0XD9,0X55,
N0XD9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X45,0XFA,0X4D,0XDA,0X4D,
N0XDA,0X4D,0XFA,0X4D,0XF9,0X4D,0XD9,0X4D,0XF9,0X4D,0XF9,0X4D,0XD9,0X4D,0XF9,0X4D,
N0XD9,0X4D,0XD9,0X4D,0XDA,0X4D,0XDA,0X4D,0XD9,0X4D,0XFA,0X55,0XB8,0X55,0XD8,0X5D,
N0XB7,0X5D,0XB7,0X55,0XD8,0X5D,0XB8,0X5D,0XB9,0X65,0XB9,0X65,0XB9,0X65,0XD9,0X5D,
N0XD9,0X5D,0XB8,0X5D,0XB8,0X65,0X97,0X65,0X76,0X7D,0X29,0X3A,0XFF,0XFF,0XFF,0XFF,
N0XFE,0XFF,0XFF,0XFF,0XFF,0XFF,0XDE,0XF7,0XFF,0XFF,0XFE,0XF7,0XFE,0XF7,0XFE,0XF7,
N0XFD,0XF7,0XFF,0XFF,0XFF,0XFF,0XDF,0XF7,0X2A,0X2A,0XEC,0X22,0X96,0X65,0XD8,0X65,
N0XD8,0X5D,0XB7,0X5D,0XD8,0X5D,0XD8,0X5D,0XB8,0X55,0XD9,0X4D,0XFA,0X4D,0XB9,0X4D,
N0X1A,0X56,0XF9,0X4D,0XD9,0X4D,0XF9,0X55,0XD9,0X55,0XD9,0X55,0XD9,0X4D,0XD9,0X55,
N0XD9,0X4D,0XD9,0X4D,0XD9,0X4D,0XFA,0X4D,0XF9,0X45,0XFA,0X4D,0XD9,0X4D,0X98,0X55,
N0X97,0X75,0XE9,0X31,0XDF,0XFF,0XBF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XDF,0XFF,
N0XC7,0X39,0X2A,0X3A,0X6F,0X63,0X09,0X32,0XFF,0XF7,0XFF,0XF7,0XFF,0XF7,0XFE,0XF7,
N0XFF,0XFF,0XDE,0XFF,0XFF,0XFF,0XBE,0XFF,0XFF,0XFF,0XFF,0XFF,0XDF,0XFF,0XFF,0XFF,
N0XC7,0X41,0XC7,0X41,0XFF,0XFF,0XFE,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XF7,
N0X2B,0X22,0X98,0X75,0XB9,0X55,0XD9,0X55,0XD8,0X5D,0XB8,0X5D,0XD8,0X55,0XD8,0X55,
N0XB8,0X5D,0XB8,0X5D,0XD8,0X55,0XD8,0X55,0XB8,0X55,0XB8,0X55,0XB9,0X55,0XB9,0X55,
N0XB9,0X55,0XD9,0X55,0XD9,0X55,0XD9,0X55,0XB8,0X55,0XB8,0X55,0XB9,0X55,0XD9,0X55,
N0XD9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XD9,0X4D,0XD9,0X55,0XB9,0X5D,0XB9,0X5D,
N0XB9,0X55,0XD9,0X55,0XD8,0X5D,0XB8,0X5D,0XB8,0X5D,0XB8,0X5D,0XB8,0X55,0XD9,0X4D,
N0XD9,0X4D,0XD9,0X4D,0XD9,0X4D,0XB9,0X4D,0X78,0X5D,0XAC,0X12,0X4A,0X1A,0X8B,0X2A,
N0X6A,0X22,0X4A,0X22,0X4A,0X22,0X4A,0X2A,0X4B,0X2A,0X4B,0X2A,0X4B,0X22,0X6B,0X22,
N0X6A,0X22,0X6A,0X22,0X6B,0X2A,0X0A,0X2A,0XE8,0X39,0XDF,0XFF,0XDF,0XFF,0XFF,0XFF,
N0XFF,0XFF,0XDF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFE,0XF7,0XFF,0XFF,0XFF,0XFF,
N0XFF,0XFF,0XDF,0XFF,0XFF,0XFF,0X29,0X3A,0XE9,0X29,0X2A,0X2A,0X6B,0X2A,0X4B,0X22,
N0X4A,0X22,0X6B,0X22,0X2B,0X22,0X6C,0X1A,0XB9,0X5D,0XD9,0X4D,0XFA,0X5D,0X98,0X4D,
N0X19,0X5E,0XF8,0X55,0XD8,0X55,0XD8,0X55,0XB8,0X55,0XD9,0X55,0XD9,0X55,0XB9,0X55,
N0XD8,0X55,0XD8,0X4D,0XF9,0X45,0X19,0X46,0XF9,0X4D,0XF9,0X55,0XD8,0X5D,0X77,0X75,
N0XC9,0X31,0XBF,0XFF,0XFF,0XFF,0XDE,0XF7,0XFF,0XFF,0XDE,0XF7,0XFF,0XFF,0X08,0X3A,
N0XE9,0X31,0X6F,0X6B,0X09,0X3A,0XFF,0XFF,0XFF,0XF7,0XFF,0XFF,0XFE,0XF7,0XFE,0XFF,
N0XFF,0XFF,0XDF,0XFF,0XFF,0XFF,0XBE,0XFF,0XDF,0XFF,0XDF,0XFF,0XFF,0XFF,0XA7,0X41,
N0XC7,0X41,0XFF,0XFF,0XFE,0XF7,0XFE,0XFF,0XFF,0XFF,0XFF,0XF7,0XFF,0XF7,0X2B,0X22,
N0X78,0X75,0XB8,0X5D,0XB8,0X5D,0X97,0X6D,0X77,0X6D,0X97,0X6D,0X97,0X6D,0X77,0X75,
N0X77,0X6D,0X97,0X6D,0X97,0X6D,0X77,0X6D,0X77,0X6D,0X77,0X6D,0X77,0X6D,0X77,0X6D,
N0X77,0X6D,0X77,0X6D,0X77,0X6D,0X77,0X6D,0X77,0X6D,0X77,0X6D,0X97,0X6D,0X97,0X65,
N0XB8,0X5D,0XD8,0X55,0XD8,0X55,0XD8,0X55,0X98,0X5D,0X78,0X6D,0X57,0X75,0X77,0X6D,
N0X77,0X6D,0X76,0X6D,0X76,0X6D,0X77,0X75,0X77,0X6D,0X77,0X6D,0X98,0X65,0XB8,0X5D,
N0XD8,0X55,0XF9,0X55,0X98,0X55,0XB8,0X75,0X4B,0X22,0X29,0X2A,0X29,0X3A,0XE8,0X31,
N0X29,0X3A,0X08,0X3A,0X08,0X3A,0XE9,0X41,0XE9,0X41,0X09,0X3A,0X09,0X32,0X28,0X32,
N0X29,0X32,0X4A,0X3A,0X09,0X3A,0XE9,0X49,0XDF,0XFF,0XFF,0XFF,0XFE,0XFF,0XFF,0XFF,
N0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XDE,0XF7,0XDF,0XFF,0XFF,0XFF,0XDF,0XFF,
N0XFF,0XFF,0XFF,0XFF,0XE8,0X41,0X09,0X42,0XE9,0X41,0X0A,0X3A,0XE9,0X31,0X2A,0X3A,
N0XE9,0X39,0X0B,0X3A,0X4C,0X2A,0XB8,0X65,0XB8,0X55,0XB9,0X5D,0XB8,0X6D,0X76,0X65,
N0X96,0X6D,0X76,0X6D,0X76,0X6D,0X77,0X6D,0X77,0X6D,0X77,0X6D,0X77,0X6D,0X78,0X6D,
N0X98,0X65,0XD8,0X55,0X19,0X56,0XD8,0X5D,0X97,0X5D,0X76,0X6D,0X56,0X85,0XE9,0X39,
N0XDF,0XFF,0XDF,0XFF,0XFF,0XFF,0XFE,0XF7,0XFE,0XF7,0XFF,0XFF,0XE7,0X39,0X09,0X32,
N0X6F,0X6B,0XE9,0X39,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFE,0XFF,0XDE,0XFF,0XFF,0XFF,
N0XC7,0X39,0XC7,0X39,0X08,0X4A,0XA7,0X39,0X08,0X4A,0XC8,0X41,0XC8,0X49,0XC8,0X41,
N0XFF,0XFF,0XDE,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XF7,0X4A,0X22,0X77,0X75,
N0XB8,0X65,0XF9,0X75,0X0A,0X22,0X0A,0X32,0XE9,0X29,0X0A,0X32,0X0A,0X32,0X09,0X32,
N0X29,0X32,0X29,0X32,0XE9,0X31,0XC8,0X31,0X09,0X3A,0X2A,0X3A,0XC8,0X31,0XE9,0X31,
N0XE9,0X31,0XE8,0X29,0XE9,0X31,0XC8,0X29,0X29,0X32,0XE8,0X29,0X09,0X2A,0X35,0X7D,
N0X97,0X6D,0XF8,0X65,0XD8,0X5D,0X97,0X65,0X4B,0X2A,0XEA,0X31,0XC9,0X31,0XE9,0X31,
N0X08,0X2A,0XE8,0X21,0X4A,0X3A,0XE9,0X31,0XEA,0X31,0X2A,0X2A,0X36,0X6D,0XB7,0X65,
N0XB8,0X55,0XB8,0X5D,0X77,0X75,0X2A,0X22,0XFF,0XF7,0XFF,0XFF,0XDF,0XFF,0XFF,0XFF,
N0XFF,0XFF,0XDF,0XFF,0XA7,0X41,0XC8,0X49,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
N0XDF,0XFF,0XFF,0XFF,0XE7,0X41,0XFF,0XFF,0XFF,0XFF,0XFE,0XFF,0XFF,0XFF,0XFF,0XFF,
N0XDF,0XFF,0X48,0X4A,0X07,0X42,0XBE,0XF7,0XDF,0XFF,0XFF,0XFF,0XDE,0XFF,0XFF,0XFF,
N0XDF,0XFF,0XE8,0X49,0XC8,0X41,0XFF,0XFF,0XFF,0XFF,0XFF,0XF7,0XFF,0XF7,0XFF,0XFF,
N0XFF,0XFF,0X6B,0X32,0XD8,0X6D,0XB8,0X5D,0X78,0X75,0X2B,0X1A,0XC8,0X21,0XE8,0X31,
N0XE8,0X31,0X29,0X32,0XE8,0X29,0XE9,0X31,0XC9,0X31,0X2A,0X3A,0X0B,0X32,0X4B,0X22,
N0XB7,0X65,0XB7,0X5D,0X55,0X6D,0X29,0X22,0X09,0X32,0XE8,0X39,0XE8,0X39,0XDF,0XFF,
N0XFF,0XFF,0XFE,0XF7,0XFF,0XF7,0XFE,0XF7,0XFF,0XFF,0XE8,0X39,0X09,0X2A,0X8F,0X63,
N0X09,0X32,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XDE,0XFF,0XDE,0XFF,0XFF,0XFF,0XBE,0XFF,
N0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XDF,0XFF,0X9F,0XFF,0X09,0X52,0XC8,0X41,0XFE,0XFF,
N0XFE,0XFF,0XFF,0XFF,0XDE,0XFF,0XDE,0XF7,0XFF,0XF7,0X6B,0X32,0X56,0X7D,0X76,0X75,
N0XCC,0X2A,0XFF,0XF7,0XBF,0XFF,0XFF,0XFF,0XDF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
N0XFF,0XFF,0XDF,0XFF,0XBF,0XFF,0XBF,0XFF,0XC8,0X49,0X9F,0XFF,0XDF,0XFF,0XFF,0XFF,
N0XDF,0XFF,0XFF,0XFF,0XFF,0XFF,0XBF,0XFF,0XFF,0XFF,0XDF,0XFF,0XAB,0X42,0X4A,0X1A,
N0XAB,0X12,0X76,0X6D,0X76,0X7D,0XC8,0X29,0XBF,0XFF,0X9F,0XFF,0XDF,0XFF,0XFF,0XFF,
N0XFF,0XFF,0XBF,0XFF,0XDF,0XFF,0X9F,0XFF,0XFF,0XFF,0X29,0X2A,0X6A,0X1A,0X8B,0X0A,
N0XB8,0X75,0X15,0X7D,0X29,0X2A,0XFF,0XF7,0XFF,0XFF,0XDE,0XFF,0XDE,0XFF,0XFF,0XFF,
N0XDF,0XFF,0XA7,0X41,0XC8,0X49,0XFF,0XFF,0XFF,0XFF,0XFE,0XFF,0XFE,0XFF,0XFF,0XFF,
N0XFF,0XFF,0XE7,0X41,0XFF,0XFF,0XFE,0XFF,0XFE,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
N0XE7,0X39,0XE7,0X39,0XBE,0XFF,0XFF,0XFF,0XDE,0XFF,0XFF,0XFF,0XFF,0XFF,0XDF,0XFF,
N0XE8,0X49,0XA7,0X41,0XBF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
N0X2A,0X32,0X76,0X75,0X77,0X6D,0X2A,0X22,0XFF,0XF7,0XFF,0XFF,0XFF,0XFF,0XDF,0XFF,
N0XFF,0XFF,0XDF,0XFF,0XDF,0XFF,0XDF,0XFF,0XBF,0XFF,0XCA,0X49,0XC9,0X31,0X56,0X75,
N0XAA,0X1A,0X29,0X2A,0XFF,0XF7,0XDF,0XFF,0XDF,0XFF,0XBF,0XF7,0XFF,0XFF,0XFE,0XFF,
N0XFE,0XFF,0XFF,0XFF,0XFE,0XFF,0XFF,0XFF,0XE8,0X39,0X09,0X2A,0XAF,0X5B,0X28,0X32,
N0XFF,0XFF,0XFF,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
N0XDF,0XFF,0XDF,0XFF,0XBE,0XFF,0XFF,0XFF,0X87,0X39,0XC7,0X41,0XFF,0XFF,0XFE,0XFF,
N0XFE,0XF7,0XFF,0XFF,0XFF,0XFF,0XDE,0XF7,0X4A,0X3A,0XF5,0X8C,0X35,0X85,0X29,0X2A,
N0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFE,0XF7,0XFF,0XFF,0XDE,0XFF,0XFF,0XFF,0XDE,0XF7,
N0XDF,0XFF,0XDF,0XFF,0XFF,0XFF,0X86,0X39,0XFF,0XFF,0XDF,0XFF,0XDF,0XFF,0XFF,0XFF,
N0XDF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0X08,0X32,0XE9,0X29,0X0A,0X2A,
N0XD4,0X7C,0X56,0X95,0XA7,0X31,0XDF,0XFF,0XFF,0XFF,0XDE,0XFF,0XDE,0XFF,0XFE,0XFF,
N0XFE,0XFF,0XFF,0XFF,0XFF,0XFF,0XBF,0XF7,0X29,0X3A,0X09,0X32,0X4A,0X32,0XF5,0X84,
N0XF4,0X8C,0X29,0X3A,0XFF,0XF7,0XFF,0XF7,0XFE,0XF7,0XFF,0XFF,0XFF,0XF7,0XFF,0XFF,
N0XA7,0X41,0XE8,0X49,0XFF,0XFF,0XFE,0XF7,0XFE,0XF7,0XFE,0XFF,0XFF,0XFF,0XFF,0XFF,
N0X07,0X3A,0XFF,0XFF,0XFE,0XFF,0XFE,0XFF,0XDF,0XFF,0XDF,0XFF,0XDE,0XFF,0X07,0X42,
N0XE7,0X41,0XFF,0XFF,0XDE,0XFF,0XFF,0XFF,0XFE,0XFF,0XFE,0XFF,0XBF,0XFF,0XE8,0X49,
N0XE8,0X41,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XDE,0XFF,0XFF,0XFF,0XBF,0XF7,0X4A,0X3A,
N0X15,0X85,0X36,0X8D,0XC9,0X29,0XDF,0XF7,0XFF,0XF7,0XFE,0XF7,0XFF,0XFF,0XFF,0XFF,
N0XFE,0XFF,0XFF,0XFF,0XBE,0XF7,0XFF,0XFF,0XC9,0X41,0XC9,0X39,0X35,0X8D,0X49,0X2A,
N0X08,0X3A,0XDF,0XFF,0XFF,0XFF,0XDE,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFE,0XFF,
N0XFF,0XFF,0XFE,0XFF,0XFF,0XFF,0XE8,0X39,0XE9,0X29,0XAF,0X5B,0X28,0X2A,0XFF,0XF7,
N0XFF,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,0XFF,0XFF,0XFE,0XF7,0XFF,0XF7,0XFF,0XFF,
N0XFF,0XFF,0XFF,0XFF,0XDF,0XFF,0X08,0X4A,0XC7,0X41,0XFF,0XFF,0XFE,0XFF,0XFE,0XF7,
N0XFF,0XF7,0XFE,0XF7,0XFF,0XFF,0XE8,0X39,0XE8,0X39,0X29,0X3A,0XDF,0XF7,0XFF,0XFF,
N0XFE,0XFF,0XFE,0XF7,0XFE,0XF7,0XFE,0XFF,0XFE,0XFF,0XFE,0XF7,0XFE,0XF7,0XFF,0XFF,
N0XFF,0XFF,0XDF,0XFF,0XE7,0X41,0XBE,0XFF,0XFE,0XFF,0XDE,0XF7,0XFF,0XFF,0XFF,0XFF,
N0XDE,0XF7,0XFF,0XFF,0XFF,0XFF,0XFF,0XF7,0XFF,0XF7,0XFF,0XFF,0XDF,0XFF,0X09,0X3A,
N0X09,0X42,0XC8,0X41,0X9E,0XFF,0XFF,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,
N0XFE,0XFF,0XFE,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XA7,0X31,0X08,0X42,
N0X28,0X42,0XFF,0XFF,0XFF,0XFF,0XFF,0XF7,0XFF,0XF7,0XFF,0XF7,0XFF,0XFF,0XC7,0X41,
N0XE7,0X49,0XFF,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,0XFF,0XF7,0XDF,0XF7,0XE7,0X39,
N0XFF,0XFF,0XFF,0XFF,0XFE,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFE,0XFF,0XFF,0XFF,
N0XFF,0XFF,0XFF,0XFF,0XFE,0XF7,0XFF,0XFF,0XDE,0XFF,0XDF,0XFF,0XC8,0X49,0XA6,0X39,
N0XFF,0XFF,0XFE,0XF7,0XFE,0XFF,0XFF,0XFF,0XDE,0XFF,0XFF,0XFF,0XE8,0X39,0XE8,0X31,
N0XE8,0X31,0XFF,0XFF,0XFF,0XFF,0XFE,0XF7,0XFE,0XF7,0XFE,0XFF,0XFE,0XFF,0XFE,0XF7,
N0XFE,0XFF,0XFF,0XF7,0XFF,0XFF,0XC8,0X41,0XA8,0X41,0XE8,0X39,0XFF,0XF7,0XDF,0XFF,
N0XFE,0XFF,0XFE,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFE,0XFF,0XFF,0XFF,
N0XFE,0XFF,0XFF,0XFF,0XE8,0X39,0XE9,0X31,0XAF,0X5B,0X29,0X32,0XFF,0XF7,0XFF,0XFF,
N0XFE,0XFF,0XFE,0XFF,0XFE,0XF7,0XFF,0XF7,0XFF,0XFF,0XFE,0XF7,0XFF,0XF7,0XFE,0XF7,
N0XFF,0XF7,0XFF,0XFF,0XC8,0X41,0XA7,0X41,0XFF,0XFF,0XFE,0XF7,0XFF,0XFF,0XFE,0XF7,
N0XFE,0XFF,0XFF,0XFF,0X08,0X42,0XFF,0XFF,0XBE,0XF7,0XFF,0XFF,0XFE,0XFF,0XFD,0XFF,
N0XFE,0XFF,0XFE,0XF7,0XFD,0XF7,0XFE,0XFF,0XFF,0XFF,0XFE,0XFF,0XFE,0XFF,0XDE,0XFF,
N0XFF,0XFF,0XA6,0X39,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFE,0XF7,0XFE,0XFF,0XFF,0XFF,
N0XFE,0XFF,0XFF,0XFF,0XFE,0XF7,0XFF,0XFF,0XDF,0XFF,0XFF,0XFF,0XBF,0XF7,0X9F,0XF7,
N0XC8,0X49,0XDF,0XFF,0XDE,0XFF,0XFF,0XFF,0XDE,0XF7,0XDE,0XF7,0XFF,0XFF,0XFF,0XFF,
N0XDE,0XF7,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XDF,0XFF,0XC6,0X39,
N0XFF,0XFF,0XDE,0XF7,0XFF,0XFF,0XDF,0XFF,0XFF,0XFF,0XDF,0XFF,0XA7,0X41,0XE7,0X49,
N0XFF,0XFF,0XFF,0XFF,0XFE,0XFF,0XFF,0XFF,0XDF,0XFF,0XDF,0XFF,0XE7,0X41,0XFF,0XFF,
N0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFE,0XF7,0XFE,0XF7,0XFF,0XFF,0XFE,0XF7,
N0XFE,0XF7,0XFE,0XF7,0XFE,0XF7,0XDE,0XFF,0XFF,0XFF,0XE8,0X49,0XE7,0X41,0XFF,0XFF,
N0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XE8,0X41,0XDF,0XFF,0XDF,0XFF,
N0XFF,0XFF,0XFF,0XFF,0XFE,0XF7,0XFE,0XFF,0XFE,0XF7,0XFF,0XFF,0XFF,0XFF,0XFE,0XF7,
N0XFF,0XF7,0XFF,0XFF,0XC8,0X41,0X09,0X4A,0X9F,0XFF,0XBF,0XFF,0XFF,0XFF,0XFF,0XFF,
N0XDE,0XF7,0XFE,0XF7,0XFF,0XFF,0XFF,0XFF,0XFE,0XFF,0XFE,0XFF,0XFF,0XFF,0XFF,0XFF,
N0XFF,0XFF,0XE8,0X39,0XE9,0X31,0X8F,0X5B,0X09,0X32,0XFF,0XFF,0XFF,0XFF,0XFE,0XFF,
N0XFE,0XF7,0XFE,0XF7,0XFF,0XF7,0XFF,0XF7,0XFF,0XF7,0XFF,0XF7,0XFF,0XF7,0XFF,0XF7,
N0XFF,0XFF,0XE8,0X41,0XE8,0X49,0XDE,0XFF,0XFE,0XF7,0XFF,0XFF,0XFF,0XFF,0XDE,0XFF,
N0XFF,0XFF,0XE7,0X41,0XFF,0XFF,0XFF,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,0XBD,0XF7,
N0XFF,0XFF,0XFE,0XFF,0XFE,0XF7,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XDE,0XFF,
N0XC7,0X39,0XFF,0XFF,0XDE,0XFF,0XFE,0XF7,0XFE,0XFF,0XFE,0XFF,0XDE,0XF7,0XFE,0XFF,
N0XFE,0XFF,0XFF,0XFF,0XDE,0XF7,0XFF,0XFF,0XDF,0XFF,0XFF,0XFF,0XFF,0XFF,0XC8,0X49,
N0XBF,0XFF,0XFF,0XFF,0XFF,0XF7,0XFF,0XFF,0XFF,0XFF,0XDE,0XF7,0XFE,0XFF,0XFF,0XFF,
N0XDE,0XF7,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XBE,0XF7,0X9E,0XFF,0XE7,0X41,0XFF,0XFF,
N0XFF,0XFF,0XDE,0XFF,0XFF,0XFF,0XFF,0XFF,0XDF,0XFF,0XA7,0X41,0XE7,0X49,0XFF,0XFF,
N0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XBE,0XFF,0XE7,0X41,0XFF,0XFF,0XDF,0XFF,
N0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XF7,0XFE,0XF7,0XFE,0XF7,0XFF,0XFF,0XFF,0XF7,
N0XFE,0XF7,0XFE,0XFF,0XFE,0XFF,0XDF,0XFF,0XE8,0X41,0XE8,0X41,0XFF,0XFF,0XDF,0XFF,
N0XFF,0XFF,0XFF,0XFF,0XDF,0XFF,0XDF,0XFF,0XE8,0X49,0X9E,0XFF,0XDF,0XFF,0XFF,0XFF,
N0XFF,0XFF,0XFE,0XFF,0XFE,0XFF,0XFF,0XFF,0XFF,0XFF,0XFE,0XF7,0XFF,0XF7,0XDE,0XF7,
N0XDF,0XFF,0XE8,0X49,0X87,0X39,0XFF,0XFF,0XBF,0XFF,0XDE,0XFF,0XFE,0XFF,0XFE,0XFF,
N0XFE,0XFF,0XFF,0XFF,0XDE,0XF7,0XFF,0XFF,0XFE,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
N0XE8,0X39,0XE9,0X31,0X8F,0X63,0X09,0X3A,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFE,0XFF,
N0XFE,0XFF,0XFE,0XFF,0XFE,0XF7,0XFF,0XF7,0XFE,0XF7,0XFF,0XF7,0XFF,0XF7,0XDF,0XFF,
N0XC8,0X49,0XA7,0X41,0XDF,0XFF,0XFF,0XFF,0XDF,0XF7,0XDF,0XF7,0XFF,0XFF,0XFF,0XFF,
N0XC7,0X39,0XDF,0XFF,0XFF,0XFF,0XDE,0XF7,0XFF,0XFF,0XFE,0XFF,0XFF,0XFF,0XFF,0XFF,
N0XBE,0XF7,0XFF,0XFF,0XFE,0XF7,0XFE,0XFF,0XFF,0XFF,0XFF,0XFF,0XDF,0XFF,0XC7,0X39,
N0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFE,0XF7,0XFE,0XFF,0XFF,0XFF,0XFF,0XFF,0XFE,0XFF,
N0XFF,0XFF,0XFF,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,0XDE,0XFF,0XA7,0X41,0XBF,0XFF,
N0XDF,0XFF,0XFF,0XFF,0XFF,0XFF,0XDE,0XF7,0XFE,0XFF,0XFF,0XFF,0XFE,0XFF,0XFF,0XFF,
N0XFE,0XFF,0XFF,0XFF,0XFF,0XFF,0XDE,0XFF,0XDF,0XFF,0XC7,0X41,0XFF,0XFF,0XDE,0XF7,
N0XFF,0XFF,0XDE,0XFF,0XFF,0XFF,0XFF,0XFF,0XA7,0X49,0XC7,0X49,0XFF,0XFF,0XFF,0XFF,
N0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XBE,0XF7,0X07,0X42,0XFF,0XFF,0XFE,0XFF,0XFE,0XFF,
N0XFE,0XFF,0XFE,0XFF,0XFE,0XF7,0XFF,0XFF,0XFE,0XFF,0XDE,0XFF,0XFF,0XFF,0XFF,0XFF,
N0XFE,0XF7,0XFF,0XFF,0XFF,0XFF,0XE8,0X49,0XA7,0X39,0XC8,0X41,0X09,0X4A,0XA7,0X41,
N0XA8,0X41,0XE8,0X49,0XE8,0X49,0XC7,0X41,0XFF,0XFF,0XFF,0XFF,0XDE,0XFF,0XFF,0XFF,
N0XFF,0XFF,0XDE,0XFF,0XDE,0XFF,0XFF,0XFF,0XFF,0XFF,0XDF,0XFF,0XDF,0XFF,0XDF,0XFF,
N0XE8,0X49,0XC7,0X41,0XDF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFE,0XF7,0XDE,0XFF,0XFF,0XFF,
N0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFE,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XE8,0X39,
N0XE9,0X29,0X70,0X63,0XE9,0X39,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFE,0XFF,0XFE,0XFF,
N0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XF7,0XFF,0XFF,0XFF,0XFF,0X87,0X41,
N0XC8,0X49,0XFF,0XFF,0XDE,0XF7,0XFF,0XFF,0XFF,0XFF,0XDF,0XFF,0XDF,0XFF,0X08,0X42,
N0XFF,0XFF,0XFF,0XF7,0XFF,0XFF,0XDE,0XF7,0XFF,0XFF,0XFF,0XFF,0X08,0X42,0XA6,0X31,
N0XDE,0XF7,0XFE,0XFF,0XFF,0XFF,0XFF,0XFF,0XDF,0XFF,0XFF,0XFF,0XC7,0X39,0XFF,0XFF,
N0XFE,0XFF,0XFF,0XFF,0XFE,0XFF,0XFE,0XFF,0XFF,0XFF,0X07,0X42,0XC6,0X39,0XFF,0XFF,
N0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,0XFF,0XFF,0XE7,0X41,0X9E,0XFF,0XFF,0XFF,
N0XDF,0XF7,0XFF,0XFF,0XFF,0XFF,0XDE,0XF7,0X07,0X42,0X27,0X42,0XFE,0XFF,0XFF,0XFF,
N0XFE,0XFF,0XFE,0XFF,0XFF,0XFF,0XFF,0XFF,0XC7,0X41,0XFF,0XFF,0XFF,0XFF,0XDE,0XF7,
N0XFF,0XFF,0XFF,0XFF,0XFE,0XFF,0XA7,0X41,0XC7,0X49,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
N0XFF,0XFF,0XFE,0XFF,0XBD,0XF7,0X07,0X42,0XFF,0XFF,0XDE,0XFF,0XFE,0XFF,0XFE,0XFF,
N0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,0XFF,0XFF,0XFF,0XFF,0XFE,0XF7,0XFF,0XFF,0XFE,0XFF,
N0XFF,0XFF,0XDF,0XFF,0XC7,0X41,0XA7,0X39,0XDF,0XFF,0X9F,0XFF,0XBF,0XFF,0XBF,0XFF,
N0XDF,0XFF,0XBF,0XFF,0XC7,0X41,0XFF,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,0XDE,0XFF,
N0XFF,0XFF,0XFF,0XFF,0XDE,0XFF,0X08,0X42,0XE8,0X49,0X87,0X41,0XE8,0X51,0XE8,0X49,
N0XA7,0X41,0XFF,0XFF,0XFE,0XFF,0XFE,0XF7,0XFF,0XFF,0XFF,0XFF,0XFE,0XFF,0X28,0X42,
N0XFF,0XFF,0XFF,0XFF,0XFE,0XFF,0XFF,0XFF,0XFE,0XFF,0XFF,0XFF,0XE8,0X39,0X09,0X2A,
N0X8F,0X63,0X09,0X32,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
N0XDF,0XFF,0XDF,0XFF,0XFF,0XFF,0XDF,0XFF,0XBF,0XFF,0XDF,0XFF,0XA8,0X41,0XC8,0X41,
N0XFF,0XFF,0XFE,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0X08,0X3A,0XFF,0XFF,
N0XFF,0XFF,0XFE,0XFF,0XFF,0XFF,0XFF,0XFF,0XDF,0XFF,0XE8,0X41,0XA7,0X39,0XFF,0XFF,
N0XFF,0XFF,0XFE,0XFF,0XFF,0XFF,0XFE,0XFF,0XFF,0XFF,0XC7,0X39,0XFF,0XFF,0XFF,0XFF,
N0XFF,0XFF,0XFE,0XF7,0XFE,0XFF,0XFE,0XFF,0XE7,0X41,0XC7,0X41,0XFF,0XFF,0XFE,0XFF,
N0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,0XFF,0XFF,0XC7,0X39,0XDF,0XFF,0XDF,0XFF,0XDF,0XFF,
N0XFF,0XFF,0XFF,0XFF,0XDF,0XFF,0X07,0X42,0XE7,0X39,0XDE,0XFF,0XFF,0XFF,0XFE,0XFF,
N0XFF,0XFF,0XFF,0XFF,0XDF,0XFF,0XC7,0X39,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
N0XFF,0XF7,0XFF,0XFF,0XE8,0X41,0XE8,0X49,0XDF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFE,0XFF,
N0XFE,0XFF,0XDE,0XFF,0XE7,0X41,0XFF,0XFF,0XFF,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,
N0XFE,0XFF,0XFE,0XF7,0XFF,0XFF,0XFF,0XFF,0XFE,0XF7,0XFE,0XF7,0XFE,0XFF,0XFE,0XFF,
N0XFF,0XFF,0X08,0X42,0XC7,0X41,0XFF,0XFF,0XDF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
N0XFF,0XFF,0XE7,0X41,0XFF,0XFF,0XFF,0XFF,0XFE,0XFF,0XFE,0XFF,0XFF,0XFF,0XFF,0XFF,
N0XDF,0XFF,0XBF,0XFF,0XC8,0X49,0XC8,0X49,0X88,0X49,0XA8,0X49,0XE8,0X49,0XC7,0X41,
N0XFF,0XFF,0XFF,0XFF,0XFE,0XFF,0XFF,0XFF,0XDF,0XFF,0XDF,0XFF,0XA7,0X39,0XDF,0XFF,
N0XFF,0XFF,0XFE,0XFF,0XFE,0XFF,0XFF,0XFF,0XFF,0XFF,0XE8,0X39,0X09,0X2A,0X8F,0X63,
N0X09,0X32,0XFF,0XFF,0XFE,0XFF,0XFE,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0X09,0X42,
N0XA7,0X39,0XE8,0X49,0XC8,0X49,0XC8,0X49,0XE9,0X49,0X09,0X52,0XC8,0X41,0XFF,0XFF,
N0XFE,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XDF,0XFF,0X08,0X42,0XFF,0XFF,0XFF,0XFF,
N0XFE,0XFF,0XFE,0XFF,0XDE,0XFF,0XFF,0XFF,0XE8,0X41,0XA7,0X39,0XFF,0XFF,0XFF,0XFF,
N0XFE,0XFF,0XFF,0XFF,0XFE,0XFF,0XFF,0XFF,0XA7,0X41,0XFF,0XFF,0XFF,0XFF,0XFF,0XF7,
N0XFF,0XFF,0XDE,0XF7,0XDE,0XFF,0X07,0X4A,0XE7,0X41,0XFF,0XFF,0XFF,0XFF,0XFE,0XFF,
N0XFE,0XFF,0XFF,0XFF,0XFF,0XFF,0XC7,0X41,0XFF,0XFF,0XDF,0XFF,0XFF,0XFF,0XFF,0XFF,
N0XFE,0XFF,0XFF,0XFF,0XE7,0X41,0X07,0X42,0XFF,0XFF,0XDE,0XF7,0XFF,0XFF,0XFE,0XF7,
N0XDE,0XF7,0XDF,0XFF,0XE7,0X41,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
N0XFF,0XFF,0XE7,0X41,0XE7,0X41,0XDF,0XFF,0XFF,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,
N0XDE,0XFF,0XE8,0X41,0XFF,0XFF,0XFF,0XFF,0XDE,0XFF,0XFF,0XFF,0XFE,0XFF,0XFF,0XFF,
N0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFE,0XF7,0XFE,0XFF,0XFE,0XFF,0XFF,0XFF,0XFF,0XFF,
N0XE8,0X41,0XC7,0X41,0XFF,0XFF,0XFE,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
N0XE7,0X41,0XFF,0XFF,0XFF,0XFF,0XFE,0XFF,0XFE,0XFF,0XFF,0XFF,0XFF,0XFF,0XE8,0X49,
N0XE8,0X49,0XE9,0X49,0XC9,0X41,0X0A,0X42,0XC9,0X39,0XE9,0X49,0XA7,0X39,0XFF,0XFF,
N0XFE,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XDF,0XFF,0XC8,0X41,0XBF,0XFF,0XFF,0XFF,
N0XFF,0XFF,0XFE,0XFF,0XFF,0XFF,0XFF,0XFF,0XE8,0X39,0X09,0X2A,0X8F,0X63,0X08,0X32,
N0XFF,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,0XFF,0XFF,0XFF,0XFF,0XC7,0X39,0X09,0X4A,
N0XC8,0X41,0XC8,0X41,0XC9,0X41,0XC8,0X41,0XA8,0X41,0XC7,0X41,0XFF,0XFF,0XFE,0XF7,
N0XFF,0XFF,0XDF,0XFF,0XDF,0XFF,0XDF,0XFF,0XE8,0X41,0XDF,0XFF,0XFF,0XFF,0XDF,0XFF,
N0XFF,0XFF,0XDE,0XFF,0XBF,0XFF,0XE8,0X49,0XE8,0X41,0XFF,0XFF,0XFF,0XFF,0XFE,0XFF,
N0XFF,0XFF,0XFE,0XFF,0XFF,0XFF,0XA7,0X41,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XF7,
N0XFF,0XF7,0XFE,0XFF,0XE7,0X41,0X08,0X42,0XFE,0XF7,0XFF,0XF7,0XFE,0XF7,0XFE,0XF7,
N0XFF,0XFF,0XFF,0XFF,0XE8,0X41,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFE,0XFF,
N0XFF,0XFF,0X08,0X42,0XE7,0X41,0XFF,0XFF,0XFF,0XFF,0XFE,0XFF,0XFF,0XF7,0XFF,0XFF,
N0XDF,0XFF,0XC7,0X41,0XFF,0XFF,0XDE,0XF7,0XFF,0XFF,0XDE,0XF7,0XFF,0XFF,0XFE,0XFF,
N0XFF,0XFF,0XDE,0XF7,0XFF,0XFF,0XFE,0XF7,0XFE,0XFF,0XFE,0XFF,0XFF,0XFF,0XDE,0XFF,
N0XE8,0X41,0XFF,0XFF,0XFF,0XFF,0XDE,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XF7,0X08,0X3A,
N0XE7,0X39,0XBE,0XF7,0XFF,0XFF,0XFE,0XFF,0XDE,0XF7,0XFF,0XFF,0XDF,0XFF,0XE8,0X49,
N0XC7,0X41,0XFF,0XFF,0XFE,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XE7,0X41,
N0XFF,0XFF,0XFF,0XFF,0XFE,0XFF,0XFE,0XFF,0XFF,0XFF,0XFF,0XFF,0XC8,0X41,0X09,0X4A,
N0X4B,0X3A,0X36,0X8D,0X36,0X75,0X76,0X85,0XE9,0X31,0XC8,0X41,0XFF,0XFF,0XFE,0XFF,
N0XFF,0XFF,0XFF,0XF7,0XFF,0XF7,0XFF,0XFF,0XA6,0X39,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
N0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XE8,0X39,0X09,0X2A,0X8F,0X63,0X09,0X32,0XFF,0XFF,
N0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,0XFF,0XFF,0XFF,0XFF,0XE8,0X41,0XE8,0X39,0X09,0X32,
N0X2A,0X32,0X4B,0X32,0XE9,0X31,0X09,0X42,0XC7,0X41,0XFF,0XFF,0XFE,0XFF,0XFF,0XFF,
N0XDF,0XFF,0XDF,0XFF,0XDF,0XFF,0XE8,0X41,0XDF,0XFF,0XDE,0XFF,0XDE,0XFF,0XFF,0XFF,
N0XDE,0XFF,0XDF,0XFF,0XC7,0X41,0XE7,0X39,0XFF,0XFF,0XFF,0XFF,0XFE,0XFF,0XFF,0XFF,
N0XFE,0XFF,0XFF,0XFF,0XA7,0X41,0XFF,0XFF,0XFF,0XFF,0XFF,0XF7,0XFF,0XF7,0XFF,0XF7,
N0XFF,0XFF,0XE7,0X41,0XE7,0X41,0XFF,0XFF,0XFF,0XF7,0XFF,0XF7,0XFE,0XF7,0XDF,0XFF,
N0XFF,0XFF,0XE8,0X41,0XFF,0XFF,0XFF,0XFF,0XFE,0XFF,0XFE,0XF7,0XFF,0XFF,0XFF,0XFF,
N0XC7,0X39,0XE8,0X41,0XFF,0XFF,0XDF,0XFF,0XFF,0XFF,0XFF,0XF7,0XDE,0XF7,0XDF,0XFF,
N0XE8,0X49,0XFF,0XFF,0XFF,0XFF,0XFE,0XF7,0XFE,0XFF,0XDE,0XFF,0XDE,0XF7,0XFF,0XF7,
N0XFF,0XF7,0XFF,0XF7,0XFE,0XF7,0XFF,0XFF,0XFE,0XFF,0XFE,0XFF,0XDE,0XF7,0XE7,0X41,
N0XFF,0XFF,0XFF,0XFF,0XFE,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XE7,0X39,0XE7,0X41,
N0XDF,0XFF,0XDE,0XFF,0XDE,0XFF,0XFF,0XFF,0XFF,0XFF,0XDF,0XFF,0XE8,0X49,0XC7,0X41,
N0XFF,0XFF,0XFE,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XE7,0X41,0XFF,0XFF,
N0XFF,0XFF,0XFE,0XFF,0XFE,0XFF,0XFF,0XFF,0XFF,0XFF,0XC8,0X41,0X0A,0X3A,0X2A,0X22,
N0XB8,0X75,0XF8,0X65,0X97,0X6D,0X2A,0X32,0XA8,0X39,0XFF,0XFF,0XFF,0XFF,0XFE,0XF7,
N0XFF,0XFF,0XFE,0XF7,0XDE,0XF7,0XC6,0X39,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
N0XFF,0XFF,0XFF,0XFF,0XE8,0X39,0X09,0X2A,0X90,0X5B,0X09,0X32,0XFF,0XFF,0XFF,0XFF,
N0XFF,0XFF,0XFE,0XFF,0XFF,0XFF,0XFF,0XFF,0X29,0X3A,0X77,0X95,0X76,0X6D,0X97,0X65,
N0XD8,0X65,0X56,0X6D,0X09,0X32,0XC8,0X41,0XFF,0XFF,0XFE,0XFF,0XFF,0XFF,0XFF,0XFF,
N0XFF,0XFF,0XDF,0XFF,0XE8,0X41,0XFF,0XFF,0XFF,0XFF,0XFE,0XFF,0XFF,0XFF,0XDE,0XFF,
N0XFF,0XFF,0XE7,0X41,0XE7,0X41,0XFF,0XFF,0XFF,0XFF,0XFE,0XFF,0XFF,0XFF,0XFE,0XFF,
N0XFF,0XFF,0XA7,0X41,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
N0XA7,0X41,0X86,0X39,0XFF,0XFF,0XDE,0XF7,0XFF,0XFF,0XFF,0XFF,0XDF,0XFF,0XFF,0XFF,
N0XC7,0X41,0XFF,0XFF,0XFF,0XFF,0XFE,0XFF,0XFF,0XFF,0XFE,0XF7,0XFF,0XFF,0X08,0X42,
N0XE7,0X41,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFE,0XFF,0XDE,0XFF,0XDF,0XFF,0XA7,0X41,
N0XFF,0XFF,0XFE,0XF7,0XFE,0XFF,0XFE,0XF7,0XFE,0XF7,0XFE,0XFF,0XFE,0XF7,0XFE,0XF7,
N0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFE,0XF7,0XDE,0XF7,0XE7,0X39,0XFF,0XFF,
N0XFF,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,0XDE,0XFF,0XE7,0X41,0XC7,0X41,0XDE,0XFF,
N0XFE,0XFF,0XFE,0XFF,0XFE,0XF7,0XFF,0XF7,0XFF,0XFF,0XE8,0X41,0XC7,0X41,0XFF,0XFF,
N0XDF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XE7,0X41,0XFF,0XFF,0XFF,0XFF,
N0XFF,0XF7,0XFF,0XF7,0XFF,0XF7,0XFF,0XFF,0XC9,0X41,0X2B,0X32,0X98,0X75,0XB8,0X55,
N0XD8,0X4D,0XD8,0X65,0X4A,0X32,0XA7,0X39,0XDF,0XFF,0XDE,0XFF,0XFE,0XF7,0XFE,0XF7,
N0XFF,0XFF,0XFF,0XFF,0XE7,0X41,0XFF,0XFF,0XFF,0XFF,0XFF,0XF7,0XFF,0XF7,0XFF,0XF7,
N0XFF,0XFF,0X08,0X3A,0X09,0X2A,0X90,0X5B,0X09,0X32,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
N0XFF,0XFF,0XFF,0XFF,0XFF,0XF7,0X0A,0X32,0X36,0X7D,0XB8,0X5D,0XF9,0X4D,0XF8,0X4D,
N0XD8,0X6D,0XC9,0X21,0XE8,0X41,0XFF,0XFF,0XFE,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
N0XDF,0XFF,0X07,0X42,0XFF,0XFF,0XFE,0XFF,0XFE,0XFF,0XDE,0XF7,0XFE,0XFF,0XFE,0XFF,
N0XDE,0XFF,0XBE,0XF7,0XFF,0XFF,0XFF,0XFF,0XFE,0XFF,0XFF,0XFF,0XDE,0XFF,0XDF,0XFF,
N0XA7,0X41,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XDE,0XF7,0XFE,0XFF,0XFF,0XFF,0XBE,0XFF,
N0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XDF,0XFF,0XFF,0XFF,0XC7,0X39,
N0XFF,0XFF,0XFF,0XFF,0XFE,0XF7,0XFD,0XF7,0XFE,0XF7,0XFF,0XFF,0XDE,0XF7,0XDF,0XFF,
N0XFF,0XFF,0XBE,0XF7,0XFE,0XFF,0XFF,0XFF,0XDE,0XFF,0XDF,0XFF,0XA7,0X41,0X08,0X4A,
N0X07,0X42,0XFE,0XF7,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,0XFF,0XFF,0XDF,0XFF,
N0XFF,0XFF,0XFF,0XFF,0XFE,0XF7,0XFE,0XFF,0XDE,0XF7,0X07,0X42,0XFF,0XFF,0XFE,0XFF,
N0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFE,0XFF,
N0XFE,0XFF,0XFF,0XFF,0XFF,0XF7,0XDF,0XFF,0XE8,0X41,0XC7,0X41,0XFF,0XFF,0XDE,0XFF,
N0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XE7,0X41,0XFF,0XFF,0XFF,0XFF,0XFE,0XF7,
N0XFF,0XF7,0XFF,0XF7,0XFF,0XFF,0X09,0X42,0X4B,0X2A,0X98,0X5D,0XF9,0X4D,0XF8,0X45,
N0XF8,0X65,0X09,0X22,0X09,0X4A,0XFF,0XFF,0XFF,0XFF,0XFE,0XFF,0XFF,0XFF,0XDE,0XFF,
N0XDE,0XFF,0XFF,0XFF,0XDF,0XFF,0XFF,0XFF,0XFE,0XF7,0XFF,0XF7,0XFF,0XF7,0XFF,0XFF,
N0X08,0X3A,0X09,0X2A,0X90,0X5B,0X09,0X32,0XFF,0XFF,0XDF,0XFF,0XFF,0XFF,0XFE,0XFF,
N0XFF,0XFF,0XFF,0XF7,0X2A,0X32,0X57,0X85,0XB9,0X65,0XD9,0X4D,0XD9,0X4D,0XB8,0X65,
N0X0A,0X2A,0XE8,0X41,0XFF,0XFF,0XFE,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XDF,0XFF,
N0X07,0X42,0XFF,0XFF,0XFF,0XFF,0XFE,0XFF,0XFF,0XFF,0XDE,0XF7,0XFE,0XFF,0XDE,0XF7,
N0XFF,0XFF,0XDE,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XDE,0XFF,0XDF,0XFF,0XA7,0X41,
N0XFE,0XFF,0XFE,0XFF,0XFF,0XFF,0XFE,0XF7,0XFE,0XF7,0XFE,0XF7,0XBE,0XF7,0XFF,0XFF,
N0XDE,0XF7,0XFF,0XFF,0XFE,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XC7,0X39,0XFF,0XFF,
N0XFF,0XFF,0XFE,0XF7,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,0XFF,0XFF,0XDE,0XFF,0XFE,0XFF,
N0XFF,0XFF,0XFE,0XF7,0XFF,0XFF,0XDE,0XFF,0XFF,0XFF,0X87,0X39,0XA8,0X41,0XE8,0X49,
N0XDF,0XFF,0XFF,0XFF,0XDE,0XFF,0XFE,0XFF,0XFF,0XFF,0XDE,0XFF,0XFF,0XFF,0XFF,0XFF,
N0XFF,0XFF,0XFF,0XFF,0XFE,0XFF,0XDE,0XFF,0XE7,0X41,0XFF,0XFF,0XFF,0XFF,0XFE,0XFF,
N0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,0XFF,0XFF,0XFE,0XFF,0XDD,0XFF,0XFE,0XFF,
N0XFF,0XFF,0XFF,0XF7,0XDF,0XFF,0XE8,0X41,0XC7,0X39,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,
N0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XE7,0X41,0XFF,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,
N0XFE,0XFF,0XFF,0XFF,0XE9,0X39,0X4A,0X2A,0XB9,0X5D,0X1A,0X4E,0XF8,0X45,0XB8,0X65,
N0X6A,0X3A,0XA7,0X39,0XDF,0XFF,0XFE,0XFF,0XBE,0XF7,0XFF,0XFF,0XFE,0XFF,0XFF,0XFF,
N0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFE,0XFF,0XFE,0XFF,0XFF,0XFF,0XFF,0XFF,0XE8,0X39,
N0X09,0X2A,0X8F,0X63,0X09,0X32,0XFF,0XFF,0XDF,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,
N0XFF,0XF7,0X0A,0X32,0X37,0X7D,0X99,0X5D,0XDA,0X4D,0XB9,0X45,0XB8,0X65,0X0A,0X2A,
N0XC8,0X39,0XFF,0XFF,0XFE,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XDF,0XFF,0XE8,0X41,
N0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFE,0XF7,0XFE,0XF7,0XFE,0XFF,
N0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XDE,0XFF,0XFF,0XFF,0XA7,0X41,0XFE,0XFF,
N0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XF7,0XFE,0XFF,0XFE,0XFF,0XDF,0XFF,0XFF,0XFF,
N0XFF,0XFF,0XFE,0XF7,0XFF,0XFF,0XFF,0XFF,0XDF,0XFF,0XA7,0X41,0XFF,0XFF,0XFF,0XFF,
N0XFE,0XF7,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFE,0XF7,
N0XFE,0XF7,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0X09,0X42,0XE9,0X41,0XE9,0X41,0XE9,0X41,
N0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XDF,0XFF,0XBE,0XFF,0XFF,0XFF,0XFF,0XFF,0XFE,0XF7,
N0XFF,0XFF,0XFE,0XFF,0XDE,0XFF,0XE7,0X41,0XFF,0XFF,0XFF,0XFF,0XFE,0XFF,0XFE,0XFF,
N0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XF7,0XFE,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
N0XFF,0XFF,0XDF,0XFF,0XE8,0X49,0XC7,0X39,0XFE,0XFF,0XFE,0XF7,0XFE,0XF7,0XFF,0XFF,
N0XFF,0XFF,0XFF,0XFF,0XC7,0X41,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,0XDE,0XFF,
N0XFF,0XFF,0XE8,0X39,0X6B,0X2A,0XD8,0X5D,0XFA,0X45,0XF9,0X4D,0X98,0X65,0X6B,0X3A,
N0XE8,0X41,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XDE,0XFF,0XFF,0XFF,0XFF,0XFF,0XDF,0XF7,
N0XFF,0XFF,0XFF,0XFF,0XFE,0XFF,0XFE,0XFF,0XFF,0XFF,0XFF,0XFF,0XE8,0X39,0X09,0X2A,
N0XAF,0X63,0XE8,0X31,0XFF,0XFF,0XFF,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,0XFF,0XF7,
N0X09,0X2A,0X77,0X7D,0XB9,0X5D,0XFA,0X4D,0XD9,0X4D,0XB8,0X65,0X2A,0X32,0XC8,0X39,
N0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XBF,0XFF,0XA7,0X41,0XC8,0X41,
N0XC8,0X41,0XBE,0XFF,0XDE,0XF7,0XFF,0XF7,0XFE,0XF7,0XFF,0XFF,0XFF,0XFF,0XFE,0XFF,
N0XFE,0XF7,0XFF,0XFF,0XFF,0XFF,0XDE,0XFF,0XFF,0XFF,0XA6,0X39,0XFF,0XFF,0XFE,0XFF,
N0XDE,0XFF,0XDE,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
N0XFE,0XF7,0XDE,0XF7,0XC8,0X41,0X87,0X41,0X87,0X41,0XDF,0XFF,0XFF,0XF7,0XFF,0XF7,
N0XFE,0XFF,0XFF,0XFF,0XFE,0XFF,0XFE,0XF7,0XFF,0XFF,0XFF,0XF7,0XFE,0XF7,0XFE,0XF7,
N0XFF,0XF7,0XC7,0X39,0X87,0X39,0XA8,0X31,0X56,0X8D,0X15,0X85,0XC9,0X39,0XE9,0X49,
N0XC8,0X41,0XC8,0X41,0XA7,0X41,0XC7,0X41,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFE,0XF7,
N0XFE,0XFF,0XBE,0XF7,0XE8,0X41,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFE,0XFF,
N0XFE,0XFF,0XFF,0XFF,0XFE,0XF7,0XFE,0XFF,0XDE,0XFF,0XFF,0XFF,0XDF,0XFF,0XBF,0XFF,
N0XA8,0X49,0XC8,0X51,0X66,0X31,0XFF,0XFF,0XFE,0XF7,0XFE,0XF7,0XFF,0XFF,0XFF,0XFF,
N0XFF,0XFF,0XC7,0X41,0XFF,0XFF,0XFF,0XFF,0XFE,0XF7,0XFE,0XFF,0XFF,0XFF,0XFF,0XFF,
N0X08,0X3A,0X4A,0X2A,0XD8,0X5D,0XF9,0X45,0XFA,0X4D,0X98,0X65,0X0A,0X2A,0X88,0X39,
N0XE8,0X49,0XDF,0XFF,0XDE,0XFF,0XFE,0XFF,0XFE,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XF7,
N0XFF,0XFF,0XFF,0XFF,0XDE,0XF7,0XFF,0XFF,0XFF,0XFF,0XC7,0X31,0X0A,0X32,0X6E,0X5B,
N0X29,0X3A,0XDF,0XFF,0XFF,0XFF,0XFE,0XFF,0XDE,0XF7,0XFF,0XFF,0XFF,0XFF,0X09,0X32,
N0X77,0X85,0X98,0X5D,0XFA,0X4D,0XB8,0X45,0XB8,0X65,0XE9,0X29,0XC8,0X41,0XFF,0XFF,
N0XDE,0XFF,0XFF,0XFF,0XDF,0XFF,0XDF,0XFF,0XDF,0XFF,0XC8,0X41,0XE9,0X49,0XE8,0X49,
N0XBF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XDE,0XF7,0XFF,0XFF,0XFF,0XF7,
N0XFE,0XFF,0XFF,0XFF,0XBE,0XFF,0XDF,0XFF,0XA7,0X39,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
N0XFF,0XFF,0XFE,0XFF,0XFD,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,0XFF,0XFF,0XFF,0XFF,
N0XFF,0XFF,0XC8,0X41,0XE9,0X49,0XC8,0X49,0XDF,0XFF,0XFF,0XF7,0XFE,0XF7,0XFE,0XFF,
N0XFE,0XFF,0XFF,0XFF,0XFF,0XFF,0XDE,0XF7,0XFF,0XFF,0XFE,0XF7,0XFF,0XF7,0XFF,0XF7,
N0XE8,0X39,0XE9,0X39,0X0A,0X2A,0X77,0X75,0X77,0X75,0X4B,0X32,0XA9,0X31,0XC9,0X41,
N0XC8,0X41,0XC8,0X49,0XC7,0X49,0XDE,0XFF,0XFE,0XF7,0XFE,0XF7,0XFF,0XFF,0XFF,0XFF,
N0XDE,0XFF,0XE8,0X41,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XDE,0XFF,0XFF,0XFF,0XFF,0XFF,
N0XFF,0XF7,0XFF,0XFF,0XFE,0XF7,0XFF,0XFF,0XDE,0XFF,0XFF,0XFF,0XBF,0XFF,0XA8,0X49,
N0XA8,0X49,0XE8,0X41,0XDF,0XFF,0XFE,0XF7,0XFF,0XF7,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
N0XC7,0X41,0XDF,0XFF,0XFE,0XFF,0XFF,0XFF,0XFE,0XF7,0XDF,0XFF,0XFF,0XFF,0X08,0X3A,
N0X6A,0X2A,0XD8,0X5D,0XF9,0X45,0XD9,0X4D,0XB8,0X5D,0X2B,0X22,0X0A,0X3A,0XC9,0X41,
N0XDF,0XFF,0XBF,0XF7,0XFF,0XFF,0XFF,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,0XFF,0XFF,
N0XDE,0XFF,0XFF,0XFF,0XDE,0XFF,0XDF,0XFF,0X08,0X42,0XE9,0X29,0X8F,0X63,0X09,0X3A,
N0XDF,0XFF,0XDF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XF7,0XFF,0XF7,0XE9,0X29,0X57,0X85,
N0XB9,0X5D,0XD9,0X4D,0XD9,0X4D,0XB8,0X65,0X2A,0X2A,0XC8,0X41,0XDF,0XFF,0XDF,0XFF,
N0XDF,0XFF,0XDF,0XFF,0XDF,0XFF,0X9F,0XFF,0XE9,0X49,0XE8,0X41,0XA8,0X39,0XC8,0X41,
N0XFF,0XFF,0XDF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
N0XFF,0XFF,0XDF,0XFF,0XDF,0XFF,0XE8,0X41,0XFF,0XF7,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
N0XFE,0XF7,0XFE,0XFF,0XDE,0XFF,0XFF,0XFF,0XFE,0XFF,0XDF,0XFF,0XDF,0XFF,0XE8,0X41,
N0XE8,0X39,0XE8,0X39,0XA8,0X41,0XDF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFE,0XFF,0XDE,0XFF,
N0XFF,0XFF,0XDE,0XFF,0XBE,0XFF,0XBF,0XFF,0XDF,0XFF,0XDF,0XFF,0XE8,0X41,0X29,0X3A,
N0X6B,0X2A,0X77,0X75,0XF8,0X65,0XB7,0X5D,0X97,0X75,0X4B,0X2A,0X0A,0X42,0XE9,0X51,
N0XE8,0X49,0XC7,0X41,0XFF,0XFF,0XFE,0XFF,0XFF,0XFF,0XDE,0XF7,0XBD,0XF7,0XFF,0XFF,
N0XE8,0X49,0XFF,0XFF,0XDF,0XFF,0XFF,0XFF,0XDF,0XFF,0XDF,0XFF,0XFF,0XFF,0XFF,0XFF,
N0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XDF,0XFF,0XC7,0X39,0X09,0X42,0XE9,0X41,0XE9,0X41,
N0X87,0X39,0XDF,0XFF,0XDF,0XFF,0XBF,0XFF,0XFF,0XFF,0XDF,0XFF,0XDF,0XFF,0XE8,0X49,
N0XFF,0XFF,0XDF,0XFF,0XFF,0XFF,0XFF,0XFF,0XDF,0XFF,0XFF,0XFF,0X08,0X3A,0X4A,0X2A,
N0XB8,0X5D,0XF9,0X45,0X1A,0X4E,0XD9,0X4D,0XD8,0X6D,0X56,0X7D,0XEA,0X31,0XA8,0X39,
N0XE8,0X39,0XFF,0XFF,0XFE,0XFF,0XFF,0XFF,0XDE,0XFF,0XFF,0XFF,0XFF,0XFF,0XDF,0XFF,
N0XFF,0XFF,0XDF,0XFF,0XDF,0XFF,0XE8,0X41,0X09,0X32,0X8F,0X63,0XA8,0X31,0X0A,0X4A,
N0XE8,0X49,0XC7,0X39,0XC7,0X39,0XE8,0X41,0X09,0X3A,0X2A,0X3A,0X57,0X85,0XB8,0X5D,
N0XF9,0X4D,0XF9,0X4D,0XB7,0X5D,0X0A,0X2A,0XE9,0X49,0XC8,0X41,0XC8,0X41,0XC8,0X49,
N0XC8,0X49,0XC8,0X49,0XA8,0X41,0X09,0X42,0XF4,0X94,0X15,0X9D,0X09,0X3A,0X09,0X4A,
N0XA8,0X41,0XC8,0X41,0XC8,0X41,0XC7,0X41,0XC7,0X41,0XE8,0X41,0XC8,0X41,0XC8,0X49,
N0XC8,0X49,0XA7,0X41,0XA8,0X41,0XFF,0XFF,0XFF,0XF7,0XFF,0XFF,0XFF,0XF7,0XFF,0XFF,
N0XFE,0XFF,0XC6,0X39,0XC7,0X41,0XE7,0X41,0XC7,0X41,0XA7,0X39,0XE9,0X41,0XD4,0X8C,
N0XF4,0X8C,0X09,0X42,0XBF,0XFF,0XDF,0XFF,0XFF,0XFF,0XFE,0XFF,0XFF,0XFF,0XDE,0XF7,
N0XE8,0X41,0X09,0X4A,0XC8,0X49,0XC8,0X49,0X2A,0X52,0XC9,0X31,0X15,0X85,0XB8,0X75,
N0X97,0X5D,0XF9,0X55,0XD8,0X55,0X77,0X65,0X6B,0X22,0XC9,0X31,0X7F,0XFF,0XDF,0XFF,
N0X9E,0XFF,0XFF,0XFF,0XFF,0XFF,0XFE,0XF7,0XFF,0XFF,0XFF,0XFF,0XBE,0XFF,0X87,0X41,
N0XC8,0X49,0XE8,0X41,0X87,0X39,0X08,0X4A,0XA7,0X41,0XA8,0X41,0XA7,0X41,0XC7,0X41,
N0XC7,0X41,0XE8,0X49,0XA7,0X39,0X09,0X3A,0X09,0X32,0X36,0X95,0XE9,0X39,0X2A,0X52,
N0XA8,0X49,0XC8,0X51,0XA7,0X49,0XA8,0X49,0XC8,0X49,0X09,0X52,0XC8,0X49,0XC8,0X41,
N0XC8,0X41,0XE8,0X41,0XE8,0X41,0XC8,0X39,0XE8,0X39,0XE9,0X41,0X4A,0X2A,0XB8,0X5D,
N0XF9,0X4D,0XFA,0X45,0XD9,0X45,0XD8,0X55,0X97,0X65,0X37,0X85,0X2A,0X32,0X09,0X3A,
N0XC8,0X39,0XE8,0X41,0XE7,0X41,0XC7,0X49,0XC7,0X49,0XA7,0X41,0XE8,0X49,0XA7,0X41,
N0XA7,0X41,0XC8,0X49,0X4A,0X52,0XA8,0X29,0X6F,0X63,0XEA,0X39,0XCA,0X49,0X88,0X49,
N0X0A,0X52,0XA8,0X41,0XC9,0X49,0XEA,0X41,0XC9,0X31,0X37,0X85,0XB7,0X5D,0X18,0X4E,
N0XD7,0X3D,0XD8,0X65,0X2B,0X32,0XA9,0X49,0X88,0X41,0XA9,0X49,0XA9,0X49,0X88,0X49,
N0X89,0X49,0XA9,0X39,0X2A,0X2A,0X76,0X85,0X76,0X85,0X2A,0X2A,0XEA,0X39,0XEA,0X49,
N0XA9,0X49,0XC9,0X51,0XC9,0X51,0XC9,0X49,0XC9,0X51,0XA9,0X49,0XC9,0X51,0XE9,0X51,
N0XA9,0X49,0XC8,0X49,0XDF,0XFF,0XFF,0XFF,0XDF,0XF7,0XFF,0XF7,0XFF,0XFF,0XFF,0XFF,
N0XC7,0X41,0XE8,0X49,0XC8,0X41,0XE9,0X41,0X0A,0X3A,0X2A,0X2A,0X76,0X7D,0X76,0X85,
N0XE9,0X31,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFE,0XFF,0XFF,0XFF,0XFF,0XFF,0XA7,0X39,
N0XA8,0X41,0XC9,0X51,0XA9,0X41,0XE9,0X39,0X2A,0X22,0X77,0X6D,0XD8,0X5D,0X19,0X56,
N0XD9,0X4D,0XD9,0X55,0X98,0X65,0X0A,0X12,0X0A,0X3A,0XDF,0XFF,0X9E,0XF7,0XFF,0XFF,
N0XFE,0XFF,0XFF,0XFF,0XFE,0XFF,0XFE,0XF7,0XFE,0XFF,0XBE,0XFF,0XC8,0X51,0XA8,0X51,
N0XA8,0X49,0XE9,0X51,0XC9,0X49,0XC9,0X49,0XEA,0X51,0XC9,0X51,0XC9,0X51,0XC9,0X49,
N0XC9,0X49,0XA8,0X31,0X6A,0X32,0X29,0X1A,0X15,0X7D,0XE9,0X21,0X88,0X31,0XC9,0X51,
N0X88,0X51,0XA8,0X59,0X68,0X49,0X88,0X49,0XC9,0X49,0X87,0X41,0XE9,0X51,0XC8,0X51,
N0XC8,0X49,0XC8,0X49,0XC9,0X49,0XC9,0X41,0XEA,0X49,0X2B,0X32,0X98,0X65,0XD9,0X4D,
N0XFA,0X45,0XFA,0X45,0XD9,0X4D,0XD9,0X5D,0X97,0X65,0X4B,0X12,0X2B,0X32,0X0A,0X42,
N0XC9,0X41,0XE9,0X51,0XA8,0X49,0XC9,0X51,0XC9,0X51,0X88,0X49,0XC9,0X49,0XE9,0X51,
N0XE9,0X51,0XC9,0X41,0XA9,0X31,0X90,0X53,0X2B,0X2A,0XEA,0X31,0X0A,0X3A,0XCA,0X39,
N0XEA,0X39,0X2B,0X3A,0XEA,0X29,0XEA,0X21,0X57,0X75,0XD8,0X55,0X18,0X46,0X39,0X4E,
N0XB8,0X55,0X4B,0X22,0XCA,0X31,0X0A,0X3A,0XEA,0X39,0XEA,0X39,0XEA,0X39,0X0B,0X3A,
N0X6C,0X32,0X6B,0X12,0X76,0X6D,0XB7,0X6D,0X77,0X75,0X4B,0X2A,0XEB,0X31,0XCA,0X31,
N0XEA,0X39,0X0A,0X3A,0XEA,0X39,0X0B,0X42,0XCA,0X39,0XEA,0X39,0XC9,0X39,0XA9,0X41,
N0XE9,0X49,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFE,0XF7,0XFF,0XFF,0X09,0X42,
N0X0A,0X42,0XE9,0X39,0X0A,0X2A,0X4B,0X22,0X36,0X6D,0X76,0X65,0X97,0X75,0XE9,0X29,
N0XBF,0XFF,0XFF,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,0XDF,0XFF,0XE8,0X41,0XE9,0X41,
N0XC9,0X39,0X0A,0X32,0X6B,0X2A,0X57,0X6D,0XB8,0X5D,0XD8,0X4D,0XD9,0X45,0XD9,0X45,
N0XD9,0X55,0XB8,0X6D,0X4A,0X1A,0X09,0X3A,0XDF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
N0XDE,0XFF,0XFE,0XF7,0XFF,0XFF,0XFF,0XFF,0XDF,0XFF,0XE9,0X51,0XC9,0X49,0XE9,0X41,
N0XE9,0X39,0XC9,0X31,0X2A,0X3A,0XA9,0X31,0X0B,0X42,0XEA,0X39,0XEA,0X31,0X0A,0X3A,
N0X2A,0X2A,0X77,0X75,0XB8,0X75,0X56,0X65,0XCC,0X22,0X4B,0X32,0XC9,0X31,0XA9,0X39,
N0XCA,0X41,0X0A,0X42,0X0A,0X3A,0X0A,0X3A,0X2A,0X3A,0XE9,0X39,0X0A,0X3A,0X2A,0X42,
N0XE9,0X39,0X0A,0X3A,0XEA,0X31,0X4B,0X3A,0X2B,0X1A,0X98,0X5D,0XD9,0X45,0XFA,0X45,
N0X1A,0X46,0XD9,0X4D,0XD9,0X4D,0X19,0X5E,0XD8,0X65,0X37,0X75,0X4C,0X32,0XCA,0X29,
N0XEA,0X39,0XEA,0X39,0X0A,0X3A,0XEB,0X39,0XCA,0X39,0XEA,0X39,0XEA,0X39,0XC9,0X31,
N0XE9,0X31,0X4B,0X2A,0X98,0X65,0X98,0X6D,0XB8,0X75,0X78,0X75,0XB9,0X7D,0X57,0X6D,
N0X77,0X75,0X98,0X75,0X98,0X6D,0XD8,0X65,0XF9,0X4D,0XF9,0X45,0XD9,0X45,0XD9,0X55,
N0XB9,0X6D,0X98,0X75,0XB8,0X75,0X57,0X6D,0X77,0X6D,0X98,0X75,0X98,0X75,0X77,0X65,
N0X1A,0X6E,0XD8,0X5D,0X98,0X55,0XB9,0X5D,0X98,0X65,0XB9,0X75,0XB9,0X75,0XD8,0X75,
N0X97,0X75,0XB8,0X75,0X98,0X75,0X98,0X75,0X97,0X75,0X77,0X85,0X56,0X9D,0XC8,0X39,
N0XDE,0XFF,0XFE,0XFF,0XDE,0XFF,0XDE,0XF7,0XFF,0XFF,0XDF,0XF7,0X09,0X3A,0X4B,0X32,
N0X15,0X7D,0X97,0X75,0X97,0X5D,0XB8,0X5D,0XB7,0X5D,0X97,0X75,0X2A,0X32,0XBF,0XFF,
N0XDE,0XF7,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,0XDF,0XFF,0X08,0X3A,0X09,0X2A,0X56,0X85,
N0X97,0X75,0X77,0X5D,0X19,0X5E,0XB8,0X45,0XFA,0X4D,0XFA,0X45,0XFA,0X4D,0XD9,0X55,
N0X98,0X65,0X6A,0X12,0X29,0X3A,0XDF,0XFF,0XFE,0XFF,0XFE,0XFF,0XFF,0XFF,0XFF,0XFF,
N0XFF,0XFF,0XDF,0XF7,0XC8,0X41,0XC8,0X41,0XE9,0X39,0X36,0X8D,0X97,0X7D,0XB7,0X75,
N0XD8,0X75,0X97,0X75,0XB8,0X75,0XB9,0X7D,0XD9,0X75,0XB8,0X75,0XB8,0X75,0XB9,0X6D,
N0X78,0X5D,0XB9,0X55,0XD9,0X5D,0XB8,0X5D,0XB9,0X6D,0XB9,0X75,0X77,0X75,0X77,0X75,
N0X98,0X75,0X77,0X6D,0XB8,0X75,0XD9,0X75,0X97,0X6D,0XB8,0X75,0XB8,0X75,0XB8,0X75,
N0XB8,0X75,0XB8,0X75,0XB8,0X6D,0XD8,0X65,0XF9,0X55,0XF9,0X4D,0X1A,0X46,0XFA,0X45,
N0XD9,0X45,0XF9,0X4D,0XD8,0X4D,0XF8,0X5D,0X97,0X5D,0X98,0X6D,0XB9,0X75,0X99,0X75,
N0X98,0X75,0X98,0X75,0X98,0X75,0X78,0X75,0X98,0X75,0XB8,0X75,0XB7,0X7D,0X97,0X75,
N0XB8,0X65,0XD8,0X55,0X19,0X5E,0XD8,0X55,0XB8,0X55,0XB8,0X55,0XB8,0X55,0X98,0X55,
N0X98,0X55,0X98,0X4D,0XF9,0X55,0XF9,0X4D,0XF9,0X45,0XFA,0X4D,0XFA,0X4D,0XB9,0X55,
N0XB8,0X55,0XB8,0X55,0XB8,0X55,0XD8,0X55,0XD9,0X55,0XB8,0X55,0XF9,0X55,0XD9,0X4D,
N0XD9,0X4D,0XD9,0X4D,0XFA,0X4D,0XD9,0X4D,0XD9,0X55,0XD9,0X55,0XD9,0X55,0XD8,0X55,
N0XF9,0X55,0XB8,0X4D,0XB8,0X55,0XF8,0X5D,0XD7,0X6D,0X56,0X85,0XE8,0X31,0XFF,0XFF,
N0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0X09,0X32,0X4B,0X2A,0X77,0X75,
N0X98,0X5D,0XD9,0X55,0XF8,0X4D,0XB8,0X55,0X97,0X75,0XEA,0X31,0XDF,0XFF,0XFF,0XFF,
N0XFF,0XFF,0XFE,0XFF,0XFF,0XFF,0XFF,0XFF,0X08,0X32,0X6A,0X2A,0XB7,0X75,0XF8,0X65,
N0XF8,0X4D,0XF9,0X4D,0XF9,0X45,0XFA,0X45,0XFA,0X4D,0XD9,0X45,0XFA,0X55,0X97,0X5D,
N0X4A,0X12,0X29,0X3A,0XFF,0XFF,0XDE,0XFF,0XFF,0XFF,0XBE,0XFF,0XFF,0XFF,0XDF,0XFF,
N0XBF,0XF7,0XC9,0X39,0XEA,0X31,0X4C,0X32,0X57,0X75,0X97,0X55,0XF8,0X55,0XD8,0X55,
N0XD8,0X55,0XB8,0X55,0X98,0X55,0XD8,0X55,0XD8,0X55,0XF9,0X5D,0XD9,0X55,0XD9,0X4D,
N0XD9,0X4D,0XD9,0X4D,0XFA,0X4D,0XD9,0X55,0XB8,0X55,0XD9,0X55,0XD9,0X5D,0X98,0X4D,
N0XD8,0X55,0XB8,0X55,0XB8,0X4D,0XD8,0X55,0XB8,0X55,0XD8,0X55,0XD9,0X55,0XB8,0X4D,
N0XF9,0X55,0X19,0X56,0XF9,0X4D,0XF9,0X4D,0XF9,0X45,0X1A,0X46,0X1A,0X46,0X19,0X46,
N0X19,0X4E,0XF9,0X4D,0XD8,0X4D,0XF9,0X55,0XD9,0X55,0XF9,0X5D,0XD9,0X5D,0X98,0X4D,
N0XD9,0X55,0X98,0X55,0XB9,0X55,0XF9,0X55,0XB8,0X4D,0XD8,0X5D,0XB8,0X55,0XF9,0X55,
N0XD9,0X4D,0XD9,0X4D,0XD9,0X4D,0XD9,0X4D,0XD9,0X4D,0XD9,0X4D,0XD9,0X4D,0XD9,0X4D,
N0XD9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XD9,0X4D,0XD9,0X4D,0XF9,0X4D,0XF9,0X4D,0XD9,0X4D,
N0XF9,0X4D,0XFA,0X4D,0XFA,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XD9,0X4D,0XB9,0X4D,0XF9,0X55,0XB8,0X5D,0X77,0X7D,0X09,0X2A,0XFF,0XFF,0XDF,0XFF,
N0XDF,0XFF,0XDF,0XFF,0XDF,0XFF,0XDF,0XFF,0X09,0X3A,0X6B,0X2A,0XB8,0X65,0XF9,0X55,
N0XF9,0X4D,0XF9,0X4D,0XD9,0X55,0XB8,0X75,0X0A,0X32,0XBF,0XFF,0XFF,0XFF,0XBF,0XFF,
N0XDF,0XFF,0XDF,0XFF,0XBF,0XFF,0X09,0X3A,0X4A,0X22,0X97,0X6D,0XD8,0X55,0XD9,0X45,
N0XF9,0X45,0XF9,0X45,0XFA,0X4D,0XD9,0X45,0XFA,0X4D,0XD9,0X55,0X98,0X65,0X4B,0X1A,
N0X09,0X3A,0XDF,0XFF,0XDF,0XFF,0XBF,0XFF,0XDF,0XFF,0XDF,0XFF,0XDF,0XFF,0X4B,0X42,
N0X2B,0X3A,0X6D,0X32,0X78,0X6D,0XB8,0X5D,0X19,0X56,0X19,0X4E,0XD8,0X45,0XF9,0X4D,
N0XD9,0X55,0XD9,0X55,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X45,0XF9,0X45,
N0XF9,0X4D,0XD9,0X4D,0XD9,0X4D,0XD9,0X4D,0XD9,0X4D,0XD9,0X4D,0XD9,0X4D,0XD9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X45,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XD9,0X4D,0XD9,0X4D,0XD9,0X4D,0XD9,0X4D,0XD9,0X4D,0XD9,0X4D,
N0XD9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XD9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X45,
N0XF9,0X45,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X45,
N0XF9,0X45,0XF9,0X4D,0XF9,0X45,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X45,0XF9,0X4D,
N0XF9,0X4D,0XD9,0X4D,0XB8,0X5D,0X98,0X7D,0XC8,0X21,0X4A,0X4A,0XA7,0X41,0XE8,0X41,
N0XA8,0X41,0XC8,0X41,0XC8,0X41,0XC8,0X31,0X4B,0X2A,0XB8,0X5D,0XD9,0X45,0XD9,0X45,
N0XB9,0X4D,0XD9,0X5D,0X78,0X75,0X0A,0X32,0XC9,0X49,0XC8,0X41,0XC8,0X41,0XA8,0X41,
N0XC8,0X41,0XC8,0X41,0XE9,0X39,0X8C,0X2A,0XB8,0X6D,0XD9,0X55,0XF9,0X45,0XFA,0X45,
N0XF9,0X4D,0XFA,0X4D,0XD9,0X4D,0XFA,0X4D,0XD9,0X55,0X98,0X65,0X4B,0X1A,0X09,0X42,
N0XA7,0X41,0X86,0X39,0XC8,0X41,0XC8,0X49,0XC8,0X41,0XE9,0X41,0X0A,0X32,0X79,0X8D,
N0X58,0X75,0XD9,0X65,0XD8,0X4D,0XD8,0X3D,0X19,0X46,0XFA,0X45,0XFA,0X4D,0XD9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X45,0XF9,0X45,0XF9,0X45,0XF9,0X45,0XF9,0X45,0XFA,0X4D,
N0XFA,0X4D,0XFA,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X45,0XF9,0X45,0XF9,0X45,
N0XF9,0X45,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X45,0XF9,0X45,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X45,0XF9,0X45,
N0XD9,0X45,0XF9,0X45,0XF9,0X45,0XF9,0X45,0XF9,0X45,0XF9,0X45,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XFA,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X45,0XF9,0X45,0XF9,0X45,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XFA,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X45,0XD9,0X45,0XFA,0X4D,
N0XD9,0X4D,0X98,0X55,0X77,0X7D,0X09,0X2A,0XC8,0X39,0X09,0X4A,0XE8,0X49,0XC8,0X41,
N0XE9,0X49,0XE8,0X49,0XC8,0X39,0X2A,0X22,0XB9,0X65,0XFA,0X4D,0XFA,0X4D,0XD9,0X4D,
N0XB8,0X55,0X77,0X6D,0X2A,0X3A,0XA8,0X41,0XC8,0X49,0XE8,0X49,0XE9,0X49,0XE9,0X49,
N0X67,0X39,0X2A,0X42,0X2A,0X1A,0X77,0X65,0XD9,0X55,0XD9,0X45,0XFA,0X4D,0XF9,0X4D,
N0XFA,0X4D,0XD9,0X4D,0XFA,0X4D,0XD9,0X55,0XB9,0X65,0X4B,0X1A,0XE9,0X39,0XE8,0X49,
N0XE8,0X49,0XE8,0X49,0XC8,0X49,0XC8,0X41,0XC9,0X39,0XE9,0X29,0X37,0X75,0XB9,0X65,
N0XD8,0X55,0X19,0X4E,0X19,0X46,0X19,0X46,0XD9,0X45,0XD9,0X4D,0XD9,0X4D,0XF9,0X4D,
N0XF9,0X45,0XF9,0X45,0XD9,0X4D,0XF9,0X4D,0XD9,0X4D,0XD9,0X4D,0XD9,0X4D,0XF9,0X45,
N0XF9,0X45,0XF9,0X45,0XF9,0X45,0XF9,0X45,0XF9,0X45,0XF9,0X45,0XF9,0X45,0XF9,0X45,
N0XF9,0X45,0XF9,0X45,0XF9,0X45,0XF9,0X45,0XF9,0X45,0XF9,0X45,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X45,0XF9,0X45,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X45,0XF9,0X45,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XFA,0X45,0XFA,0X45,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0X1A,0X4E,0XFA,0X4D,0XD9,0X4D,
N0XD8,0X5D,0X98,0X85,0X09,0X32,0X09,0X42,0XC8,0X41,0XE8,0X49,0XE8,0X49,0XC8,0X49,
N0XC8,0X41,0XC9,0X39,0X6B,0X2A,0XB8,0X5D,0XF9,0X4D,0X1A,0X4E,0XB8,0X45,0XF9,0X5D,
N0X77,0X6D,0XC9,0X31,0XE9,0X51,0XE9,0X49,0XC8,0X49,0XC8,0X49,0XE9,0X49,0XE9,0X49,
N0XC8,0X39,0X4B,0X22,0X98,0X6D,0XD9,0X55,0XFA,0X45,0XFA,0X4D,0XF9,0X4D,0XFA,0X4D,
N0XF9,0X4D,0XFA,0X4D,0XD9,0X55,0XB9,0X65,0X4B,0X1A,0X29,0X42,0XA7,0X49,0XC8,0X49,
N0XC8,0X49,0XC8,0X49,0X87,0X41,0X2A,0X4A,0X36,0X8D,0X98,0X75,0XD8,0X5D,0XF9,0X4D,
N0XD8,0X45,0X19,0X46,0X1A,0X4E,0XD9,0X45,0XFA,0X4D,0XD9,0X4D,0XFA,0X4D,0XF9,0X45,
N0XF9,0X45,0XF9,0X4D,0XD9,0X4D,0XD9,0X55,0XD9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X45,0XF9,0X45,0XF9,0X45,0XF9,0X45,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,};
L 4 "app\game.c" 2
N#include "flappybird_button_play.c"
L 1 ".\app\RES\Pic\flappybird_button_play.c" 1
Nconst unsigned char gImage_flappybird_button_play[6864] = { /* 0X00,0X10,0X4E,0X00,0X2C,0X00,0X01,0X1B, */
N0XD9,0X4D,0X1A,0X4E,0XF9,0X45,0X19,0X4E,0XF9,0X55,0XB7,0X65,0X09,0X2A,0XE8,0X41,
N0XC7,0X41,0XC7,0X41,0XC8,0X49,0XC8,0X41,0XC8,0X41,0XC8,0X41,0XC8,0X41,0XC7,0X41,
N0XC8,0X49,0XC8,0X49,0XC8,0X49,0XC7,0X41,0XC8,0X49,0XE8,0X49,0XE8,0X49,0XC7,0X41,
N0XC8,0X49,0XC8,0X49,0XC8,0X49,0XC8,0X49,0XC8,0X49,0XC8,0X49,0XC8,0X49,0XC8,0X49,
N0XC8,0X49,0XC8,0X49,0XC8,0X49,0XC8,0X49,0XE8,0X41,0XE8,0X41,0XC7,0X49,0XC7,0X49,
N0XC7,0X49,0XC7,0X49,0XA8,0X49,0XA8,0X49,0XC8,0X49,0XC7,0X49,0XC7,0X49,0XC7,0X49,
N0XC7,0X49,0XC7,0X49,0XC7,0X49,0XC7,0X49,0XC7,0X49,0XC7,0X49,0XC7,0X49,0XC7,0X49,
N0XC7,0X49,0XC7,0X49,0XC7,0X49,0XC7,0X49,0XC7,0X49,0XC7,0X49,0XC7,0X49,0XC7,0X49,
N0XC7,0X49,0XC7,0X49,0XE7,0X41,0XE7,0X41,0XE7,0X41,0XC7,0X49,0XA8,0X51,0X09,0X3A,
N0XD7,0X65,0XF8,0X45,0XF9,0X4D,0XD9,0X45,0XF9,0X4D,0X1A,0X56,0XF9,0X55,0XB8,0X4D,
N0XB9,0X55,0XD8,0X5D,0X97,0X5D,0X96,0X75,0X29,0X32,0X87,0X39,0XA6,0X39,0XA6,0X39,
N0XA7,0X39,0XA7,0X41,0XA7,0X39,0XC7,0X39,0XC7,0X39,0XC7,0X41,0XA7,0X39,0XA7,0X39,
N0X87,0X39,0X86,0X39,0XA7,0X39,0XA7,0X41,0XA7,0X41,0X86,0X39,0XA7,0X41,0XA7,0X41,
N0XA7,0X41,0XA7,0X41,0XA7,0X41,0XA7,0X41,0XA7,0X41,0XA7,0X41,0XC7,0X41,0XA7,0X41,
N0XC8,0X41,0XA7,0X41,0XC7,0X39,0XC7,0X39,0XC6,0X41,0XC6,0X41,0XC6,0X41,0XC7,0X41,
N0XA7,0X41,0XA8,0X41,0XC7,0X41,0XC7,0X41,0XC6,0X41,0XC6,0X41,0XC7,0X41,0XC7,0X41,
N0XC7,0X41,0XC7,0X41,0XC7,0X41,0XC7,0X41,0XC7,0X41,0XC7,0X41,0XC7,0X41,0XC7,0X41,
N0XC7,0X41,0XC7,0X41,0XC7,0X41,0XC7,0X41,0XC7,0X41,0XC7,0X41,0XA7,0X41,0XA6,0X41,
N0XC7,0X39,0XC7,0X39,0XC6,0X39,0XA6,0X41,0X87,0X41,0XC8,0X31,0X76,0X6D,0XD8,0X5D,
N0XD9,0X5D,0XF9,0X5D,0XB8,0X55,0XB8,0X4D,0XB8,0X5D,0XB8,0X65,0X77,0X7D,0X09,0X1A,
N0X29,0X2A,0X29,0X32,0XBF,0XF7,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
N0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
N0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
N0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
N0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
N0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
N0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
N0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
N0XFF,0XFF,0XFF,0XFF,0XDF,0XFF,0XFF,0XFF,0X09,0X2A,0XE9,0X19,0X2A,0X1A,0X77,0X6D,
N0X97,0X5D,0XF8,0X5D,0X97,0X65,0XAB,0X1A,0X2A,0X2A,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
N0XFF,0XFF,0XDE,0XFF,0XFF,0XFF,0XFF,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,
N0XFE,0XF7,0XFE,0XF7,0XFE,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
N0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
N0XFF,0XFF,0XFF,0XFF,0XFE,0XFF,0XFE,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XF7,0XFE,0XF7,
N0XFE,0XFF,0XFE,0XFF,0XFE,0XF7,0XFF,0XF7,0XFF,0XF7,0XFF,0XF7,0XFF,0XF7,0XFF,0XF7,
N0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
N0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
N0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XF7,0XFF,0XFF,
N0XDF,0XFF,0XDF,0XFF,0XDF,0XFF,0XFF,0XFF,0XFF,0XF7,0X29,0X22,0XEC,0X1A,0XB7,0X5D,
N0X76,0X75,0XAB,0X2A,0XC7,0X29,0XFF,0XFF,0XFE,0XFF,0XFE,0XFF,0XDE,0XF7,0XFF,0XF7,
N0XFF,0XFF,0XFF,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,0XFF,0XFF,0XFF,0XF7,
N0XFF,0XF7,0XFF,0XF7,0XFF,0XF7,0XFF,0XF7,0XFF,0XF7,0XFF,0XF7,0XFF,0XF7,0XFF,0XF7,
N0XFF,0XF7,0XFE,0XF7,0XFF,0XF7,0XFE,0XF7,0XFF,0XF7,0XFE,0XF7,0XFF,0XF7,0XFE,0XFF,
N0XFE,0XFF,0XFE,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFE,0XFF,
N0XFE,0XFF,0XFE,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XF7,0XFF,0XF7,0XFF,0XF7,0XFF,0XFF,
N0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
N0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XF7,
N0XFE,0XF7,0XFE,0XF7,0XFF,0XFF,0XDF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFE,0XFF,0XFE,0XFF,
N0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0X28,0X32,0X49,0X12,0X96,0X6D,0X35,0X85,0X29,0X2A,
N0XE7,0X31,0XFF,0XFF,0XFE,0XFF,0XFE,0XFF,0XFF,0XFF,0XFF,0XF7,0XFE,0XFF,0XFE,0XFF,
N0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XF7,0XFF,0XF7,0XFE,0XF7,0XFE,0XF7,
N0XFE,0XF7,0XFE,0XF7,0XFE,0XF7,0XFE,0XF7,0XFE,0XF7,0XFE,0XF7,0XFE,0XF7,0XFE,0XF7,
N0XFE,0XF7,0XFE,0XF7,0XFE,0XF7,0XFE,0XF7,0XFE,0XF7,0XFE,0XF7,0XFE,0XFF,0XFE,0XFF,
N0XFE,0XFF,0XFE,0XFF,0XFF,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,
N0XFE,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XF7,0XFF,0XF7,0XFF,0XF7,0XFF,0XF7,0XFF,0XF7,
N0XFF,0XF7,0XFF,0XF7,0XFF,0XF7,0XFF,0XF7,0XFF,0XF7,0XFF,0XF7,0XFF,0XF7,0XFF,0XF7,
N0XFF,0XF7,0XFF,0XF7,0XFF,0XF7,0XFF,0XF7,0XFF,0XF7,0XFE,0XF7,0XFE,0XF7,0XFE,0XF7,
N0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFE,0XFF,0XFE,0XFF,0XFD,0XF7,
N0XFF,0XFF,0XE7,0X31,0XE8,0X21,0X55,0X85,0X28,0X3A,0XFF,0XF7,0XFF,0XF7,0XFF,0XF7,
N0XFE,0XF7,0XFF,0XF7,0XFE,0XF7,0XFE,0XF7,0XFE,0XFF,0XFE,0XFF,0XFE,0XF7,0XFE,0XF7,
N0XFE,0XFF,0XFE,0XF7,0XFF,0XF7,0XFF,0XF7,0XFF,0XF7,0XFE,0XF7,0XFE,0XFF,0XFE,0XF7,
N0XFE,0XFF,0XFE,0XF7,0XFE,0XFF,0XFE,0XF7,0XFE,0XFF,0XFE,0XF7,0XFE,0XFF,0XFE,0XF7,
N0XFE,0XFF,0XFE,0XF7,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,0XFF,0XF7,0XFF,0XF7,
N0XFF,0XF7,0XFF,0XFF,0XFF,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,
N0XFE,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XF7,0XFF,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,
N0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,
N0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,
N0XFF,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,0XFF,0XFF,0XFF,0XF7,
N0XFF,0XFF,0XC8,0X31,0XA6,0X39,0XFF,0XFF,0XFF,0XF7,0XFF,0XF7,0XFF,0XF7,0XFF,0XF7,
N0XFE,0XF7,0XFF,0XFF,0XFE,0XFF,0XFE,0XF7,0XFE,0XF7,0XFF,0XF7,0XFF,0XF7,0XFF,0XFF,
N0XFF,0XF7,0XFF,0XF7,0XFE,0XFF,0XFE,0XF7,0XFE,0XF7,0XFE,0XFF,0XFE,0XFF,0XFE,0XF7,
N0XFE,0XF7,0XFE,0XFF,0XFE,0XF7,0XFE,0XFF,0XFE,0XFF,0XFE,0XF7,0XFE,0XF7,0XFE,0XFF,
N0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XF7,0XFF,0XF7,0XFF,0XF7,0XFF,0XFF,
N0XFF,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XF7,0XFE,0XF7,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,
N0XFF,0XFF,0XFF,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,
N0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,
N0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,0XFF,0XFF,
N0XFF,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XF7,0XDE,0XFF,0XDF,0XFF,0XE8,0X41,
N0XA7,0X41,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XDF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFE,0XF7,
N0XFE,0XF7,0XFE,0XF7,0XFF,0XF7,0XFF,0XF7,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFE,0XF7,
N0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,
N0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,
N0XFE,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFE,0XFF,0XFF,0XFF,0XFE,0XFF,0XFF,0XFF,
N0XFE,0XF7,0XFE,0XF7,0XFE,0XF7,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,0XFF,0XFF,0XFF,0XFF,
N0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,
N0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,
N0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XF7,
N0XFE,0XFF,0XFF,0XFF,0XFF,0XF7,0XFF,0XFF,0XDF,0XFF,0XC7,0X41,0XA7,0X49,0XDF,0XFF,
N0XFF,0XFF,0XFF,0XFF,0XDF,0XFF,0XFF,0XFF,0XFE,0XF7,0XFE,0XF7,0XFE,0XF7,0XFE,0XF7,
N0XFF,0XF7,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,
N0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,
N0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,0XFF,0XF7,0XFE,0XF7,
N0XFF,0XFF,0XFF,0XFF,0XFE,0XFF,0XFF,0XFF,0XDE,0XF7,0XFF,0XF7,0XFE,0XF7,0XFE,0XF7,
N0XFE,0XF7,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,
N0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,
N0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,
N0XFE,0XF7,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,0XFF,0XF7,0XFF,0XF7,0XFE,0XF7,0XFE,0XF7,
N0XFF,0XF7,0XFF,0XFF,0XDF,0XFF,0XC7,0X41,0XA7,0X41,0XDF,0XFF,0XFF,0XFF,0XFF,0XFF,
N0XFF,0XFF,0XFE,0XFF,0XFE,0XF7,0XFE,0XF7,0XFE,0XF7,0XFE,0XFF,0XFF,0XFF,0XFF,0XFF,
N0XDF,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
N0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
N0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XF7,0XFF,0XF7,0XFF,0XF7,0XFF,0XF7,0XFE,0XF7,
N0XDD,0XFF,0XFE,0XFF,0XFF,0XFF,0XDE,0XF7,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,
N0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,
N0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,
N0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XF7,0XFE,0XF7,
N0XFE,0XF7,0XFF,0XF7,0XFF,0XFF,0XFE,0XFF,0XFE,0XF7,0XFE,0XF7,0XFF,0XFF,0XFF,0XFF,
N0XDF,0XFF,0XC7,0X41,0XA7,0X41,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFE,0XFF,0XFE,0XFF,
N0XFE,0XF7,0XFE,0XF7,0XFE,0XF7,0XFE,0XFF,0XFF,0XFF,0XFF,0XFF,0XFE,0XFF,0XFE,0XFF,
N0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
N0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
N0XFF,0XFF,0XFF,0XF7,0XFF,0XFF,0XFE,0XEF,0XFE,0XEF,0XFE,0XEF,0XFE,0XEF,0XFD,0XF7,
N0XFE,0XF7,0XFF,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,
N0XFE,0XF7,0XFE,0XF7,0XFE,0XF7,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,
N0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,
N0XFE,0XFF,0XFE,0XFF,0XFF,0XFF,0XFF,0XFF,0XFE,0XF7,0XFE,0XF7,0XFF,0XF7,0XFF,0XF7,
N0XFF,0XFF,0XFE,0XFF,0XFE,0XF7,0XFE,0XF7,0XFE,0XFF,0XFE,0XFF,0XDF,0XFF,0XC8,0X41,
N0XA7,0X41,0XFF,0XFF,0XFF,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XF7,0XFE,0XF7,
N0XFE,0XF7,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XF7,0XFE,0XF7,0XFE,0XFF,0XFE,0XFF,
N0XFE,0XFF,0XFE,0XF7,0XFE,0XF7,0XFE,0XF7,0XFE,0XF7,0XFE,0XF7,0XFE,0XF7,0XFE,0XF7,
N0XFE,0XF7,0XFE,0XF7,0XFE,0XF7,0XFE,0XF7,0XFE,0XF7,0XFE,0XF7,0XFE,0XF7,0XFE,0XFF,
N0XFF,0XFF,0XFF,0XF7,0XEA,0X3B,0X0A,0X2C,0X0A,0X34,0XFC,0XCF,0XFE,0XEF,0XFE,0XF7,
N0XFF,0XFF,0XFF,0XFF,0XFE,0XF7,0XFE,0XF7,0XFE,0XFF,0XFE,0XFF,0XFE,0XF7,0XFE,0XF7,
N0XFE,0XF7,0XFE,0XF7,0XFE,0XF7,0XFE,0XF7,0XFE,0XF7,0XFE,0XF7,0XFE,0XF7,0XFE,0XF7,
N0XFE,0XF7,0XFE,0XF7,0XFE,0XF7,0XFE,0XF7,0XFE,0XF7,0XFE,0XF7,0XFE,0XF7,0XFF,0XFF,
N0XFF,0XFF,0XFF,0XFF,0XFE,0XF7,0XFE,0XF7,0XFF,0XF7,0XFF,0XFF,0XFF,0XFF,0XFE,0XFF,
N0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,0XFF,0XFF,0XDF,0XFF,0XC8,0X41,0XA7,0X41,0XFF,0XFF,
N0XFF,0XFF,0XFF,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XF7,0XFE,0XF7,0XFE,0XFF,0XFE,0XFF,
N0XFE,0XFF,0XFE,0XF7,0XFE,0XF7,0XFE,0XF7,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XF7,
N0XFE,0XFF,0XFE,0XF7,0XFE,0XFF,0XFE,0XF7,0XFE,0XFF,0XFE,0XF7,0XFE,0XFF,0XFE,0XF7,
N0XFE,0XFF,0XFE,0XF7,0XFE,0XFF,0XFE,0XF7,0XFE,0XFF,0XFE,0XFF,0XDE,0XFF,0XFE,0XEF,
N0X2A,0X2C,0X69,0X1C,0XCA,0X24,0XF9,0XA7,0XFB,0XCF,0XFD,0XE7,0XFF,0XF7,0XFF,0XFF,
N0XFE,0XF7,0XFE,0XF7,0XFE,0XFF,0XFE,0XFF,0XFE,0XF7,0XFE,0XF7,0XFE,0XF7,0XFE,0XF7,
N0XFE,0XF7,0XFE,0XF7,0XFE,0XF7,0XFE,0XF7,0XFE,0XF7,0XFE,0XF7,0XFE,0XF7,0XFE,0XF7,
N0XFE,0XF7,0XFE,0XF7,0XFE,0XF7,0XFE,0XF7,0XFE,0XF7,0XFF,0XF7,0XFF,0XF7,0XFF,0XF7,
N0XFE,0XF7,0XFE,0XFF,0XFE,0XFF,0XFF,0XFF,0XFF,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,
N0XFE,0XFF,0XFF,0XFF,0XDF,0XFF,0XC8,0X41,0XA7,0X41,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
N0XFF,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,
N0XFE,0XF7,0XFF,0XF7,0XFF,0XFF,0XFF,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,
N0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,
N0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,0XFD,0XE7,0X6A,0X2C,0XC9,0X0C,
N0X09,0X05,0XE9,0X0C,0X6A,0X24,0XFC,0XCF,0XFE,0XEF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
N0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XF7,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,
N0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,
N0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,0XFF,0XF7,0XFF,0XF7,0XFF,0XF7,0XFE,0XFF,0XFE,0XFF,
N0XFE,0XFF,0XFE,0XFF,0XFF,0XFF,0XFE,0XFF,0XFE,0XF7,0XFE,0XF7,0XFF,0XFF,0XDF,0XFF,
N0XBF,0XFF,0XC8,0X41,0XA7,0X41,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
N0XFF,0XFF,0XFF,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XF7,0XFF,0XF7,
N0XFF,0XFF,0XFF,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,
N0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,
N0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XE7,0X49,0X24,0XE9,0X0C,0X49,0X05,0X29,0X05,
N0XA9,0X0C,0X6A,0X24,0XFD,0XD7,0XFE,0XEF,0XFF,0XF7,0XFF,0XFF,0XFF,0XFF,0XFE,0XFF,
N0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,
N0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,
N0XFE,0XFF,0XFF,0XFF,0XFF,0XF7,0XFF,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,
N0XFE,0XFF,0XFE,0XFF,0XFE,0XF7,0XFE,0XF7,0XFF,0XFF,0XDF,0XFF,0XBF,0XFF,0XA8,0X41,
N0XA7,0X41,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XF7,0XFF,0XF7,0XFE,0XFF,0XFE,0XFF,
N0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XF7,0XFE,0XF7,0XFE,0XF7,0XFF,0XFF,0XFE,0XFF,
N0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,
N0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,
N0XFE,0XF7,0XFE,0XE7,0X4A,0X24,0XC9,0X0C,0X09,0X05,0X29,0X05,0X09,0X05,0XCA,0X14,
N0XF9,0XAF,0XFC,0XD7,0XFE,0XEF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFE,0XFF,0XFE,0XFF,
N0XFF,0XFF,0XFF,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,
N0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,
N0XFF,0XFF,0XFF,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XF7,
N0XFE,0XF7,0XFE,0XF7,0XFF,0XFF,0XDF,0XFF,0XDF,0XFF,0XC8,0X41,0XC7,0X39,0XFF,0XFF,
N0XFF,0XFF,0XFF,0XF7,0XFE,0XF7,0XFF,0XF7,0XFF,0XFF,0XFF,0XFF,0XFE,0XFF,0XFE,0XFF,
N0XFE,0XFF,0XFE,0XF7,0XFE,0XF7,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,
N0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,
N0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XF7,0XFE,0XF7,0XFE,0XDF,
N0X6A,0X24,0XC9,0X14,0X08,0X05,0X28,0X05,0X29,0X05,0XE9,0X04,0XA9,0X14,0X4A,0X2C,
N0XFD,0XDF,0XFE,0XF7,0XDE,0XEF,0XFF,0XFF,0XFE,0XF7,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,
N0XFE,0XFF,0XFE,0XF7,0XFE,0XF7,0XFE,0XF7,0XFE,0XF7,0XFE,0XF7,0XFE,0XFF,0XFE,0XFF,
N0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,
N0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XF7,0XFE,0XF7,0XFE,0XF7,0XFF,0XFF,
N0XFF,0XFF,0XDF,0XFF,0XDF,0XFF,0XC7,0X41,0XC7,0X41,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
N0XFE,0XF7,0XFF,0XF7,0XFF,0XFF,0XFF,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,
N0XFE,0XFF,0XFE,0XFF,0XFF,0XFF,0XFF,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,
N0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,
N0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XF7,0XFE,0XE7,0X69,0X2C,0XE8,0X14,
N0X08,0X05,0X28,0X05,0X28,0X05,0X29,0X05,0X09,0X05,0XCA,0X1C,0X49,0X24,0XFC,0XCF,
N0XFE,0XEF,0XFE,0XF7,0XFF,0XFF,0XFE,0XFF,0XFF,0XFF,0XFF,0XFF,0XFE,0XFF,0XFE,0XFF,
N0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,
N0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,0XFF,0XFF,0XFF,0XFF,0XFE,0XFF,0XFE,0XFF,
N0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XF7,0XFE,0XF7,0XFF,0XFF,0XDF,0XFF,
N0XDF,0XFF,0XE8,0X41,0XC7,0X41,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
N0XFF,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,
N0XFF,0XFF,0XFF,0XFF,0XFE,0XFF,0XFE,0XF7,0XFE,0XFF,0XFE,0XF7,0XFE,0XFF,0XFE,0XF7,
N0XFE,0XFF,0XFE,0XF7,0XFE,0XFF,0XFE,0XF7,0XFE,0XFF,0XFE,0XF7,0XFE,0XFF,0XFE,0XF7,
N0XFF,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XE7,0X89,0X24,0XE8,0X0C,0X08,0X05,0X28,0X05,
N0X28,0X05,0X49,0X05,0X29,0X05,0X08,0X05,0XEA,0X14,0XFA,0XAF,0XFB,0XCF,0XFC,0XE7,
N0XFF,0XF7,0XFE,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFE,0XFF,0XFF,0XFF,0XFE,0XFF,
N0XFF,0XFF,0XFE,0XFF,0XFF,0XFF,0XFE,0XFF,0XFF,0XFF,0XFE,0XFF,0XFF,0XFF,0XFE,0XFF,
N0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,
N0XFE,0XFF,0XFE,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XDF,0XFF,0XDF,0XFF,0XC7,0X41,
N0XC7,0X41,0XFF,0XFF,0XDF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
N0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
N0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
N0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
N0XFE,0XFF,0XFD,0XE7,0X69,0X24,0XE8,0X0C,0X08,0X05,0X28,0X05,0X28,0X05,0X48,0X05,
N0X48,0X05,0X69,0X05,0X29,0X05,0XA9,0X14,0X4B,0X34,0XFD,0XDF,0XFE,0XEF,0XFE,0XF7,
N0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
N0XFF,0XFF,0XFE,0XFF,0XFF,0XFF,0XFE,0XFF,0XFF,0XFF,0XFE,0XFF,0XFF,0XFF,0XFF,0XFF,
N0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
N0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XDF,0XFF,0XDF,0XFF,0XE8,0X41,0XA7,0X39,0XBF,0XFF,
N0X9E,0XF7,0X9D,0XEF,0X9D,0XEF,0X9D,0XEF,0X9D,0XEF,0X9D,0XEF,0X9D,0XF7,0X9D,0XF7,
N0X9D,0XEF,0X9D,0XEF,0X9D,0XEF,0X9D,0XEF,0X9D,0XF7,0X9D,0XF7,0X7D,0XEF,0X9D,0XEF,
N0X9D,0XEF,0X9D,0XEF,0X9D,0XEF,0X9D,0XEF,0X9D,0XEF,0X9D,0XEF,0X9D,0XEF,0X9D,0XEF,
N0X9D,0XEF,0X9D,0XEF,0X9D,0XEF,0X9D,0XEF,0X9D,0XEF,0X9D,0XF7,0X9D,0XF7,0XFC,0XDF,
N0X49,0X24,0XE8,0X0C,0X08,0X05,0X28,0X05,0X28,0X05,0X48,0X05,0X48,0X05,0X69,0X05,
N0X29,0X05,0XEA,0X14,0X0A,0X2C,0XFD,0XD7,0XBD,0XE7,0X9E,0XF7,0X9D,0XEF,0X9D,0XEF,
N0X9D,0XEF,0X9D,0XEF,0X9D,0XEF,0X9D,0XEF,0X9D,0XEF,0X9D,0XEF,0X9D,0XEF,0X9D,0XEF,
N0X9D,0XEF,0X9D,0XEF,0X9D,0XEF,0X9D,0XEF,0X9D,0XEF,0X9D,0XEF,0X9D,0XEF,0X9D,0XEF,
N0X9D,0XEF,0X9D,0XEF,0X9D,0XEF,0X9D,0XEF,0X9D,0XEF,0X9D,0XEF,0X9D,0XEF,0X7D,0XEF,
N0X7D,0XEF,0X7E,0XF7,0X7E,0XFF,0XA7,0X41,0XC8,0X41,0XDF,0XFF,0X9E,0XF7,0X9E,0XF7,
N0X9D,0XEF,0X9D,0XEF,0X7D,0XEF,0X7D,0XEF,0X7D,0XF7,0X7D,0XEF,0X9D,0XEF,0X9D,0XEF,
N0X9D,0XEF,0X9D,0XEF,0X7D,0XEF,0X7D,0XEF,0X7D,0XEF,0X7D,0XEF,0X7D,0XEF,0X7D,0XEF,
N0X7D,0XEF,0X7D,0XEF,0X7D,0XEF,0X7D,0XEF,0X7D,0XEF,0X7D,0XEF,0X7D,0XEF,0X7D,0XEF,
N0X7D,0XEF,0X7D,0XEF,0X7D,0XEF,0X7D,0XEF,0X7C,0XEF,0XFC,0XDF,0X49,0X24,0XC9,0X0C,
N0X08,0X05,0X28,0X05,0X08,0X05,0X08,0X05,0X08,0X05,0X08,0X05,0X0A,0X15,0X6A,0X24,
N0X0C,0X4C,0XDD,0XE7,0X9E,0XF7,0X7D,0XF7,0X7E,0XF7,0X7D,0XEF,0X7D,0XEF,0X7D,0XEF,
N0X7D,0XEF,0X7D,0XEF,0X7D,0XEF,0X7D,0XEF,0X7D,0XEF,0X7D,0XEF,0X7D,0XEF,0X7D,0XEF,
N0X7D,0XEF,0X7D,0XEF,0X7D,0XEF,0X7D,0XEF,0X7D,0XEF,0X7D,0XEF,0X7D,0XEF,0X9D,0XEF,
N0X9D,0XEF,0X9D,0XEF,0X9D,0XEF,0X9D,0XEF,0X9E,0XF7,0X9E,0XF7,0X9E,0XF7,0X9E,0XF7,
N0X9F,0XFF,0XA7,0X41,0XC8,0X41,0XBF,0XFF,0X9E,0XF7,0X9E,0XF7,0X9E,0XF7,0X9E,0XF7,
N0X9D,0XF7,0X7D,0XEF,0X7D,0XF7,0X7D,0XF7,0X7D,0XEF,0X9D,0XEF,0X9D,0XEF,0X7D,0XEF,
N0X7D,0XF7,0X7D,0XF7,0X7D,0XEF,0X7D,0XEF,0X7D,0XEF,0X7D,0XEF,0X7D,0XEF,0X7D,0XEF,
N0X7D,0XEF,0X7D,0XEF,0X7D,0XEF,0X7D,0XEF,0X7D,0XEF,0X7D,0XEF,0X9E,0XF7,0X9E,0XF7,
N0X9E,0XF7,0X9D,0XEF,0X9D,0XEF,0XFD,0XDF,0X4A,0X24,0XC9,0X14,0X09,0X05,0X08,0X05,
N0X08,0X05,0X08,0X05,0X29,0X05,0XE9,0X0C,0X8A,0X1C,0XFC,0XBF,0XFE,0XE7,0X7D,0XE7,
N0X7E,0XF7,0X7E,0XF7,0X7E,0XF7,0X7D,0XEF,0X7D,0XEF,0X7D,0XEF,0X7D,0XEF,0X7D,0XEF,
N0X7D,0XEF,0X7D,0XEF,0X7D,0XEF,0X7D,0XEF,0X7D,0XEF,0X7D,0XEF,0X7D,0XEF,0X7D,0XEF,
N0X7D,0XEF,0X7D,0XEF,0X7D,0XEF,0X7D,0XEF,0X7D,0XEF,0X7D,0XEF,0X9D,0XEF,0X9D,0XEF,
N0X9D,0XEF,0X9D,0XEF,0X7D,0XEF,0X7D,0XEF,0X7E,0XF7,0X7E,0XF7,0X7E,0XFF,0XA7,0X41,
N0XC8,0X41,0XBF,0XFF,0X7E,0XF7,0X9E,0XF7,0X9E,0XF7,0X9E,0XEF,0X7D,0XEF,0X7E,0XF7,
N0X7D,0XF7,0X7D,0XF7,0X7D,0XEF,0X9D,0XEF,0X9D,0XEF,0X7D,0XEF,0X7D,0XF7,0X7D,0XF7,
N0X7D,0XEF,0X7D,0XEF,0X7D,0XEF,0X7D,0XEF,0X7D,0XEF,0X7D,0XEF,0X7D,0XEF,0X7D,0XEF,
N0X7D,0XEF,0X7D,0XEF,0X9E,0XF7,0X9E,0XF7,0X7D,0XEF,0X7D,0XEF,0X7D,0XEF,0X9D,0XEF,
N0X9D,0XEF,0XFD,0XDF,0X29,0X24,0XC9,0X14,0X09,0X0D,0X08,0X05,0X08,0X05,0X29,0X05,
N0XE8,0X04,0XA9,0X14,0XFB,0XBF,0XFD,0XDF,0XDE,0XE7,0X9E,0XEF,0X9E,0XF7,0X7E,0XEF,
N0X7D,0XEF,0X7D,0XEF,0X7D,0XEF,0X7D,0XEF,0X7D,0XEF,0X7D,0XEF,0X7D,0XEF,0X7D,0XEF,
N0X7D,0XEF,0X7D,0XEF,0X7D,0XEF,0X7D,0XEF,0X7D,0XEF,0X7D,0XEF,0X7D,0XEF,0X7D,0XEF,
N0X7E,0XEF,0X7E,0XEF,0X7E,0XEF,0X7D,0XEF,0X7D,0XEF,0X7D,0XEF,0X7D,0XEF,0X7D,0XEF,
N0X7E,0XEF,0X7E,0XEF,0X7E,0XF7,0X7E,0XF7,0X5E,0XF7,0XA8,0X41,0XC8,0X41,0XBF,0XFF,
N0X7E,0XF7,0X7E,0XEF,0X7D,0XEF,0X7D,0XEF,0X7D,0XEF,0X7D,0XEF,0X7D,0XF7,0X7D,0XF7,
N0X7D,0XEF,0X9D,0XEF,0X9D,0XEF,0X7D,0XEF,0X7D,0XF7,0X7D,0XF7,0X7D,0XF7,0X7D,0XEF,
N0X7D,0XEF,0X7D,0XEF,0X7D,0XEF,0X7D,0XEF,0X7D,0XEF,0X7D,0XEF,0X7D,0XEF,0X7D,0XEF,
N0X7D,0XEF,0X7D,0XEF,0X7D,0XEF,0X7D,0XEF,0X7D,0XEF,0X9D,0XEF,0X9D,0XEF,0XFC,0XDF,
N0X49,0X24,0XA9,0X14,0XE8,0X04,0X49,0X0D,0X29,0X05,0XE9,0X04,0XEA,0X1C,0X2A,0X2C,
N0XFC,0XD7,0XDE,0XEF,0X7D,0XE7,0XBF,0XF7,0XBE,0XF7,0X9E,0XEF,0X7D,0XEF,0X7D,0XEF,
N0X7D,0XEF,0X7D,0XEF,0X7D,0XEF,0X7D,0XEF,0X7D,0XEF,0X7D,0XEF,0X7D,0XEF,0X7D,0XEF,
N0X7D,0XEF,0X7D,0XEF,0X7D,0XEF,0X7D,0XEF,0X7D,0XEF,0X7D,0XEF,0X7E,0XEF,0X7E,0XEF,
N0X7E,0XEF,0X7E,0XEF,0X7D,0XEF,0X7D,0XEF,0X7D,0XEF,0X7D,0XEF,0X7E,0XEF,0X9E,0XF7,
N0X7E,0XF7,0X7E,0XF7,0X7E,0XFF,0XC8,0X41,0XC8,0X41,0XBF,0XFF,0X7E,0XF7,0X7E,0XEF,
N0X9E,0XF7,0X7E,0XEF,0X7D,0XEF,0X7D,0XF7,0X7D,0XF7,0X7D,0XF7,0X7D,0XEF,0X9D,0XEF,
N0X9D,0XEF,0X7D,0XEF,0X7D,0XF7,0X7D,0XF7,0X7D,0XF7,0X7D,0XEF,0X7D,0XEF,0X7D,0XEF,
N0X7D,0XEF,0X7D,0XEF,0X7D,0XEF,0X7D,0XEF,0X7D,0XEF,0X7D,0XEF,0X7D,0XEF,0X7D,0XEF,
N0X7D,0XEF,0X7D,0XEF,0X7D,0XEF,0X9D,0XF7,0X7D,0XF7,0XFC,0XDF,0X49,0X24,0X09,0X15,
N0X08,0X0D,0X08,0X05,0X29,0X0D,0XA9,0X14,0XFB,0XC7,0XFD,0XDF,0XBC,0XE7,0X9D,0XEF,
N0XFF,0XFF,0X7E,0XEF,0X9D,0XEF,0X7D,0XEF,0X9D,0XEF,0X7D,0XEF,0X7D,0XEF,0X7D,0XEF,
N0X7D,0XEF,0X7D,0XEF,0X7D,0XEF,0X7D,0XEF,0X7D,0XEF,0X7D,0XEF,0X7D,0XEF,0X7D,0XEF,
N0X7D,0XEF,0X7D,0XEF,0X7D,0XEF,0X7D,0XEF,0X7E,0XEF,0X7E,0XEF,0X7E,0XF7,0X7E,0XF7,
N0X7D,0XF7,0X7D,0XF7,0X7D,0XEF,0X7D,0XEF,0X7E,0XEF,0X9E,0XF7,0X7E,0XF7,0X7E,0XF7,
N0X7E,0XFF,0XC8,0X49,0XA7,0X41,0XBF,0XFF,0X7E,0XF7,0X7E,0XEF,0X9E,0XEF,0X9E,0XEF,
N0X7D,0XEF,0X9E,0XF7,0X7D,0XF7,0X7D,0XF7,0X7D,0XEF,0X9D,0XEF,0X9D,0XEF,0X7D,0XEF,
N0X7D,0XF7,0X7D,0XF7,0X7D,0XEF,0X7D,0XEF,0X7D,0XEF,0X7D,0XEF,0X7D,0XEF,0X7D,0XEF,
N0X7D,0XEF,0X7D,0XEF,0X7D,0XEF,0X7D,0XEF,0X7D,0XEF,0X7D,0XEF,0X7D,0XEF,0X7D,0XEF,
N0X7D,0XEF,0X7E,0XF7,0X9E,0XFF,0XDC,0XDF,0X49,0X24,0XE8,0X14,0X09,0X0D,0X09,0X15,
N0X0B,0X25,0XFA,0XAF,0XFD,0XE7,0XDD,0XF7,0X9D,0XF7,0XBE,0XF7,0X7D,0XEF,0X9E,0XEF,
N0X9D,0XEF,0X9E,0XEF,0X9D,0XEF,0X7D,0XEF,0X7D,0XEF,0X7D,0XEF,0X7D,0XEF,0X7D,0XEF,
N0X7D,0XEF,0X7D,0XEF,0X7D,0XEF,0X7D,0XEF,0X7D,0XEF,0X7D,0XEF,0X7D,0XEF,0X7D,0XEF,
N0X7D,0XEF,0X7D,0XEF,0X7E,0XEF,0X7E,0XEF,0X7E,0XF7,0X7E,0XF7,0X7D,0XF7,0X7D,0XF7,
N0X7D,0XEF,0X7D,0XEF,0X7E,0XEF,0X7E,0XEF,0X7E,0XF7,0X7E,0XF7,0X7E,0XFF,0XC8,0X41,
N0XA7,0X41,0X9E,0XFF,0X5D,0XF7,0X7E,0XEF,0X7E,0XEF,0X7E,0XEF,0X7E,0XEF,0X9E,0XF7,
N0X7E,0XF7,0X7E,0XF7,0X7D,0XEF,0X9D,0XEF,0X9D,0XEF,0X7D,0XEF,0X7D,0XF7,0X7D,0XF7,
N0X7D,0XEF,0X7D,0XEF,0X7D,0XEF,0X7D,0XEF,0X7D,0XEF,0X7D,0XEF,0X7D,0XEF,0X7D,0XEF,
N0X7D,0XEF,0X7D,0XEF,0X7D,0XEF,0X7D,0XEF,0X7D,0XEF,0X7D,0XEF,0X7D,0XEF,0X7E,0XF7,
N0X7D,0XF7,0XFD,0XE7,0X4A,0X24,0XC9,0X14,0X0A,0X1D,0XAA,0X1C,0XE9,0X23,0XFD,0XD7,
N0XDD,0XEF,0X7D,0XF7,0X7D,0XFF,0X9D,0XFF,0XDE,0XF7,0XBE,0XEF,0X9E,0XF7,0X7D,0XEF,
N0X7D,0XEF,0X7D,0XEF,0X7D,0XEF,0X7D,0XEF,0X7D,0XEF,0X7D,0XEF,0X7D,0XEF,0X7D,0XEF,
N0X7D,0XEF,0X7D,0XEF,0X7D,0XEF,0X7D,0XEF,0X7D,0XEF,0X7D,0XEF,0X7D,0XEF,0X7D,0XEF,
N0X7D,0XEF,0X7D,0XEF,0X7D,0XF7,0X7D,0XF7,0X7D,0XF7,0X7D,0XF7,0X7D,0XEF,0X7D,0XEF,
N0X7E,0XEF,0X9E,0XF7,0X7E,0XF7,0X9E,0XF7,0X7E,0XFF,0XC8,0X41,0XC7,0X41,0XBF,0XFF,
N0X7E,0XF7,0X7E,0XEF,0X7E,0XEF,0X9E,0XEF,0X7E,0XEF,0X7E,0XEF,0X7E,0XF7,0X7E,0XEF,
N0X7D,0XEF,0X9D,0XEF,0X9D,0XEF,0X9D,0XEF,0X7D,0XF7,0X7D,0XF7,0X7D,0XEF,0X7D,0XEF,
N0X7D,0XEF,0X7D,0XEF,0X7D,0XEF,0X7D,0XEF,0X7D,0XEF,0X7D,0XEF,0X7D,0XEF,0X9E,0XF7,
N0X7D,0XEF,0X7D,0XEF,0X7D,0XEF,0X7D,0XEF,0X9E,0XF7,0X9E,0XF7,0X9E,0XF7,0XDD,0XE7,
N0X2A,0X34,0X6A,0X1C,0X8A,0X24,0XFB,0XB7,0XFE,0XD7,0XDD,0XE7,0X7D,0XEF,0X7D,0XF7,
N0X7D,0XFF,0X9D,0XF7,0XBE,0XEF,0XBE,0XEF,0X7D,0XF7,0X7D,0XF7,0X7D,0XF7,0X7D,0XEF,
N0X7D,0XEF,0X7D,0XEF,0X7D,0XEF,0X7D,0XEF,0X7D,0XEF,0X7D,0XEF,0X7D,0XEF,0X7D,0XEF,
N0X7D,0XEF,0X7D,0XEF,0X7D,0XEF,0X7D,0XEF,0X7D,0XEF,0X7D,0XEF,0X7D,0XEF,0X7D,0XEF,
N0X7D,0XF7,0X7D,0XF7,0X7D,0XF7,0X7D,0XF7,0X7D,0XEF,0X7D,0XEF,0X7E,0XEF,0X7E,0XEF,
N0X7E,0XF7,0X9E,0XF7,0X7E,0XFF,0XC8,0X41,0XC7,0X41,0XBF,0XFF,0X7E,0XF7,0X9E,0XF7,
N0X9E,0XEF,0X9D,0XEF,0X7E,0XEF,0X7E,0XEF,0X7E,0XF7,0X7E,0XEF,0X7E,0XEF,0X7E,0XEF,
N0X9D,0XEF,0X9D,0XEF,0X7D,0XF7,0X7D,0XF7,0X7D,0XEF,0X9D,0XEF,0X9D,0XEF,0X9D,0XEF,
N0X9D,0XEF,0X9D,0XEF,0X9D,0XEF,0X9D,0XEF,0X9D,0XEF,0X9D,0XEF,0X9D,0XEF,0X9D,0XEF,
N0X9D,0XEF,0X9D,0XEF,0X9D,0XF7,0X9E,0XF7,0X9E,0XF7,0XBD,0XEF,0XFC,0XD7,0XFC,0XCF,
N0XDC,0XCF,0XFE,0XE7,0XDE,0XE7,0XBE,0XEF,0X9E,0XF7,0X9E,0XF7,0X7D,0XEF,0X9E,0XEF,
N0X7E,0XEF,0X9E,0XF7,0X7E,0XF7,0X7D,0XF7,0X7D,0XF7,0X9D,0XEF,0X9D,0XEF,0X9D,0XEF,
N0X9D,0XEF,0X9D,0XEF,0X9D,0XEF,0X9D,0XEF,0X9D,0XEF,0X9D,0XEF,0X9D,0XEF,0X9D,0XEF,
N0X9D,0XEF,0X9D,0XEF,0X9D,0XEF,0X9D,0XEF,0X7D,0XEF,0X7D,0XEF,0X7D,0XF7,0X7D,0XF7,
N0X7D,0XF7,0X7D,0XF7,0X7D,0XEF,0X7D,0XEF,0X7D,0XEF,0X7D,0XEF,0X7E,0XF7,0X7E,0XF7,
N0X7E,0XFF,0XC8,0X41,0XC8,0X41,0XBF,0XFF,0X7E,0XF7,0X7D,0XEF,0X9E,0XF7,0X9D,0XEF,
N0X7E,0XEF,0X9E,0XF7,0X7E,0XF7,0X7E,0XEF,0X7D,0XEF,0X9D,0XEF,0X9D,0XEF,0X9D,0XEF,
N0X7D,0XEF,0X7D,0XF7,0X7D,0XEF,0X9D,0XEF,0X9D,0XEF,0X9D,0XEF,0X9D,0XEF,0X9D,0XEF,
N0X9D,0XEF,0X9D,0XEF,0X9D,0XEF,0X9D,0XEF,0X9D,0XEF,0X9D,0XEF,0X9D,0XEF,0X9D,0XEF,
N0X9E,0XF7,0XBE,0XF7,0X7D,0XEF,0X9D,0XEF,0XDE,0XEF,0XFE,0XEF,0X9D,0XE7,0XDF,0XF7,
N0X7E,0XEF,0X9E,0XF7,0X7E,0XEF,0X7D,0XEF,0XBE,0XEF,0X9E,0XE7,0X9E,0XEF,0X9E,0XF7,
N0X7E,0XF7,0X7D,0XF7,0X7D,0XEF,0X9D,0XEF,0X9D,0XEF,0X9D,0XEF,0X9D,0XEF,0X9D,0XEF,
N0X9D,0XEF,0X9D,0XEF,0X9D,0XEF,0X9D,0XEF,0X9D,0XEF,0X9D,0XEF,0X9D,0XEF,0X9D,0XEF,
N0X9D,0XEF,0X9D,0XEF,0X7D,0XEF,0X7D,0XEF,0X7D,0XF7,0X7D,0XF7,0X7D,0XF7,0X7D,0XF7,
N0X7D,0XEF,0X7D,0XEF,0X9E,0XF7,0X9E,0XF7,0X9E,0XF7,0X7E,0XF7,0X7E,0XF7,0XC8,0X41,
N0XE8,0X39,0XBF,0XF7,0X9E,0XF7,0X7E,0XF7,0X7D,0XF7,0X7D,0XEF,0X7E,0XF7,0X7E,0XF7,
N0X9E,0XF7,0X7D,0XEF,0X7D,0XEF,0X7D,0XEF,0X9D,0XEF,0X9D,0XEF,0X7D,0XEF,0X7D,0XF7,
N0X7D,0XEF,0X7D,0XEF,0X7D,0XEF,0X7D,0XEF,0X7D,0XEF,0X7D,0XEF,0X7D,0XEF,0X7D,0XEF,
N0X7D,0XEF,0X7D,0XEF,0X7D,0XEF,0X7D,0XEF,0X7D,0XEF,0X7D,0XEF,0X9D,0XF7,0X9D,0XEF,
N0X9D,0XF7,0XBE,0XF7,0XBE,0XEF,0X9D,0XEF,0XBE,0XF7,0XBE,0XEF,0X9E,0XEF,0X9E,0XF7,
N0X9D,0XEF,0X9D,0XEF,0X9D,0XEF,0X9E,0XEF,0X9E,0XEF,0X9E,0XEF,0X7D,0XEF,0X7D,0XEF,
N0X7D,0XEF,0X7D,0XEF,0X7D,0XEF,0X7D,0XEF,0X7D,0XEF,0X7D,0XEF,0X7D,0XEF,0X7D,0XEF,
N0X7D,0XEF,0X7D,0XEF,0X7D,0XEF,0X7D,0XEF,0X7D,0XEF,0X7D,0XEF,0X7D,0XEF,0X7D,0XEF,
N0X9D,0XEF,0X9D,0XEF,0X7D,0XF7,0X7D,0XF7,0X7D,0XF7,0X7D,0XF7,0X9E,0XF7,0X9E,0XF7,
N0X7D,0XEF,0X9E,0XF7,0X9E,0XEF,0X5D,0XE7,0X9E,0XF7,0XC8,0X49,0X08,0X3A,0XDF,0XFF,
N0X5E,0XF7,0X7D,0XF7,0X7D,0XF7,0X9D,0XF7,0X9E,0XF7,0X7E,0XF7,0X9E,0XF7,0X9D,0XF7,
N0X7D,0XF7,0X9D,0XF7,0X9D,0XEF,0X9D,0XEF,0X9E,0XF7,0X7E,0XF7,0X7D,0XF7,0X7D,0XEF,
N0X7D,0XF7,0X7D,0XEF,0X7D,0XF7,0X7D,0XEF,0X7D,0XF7,0X7D,0XEF,0X7D,0XF7,0X7D,0XEF,
N0X7D,0XF7,0X7D,0XEF,0X7D,0XF7,0X7D,0XEF,0X7D,0XF7,0X9D,0XF7,0X9D,0XF7,0XBE,0XF7,
N0X9E,0XF7,0X9E,0XEF,0XBE,0XF7,0X9E,0XF7,0X9D,0XEF,0XBE,0XF7,0X9D,0XEF,0X9D,0XEF,
N0X9D,0XEF,0X9D,0XEF,0X9D,0XEF,0X9D,0XEF,0X9D,0XEF,0X9D,0XEF,0X7D,0XEF,0X7D,0XEF,
N0X7D,0XEF,0X7D,0XEF,0X7D,0XEF,0X7D,0XEF,0X7D,0XEF,0X7D,0XEF,0X7D,0XEF,0X7D,0XEF,
N0X7D,0XEF,0X7D,0XEF,0X7D,0XEF,0X7D,0XEF,0X7D,0XEF,0X7D,0XEF,0X9D,0XEF,0X9D,0XEF,
N0X7D,0XF7,0X7D,0XF7,0X7D,0XF7,0X7D,0XEF,0X7E,0XF7,0X7E,0XF7,0X7E,0XF7,0X5D,0XEF,
N0X9E,0XEF,0X9E,0XEF,0X7E,0XFF,0XE8,0X49,0XA6,0X41,0XBE,0XFF,0X9D,0XFF,0X7D,0XF7,
N0X7D,0XEF,0X7D,0XEF,0X9E,0XF7,0X5D,0XEF,0X9D,0XEF,0X9D,0XEF,0X7D,0XF7,0X7D,0XF7,
N0X7D,0XF7,0X7D,0XF7,0X7D,0XF7,0X7D,0XF7,0X7E,0XF7,0X7E,0XF7,0X7E,0XF7,0X7E,0XF7,
N0X7E,0XF7,0X7E,0XF7,0X7E,0XF7,0X7E,0XF7,0X7E,0XF7,0X7D,0XF7,0X7E,0XF7,0X7D,0XF7,
N0X7E,0XF7,0X7D,0XF7,0X7D,0XF7,0X7D,0XF7,0X7D,0XF7,0X9E,0XF7,0X7D,0XF7,0X7D,0XF7,
N0X9E,0XF7,0X9D,0XF7,0X7D,0XF7,0X9D,0XF7,0X7D,0XF7,0X7D,0XF7,0X7D,0XF7,0X7D,0XF7,
N0X7D,0XF7,0X7D,0XF7,0X7D,0XF7,0X7D,0XF7,0X7D,0XF7,0X7D,0XF7,0X7D,0XF7,0X7D,0XF7,
N0X7D,0XF7,0X7D,0XF7,0X7D,0XF7,0X7D,0XF7,0X7D,0XF7,0X7D,0XF7,0X7D,0XF7,0X7D,0XF7,
N0X7D,0XF7,0X7D,0XF7,0X7D,0XF7,0X7D,0XF7,0X7E,0XF7,0X7E,0XF7,0X7E,0XEF,0X7E,0XEF,
N0X7E,0XEF,0X7E,0XEF,0X7E,0XF7,0X7E,0XF7,0X9E,0XF7,0X9D,0XF7,0X9E,0XF7,0X9E,0XF7,
N0X7E,0XFF,0XA7,0X41,0XC7,0X49,0XBE,0XFF,0X7C,0XF7,0XDE,0XFF,0X9E,0XF7,0XBE,0XF7,
N0X7E,0XEF,0X7E,0XF7,0X7D,0XF7,0X9D,0XEF,0X9D,0XEF,0X7D,0XEF,0X7D,0XEF,0X7E,0XF7,
N0X7D,0XF7,0X7D,0XF7,0X7E,0XEF,0X7E,0XEF,0X7E,0XEF,0X7E,0XEF,0X7E,0XEF,0X7E,0XEF,
N0X7E,0XEF,0X7E,0XEF,0X7E,0XF7,0X7E,0XF7,0X7E,0XF7,0X7E,0XF7,0X7E,0XF7,0X7E,0XF7,
N0X7E,0XF7,0X7D,0XF7,0X7D,0XF7,0X9D,0XF7,0X7E,0XF7,0X7D,0XF7,0X9E,0XF7,0X7E,0XF7,
N0X7D,0XF7,0X7E,0XF7,0X7D,0XF7,0X7D,0XF7,0X7D,0XF7,0X7D,0XF7,0X7D,0XF7,0X7D,0XF7,
N0X7D,0XF7,0X7D,0XF7,0X7D,0XF7,0X7D,0XF7,0X7D,0XF7,0X7D,0XF7,0X7D,0XF7,0X7D,0XF7,
N0X7D,0XF7,0X7D,0XF7,0X7D,0XF7,0X7D,0XF7,0X7D,0XF7,0X7D,0XF7,0X7D,0XF7,0X7D,0XF7,
N0X7D,0XF7,0X7D,0XF7,0X7E,0XF7,0X7E,0XEF,0X7E,0XEF,0X7E,0XEF,0X9E,0XEF,0X7E,0XF7,
N0X7E,0XF7,0X7E,0XF7,0X9E,0XF7,0X5C,0XEF,0XDE,0XFF,0X7D,0XF7,0X9E,0XFF,0XC7,0X41,
N0XA6,0X41,0X58,0XD6,0X58,0XCE,0X9D,0XF7,0XDE,0XF7,0X9E,0XEF,0X5D,0XEF,0X7E,0XF7,
N0X7E,0XF7,0X7D,0XEF,0X9D,0XEF,0X9E,0XEF,0X9E,0XEF,0X9E,0XEF,0X7E,0XF7,0X7E,0XF7,
N0X7E,0XEF,0X7E,0XEF,0X7E,0XEF,0X7E,0XEF,0X7D,0XEF,0X7D,0XEF,0X7D,0XEF,0X7D,0XEF,
N0X7D,0XEF,0X7D,0XEF,0X7D,0XEF,0X7D,0XEF,0X7D,0XEF,0X7D,0XEF,0X7D,0XEF,0X7D,0XEF,
N0X7D,0XF7,0X7E,0XF7,0X7E,0XF7,0X7E,0XF7,0X7E,0XF7,0X7E,0XF7,0X7E,0XEF,0X7E,0XF7,
N0X7E,0XF7,0X7E,0XF7,0X7E,0XF7,0X7E,0XF7,0X7E,0XF7,0X7E,0XF7,0X7E,0XF7,0X7E,0XF7,
N0X7E,0XEF,0X7E,0XEF,0X7E,0XEF,0X7E,0XEF,0X7E,0XEF,0X7E,0XEF,0X7E,0XEF,0X7E,0XEF,
N0X7E,0XEF,0X7E,0XEF,0X7E,0XEF,0X7E,0XEF,0X7E,0XEF,0X7E,0XEF,0X7E,0XEF,0X7D,0XEF,
N0X7D,0XEF,0X9D,0XEF,0X9D,0XEF,0X7E,0XEF,0X7E,0XF7,0X7E,0XF7,0X9E,0XF7,0X9D,0XEF,
N0X9D,0XF7,0XDE,0XFF,0XBD,0XFF,0X17,0XCE,0XF7,0XCD,0XE7,0X49,0X08,0X32,0X17,0XBE,
N0X17,0XC6,0X9D,0XF7,0X9D,0XF7,0XBE,0XF7,0X9E,0XF7,0X9E,0XF7,0X7E,0XEF,0X7D,0XEF,
N0X7E,0XEF,0X9E,0XEF,0X7E,0XEF,0X9E,0XEF,0X7D,0XEF,0X7D,0XF7,0X7D,0XEF,0X7E,0XEF,
N0X7E,0XEF,0X7E,0XEF,0X7D,0XEF,0X9D,0XEF,0X7D,0XEF,0X9D,0XEF,0X7D,0XEF,0X9D,0XEF,
N0X7D,0XEF,0X9D,0XEF,0X7D,0XEF,0X9D,0XEF,0X7D,0XEF,0X7D,0XEF,0X7D,0XEF,0X7D,0XEF,
N0X7D,0XEF,0X7D,0XEF,0X7E,0XEF,0X7E,0XEF,0X7E,0XEF,0X7E,0XEF,0X7E,0XEF,0X7E,0XEF,
N0X7E,0XEF,0X7E,0XEF,0X7E,0XEF,0X7E,0XEF,0X7E,0XEF,0X7E,0XEF,0X7E,0XEF,0X7E,0XEF,
N0X7E,0XEF,0X7E,0XEF,0X7E,0XEF,0X7E,0XEF,0X7E,0XEF,0X7E,0XEF,0X7E,0XEF,0X7E,0XEF,
N0X7E,0XEF,0X7E,0XEF,0X7E,0XEF,0X7E,0XEF,0X7E,0XEF,0X7D,0XEF,0X9D,0XEF,0X9D,0XEF,
N0X9D,0XEF,0X7E,0XEF,0X7E,0XF7,0X7E,0XF7,0X7D,0XEF,0X9D,0XEF,0XBD,0XF7,0X9C,0XF7,
N0X7C,0XF7,0XF6,0XC5,0X58,0XC6,0XE7,0X39,0X55,0X7D,0XCB,0X32,0X06,0X3A,0XBD,0XFF,
N0X7C,0XFF,0X7D,0XF7,0X9E,0XF7,0X5E,0XEF,0X7E,0XEF,0X7E,0XF7,0X7E,0XF7,0X9D,0XF7,
N0X9E,0XF7,0X9D,0XEF,0X7D,0XEF,0X7D,0XEF,0X7D,0XEF,0X7D,0XEF,0X7D,0XF7,0X7D,0XEF,
N0X7D,0XF7,0X7D,0XEF,0X7D,0XF7,0X7D,0XEF,0X7D,0XF7,0X7D,0XEF,0X7D,0XF7,0X7D,0XEF,
N0X7D,0XF7,0X7D,0XEF,0X7D,0XF7,0X7D,0XEF,0X7D,0XEF,0X7D,0XEF,0X9D,0XEF,0X9D,0XEF,
N0X7D,0XEF,0X9D,0XEF,0X9D,0XEF,0X9D,0XEF,0X9D,0XEF,0X9D,0XEF,0X9D,0XEF,0X9D,0XEF,
N0X9D,0XEF,0X9D,0XEF,0X9D,0XEF,0X9D,0XEF,0X7D,0XEF,0X7D,0XEF,0X7D,0XEF,0X7D,0XEF,
N0X7D,0XEF,0X7D,0XEF,0X7D,0XEF,0X7D,0XEF,0X7D,0XEF,0X7D,0XEF,0X7D,0XEF,0X7D,0XEF,
N0X7D,0XEF,0X7D,0XEF,0X7D,0XEF,0X9D,0XEF,0X7D,0XF7,0X7D,0XF7,0X7E,0XEF,0X7E,0XEF,
N0X7E,0XEF,0X9E,0XEF,0X7D,0XF7,0X7C,0XF7,0X9D,0XEF,0XBD,0XF7,0X7D,0XFF,0X28,0X42,
N0X29,0X2A,0X76,0X7D,0X97,0X6D,0X8A,0X1A,0X47,0X3A,0X37,0XCE,0XF7,0XCD,0XB6,0XC5,
N0X9D,0XFF,0XBE,0XFF,0XBE,0XFF,0XBE,0XFF,0XBE,0XFF,0XBE,0XFF,0XBD,0XFF,0XBD,0XF7,
N0X9D,0XF7,0X7C,0XF7,0XBE,0XFF,0XBE,0XFF,0XBE,0XFF,0XBE,0XFF,0XBE,0XFF,0XBE,0XFF,
N0XBE,0XFF,0XBE,0XFF,0X7D,0XF7,0X7D,0XF7,0X7D,0XF7,0X7D,0XF7,0X7D,0XF7,0X7D,0XF7,
N0X7D,0XF7,0X7D,0XF7,0X7D,0XF7,0X7C,0XEF,0X9D,0XF7,0X9C,0XF7,0X7C,0XEF,0X9C,0XF7,
N0X9D,0XF7,0X9D,0XF7,0X9D,0XF7,0X9D,0XF7,0X9D,0XF7,0X9D,0XF7,0X9D,0XF7,0X9D,0XF7,
N0X9D,0XF7,0X9D,0XF7,0X9D,0XF7,0X9C,0XF7,0X7D,0XF7,0X9C,0XF7,0X7D,0XF7,0X9C,0XF7,
N0X7D,0XF7,0X9C,0XF7,0X7D,0XF7,0X9C,0XF7,0X7D,0XF7,0X9C,0XF7,0X7D,0XF7,0X9C,0XF7,
N0X7D,0XF7,0X7C,0XF7,0X7C,0XF7,0X7D,0XF7,0X7D,0XF7,0X9D,0XF7,0X9D,0XEF,0X9D,0XF7,
N0X9C,0XF7,0X9C,0XF7,0XF6,0XC5,0X17,0XC6,0X38,0XCE,0X08,0X32,0X8A,0X1A,0X96,0X65,
N0XD8,0X5D,0X8A,0X0A,0X27,0X2A,0X37,0XCE,0XF7,0XCD,0X38,0XD6,0X5C,0XFF,0X7C,0XFF,
N0X7C,0XFF,0X9D,0XFF,0X9C,0XFF,0XBC,0XFF,0XBC,0XFF,0XBC,0XFF,0X9C,0XFF,0X9C,0XFF,
N0X7C,0XFF,0X7C,0XFF,0X7C,0XFF,0X7C,0XFF,0X7C,0XFF,0X7C,0XFF,0X7C,0XFF,0X7C,0XFF,
N0X7C,0XFF,0X7C,0XFF,0X9C,0XFF,0X9C,0XFF,0X9D,0XFF,0X9D,0XFF,0X9D,0XFF,0X9C,0XFF,
N0XBC,0XFF,0XBC,0XFF,0XBC,0XFF,0XBC,0XFF,0XBC,0XFF,0XBC,0XFF,0XBC,0XFF,0XBC,0XFF,
N0XBC,0XFF,0XBC,0XFF,0XBC,0XFF,0XBC,0XFF,0XBC,0XFF,0XBC,0XFF,0XBC,0XFF,0XBC,0XFF,
N0XBC,0XFF,0XBC,0XFF,0XBC,0XFF,0XBC,0XFF,0XBC,0XFF,0XBC,0XFF,0XBC,0XFF,0XBC,0XFF,
N0XBC,0XFF,0XBC,0XFF,0XBC,0XFF,0XBC,0XFF,0XBC,0XFF,0XBC,0XFF,0XBC,0XFF,0XBC,0XFF,
N0X9C,0XFF,0XBC,0XFF,0X9C,0XFF,0XBC,0XFF,0XBC,0XFF,0XBC,0XFF,0XBB,0XFF,0X9B,0XFF,
N0X57,0XD6,0X37,0XCE,0X58,0XBE,0X68,0X2A,0XCA,0X0A,0XD6,0X5D,0XB8,0X55,0XD7,0X65,
N0X75,0X75,0X28,0X22,0X69,0X3A,0X07,0X3A,0X37,0XCE,0XD5,0XCD,0XD6,0XCD,0XF6,0XCD,
N0XF5,0XCD,0XF6,0XD5,0XF5,0XCD,0XF6,0XD5,0XF6,0XCD,0XF6,0XD5,0XF6,0XD5,0XF6,0XD5,
N0XF6,0XD5,0XF6,0XD5,0XF6,0XD5,0XF6,0XD5,0XF6,0XD5,0XF6,0XD5,0XD6,0XCD,0XD6,0XCD,
N0XF6,0XD5,0XF6,0XD5,0XF6,0XD5,0XF6,0XD5,0XF6,0XD5,0XF6,0XCD,0XF6,0XCD,0XF6,0XCD,
N0XF6,0XCD,0XF6,0XCD,0XD5,0XCD,0XF6,0XCD,0XF6,0XCD,0XF6,0XCD,0XF6,0XCD,0XF6,0XCD,
N0XF6,0XCD,0XF6,0XCD,0XF6,0XCD,0XF6,0XCD,0XF6,0XCD,0XF6,0XCD,0XF6,0XCD,0XF6,0XCD,
N0XF6,0XCD,0XF6,0XCD,0XF6,0XCD,0XF6,0XCD,0XF6,0XCD,0XF6,0XCD,0XF6,0XCD,0XF6,0XCD,
N0XF6,0XCD,0XF6,0XCD,0XF6,0XCD,0XF6,0XCD,0XF6,0XCD,0XF5,0XCD,0XF5,0XD5,0XF5,0XD5,
N0X15,0XCE,0X16,0XCE,0X15,0XCE,0XF5,0XCD,0XF5,0XCD,0XF5,0XC5,0XE6,0X31,0X28,0X2A,
N0X69,0X22,0X55,0X6D,0XF7,0X5D,0XF7,0X55,0XDA,0X4D,0XF9,0X55,0XD7,0X55,0XD7,0X5D,
N0X97,0X5D,0X76,0X75,0X07,0X32,0XE7,0X49,0XC7,0X49,0XC6,0X51,0XA6,0X51,0XA6,0X51,
N0XA6,0X51,0XC7,0X51,0XA7,0X51,0XC7,0X51,0XC7,0X51,0XC7,0X51,0XC6,0X51,0XC6,0X51,
N0XC6,0X51,0XC6,0X51,0XC6,0X51,0XC6,0X51,0XC6,0X51,0XC6,0X51,0XC6,0X51,0XC6,0X51,
N0XC6,0X51,0XC6,0X51,0XC6,0X51,0XC6,0X51,0XC7,0X51,0XC7,0X51,0XC7,0X51,0XC7,0X51,
N0XC7,0X51,0XC7,0X51,0XC7,0X51,0XC7,0X51,0XC7,0X51,0XC7,0X51,0XC7,0X51,0XC7,0X51,
N0XC7,0X51,0XC7,0X51,0XC7,0X51,0XC7,0X51,0XC7,0X51,0XC7,0X51,0XC7,0X51,0XC7,0X51,
N0XC7,0X51,0XC7,0X51,0XC7,0X51,0XC7,0X51,0XC7,0X51,0XC7,0X51,0XC7,0X51,0XC7,0X51,
N0XC7,0X51,0XC7,0X51,0XC7,0X51,0XC7,0X51,0XA6,0X51,0XC6,0X51,0XE6,0X49,0XE7,0X49,
N0XC7,0X49,0XC7,0X49,0XA6,0X51,0XE8,0X39,0X77,0X7D,0X98,0X65,0XB8,0X5D,0XB8,0X55,
N0X19,0X56,0XD8,0X45,0XFB,0X4D,0X1A,0X4E,0X19,0X46,0XF8,0X45,0X19,0X4E,0XB7,0X5D,
N0X28,0X2A,0XE7,0X49,0XE7,0X51,0XC7,0X51,0XA7,0X59,0XC7,0X59,0XC7,0X51,0XC8,0X51,
N0XA8,0X51,0XA8,0X51,0XA7,0X51,0XA7,0X51,0XA7,0X51,0XA7,0X51,0XA7,0X51,0XA7,0X51,
N0XA7,0X51,0XA7,0X51,0XA7,0X51,0XA7,0X51,0XA7,0X49,0XA7,0X49,0XA7,0X51,0XA7,0X51,
N0XA7,0X51,0XA7,0X51,0X87,0X51,0X87,0X51,0X87,0X51,0X87,0X51,0X87,0X51,0X87,0X51,
N0X87,0X51,0X87,0X51,0XA7,0X51,0XA7,0X51,0XA7,0X51,0XA7,0X51,0XA7,0X51,0XA7,0X51,
N0XA7,0X51,0XA7,0X51,0X87,0X51,0X87,0X51,0X87,0X51,0X87,0X51,0X87,0X51,0X87,0X51,
N0X87,0X51,0X87,0X51,0X87,0X51,0X87,0X51,0X87,0X51,0X87,0X51,0X87,0X51,0X87,0X51,
N0X87,0X51,0X87,0X51,0XA7,0X59,0XC7,0X51,0XE7,0X49,0XE7,0X49,0XC8,0X49,0XC8,0X49,
N0X88,0X51,0XE9,0X39,0X78,0X65,0X1A,0X56,0XD9,0X4D,0XFA,0X4D,0XFA,0X4D,0XFA,0X4D,
N};
L 5 "app\game.c" 2
N#include "flappybird_button_stop.c"
L 1 ".\app\RES\Pic\flappybird_button_stop.c" 1
Nconst unsigned char gImage_flappybird_button_stop[6864] = { /* 0X00,0X10,0X4E,0X00,0X2C,0X00,0X01,0X1B, */
N0XD9,0X4D,0X1A,0X4E,0XF9,0X45,0X19,0X4E,0XF9,0X55,0XB7,0X65,0X09,0X2A,0XE8,0X41,
N0XC7,0X41,0XC7,0X41,0XC8,0X49,0XC8,0X41,0XC8,0X41,0XC8,0X41,0XC8,0X41,0XC7,0X41,
N0XC7,0X49,0XC7,0X49,0XC7,0X49,0XC7,0X41,0XE7,0X49,0XE8,0X49,0XC8,0X49,0XA7,0X49,
N0XC7,0X49,0XC7,0X49,0XC8,0X41,0XC8,0X41,0XC8,0X41,0XC8,0X41,0XC8,0X41,0XC8,0X49,
N0XC8,0X49,0XC8,0X49,0XC8,0X49,0XC7,0X49,0XC7,0X49,0XE7,0X49,0XE7,0X49,0XE7,0X49,
N0XC7,0X49,0XC7,0X49,0XC7,0X49,0XE7,0X41,0XE7,0X41,0XE7,0X41,0XC7,0X41,0XC7,0X49,
N0XC7,0X49,0XC7,0X49,0XC7,0X49,0XC7,0X49,0XC7,0X49,0XC7,0X49,0XC7,0X49,0XC7,0X49,
N0XC7,0X49,0XC7,0X49,0XC7,0X49,0XC7,0X49,0XC7,0X49,0XC7,0X49,0XC7,0X49,0XC7,0X49,
N0XC7,0X49,0XC7,0X49,0XE7,0X41,0XE7,0X41,0XE7,0X41,0XC7,0X49,0XA8,0X51,0X09,0X3A,
N0XD7,0X65,0XF8,0X45,0XF9,0X4D,0XD9,0X45,0XF9,0X4D,0X1A,0X56,0XF9,0X55,0XB8,0X4D,
N0XB9,0X55,0XD8,0X5D,0X97,0X5D,0X96,0X75,0X29,0X32,0X87,0X39,0XA6,0X39,0XA6,0X39,
N0XA7,0X39,0XA7,0X41,0XA7,0X39,0XC7,0X39,0XC7,0X39,0XC7,0X41,0XA7,0X41,0XA7,0X41,
N0X86,0X39,0X86,0X39,0XA6,0X39,0XA7,0X41,0XA7,0X41,0X86,0X41,0XA7,0X41,0XA7,0X41,
N0XA7,0X41,0XC7,0X39,0XC7,0X39,0XA7,0X39,0XA7,0X41,0XA7,0X41,0XC7,0X41,0XC7,0X41,
N0XA7,0X41,0XA7,0X41,0XA7,0X41,0XC6,0X41,0XC7,0X39,0XC7,0X41,0XC7,0X41,0XC7,0X41,
N0XC7,0X41,0XC7,0X41,0XC7,0X39,0XC7,0X39,0XC7,0X41,0XC7,0X41,0XC7,0X41,0XC7,0X41,
N0XC7,0X41,0XC7,0X41,0XC7,0X41,0XC7,0X41,0XC7,0X41,0XC7,0X41,0XC7,0X41,0XC7,0X41,
N0XC7,0X41,0XC7,0X41,0XC7,0X41,0XC7,0X41,0XC7,0X41,0XC7,0X41,0XA7,0X41,0XA6,0X41,
N0XC7,0X39,0XC7,0X39,0XC6,0X39,0XA6,0X41,0X87,0X41,0XC8,0X31,0X76,0X6D,0XD8,0X5D,
N0XD9,0X5D,0XF9,0X5D,0XB8,0X55,0XB8,0X4D,0XB8,0X5D,0XB8,0X65,0X77,0X7D,0X09,0X1A,
N0X29,0X2A,0X29,0X32,0XBF,0XF7,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
N0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
N0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
N0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
N0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
N0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XDF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
N0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
N0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
N0XFF,0XFF,0XFF,0XFF,0XDF,0XFF,0XFF,0XFF,0X09,0X2A,0XE9,0X19,0X2A,0X1A,0X77,0X6D,
N0X97,0X5D,0XF8,0X5D,0X97,0X65,0XAB,0X1A,0X2A,0X2A,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
N0XFF,0XFF,0XDE,0XFF,0XFF,0XFF,0XFF,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,
N0XFE,0XF7,0XFE,0XF7,0XFF,0XF7,0XFF,0XF7,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
N0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
N0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XF7,0XFF,0XF7,
N0XFF,0XF7,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
N0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
N0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
N0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XF7,0XFF,0XFF,
N0XDF,0XFF,0XDF,0XFF,0XDF,0XFF,0XFF,0XFF,0XFF,0XF7,0X29,0X22,0XEC,0X1A,0XB7,0X5D,
N0X76,0X75,0XAB,0X2A,0XC7,0X29,0XFF,0XFF,0XFE,0XFF,0XFE,0XFF,0XDE,0XF7,0XFF,0XF7,
N0XFF,0XFF,0XFF,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,0XFF,0XFF,0XFF,0XF7,
N0XFF,0XF7,0XFF,0XF7,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
N0XFF,0XFF,0XFE,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
N0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XF7,0XFF,0XF7,0XFF,0XF7,0XFF,0XF7,0XFF,0XFF,
N0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XF7,0XFF,0XFF,0XFE,0XFF,0XFE,0XFF,
N0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
N0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XF7,
N0XFE,0XF7,0XFE,0XF7,0XFF,0XFF,0XDF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFE,0XFF,0XFE,0XFF,
N0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0X28,0X32,0X49,0X12,0X96,0X6D,0X35,0X85,0X29,0X2A,
N0XE7,0X31,0XFF,0XFF,0XFE,0XFF,0XFE,0XFF,0XFF,0XFF,0XFF,0XF7,0XFE,0XFF,0XFE,0XFF,
N0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XF7,0XFF,0XF7,0XFF,0XF7,0XFF,0XF7,
N0XFF,0XFF,0XFF,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XF7,0XFE,0XF7,0XFE,0XF7,
N0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,
N0XFE,0XF7,0XFE,0XF7,0XFE,0XF7,0XFE,0XF7,0XFE,0XF7,0XFE,0XFF,0XFF,0XFF,0XFE,0XFF,
N0XFE,0XFF,0XFE,0XF7,0XFE,0XF7,0XFE,0XF7,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,0XFF,0XF7,
N0XFF,0XF7,0XFF,0XF7,0XFF,0XF7,0XFF,0XF7,0XFF,0XF7,0XFF,0XF7,0XFF,0XF7,0XFF,0XF7,
N0XFF,0XF7,0XFF,0XF7,0XFF,0XF7,0XFF,0XF7,0XFF,0XF7,0XFE,0XF7,0XFE,0XF7,0XFE,0XF7,
N0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFE,0XFF,0XFE,0XFF,0XFD,0XF7,
N0XFF,0XFF,0XE7,0X31,0XE8,0X21,0X55,0X85,0X28,0X3A,0XFF,0XF7,0XFF,0XF7,0XFF,0XF7,
N0XFE,0XF7,0XFF,0XF7,0XFE,0XF7,0XFE,0XF7,0XFE,0XFF,0XFE,0XFF,0XFE,0XF7,0XFE,0XF7,
N0XFE,0XFF,0XFE,0XF7,0XFF,0XF7,0XFF,0XF7,0XFF,0XF7,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
N0XFF,0XFF,0XFF,0XF7,0XFF,0XF7,0XFF,0XF7,0XFE,0XF7,0XFF,0XF7,0XFF,0XFF,0XFE,0XFF,
N0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XF7,0XFE,0XF7,
N0XFF,0XF7,0XFF,0XF7,0XFF,0XFF,0XFF,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XF7,0XFE,0XF7,
N0XFE,0XF7,0XFE,0XF7,0XFE,0XF7,0XFE,0XF7,0XFE,0XF7,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,
N0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,
N0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,
N0XFF,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,0XFF,0XFF,0XFF,0XF7,
N0XFF,0XFF,0XC8,0X31,0XA6,0X39,0XFF,0XFF,0XFF,0XF7,0XFF,0XF7,0XFF,0XF7,0XFF,0XF7,
N0XFE,0XF7,0XFF,0XFF,0XFE,0XFF,0XFE,0XF7,0XFE,0XF7,0XFF,0XF7,0XFF,0XF7,0XFF,0XFF,
N0XFF,0XF7,0XFF,0XF7,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XF7,
N0XFE,0XF7,0XFE,0XF7,0XFE,0XF7,0XFE,0XF7,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,
N0XFE,0XF7,0XFE,0XF7,0XFE,0XFF,0XFE,0XFF,0XFE,0XF7,0XFE,0XF7,0XFE,0XFF,0XFE,0XFF,
N0XFE,0XFF,0XFE,0XFF,0XFF,0XFF,0XFE,0XFF,0XFE,0XF7,0XFE,0XF7,0XFE,0XF7,0XFE,0XF7,
N0XFE,0XF7,0XFE,0XF7,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,
N0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,
N0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,0XFF,0XFF,
N0XFF,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XF7,0XDE,0XFF,0XDF,0XFF,0XE8,0X41,
N0XA7,0X41,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XDF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFE,0XF7,
N0XFE,0XF7,0XFE,0XF7,0XFF,0XF7,0XFF,0XF7,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFE,0XF7,
N0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XF7,0XFF,0XF7,0XFF,0XF7,
N0XFF,0XF7,0XFE,0XF7,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFE,0XF7,0XFF,0XF7,0XFF,0XF7,
N0XFE,0XF7,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
N0XFF,0XFF,0XFF,0XFF,0XFF,0XF7,0XFE,0XF7,0XFE,0XF7,0XFF,0XFF,0XDE,0XF7,0XFE,0XFF,
N0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,
N0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,
N0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XF7,
N0XFE,0XFF,0XFF,0XFF,0XFF,0XF7,0XFF,0XFF,0XDF,0XFF,0XC7,0X41,0XA7,0X49,0XDF,0XFF,
N0XFF,0XFF,0XFF,0XFF,0XDF,0XFF,0XFF,0XFF,0XFE,0XF7,0XFE,0XF7,0XFE,0XF7,0XFE,0XF7,
N0XFF,0XF7,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,
N0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XF7,0XFF,0XF7,0XFF,0XF7,0XFE,0XF7,0XFF,0XFF,
N0XFF,0XFF,0XFE,0XFF,0XFF,0XFF,0XFE,0XF7,0XFF,0XF7,0XFF,0XF7,0XFE,0XF7,0XFE,0XFF,
N0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFE,0XF7,
N0XFF,0XF7,0XFF,0XF7,0XFF,0XF7,0XFF,0XFF,0XFF,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,
N0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,
N0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,
N0XFE,0XF7,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,0XFF,0XF7,0XFF,0XF7,0XFE,0XF7,0XFE,0XF7,
N0XFF,0XF7,0XFF,0XFF,0XDF,0XFF,0XC7,0X41,0XA7,0X41,0XDF,0XFF,0XFF,0XFF,0XFF,0XFF,
N0XFF,0XFF,0XFE,0XFF,0XFE,0XF7,0XFE,0XF7,0XFE,0XF7,0XFE,0XFF,0XFF,0XFF,0XFF,0XFF,
N0XDF,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,
N0XFE,0XFF,0XFE,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XDE,0XFF,0XDE,0XFF,0XFF,0XFF,
N0XFF,0XFF,0XFE,0XF7,0XFF,0XF7,0XFE,0XEF,0XFE,0XF7,0XFE,0XF7,0XFE,0XF7,0XFE,0XF7,
N0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XF7,0XFE,0XF7,0XFF,0XF7,0XFF,0XF7,0XDE,0XF7,
N0XFE,0XF7,0XFE,0XFF,0XDE,0XFF,0XFF,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,
N0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,
N0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XF7,0XFE,0XF7,
N0XFE,0XF7,0XFF,0XF7,0XFF,0XFF,0XFE,0XFF,0XFE,0XF7,0XFE,0XF7,0XFF,0XFF,0XFF,0XFF,
N0XDF,0XFF,0XC7,0X41,0XA7,0X41,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFE,0XFF,0XFE,0XFF,
N0XFE,0XF7,0XFE,0XF7,0XFE,0XF7,0XFE,0XFF,0XFF,0XFF,0XFF,0XFF,0XFE,0XFF,0XFE,0XFF,
N0XFE,0XFF,0XFE,0XFF,0XFE,0XF7,0XFE,0XF7,0XFE,0XF7,0XFE,0XF7,0XFE,0XFF,0XFE,0XFF,
N0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFE,0XFF,0XFF,0XFF,0XFF,0XFF,0XBE,0XF7,0XFF,0XFF,
N0XFF,0XFF,0XFE,0XF7,0XFE,0XF7,0XFE,0XF7,0XFE,0XF7,0XFE,0XF7,0XFE,0XF7,0XFE,0XF7,
N0XFE,0XF7,0XFE,0XF7,0XFE,0XF7,0XFF,0XF7,0XFE,0XF7,0XFF,0XFF,0XFF,0XFF,0XDE,0XFF,
N0XDE,0XFF,0XFF,0XFF,0XFF,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,
N0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,
N0XFE,0XFF,0XFE,0XFF,0XFF,0XFF,0XFF,0XFF,0XFE,0XF7,0XFE,0XF7,0XFF,0XF7,0XFF,0XF7,
N0XFF,0XFF,0XFE,0XFF,0XFE,0XF7,0XFE,0XF7,0XFE,0XFF,0XFE,0XFF,0XDF,0XFF,0XC8,0X41,
N0XA7,0X41,0XFF,0XFF,0XFF,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XF7,0XFE,0XF7,
N0XFE,0XF7,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XF7,0XFE,0XF7,0XFE,0XFF,0XFE,0XFF,
N0XFE,0XF7,0XFE,0XF7,0XFE,0XF7,0XFE,0XF7,0XFF,0XF7,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
N0XFF,0XF7,0XFE,0XF7,0XFE,0XF7,0XFE,0XF7,0XFE,0XFF,0XFE,0XFF,0XBD,0XF7,0XFE,0XFF,
N0XFE,0XFF,0XFF,0XFF,0XFF,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,
N0XFE,0XF7,0XFE,0XF7,0XFE,0XFF,0XFF,0XFF,0XBE,0XFF,0XDF,0XFF,0XFF,0XFF,0XFF,0XF7,
N0XFF,0XF7,0XFE,0XF7,0XFE,0XF7,0XFE,0XF7,0XFE,0XF7,0XFE,0XF7,0XFE,0XF7,0XFE,0XF7,
N0XFE,0XF7,0XFE,0XF7,0XFE,0XF7,0XFE,0XF7,0XFE,0XF7,0XFE,0XF7,0XFE,0XF7,0XFF,0XFF,
N0XFF,0XFF,0XFF,0XFF,0XFE,0XF7,0XFE,0XF7,0XFF,0XF7,0XFF,0XFF,0XFF,0XFF,0XFE,0XFF,
N0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,0XFF,0XFF,0XDF,0XFF,0XC8,0X41,0XA7,0X41,0XFF,0XFF,
N0XFF,0XFF,0XFF,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XF7,0XFE,0XF7,0XFE,0XFF,0XFE,0XFF,
N0XFE,0XFF,0XFE,0XF7,0XFE,0XF7,0XFE,0XF7,0XFE,0XFF,0XFE,0XFF,0XFE,0XF7,0XFE,0XF7,
N0XFE,0XF7,0XFE,0XF7,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XF7,0XFE,0XF7,0XFE,0XEF,
N0XFE,0XF7,0XFE,0XF7,0XFE,0XFF,0XFD,0XFF,0XFE,0XFF,0XBD,0XFF,0XBD,0XFF,0XBD,0XFF,
N0XBD,0XFF,0XBC,0XFF,0XBC,0XFF,0XBC,0XFF,0XBC,0XFF,0XBC,0XFF,0XBC,0XFF,0XBD,0XFF,
N0X9D,0XFF,0X9D,0XFF,0X9D,0XFF,0XBE,0XFF,0XBD,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XF7,
N0XFE,0XF7,0XFE,0XF7,0XFE,0XF7,0XFE,0XF7,0XFE,0XF7,0XFE,0XF7,0XFE,0XF7,0XFE,0XF7,
N0XFE,0XF7,0XFE,0XF7,0XFE,0XF7,0XFE,0XF7,0XFE,0XF7,0XFF,0XF7,0XFF,0XF7,0XFF,0XF7,
N0XFE,0XF7,0XFE,0XFF,0XFE,0XFF,0XFF,0XFF,0XFF,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,
N0XFE,0XFF,0XFF,0XFF,0XDF,0XFF,0XC8,0X41,0XA7,0X41,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
N0XFF,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,
N0XFE,0XF7,0XFF,0XF7,0XFF,0XFF,0XFF,0XFF,0XFE,0XFF,0XFE,0XFF,0XFF,0XFF,0XFF,0XFF,
N0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XF7,0XFE,0XF7,0XFE,0XF7,0XFD,0XF7,
N0XFD,0XFF,0XFD,0XFF,0X9C,0XFF,0X90,0XC4,0X4E,0XDC,0X2D,0XE4,0X2D,0XE4,0X2D,0XE4,
N0X2D,0XE4,0X2D,0XE4,0X2D,0XE4,0X2D,0XE4,0X2D,0XE4,0X2D,0XE4,0X0D,0XEC,0X2E,0XEC,
N0X2E,0XE4,0X2E,0XD4,0XAF,0XCC,0XBB,0XFF,0XFD,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,
N0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,
N0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,0XFF,0XF7,0XFF,0XF7,0XFF,0XF7,0XFE,0XFF,0XFE,0XFF,
N0XFE,0XFF,0XFE,0XFF,0XFF,0XFF,0XFE,0XFF,0XFE,0XF7,0XFE,0XF7,0XFF,0XFF,0XDF,0XFF,
N0XBF,0XFF,0XC8,0X41,0XA7,0X41,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
N0XFF,0XFF,0XFF,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XF7,0XFF,0XF7,
N0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFE,0XFF,0XFF,0XFF,0XFF,0XFF,0XFE,0XFF,0XFE,0XFF,
N0XFF,0XFF,0XFE,0XFF,0XFE,0XF7,0XFE,0XF7,0XFD,0XF7,0XFE,0XF7,0XFE,0XFF,0XBD,0XFF,
N0X9D,0XFF,0X4F,0XD4,0X0D,0XF4,0XEB,0XFB,0XEB,0XFB,0XEB,0XFB,0XCB,0XFB,0XCB,0XFB,
N0XEB,0XFB,0XEB,0XFB,0XEB,0XFB,0XCB,0XFB,0XCB,0XFB,0XAB,0XFB,0XCB,0XFB,0X2C,0XEC,
N0X6D,0XD4,0XBA,0XFF,0XDD,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,
N0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,
N0XFE,0XFF,0XFF,0XFF,0XFF,0XF7,0XFF,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,
N0XFE,0XFF,0XFE,0XFF,0XFE,0XF7,0XFE,0XF7,0XFF,0XFF,0XDF,0XFF,0XBF,0XFF,0XA8,0X41,
N0XA7,0X41,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XF7,0XFF,0XF7,0XFE,0XFF,0XFE,0XFF,
N0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XF7,0XFE,0XF7,0XFE,0XF7,0XFF,0XFF,0XFF,0XFF,
N0XFE,0XFF,0XFE,0XFF,0XFF,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,
N0XFF,0XFF,0XFE,0XF7,0XFE,0XF7,0XFE,0XF7,0XFE,0XF7,0XDE,0XFF,0X9C,0XFF,0X4F,0XD4,
N0X0C,0XF4,0XEB,0XFB,0XCB,0XFB,0XCB,0XFB,0XCB,0XFB,0XCB,0XFB,0XEB,0XFB,0XEB,0XFB,
N0XEB,0XFB,0XCB,0XFB,0XCB,0XFB,0XAB,0XFB,0XEC,0XFB,0X0C,0XF4,0X4D,0XDC,0X9B,0XFF,
N0XDD,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,
N0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,
N0XFF,0XFF,0XFF,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XF7,
N0XFE,0XF7,0XFE,0XF7,0XFF,0XFF,0XDF,0XFF,0XDF,0XFF,0XC8,0X41,0XC7,0X39,0XFF,0XFF,
N0XFF,0XFF,0XFF,0XF7,0XFE,0XF7,0XFF,0XF7,0XFF,0XFF,0XFF,0XFF,0XFE,0XFF,0XFE,0XFF,
N0XFE,0XFF,0XFE,0XF7,0XFE,0XF7,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,
N0XFF,0XFF,0XFE,0XF7,0XFE,0XF7,0XFE,0XF7,0XFF,0XFF,0XFF,0XFF,0XFE,0XFF,0XFE,0XF7,
N0XFE,0XF7,0XFE,0XF7,0XFE,0XF7,0XDE,0XFF,0X9C,0XFF,0X2E,0XDC,0X0C,0XF4,0XEB,0XFB,
N0XCB,0XFB,0XCB,0XFB,0XCB,0XFB,0XCB,0XFB,0XEB,0XFB,0XEB,0XFB,0XEB,0XFB,0XEB,0XFB,
N0XCB,0XFB,0XCB,0XFB,0XCB,0XFB,0XEC,0XF3,0X4D,0XDC,0X9B,0XFF,0XDD,0XFF,0XFE,0XFF,
N0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,
N0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,
N0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XF7,0XFE,0XF7,0XFE,0XF7,0XFF,0XFF,
N0XFF,0XFF,0XDF,0XFF,0XDF,0XFF,0XC7,0X41,0XC7,0X41,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
N0XFE,0XF7,0XFF,0XF7,0XFF,0XFF,0XFF,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,
N0XFE,0XFF,0XFE,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFE,0XF7,
N0XFE,0XF7,0XFE,0XF7,0XFF,0XFF,0XFF,0XFF,0XFE,0XFF,0XFE,0XF7,0XFE,0XF7,0XFE,0XF7,
N0XFE,0XFF,0XDE,0XFF,0X7C,0XFF,0X2E,0XDC,0X0C,0XF4,0XEB,0XFB,0XCB,0XFB,0XCB,0XFB,
N0XCB,0XFB,0XCB,0XFB,0XEB,0XFB,0XEA,0XFB,0XEB,0XFB,0XEB,0XFB,0XCB,0XFB,0XCB,0XFB,
N0XEB,0XFB,0X0C,0XEC,0X6D,0XD4,0X9B,0XFF,0XDD,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,
N0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,
N0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,0XFF,0XFF,0XFF,0XFF,0XFE,0XFF,0XFE,0XFF,
N0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XF7,0XFE,0XF7,0XFF,0XFF,0XDF,0XFF,
N0XDF,0XFF,0XE8,0X41,0XC7,0X41,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
N0XFF,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,
N0XFF,0XFF,0XFF,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XF7,0XFE,0XF7,0XFE,0XF7,0XFE,0XF7,
N0XFF,0XF7,0XFF,0XFF,0XFF,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,0XBD,0XFF,
N0X7B,0XFF,0X4E,0XDC,0X0C,0XF4,0XEB,0XFB,0XCB,0XFB,0XCB,0XFB,0XCB,0XFB,0XCB,0XFB,
N0XEA,0XFB,0XEA,0XFB,0XEA,0XFB,0XEB,0XFB,0XEB,0XFB,0XCB,0XFB,0XEB,0XFB,0X0C,0XEC,
N0X6E,0XDC,0X9B,0XFF,0XDD,0XFF,0XFE,0XFF,0XFF,0XFF,0XFE,0XFF,0XFF,0XFF,0XFE,0XFF,
N0XFF,0XFF,0XFE,0XFF,0XFF,0XFF,0XFE,0XFF,0XFF,0XFF,0XFE,0XFF,0XFF,0XFF,0XFE,0XFF,
N0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,
N0XFE,0XFF,0XFE,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XDF,0XFF,0XDF,0XFF,0XC7,0X41,
N0XC7,0X41,0XFF,0XFF,0XDF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
N0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
N0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XF7,0XFE,0XF7,0XFF,0XF7,0XFF,0XFF,0XFF,0XFF,
N0XFF,0XFF,0XFF,0XFF,0XFE,0XFF,0XFE,0XFF,0XFE,0XFF,0XBD,0XFF,0X7B,0XFF,0X6E,0XDC,
N0X0C,0XF4,0XEB,0XFB,0XCB,0XFB,0XCB,0XFB,0XCB,0XFB,0XCB,0XFB,0XCB,0XFB,0XEA,0XFB,
N0XEA,0XFB,0XEB,0XFB,0XEB,0XFB,0XCB,0XFB,0XEB,0XFB,0X0C,0XF4,0X6E,0XDC,0X7B,0XFF,
N0XDD,0XFF,0XFE,0XFF,0XFF,0XFF,0XFE,0XFF,0XFF,0XFF,0XFE,0XFF,0XFF,0XFF,0XFE,0XFF,
N0XFF,0XFF,0XFE,0XFF,0XFF,0XFF,0XFE,0XFF,0XFF,0XFF,0XFE,0XFF,0XFF,0XFF,0XFF,0XFF,
N0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
N0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XDF,0XFF,0XDF,0XFF,0XE8,0X41,0XA7,0X39,0XBF,0XFF,
N0X9E,0XF7,0X9D,0XEF,0X9D,0XEF,0X9D,0XEF,0X9D,0XEF,0X9D,0XEF,0X9D,0XF7,0X9D,0XF7,
N0X9D,0XEF,0X9D,0XEF,0X9D,0XEF,0X9D,0XEF,0X9D,0XF7,0X9D,0XF7,0X9D,0XEF,0X9D,0XEF,
N0X9D,0XEF,0X9D,0XEF,0X9D,0XEF,0X9D,0XEF,0X9D,0XEF,0X7E,0XEF,0X7D,0XEF,0X7D,0XEF,
N0X9D,0XEF,0X9D,0XEF,0X9D,0XF7,0X7C,0XFF,0X3A,0XFF,0X2D,0XD4,0X0C,0XF4,0XEB,0XFB,
N0XCB,0XFB,0XCB,0XFB,0XCB,0XFB,0XCB,0XFB,0XEB,0XFB,0XEA,0XFB,0XEB,0XFB,0XEB,0XFB,
N0XEB,0XFB,0XCB,0XFB,0XCB,0XFB,0XEC,0XF3,0X4E,0XDC,0X3A,0XFF,0X5C,0XFF,0X9D,0XEF,
N0X9D,0XEF,0X9D,0XEF,0X9D,0XEF,0X9D,0XEF,0X9D,0XEF,0X9D,0XEF,0X9D,0XEF,0X9D,0XEF,
N0X9D,0XEF,0X9D,0XEF,0X9D,0XEF,0X9D,0XEF,0X9D,0XEF,0X9D,0XEF,0X9D,0XEF,0X9D,0XEF,
N0X9D,0XEF,0X9D,0XEF,0X9D,0XEF,0X9D,0XEF,0X9D,0XEF,0X9D,0XEF,0X9D,0XEF,0X7D,0XEF,
N0X7D,0XEF,0X7E,0XF7,0X7E,0XFF,0XA7,0X41,0XC8,0X41,0XDF,0XFF,0X9E,0XF7,0X9E,0XF7,
N0X9D,0XEF,0X9D,0XEF,0X7D,0XEF,0X7D,0XEF,0X7D,0XF7,0X7D,0XEF,0X9D,0XEF,0X9D,0XEF,
N0X9D,0XEF,0X9D,0XEF,0X7D,0XEF,0X7D,0XEF,0X9D,0XEF,0X9D,0XEF,0X9D,0XEF,0X9D,0XEF,
N0X9D,0XEF,0X9D,0XEF,0X7E,0XF7,0X7E,0XF7,0X7D,0XF7,0X7D,0XEF,0X9D,0XEF,0X9D,0XEF,
N0XBD,0XEF,0X7C,0XFF,0X3A,0XFF,0X4E,0XDC,0X0C,0XF4,0XEB,0XFB,0XEB,0XFB,0XEB,0XFB,
N0XEB,0XFB,0XEB,0XFB,0XEA,0XFB,0XEA,0XFB,0XEB,0XFB,0XEB,0XFB,0XCB,0XFB,0XCB,0XFB,
N0XCB,0XFB,0XED,0XF3,0X2E,0XDC,0X1A,0XFF,0X5C,0XFF,0X7D,0XEF,0X7D,0XEF,0X7D,0XEF,
N0X7D,0XEF,0X7D,0XEF,0X7D,0XEF,0X7D,0XEF,0X7D,0XEF,0X7D,0XEF,0X7D,0XEF,0X7D,0XEF,
N0X7D,0XEF,0X7D,0XEF,0X7D,0XEF,0X7D,0XEF,0X7D,0XEF,0X7D,0XEF,0X7D,0XEF,0X9D,0XEF,
N0X9D,0XEF,0X9D,0XEF,0X9D,0XEF,0X9D,0XEF,0X9E,0XF7,0X9E,0XF7,0X9E,0XF7,0X9E,0XF7,
N0X9F,0XFF,0XA7,0X41,0XC8,0X41,0XBF,0XFF,0X9E,0XF7,0X9E,0XF7,0X9E,0XF7,0X9E,0XF7,
N0X9D,0XF7,0X7D,0XEF,0X7D,0XF7,0X7D,0XF7,0X7D,0XEF,0X9D,0XEF,0X9D,0XEF,0X7D,0XEF,
N0X7D,0XF7,0X7D,0XF7,0X9D,0XEF,0X9D,0XEF,0X7D,0XEF,0X7D,0XF7,0X7D,0XF7,0X7D,0XF7,
N0X7E,0XF7,0X7E,0XF7,0X7E,0XEF,0X9D,0XEF,0X9D,0XEF,0X9D,0XEF,0X9D,0XEF,0X5B,0XF7,
N0X3A,0XFF,0X4E,0XDC,0X0C,0XF4,0XCB,0XFB,0XEB,0XFB,0XEB,0XFB,0XEB,0XFB,0XEB,0XFB,
N0XEA,0XFB,0XEA,0XFB,0XEB,0XFB,0XCB,0XFB,0XCB,0XFB,0XCB,0XFB,0XCB,0XFB,0XEC,0XF3,
N0X2E,0XDC,0XFA,0XFE,0X5C,0XFF,0X7D,0XEF,0X7D,0XEF,0X7D,0XEF,0X7D,0XEF,0X7D,0XEF,
N0X7D,0XEF,0X7D,0XEF,0X7D,0XEF,0X7D,0XEF,0X7D,0XEF,0X7D,0XEF,0X7D,0XEF,0X7D,0XEF,
N0X7D,0XEF,0X7D,0XEF,0X7D,0XEF,0X7D,0XEF,0X7D,0XEF,0X7D,0XEF,0X9D,0XEF,0X9D,0XEF,
N0X9D,0XEF,0X9D,0XEF,0X7D,0XEF,0X7D,0XEF,0X7E,0XF7,0X7E,0XF7,0X7E,0XFF,0XA7,0X41,
N0XC8,0X41,0XBF,0XFF,0X7E,0XF7,0X9E,0XF7,0X9E,0XF7,0X9E,0XEF,0X7D,0XEF,0X7E,0XF7,
N0X7D,0XF7,0X7D,0XF7,0X7D,0XEF,0X9D,0XEF,0X9D,0XEF,0X7D,0XEF,0X7D,0XF7,0X7D,0XF7,
N0X9D,0XEF,0X9D,0XEF,0X7E,0XF7,0X7D,0XF7,0X7D,0XF7,0X7D,0XF7,0X5E,0XF7,0X7E,0XF7,
N0X9E,0XF7,0X9E,0XEF,0X7D,0XEF,0XBD,0XEF,0X9D,0XEF,0X5C,0XFF,0X1A,0XFF,0X4E,0XDC,
N0XEC,0XF3,0XCB,0XFB,0XCB,0XFB,0XEB,0XFB,0XEB,0XFB,0XEB,0XFB,0XEA,0XFB,0XEA,0XFB,
N0XCA,0XFB,0XCA,0XFB,0XCB,0XFB,0XAB,0XFB,0XCB,0XFB,0XEC,0XF3,0X2E,0XDC,0X1A,0XFF,
N0X5C,0XFF,0X7D,0XEF,0X7D,0XEF,0X7D,0XEF,0X7D,0XEF,0X7D,0XEF,0X7D,0XEF,0X7D,0XEF,
N0X7D,0XEF,0X7D,0XEF,0X7D,0XEF,0X7D,0XEF,0X7D,0XEF,0X7D,0XEF,0X7D,0XEF,0X7D,0XEF,
N0X7E,0XEF,0X7E,0XEF,0X7E,0XEF,0X7D,0XEF,0X7D,0XEF,0X7D,0XEF,0X7D,0XEF,0X7D,0XEF,
N0X7E,0XEF,0X7E,0XEF,0X7E,0XF7,0X7E,0XF7,0X5E,0XF7,0XA8,0X41,0XC8,0X41,0XBF,0XFF,
N0X7E,0XF7,0X7E,0XEF,0X7D,0XEF,0X7D,0XEF,0X7D,0XEF,0X7D,0XEF,0X7D,0XF7,0X7D,0XF7,
N0X7D,0XEF,0X9D,0XEF,0X9D,0XEF,0X7D,0XEF,0X7D,0XF7,0X7D,0XF7,0X9D,0XEF,0X9D,0XEF,
N0X7E,0XF7,0X7D,0XF7,0X7D,0XF7,0X7D,0XF7,0X7E,0XF7,0X7E,0XF7,0X9E,0XEF,0X9D,0XEF,
N0X9D,0XEF,0X9D,0XEF,0X7D,0XF7,0X5C,0XFF,0XDA,0XFE,0X2E,0XDC,0XEC,0XFB,0XCA,0XFB,
N0XCA,0XFB,0XCA,0XFB,0XCB,0XFB,0XCA,0XFB,0XEA,0XFB,0XCA,0XFB,0XCA,0XFB,0XCB,0XFB,
N0XCB,0XFB,0XCB,0XFB,0XCB,0XFB,0XEC,0XF3,0X6E,0XDC,0X3A,0XFF,0X5C,0XFF,0X7D,0XEF,
N0X7D,0XEF,0X7D,0XEF,0X7D,0XEF,0X7D,0XEF,0X7D,0XEF,0X7D,0XEF,0X7D,0XEF,0X7D,0XEF,
N0X7D,0XEF,0X7D,0XEF,0X7D,0XEF,0X7D,0XEF,0X7D,0XEF,0X7D,0XEF,0X7E,0XEF,0X7E,0XEF,
N0X7E,0XEF,0X7E,0XEF,0X7D,0XEF,0X7D,0XEF,0X7D,0XEF,0X7D,0XEF,0X7E,0XEF,0X9E,0XF7,
N0X7E,0XF7,0X7E,0XF7,0X7E,0XFF,0XC8,0X41,0XC8,0X41,0XBF,0XFF,0X7E,0XF7,0X7E,0XEF,
N0X9E,0XF7,0X7E,0XEF,0X7D,0XEF,0X7D,0XF7,0X7D,0XF7,0X7D,0XF7,0X7D,0XEF,0X9D,0XEF,
N0X9D,0XEF,0X7D,0XEF,0X7D,0XF7,0X7D,0XF7,0X9D,0XEF,0X9D,0XEF,0X7E,0XF7,0X7D,0XF7,
N0X7D,0XF7,0X7D,0XEF,0X7E,0XEF,0X7E,0XEF,0X7D,0XEF,0XBE,0XEF,0XBE,0XF7,0X5D,0XEF,
N0X5D,0XF7,0X5D,0XFF,0XFB,0XFE,0X2F,0XE4,0XEC,0XFB,0XCB,0XFB,0XEB,0XFB,0XEB,0XFB,
N0XEB,0XFB,0XEB,0XFB,0XEB,0XFB,0XEB,0XFB,0XEB,0XFB,0XAB,0XFB,0XAB,0XFB,0XEC,0XFB,
N0XEC,0XFB,0XEC,0XEB,0X6E,0XD4,0X1A,0XFF,0X5C,0XFF,0X7D,0XEF,0X7D,0XEF,0X7D,0XEF,
N0X7D,0XEF,0X7D,0XEF,0X7D,0XEF,0X7D,0XEF,0X7D,0XEF,0X7D,0XEF,0X7D,0XEF,0X7D,0XEF,
N0X7D,0XEF,0X7D,0XEF,0X7D,0XEF,0X7D,0XEF,0X7E,0XEF,0X7E,0XEF,0X7E,0XF7,0X7E,0XF7,
N0X7D,0XF7,0X7D,0XF7,0X7D,0XEF,0X7D,0XEF,0X7E,0XEF,0X9E,0XF7,0X7E,0XF7,0X7E,0XF7,
N0X7E,0XFF,0XC8,0X49,0XA7,0X41,0XBF,0XFF,0X7E,0XF7,0X7E,0XEF,0X9E,0XEF,0X9E,0XEF,
N0X7D,0XEF,0X9E,0XF7,0X7D,0XF7,0X7D,0XF7,0X7D,0XEF,0X9D,0XEF,0X9D,0XEF,0X7D,0XEF,
N0X7D,0XF7,0X7D,0XF7,0X9D,0XEF,0X9D,0XEF,0X7E,0XF7,0X7D,0XF7,0X9D,0XEF,0X9D,0XEF,
N0X9E,0XEF,0X9E,0XEF,0XBE,0XEF,0X7D,0XEF,0X7D,0XEF,0X7D,0XF7,0X7E,0XF7,0X3C,0XFF,
N0XDA,0XFE,0X0E,0XDC,0XEC,0XF3,0XCB,0XFB,0XCB,0XFB,0XCB,0XFB,0XCB,0XFB,0XCB,0XFB,
N0XCB,0XFB,0XCB,0XFB,0XAB,0XFB,0XCB,0XFB,0XCB,0XFB,0XCB,0XFB,0XCB,0XF3,0X0C,0XEC,
N0X8E,0XDC,0X3A,0XFF,0X5C,0XFF,0X7D,0XEF,0X7D,0XEF,0X7D,0XEF,0X7D,0XEF,0X7D,0XEF,
N0X7D,0XEF,0X7D,0XEF,0X7D,0XEF,0X7D,0XEF,0X7D,0XEF,0X7D,0XEF,0X7D,0XEF,0X7D,0XEF,
N0X7D,0XEF,0X7D,0XEF,0X7E,0XEF,0X7E,0XEF,0X7E,0XF7,0X7E,0XF7,0X7D,0XF7,0X7D,0XF7,
N0X7D,0XEF,0X7D,0XEF,0X7E,0XEF,0X7E,0XEF,0X7E,0XF7,0X7E,0XF7,0X7E,0XFF,0XC8,0X41,
N0XA7,0X41,0X9E,0XFF,0X5D,0XF7,0X7E,0XEF,0X7E,0XEF,0X7E,0XEF,0X7E,0XEF,0X9E,0XF7,
N0X7E,0XF7,0X7E,0XF7,0X7D,0XEF,0X9D,0XEF,0X9D,0XEF,0X7D,0XEF,0X7D,0XF7,0X7D,0XF7,
N0X7E,0XEF,0X7E,0XEF,0X7E,0XF7,0X7D,0XEF,0X9D,0XEF,0X9D,0XEF,0X9E,0XEF,0X9E,0XEF,
N0X9D,0XEF,0X9E,0XEF,0X9E,0XF7,0X7D,0XF7,0X5D,0XEF,0X5D,0XFF,0X3C,0XFF,0X4F,0XDC,
N0X0C,0XF4,0XEB,0XFB,0XEB,0XFB,0XEB,0XFB,0XCB,0XFB,0XCB,0XFB,0XCB,0XFB,0XCB,0XFB,
N0XEB,0XFB,0XCB,0XFB,0XCB,0XFB,0XEB,0XFB,0X0B,0XFC,0X0C,0XF4,0X2D,0XDC,0X19,0XFF,
N0X5C,0XFF,0X7D,0XEF,0X7D,0XEF,0X7D,0XEF,0X7D,0XEF,0X7D,0XEF,0X7D,0XEF,0X7D,0XEF,
N0X7D,0XEF,0X7D,0XEF,0X7D,0XEF,0X7D,0XEF,0X7D,0XEF,0X7D,0XEF,0X7D,0XEF,0X7D,0XEF,
N0X7D,0XEF,0X7D,0XEF,0X7D,0XF7,0X7D,0XF7,0X7D,0XF7,0X7D,0XF7,0X7D,0XEF,0X7D,0XEF,
N0X7E,0XEF,0X9E,0XF7,0X7E,0XF7,0X9E,0XF7,0X7E,0XFF,0XC8,0X41,0XC7,0X41,0XBF,0XFF,
N0X7E,0XF7,0X7E,0XEF,0X7E,0XEF,0X9E,0XEF,0X7E,0XEF,0X7E,0XEF,0X7E,0XF7,0X7E,0XEF,
N0X7D,0XEF,0X9D,0XEF,0X9D,0XEF,0X9D,0XEF,0X7D,0XF7,0X7D,0XF7,0X7E,0XF7,0X7E,0XF7,
N0X7E,0XF7,0X7D,0XEF,0X9D,0XEF,0X9D,0XEF,0X9D,0XEF,0X9D,0XEF,0X9D,0XEF,0X9E,0XF7,
N0X5D,0XEF,0X7E,0XEF,0X9E,0XF7,0X9D,0XFF,0X1B,0XFF,0X90,0XCC,0X4E,0XDC,0X2D,0XE4,
N0X2D,0XE4,0X2D,0XE4,0X0D,0XEC,0X0D,0XEC,0X0D,0XEC,0X2D,0XEC,0X0D,0XE4,0X2D,0XE4,
N0X4D,0XE4,0X2D,0XE4,0X0D,0XE4,0X0D,0XDC,0X90,0XD4,0X1B,0XFF,0X5D,0XFF,0X7D,0XEF,
N0X7D,0XEF,0X7D,0XEF,0X7D,0XEF,0X7D,0XEF,0X7D,0XEF,0X7D,0XEF,0X7D,0XEF,0X7D,0XEF,
N0X7D,0XEF,0X7D,0XEF,0X7D,0XEF,0X7D,0XEF,0X7D,0XEF,0X7D,0XEF,0X7D,0XEF,0X7D,0XEF,
N0X7D,0XF7,0X7D,0XF7,0X7D,0XF7,0X7D,0XF7,0X7D,0XEF,0X7D,0XEF,0X7E,0XEF,0X7E,0XEF,
N0X7E,0XF7,0X9E,0XF7,0X7E,0XFF,0XC8,0X41,0XC7,0X41,0XBF,0XFF,0X7E,0XF7,0X9E,0XF7,
N0X9E,0XEF,0X9D,0XEF,0X7E,0XEF,0X7E,0XEF,0X7E,0XF7,0X7E,0XEF,0X7E,0XEF,0X7E,0XEF,
N0X9D,0XEF,0X9D,0XEF,0X7D,0XF7,0X7D,0XF7,0X7E,0XF7,0X7E,0XF7,0X7E,0XF7,0X7D,0XF7,
N0X9D,0XEF,0X9D,0XEF,0X7D,0XEF,0X7D,0XF7,0X7E,0XF7,0X5D,0XF7,0X5D,0XF7,0X9E,0XF7,
N0X9E,0XEF,0X7D,0XE7,0X9C,0XFF,0X5B,0XFF,0X3B,0XFF,0X3B,0XFF,0X3B,0XFF,0X3B,0XFF,
N0X3B,0XFF,0X3B,0XFF,0X3B,0XFF,0X3B,0XFF,0X3B,0XFF,0X5B,0XFF,0X5B,0XFF,0X1B,0XFF,
N0X1B,0XFF,0X5C,0XFF,0X1C,0XFF,0X5D,0XF7,0X7D,0XF7,0X9D,0XEF,0X9D,0XEF,0X9D,0XEF,
N0X9D,0XEF,0X9D,0XEF,0X9D,0XEF,0X9D,0XEF,0X9D,0XEF,0X9D,0XEF,0X9D,0XEF,0X9D,0XEF,
N0X9D,0XEF,0X9D,0XEF,0X9D,0XEF,0X9D,0XEF,0X7D,0XEF,0X7D,0XEF,0X7D,0XF7,0X7D,0XF7,
N0X7D,0XF7,0X7D,0XF7,0X7D,0XEF,0X7D,0XEF,0X7D,0XEF,0X7D,0XEF,0X7E,0XF7,0X7E,0XF7,
N0X7E,0XFF,0XC8,0X41,0XC8,0X41,0XBF,0XFF,0X7E,0XF7,0X7D,0XEF,0X9E,0XF7,0X9D,0XEF,
N0X7E,0XEF,0X9E,0XF7,0X7E,0XF7,0X7E,0XEF,0X7D,0XEF,0X9D,0XEF,0X9D,0XEF,0X9D,0XEF,
N0X7D,0XEF,0X7D,0XF7,0X7D,0XF7,0X7D,0XF7,0X7E,0XF7,0X7D,0XF7,0X9D,0XEF,0X9D,0XEF,
N0X7D,0XF7,0X7D,0XF7,0X7D,0XF7,0X7D,0XF7,0X7D,0XF7,0X5D,0XEF,0X9E,0XEF,0XBE,0XEF,
N0X7C,0XEF,0X9C,0XF7,0X7D,0XF7,0X7D,0XF7,0X7D,0XEF,0X7D,0XF7,0X7D,0XF7,0X7D,0XF7,
N0X7D,0XF7,0X9D,0XEF,0X9E,0XEF,0X9D,0XEF,0X9D,0XEF,0X9D,0XF7,0X7D,0XF7,0X3D,0XF7,
N0X9F,0XF7,0X7E,0XEF,0X7E,0XEF,0X9D,0XEF,0X9D,0XEF,0X9D,0XEF,0X9D,0XEF,0X9D,0XEF,
N0X9D,0XEF,0X9D,0XEF,0X9D,0XEF,0X9D,0XEF,0X9D,0XEF,0X9D,0XEF,0X9D,0XEF,0X9D,0XEF,
N0X9D,0XEF,0X9D,0XEF,0X7D,0XEF,0X7D,0XEF,0X7D,0XF7,0X7D,0XF7,0X7D,0XF7,0X7D,0XF7,
N0X7D,0XEF,0X7D,0XEF,0X9E,0XF7,0X9E,0XF7,0X9E,0XF7,0X7E,0XF7,0X7E,0XF7,0XC8,0X41,
N0XE8,0X39,0XBF,0XF7,0X9E,0XF7,0X7E,0XF7,0X7D,0XF7,0X7D,0XEF,0X7E,0XF7,0X7E,0XF7,
N0X9E,0XF7,0X7D,0XEF,0X7D,0XEF,0X7D,0XEF,0X9D,0XEF,0X9D,0XEF,0X7D,0XEF,0X7D,0XF7,
N0X7D,0XF7,0X7D,0XEF,0X7D,0XF7,0X7D,0XEF,0X7D,0XEF,0X7D,0XEF,0X7D,0XEF,0X7D,0XF7,
N0X7D,0XF7,0X7D,0XF7,0X7D,0XF7,0X7D,0XEF,0X9D,0XEF,0X9D,0XEF,0X9D,0XEF,0X7D,0XF7,
N0X7D,0XF7,0X7D,0XEF,0X7D,0XEF,0X7D,0XEF,0X7D,0XF7,0X7D,0XF7,0X7D,0XEF,0X7D,0XEF,
N0X9D,0XEF,0X9D,0XEF,0X9D,0XEF,0X7D,0XEF,0X7D,0XF7,0X7D,0XF7,0X7E,0XEF,0X7E,0XEF,
N0X7D,0XEF,0X7D,0XEF,0X7D,0XEF,0X7D,0XEF,0X7D,0XEF,0X7D,0XEF,0X7D,0XEF,0X7D,0XEF,
N0X7D,0XEF,0X7D,0XEF,0X7D,0XEF,0X7D,0XEF,0X7D,0XEF,0X7D,0XEF,0X7D,0XEF,0X7D,0XEF,
N0X9D,0XEF,0X9D,0XEF,0X7D,0XF7,0X7D,0XF7,0X7D,0XF7,0X7D,0XF7,0X9E,0XF7,0X9E,0XF7,
N0X7D,0XEF,0X9E,0XF7,0X9E,0XEF,0X5D,0XE7,0X9E,0XF7,0XC8,0X49,0X08,0X3A,0XDF,0XFF,
N0X5E,0XF7,0X7D,0XF7,0X7D,0XF7,0X9D,0XF7,0X9E,0XF7,0X7E,0XF7,0X9E,0XF7,0X9D,0XF7,
N0X7D,0XF7,0X9D,0XF7,0X9D,0XEF,0X9D,0XEF,0X9E,0XF7,0X7E,0XF7,0X7D,0XF7,0X7D,0XEF,
N0X7D,0XF7,0X7D,0XEF,0X7D,0XF7,0X7D,0XEF,0X7D,0XF7,0X7D,0XEF,0X7D,0XF7,0X7D,0XEF,
N0X7D,0XF7,0X7D,0XEF,0X7D,0XF7,0X7D,0XEF,0X7D,0XF7,0X7D,0XEF,0X7D,0XEF,0X7D,0XEF,
N0X7D,0XEF,0X7D,0XEF,0X7D,0XEF,0X7D,0XEF,0X7D,0XEF,0X7D,0XEF,0X7D,0XEF,0X7D,0XEF,
N0X7D,0XEF,0X7D,0XEF,0X7D,0XEF,0X7D,0XEF,0X7D,0XEF,0X7D,0XEF,0X7D,0XEF,0X7D,0XEF,
N0X7D,0XEF,0X7D,0XEF,0X7D,0XEF,0X7D,0XEF,0X7D,0XEF,0X7D,0XEF,0X7D,0XEF,0X7D,0XEF,
N0X7D,0XEF,0X7D,0XEF,0X7D,0XEF,0X7D,0XEF,0X7D,0XEF,0X7D,0XEF,0X9D,0XEF,0X9D,0XEF,
N0X7D,0XF7,0X7D,0XF7,0X7D,0XF7,0X7D,0XEF,0X7E,0XF7,0X7E,0XF7,0X7E,0XF7,0X5D,0XEF,
N0X9E,0XEF,0X9E,0XEF,0X7E,0XFF,0XE8,0X49,0XA6,0X41,0XBE,0XFF,0X9D,0XFF,0X7D,0XF7,
N0X7D,0XEF,0X7D,0XEF,0X9E,0XF7,0X5D,0XEF,0X9D,0XEF,0X9D,0XEF,0X7D,0XF7,0X7D,0XF7,
N0X7D,0XF7,0X7D,0XF7,0X7D,0XF7,0X7D,0XF7,0X7E,0XF7,0X7E,0XF7,0X7E,0XF7,0X7E,0XF7,
N0X7E,0XF7,0X7E,0XF7,0X7E,0XF7,0X7E,0XF7,0X7E,0XF7,0X7D,0XF7,0X7E,0XF7,0X7D,0XF7,
N0X7E,0XF7,0X7D,0XF7,0X7D,0XF7,0X7D,0XF7,0X7D,0XF7,0X7D,0XF7,0X7D,0XF7,0X7D,0XF7,
N0X7D,0XF7,0X7D,0XF7,0X7D,0XF7,0X7D,0XF7,0X7D,0XF7,0X7D,0XF7,0X7D,0XF7,0X7D,0XF7,
N0X7D,0XF7,0X7D,0XF7,0X7D,0XF7,0X7D,0XF7,0X7D,0XF7,0X7D,0XF7,0X7D,0XF7,0X7D,0XF7,
N0X7D,0XF7,0X7D,0XF7,0X7D,0XF7,0X7D,0XF7,0X7D,0XF7,0X7D,0XF7,0X7D,0XF7,0X7D,0XF7,
N0X7D,0XF7,0X7D,0XF7,0X7D,0XF7,0X7D,0XF7,0X7E,0XF7,0X7E,0XF7,0X7E,0XEF,0X7E,0XEF,
N0X7E,0XEF,0X7E,0XEF,0X7E,0XF7,0X7E,0XF7,0X9E,0XF7,0X9D,0XF7,0X9E,0XF7,0X9E,0XF7,
N0X7E,0XFF,0XA7,0X41,0XC7,0X49,0XBE,0XFF,0X7C,0XF7,0XDE,0XFF,0X9E,0XF7,0XBE,0XF7,
N0X7E,0XEF,0X7E,0XF7,0X7D,0XF7,0X9D,0XEF,0X9D,0XEF,0X7D,0XEF,0X7D,0XEF,0X7E,0XF7,
N0X7D,0XF7,0X7D,0XF7,0X7E,0XEF,0X7E,0XEF,0X7E,0XEF,0X7E,0XEF,0X7E,0XEF,0X7E,0XEF,
N0X7E,0XEF,0X7E,0XEF,0X7E,0XF7,0X7E,0XF7,0X7E,0XF7,0X7E,0XF7,0X7E,0XF7,0X7E,0XF7,
N0X7E,0XF7,0X7D,0XF7,0X7D,0XF7,0X7D,0XF7,0X7D,0XF7,0X7D,0XF7,0X7D,0XF7,0X7D,0XF7,
N0X7D,0XF7,0X7D,0XF7,0X7D,0XF7,0X7D,0XF7,0X7D,0XF7,0X7D,0XF7,0X7D,0XF7,0X7D,0XF7,
N0X7D,0XF7,0X7D,0XF7,0X7D,0XF7,0X7D,0XF7,0X7D,0XF7,0X7D,0XF7,0X7D,0XF7,0X7D,0XF7,
N0X7D,0XF7,0X7D,0XF7,0X7D,0XF7,0X7D,0XF7,0X7D,0XF7,0X7D,0XF7,0X7D,0XF7,0X7D,0XF7,
N0X7D,0XF7,0X7D,0XF7,0X7E,0XF7,0X7E,0XEF,0X7E,0XEF,0X7E,0XEF,0X9E,0XEF,0X7E,0XF7,
N0X7E,0XF7,0X7E,0XF7,0X9E,0XF7,0X5C,0XEF,0XDE,0XFF,0X7D,0XF7,0X9E,0XFF,0XC7,0X41,
N0XA6,0X41,0X58,0XD6,0X58,0XCE,0X9D,0XF7,0XDE,0XF7,0X9E,0XEF,0X5D,0XEF,0X7E,0XF7,
N0X7E,0XF7,0X7D,0XEF,0X9D,0XEF,0X9E,0XEF,0X9E,0XEF,0X9E,0XEF,0X7E,0XF7,0X7E,0XF7,
N0X7E,0XEF,0X7E,0XEF,0X7E,0XEF,0X7E,0XEF,0X7D,0XEF,0X7D,0XEF,0X7D,0XEF,0X7D,0XEF,
N0X7D,0XEF,0X7D,0XEF,0X7D,0XEF,0X7D,0XEF,0X7D,0XEF,0X7D,0XEF,0X7D,0XEF,0X7D,0XEF,
N0X7E,0XEF,0X7E,0XEF,0X7E,0XEF,0X7E,0XEF,0X7E,0XEF,0X7E,0XEF,0X7E,0XEF,0X7E,0XEF,
N0X7E,0XEF,0X7E,0XEF,0X7E,0XEF,0X7E,0XEF,0X7E,0XEF,0X7E,0XEF,0X7E,0XEF,0X7E,0XEF,
N0X7E,0XEF,0X7E,0XEF,0X7E,0XEF,0X7E,0XEF,0X7E,0XEF,0X7E,0XEF,0X7E,0XEF,0X7E,0XEF,
N0X7E,0XEF,0X7E,0XEF,0X7E,0XEF,0X7E,0XEF,0X7E,0XEF,0X7E,0XEF,0X7E,0XEF,0X7D,0XEF,
N0X7D,0XEF,0X9D,0XEF,0X9D,0XEF,0X7E,0XEF,0X7E,0XF7,0X7E,0XF7,0X9E,0XF7,0X9D,0XEF,
N0X9D,0XF7,0XDE,0XFF,0XBD,0XFF,0X17,0XCE,0XF7,0XCD,0XE7,0X49,0X08,0X32,0X17,0XBE,
N0X17,0XC6,0X9D,0XF7,0X9D,0XF7,0XBE,0XF7,0X9E,0XF7,0X9E,0XF7,0X7E,0XEF,0X7D,0XEF,
N0X7E,0XEF,0X9E,0XEF,0X7E,0XEF,0X9E,0XEF,0X7D,0XEF,0X7D,0XF7,0X7D,0XEF,0X7E,0XEF,
N0X7E,0XEF,0X7E,0XEF,0X7D,0XEF,0X9D,0XEF,0X7D,0XEF,0X9D,0XEF,0X7D,0XEF,0X9D,0XEF,
N0X7D,0XEF,0X9D,0XEF,0X7D,0XEF,0X9D,0XEF,0X7D,0XEF,0X7D,0XEF,0X7E,0XEF,0X7E,0XEF,
N0X7E,0XEF,0X7E,0XEF,0X7E,0XEF,0X7E,0XEF,0X7E,0XEF,0X7E,0XEF,0X7E,0XEF,0X7E,0XEF,
N0X7E,0XEF,0X7E,0XEF,0X7E,0XEF,0X7E,0XEF,0X7E,0XEF,0X7E,0XEF,0X7E,0XEF,0X7E,0XEF,
N0X7E,0XEF,0X7E,0XEF,0X7E,0XEF,0X7E,0XEF,0X7E,0XEF,0X7E,0XEF,0X7E,0XEF,0X7E,0XEF,
N0X7E,0XEF,0X7E,0XEF,0X7E,0XEF,0X7E,0XEF,0X7E,0XEF,0X7D,0XEF,0X9D,0XEF,0X9D,0XEF,
N0X9D,0XEF,0X7E,0XEF,0X7E,0XF7,0X7E,0XF7,0X7D,0XEF,0X9D,0XEF,0XBD,0XF7,0X9C,0XF7,
N0X7C,0XF7,0XF6,0XC5,0X58,0XC6,0XE7,0X39,0X55,0X7D,0XCB,0X32,0X06,0X3A,0XBD,0XFF,
N0X7C,0XFF,0X7D,0XF7,0X9E,0XF7,0X5E,0XEF,0X7E,0XEF,0X7E,0XF7,0X7E,0XF7,0X9D,0XF7,
N0X9E,0XF7,0X9D,0XEF,0X7D,0XEF,0X7D,0XEF,0X7D,0XEF,0X7D,0XEF,0X7D,0XF7,0X7D,0XEF,
N0X7D,0XF7,0X7D,0XEF,0X7D,0XF7,0X7D,0XEF,0X7D,0XF7,0X7D,0XEF,0X7D,0XF7,0X7D,0XEF,
N0X7D,0XF7,0X7D,0XEF,0X7D,0XF7,0X7D,0XEF,0X7D,0XEF,0X7D,0XEF,0X7D,0XEF,0X7D,0XEF,
N0X7D,0XEF,0X7D,0XEF,0X7D,0XEF,0X7D,0XEF,0X7D,0XEF,0X7D,0XEF,0X7D,0XEF,0X7D,0XEF,
N0X7D,0XEF,0X7D,0XEF,0X7D,0XEF,0X7D,0XEF,0X7D,0XEF,0X7D,0XEF,0X7D,0XEF,0X7D,0XEF,
N0X7D,0XEF,0X7D,0XEF,0X7D,0XEF,0X7D,0XEF,0X7D,0XEF,0X7D,0XEF,0X7D,0XEF,0X7D,0XEF,
N0X7D,0XEF,0X7D,0XEF,0X7D,0XEF,0X9D,0XEF,0X7D,0XF7,0X7D,0XF7,0X7E,0XEF,0X7E,0XEF,
N0X7E,0XEF,0X9E,0XEF,0X7D,0XF7,0X7C,0XF7,0X9D,0XEF,0XBD,0XF7,0X7D,0XFF,0X28,0X42,
N0X29,0X2A,0X76,0X7D,0X97,0X6D,0X8A,0X1A,0X47,0X3A,0X37,0XCE,0XF7,0XCD,0XB6,0XC5,
N0X9D,0XFF,0XBE,0XFF,0XBE,0XFF,0XBE,0XFF,0XBE,0XFF,0XBE,0XFF,0XBD,0XFF,0XBD,0XF7,
N0X9D,0XF7,0X7C,0XF7,0XBE,0XFF,0XBE,0XFF,0XBE,0XFF,0XBE,0XFF,0XBE,0XFF,0XBE,0XFF,
N0XBE,0XFF,0XBE,0XFF,0X7D,0XF7,0X7D,0XF7,0X7D,0XF7,0X7D,0XF7,0X7D,0XF7,0X7D,0XF7,
N0X7D,0XF7,0X7D,0XF7,0X7D,0XF7,0X9D,0XF7,0X7D,0XF7,0X9D,0XF7,0X7D,0XF7,0X9D,0XF7,
N0X7D,0XF7,0X9D,0XF7,0X7D,0XF7,0X9D,0XF7,0X7D,0XF7,0X9D,0XF7,0X7D,0XF7,0X9D,0XF7,
N0X7D,0XF7,0X9D,0XF7,0X7D,0XF7,0X9C,0XF7,0X7D,0XF7,0X9C,0XF7,0X7D,0XF7,0X9C,0XF7,
N0X7D,0XF7,0X9C,0XF7,0X7D,0XF7,0X9C,0XF7,0X7D,0XF7,0X9C,0XF7,0X7D,0XF7,0X9C,0XF7,
N0X7D,0XF7,0X7C,0XF7,0X7C,0XF7,0X7D,0XF7,0X7D,0XF7,0X9D,0XF7,0X9D,0XEF,0X9D,0XF7,
N0X9C,0XF7,0X9C,0XF7,0XF6,0XC5,0X17,0XC6,0X38,0XCE,0X08,0X32,0X8A,0X1A,0X96,0X65,
N0XD8,0X5D,0X8A,0X0A,0X27,0X2A,0X37,0XCE,0XF7,0XCD,0X38,0XD6,0X5C,0XFF,0X7C,0XFF,
N0X7C,0XFF,0X9D,0XFF,0X9C,0XFF,0XBC,0XFF,0XBC,0XFF,0XBC,0XFF,0X9C,0XFF,0X9C,0XFF,
N0X7C,0XFF,0X7C,0XFF,0X7C,0XFF,0X7C,0XFF,0X7C,0XFF,0X7C,0XFF,0X7C,0XFF,0X7C,0XFF,
N0X7C,0XFF,0X7C,0XFF,0X9C,0XFF,0X9C,0XFF,0X9D,0XFF,0X9D,0XFF,0X9D,0XFF,0X9C,0XFF,
N0XBC,0XFF,0XBC,0XFF,0XBC,0XFF,0XBC,0XFF,0XBC,0XFF,0XBC,0XFF,0XBC,0XFF,0XBC,0XFF,
N0XBC,0XFF,0XBC,0XFF,0XBC,0XFF,0XBC,0XFF,0XBC,0XFF,0XBC,0XFF,0XBC,0XFF,0XBC,0XFF,
N0XBC,0XFF,0XBC,0XFF,0XBC,0XFF,0XBC,0XFF,0XBC,0XFF,0XBC,0XFF,0XBC,0XFF,0XBC,0XFF,
N0XBC,0XFF,0XBC,0XFF,0XBC,0XFF,0XBC,0XFF,0XBC,0XFF,0XBC,0XFF,0XBC,0XFF,0XBC,0XFF,
N0X9C,0XFF,0XBC,0XFF,0X9C,0XFF,0XBC,0XFF,0XBC,0XFF,0XBC,0XFF,0XBB,0XFF,0X9B,0XFF,
N0X57,0XD6,0X37,0XCE,0X58,0XBE,0X68,0X2A,0XCA,0X0A,0XD6,0X5D,0XB8,0X55,0XD7,0X65,
N0X75,0X75,0X28,0X22,0X69,0X3A,0X07,0X3A,0X37,0XCE,0XD5,0XCD,0XD6,0XCD,0XF6,0XCD,
N0XF5,0XCD,0XF6,0XD5,0XF5,0XCD,0XF6,0XD5,0XF6,0XCD,0XF6,0XD5,0XF6,0XD5,0XF6,0XD5,
N0XF6,0XD5,0XF6,0XD5,0XF6,0XD5,0XF6,0XD5,0XF6,0XD5,0XF6,0XD5,0XD6,0XCD,0XD6,0XCD,
N0XF6,0XD5,0XF6,0XD5,0XF6,0XD5,0XF6,0XD5,0XF6,0XD5,0XF6,0XCD,0XF6,0XCD,0XF6,0XCD,
N0XF6,0XCD,0XF6,0XCD,0XF5,0XCD,0XF6,0XCD,0XF6,0XCD,0XF6,0XCD,0XF6,0XCD,0XF6,0XCD,
N0XF6,0XCD,0XF6,0XCD,0XF6,0XCD,0XF6,0XCD,0XF6,0XCD,0XF6,0XCD,0XF6,0XCD,0XF6,0XCD,
N0XF6,0XCD,0XF6,0XCD,0XF6,0XCD,0XF6,0XCD,0XF6,0XCD,0XF6,0XCD,0XF6,0XCD,0XF6,0XCD,
N0XF6,0XCD,0XF6,0XCD,0XF6,0XCD,0XF6,0XCD,0XF6,0XCD,0XF5,0XCD,0XF5,0XD5,0XF5,0XD5,
N0X15,0XCE,0X16,0XCE,0X15,0XCE,0XF5,0XCD,0XF5,0XCD,0XF5,0XC5,0XE6,0X31,0X28,0X2A,
N0X69,0X22,0X55,0X6D,0XF7,0X5D,0XF7,0X55,0XDA,0X4D,0XF9,0X55,0XD7,0X55,0XD7,0X5D,
N0X97,0X5D,0X76,0X75,0X07,0X32,0XE7,0X49,0XC7,0X49,0XC6,0X51,0XA6,0X51,0XA6,0X51,
N0XA6,0X51,0XC7,0X51,0XA7,0X51,0XC7,0X51,0XC7,0X51,0XC7,0X51,0XC6,0X51,0XC6,0X51,
N0XC6,0X51,0XC6,0X51,0XC6,0X51,0XC6,0X51,0XC6,0X51,0XC6,0X51,0XC6,0X51,0XC6,0X51,
N0XC6,0X51,0XC6,0X51,0XC6,0X51,0XC6,0X51,0XC7,0X51,0XC7,0X51,0XC7,0X51,0XC7,0X51,
N0XC7,0X51,0XC7,0X51,0XC7,0X51,0XC7,0X51,0XC7,0X51,0XC7,0X51,0XC7,0X51,0XC7,0X51,
N0XC7,0X51,0XC7,0X51,0XC7,0X51,0XC7,0X51,0XC7,0X51,0XC7,0X51,0XC7,0X51,0XC7,0X51,
N0XC7,0X51,0XC7,0X51,0XC7,0X51,0XC7,0X51,0XC7,0X51,0XC7,0X51,0XC7,0X51,0XC7,0X51,
N0XC7,0X51,0XC7,0X51,0XC7,0X51,0XC7,0X51,0XA6,0X51,0XC6,0X51,0XE6,0X49,0XE7,0X49,
N0XC7,0X49,0XC7,0X49,0XA6,0X51,0XE8,0X39,0X77,0X7D,0X98,0X65,0XB8,0X5D,0XB8,0X55,
N0X19,0X56,0XD8,0X45,0XFB,0X4D,0X1A,0X4E,0X19,0X46,0XF8,0X45,0X19,0X4E,0XB7,0X5D,
N0X28,0X2A,0XE7,0X49,0XE7,0X51,0XC7,0X51,0XA7,0X59,0XC7,0X59,0XC7,0X51,0XC8,0X51,
N0XA8,0X51,0XA8,0X51,0XA7,0X51,0XA7,0X51,0XA7,0X51,0XA7,0X51,0XA7,0X51,0XA7,0X51,
N0XA7,0X51,0XA7,0X51,0XA7,0X51,0XA7,0X51,0XA7,0X49,0XA7,0X49,0XA7,0X51,0XA7,0X51,
N0XA7,0X51,0XA7,0X51,0X87,0X51,0X87,0X51,0X87,0X51,0X87,0X51,0X87,0X51,0X87,0X51,
N0X87,0X51,0X87,0X51,0XA7,0X51,0XA7,0X51,0XA7,0X51,0XA7,0X51,0XA7,0X51,0XA7,0X51,
N0XA7,0X51,0XA7,0X51,0X87,0X51,0X87,0X51,0X87,0X51,0X87,0X51,0X87,0X51,0X87,0X51,
N0X87,0X51,0X87,0X51,0X87,0X51,0X87,0X51,0X87,0X51,0X87,0X51,0X87,0X51,0X87,0X51,
N0X87,0X51,0X87,0X51,0XA7,0X59,0XC7,0X51,0XE7,0X49,0XE7,0X49,0XC8,0X49,0XC8,0X49,
N0X88,0X51,0XE9,0X39,0X78,0X65,0X1A,0X56,0XD9,0X4D,0XFA,0X4D,0XFA,0X4D,0XFA,0X4D,
N};
L 6 "app\game.c" 2
N#include "flappybird_bird_u.c"
L 1 ".\app\RES\Pic\flappybird_bird_u.c" 1
Nconst unsigned char gImage_flappybird_bird_u[936] = { /* 0X00,0X10,0X1A,0X00,0X12,0X00,0X01,0X1B, */
N0XD8,0X45,0X19,0X4E,0XF8,0X45,0XF8,0X45,0XF9,0X4D,0XD9,0X55,0X78,0X6D,0X36,0X7D,
N0X14,0X95,0XE6,0X49,0X83,0X69,0X63,0X79,0X64,0X71,0X65,0X69,0XC7,0X59,0XC8,0X51,
N0XA7,0X51,0XE8,0X49,0X56,0X8D,0X57,0X65,0XD9,0X55,0X1A,0X4E,0XF9,0X45,0X19,0X46,
N0XF9,0X45,0XF9,0X45,0X19,0X4E,0XD8,0X45,0XF8,0X45,0XF8,0X4D,0XD8,0X4D,0XB8,0X65,
N0X6A,0X22,0X29,0X3A,0X06,0X4A,0X2E,0XB4,0XCB,0XCB,0XEB,0XD3,0XCB,0XCB,0X0E,0XBC,
N0XC7,0X59,0XBF,0XFF,0XBF,0XFF,0XBF,0XFF,0X2A,0X32,0X8C,0X1A,0XB8,0X5D,0XB8,0X45,
N0X3A,0X4E,0XF9,0X45,0XF9,0X4D,0XF9,0X4D,0XF9,0X45,0XF9,0X4D,0X19,0X4E,0XF9,0X4D,
N0X97,0X55,0X76,0X75,0X06,0X42,0XA2,0X61,0X60,0X71,0XC9,0XDB,0X87,0XEB,0X66,0XEB,
N0XA8,0XDB,0X4D,0XCC,0X85,0X49,0XFF,0XFF,0XBE,0XFF,0XFF,0XFF,0XE8,0X31,0X29,0X2A,
N0X77,0X75,0XB8,0X5D,0XFA,0X4D,0XD9,0X45,0XF9,0X4D,0XD9,0X4D,0XFA,0X4D,0XFA,0X4D,
N0XD9,0X5D,0X77,0X5D,0X77,0X6D,0X69,0X32,0X0D,0XAC,0XCA,0XCB,0XA8,0XEB,0X42,0XDA,
N0X00,0XE2,0X41,0XDA,0X20,0X89,0X81,0X69,0XDE,0XFF,0XFF,0XF7,0XDE,0XF7,0XFF,0XFF,
N0XDF,0XFF,0XFF,0XFF,0X4A,0X22,0X57,0X6D,0X98,0X5D,0XFA,0X55,0XD9,0X4D,0XF9,0X4D,
N0XDA,0X45,0X99,0X55,0X6C,0X1A,0X2A,0X2A,0X6B,0X3A,0XC7,0X41,0XA4,0X61,0X41,0X81,
N0X23,0XDA,0XE0,0XE9,0XE0,0XF1,0X22,0XE2,0X61,0X79,0XC5,0X59,0XF9,0XE6,0XFE,0XF7,
N0XFE,0XF7,0XDF,0XF7,0XC8,0X41,0XC9,0X41,0XDF,0XF7,0X4A,0X2A,0X8C,0X1A,0X98,0X5D,
N0XD9,0X4D,0XF9,0X45,0XB9,0X65,0X78,0X75,0X4B,0X32,0X09,0X42,0X08,0X42,0X07,0X4A,
N0XA5,0X59,0X62,0X79,0X44,0XD2,0X02,0XEA,0XC0,0XF1,0X23,0XE2,0X42,0X79,0XC5,0X59,
N0XF9,0XDE,0XFE,0XF7,0XFF,0XF7,0XFF,0XFF,0XE8,0X49,0XE8,0X49,0XDF,0XFF,0X29,0X3A,
N0X6B,0X22,0XB8,0X6D,0XD8,0X55,0XF9,0X45,0X2A,0X3A,0X09,0X3A,0XBF,0XF7,0XDF,0XF7,
N0XFE,0XFF,0XDD,0XFF,0XBE,0XFF,0XBD,0XFF,0X42,0X79,0X86,0XCA,0X03,0XE2,0X24,0XDA,
N0X21,0X89,0X84,0X69,0XFA,0XEE,0XDE,0XF7,0XDE,0XF7,0XFF,0XFF,0XA6,0X41,0XE7,0X49,
N0XDF,0XFF,0XE8,0X31,0X4A,0X2A,0X56,0X6D,0XD8,0X55,0XF9,0X4D,0XC8,0X51,0XE8,0X51,
N0XDF,0XFF,0XDE,0XF7,0XDD,0XF7,0XDD,0XF7,0XFF,0XF7,0XDE,0XFF,0X7C,0XFF,0X62,0X81,
N0XE0,0X98,0X24,0XDA,0X45,0XCA,0XA8,0XB2,0XA5,0X61,0XFB,0XEE,0XFB,0XE6,0XFF,0XFF,
N0X9E,0XFF,0XBE,0XFF,0XDF,0XFF,0X08,0X3A,0X29,0X2A,0X76,0X7D,0XD8,0X55,0XF8,0X4D,
N0XC9,0X51,0XE8,0X49,0XFF,0XFF,0XFD,0XF7,0XFD,0XF7,0XFE,0XF7,0XFF,0XF7,0XFE,0XFF,
N0X9C,0XFF,0XA4,0X69,0X41,0X89,0X64,0XD2,0X03,0XDA,0X44,0XD2,0X43,0X79,0XBA,0XFE,
N0X1B,0XEF,0XBE,0XFF,0XDF,0XFF,0XBF,0XFF,0XBF,0XFF,0X09,0X42,0X29,0X32,0X76,0X7D,
N0XB7,0X5D,0XF9,0X4D,0X2B,0X3A,0XE9,0X31,0X3B,0XDF,0XFE,0XF7,0XFE,0XFF,0XFE,0XF7,
N0XFF,0XF7,0XDE,0XFF,0XFA,0XF6,0X84,0X61,0X41,0X89,0X23,0XD2,0X02,0XEA,0X43,0XE2,
N0X47,0XAA,0XA5,0X69,0XA4,0X51,0XC3,0X49,0XC4,0X51,0XC4,0X51,0XC4,0X51,0XC5,0X49,
N0X25,0X4A,0X26,0X32,0X75,0X75,0XB7,0X65,0X78,0X6D,0X97,0X7D,0X28,0X32,0X1B,0XDF,
N0XFA,0XDE,0XFA,0XDE,0X1B,0XD7,0XDA,0XE6,0XA5,0X61,0X88,0XAA,0X24,0XD2,0X02,0XEA,
N0X01,0XF2,0X02,0XDA,0X42,0X81,0X72,0XE5,0XCF,0XED,0XAD,0XE5,0XCC,0XED,0X8B,0XE5,
N0XCC,0XED,0XCC,0XE5,0XCC,0XE5,0XEF,0XDD,0X25,0X42,0X28,0X3A,0XB9,0X55,0X97,0X65,
N0X49,0X22,0X3C,0XE7,0XFB,0XE6,0X1B,0XEF,0XFA,0XEE,0XD9,0XFE,0X43,0X79,0X87,0XCA,
N0X03,0XE2,0X02,0XEA,0X02,0XE2,0X63,0XCA,0X81,0X79,0X90,0XE5,0X8D,0XE5,0XAC,0XED,
N0XAB,0XED,0XAB,0XED,0XCB,0XE5,0XCB,0XE5,0XAB,0XE5,0XAE,0XDD,0X25,0X4A,0X28,0X3A,
N0XF9,0X4D,0XB8,0X5D,0X76,0X75,0X08,0X2A,0XE7,0X51,0X85,0X61,0XA5,0X69,0X42,0X79,
N0X04,0XC2,0X81,0XC9,0X81,0XD1,0XA1,0XC9,0X00,0X91,0X80,0X81,0X6D,0XE5,0XC0,0X61,
N0XA1,0X61,0XE2,0X61,0XC1,0X59,0XE2,0X59,0XE3,0X59,0XE3,0X59,0XE4,0X59,0X06,0X4A,
N0X55,0X7D,0X97,0X6D,0XF8,0X45,0XB8,0X55,0X98,0X6D,0X6B,0X32,0XE7,0X51,0X69,0X82,
N0X06,0X8A,0X05,0XAA,0X81,0XC9,0X60,0XD9,0X60,0XD1,0XA1,0XC9,0X03,0XAA,0X22,0X92,
N0X00,0X7A,0X8F,0XE5,0X91,0XDD,0X92,0XD5,0XB2,0XD5,0X92,0XCD,0XB4,0XD5,0X94,0XCD,
N0XB5,0XCD,0X08,0X32,0X97,0X65,0XF9,0X4D,0X19,0X4E,0XF9,0X55,0X98,0X5D,0X8B,0X22,
N0XE8,0X41,0X69,0X7A,0X68,0X9A,0XE4,0XA9,0XA1,0XC9,0XA0,0XE1,0X60,0XD1,0X80,0XC9,
N0XC1,0XC1,0XE2,0XB1,0X20,0X79,0X91,0XF5,0X90,0XE5,0XD0,0XE5,0XB0,0XE5,0XB1,0XE5,
N0X91,0XDD,0XD3,0XD5,0XB3,0XC5,0X68,0X3A,0XB7,0X65,0XF9,0X4D,0XF9,0X45,0XF9,0X4D,
N0XB8,0X55,0XB8,0X6D,0X35,0X8D,0XE7,0X41,0XC6,0X59,0X43,0X71,0XE3,0XB9,0XA2,0XC1,
N0XC2,0XC1,0XC2,0XC1,0XC3,0XB9,0XE4,0XB1,0X68,0X9A,0X84,0X61,0XE3,0X51,0X03,0X4A,
N0X03,0X52,0XE3,0X49,0X04,0X4A,0XE4,0X39,0X46,0X3A,0X54,0X7D,0XD7,0X5D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XD8,0X55,0X97,0X65,0X77,0X75,0X35,0X7D,0XF3,0X9C,
N0X85,0X69,0X43,0X81,0X44,0X79,0X44,0X79,0X64,0X79,0X85,0X69,0XA6,0X59,0XF4,0XA4,
N0X54,0X85,0X95,0X75,0X95,0X75,0X95,0X75,0X96,0X75,0X96,0X75,0XB6,0X6D,0XB7,0X65,
N0XD8,0X55,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XD9,0X4D,0XD9,0X5D,
N0X98,0X65,0X36,0X85,0XC7,0X51,0X66,0X69,0X86,0X69,0X86,0X61,0X86,0X61,0XA7,0X59,
N0XC8,0X49,0X36,0X95,0X97,0X6D,0XD8,0X55,0XD8,0X5D,0XD8,0X5D,0XD9,0X55,0XD9,0X55,
N0XD9,0X55,0XF9,0X55,0XF9,0X4D,0XF9,0X4D,};
L 7 "app\game.c" 2
N#include "flappybird_bird_m.c"
L 1 ".\app\RES\Pic\flappybird_bird_m.c" 1
Nconst unsigned char gImage_flappybird_bird_m[988] = { /* 0X00,0X10,0X1A,0X00,0X13,0X00,0X01,0X1B, */
N0XD9,0X4D,0XF9,0X4D,0X18,0X4E,0XF8,0X45,0XF8,0X4D,0XD8,0X55,0X77,0X6D,0X55,0X7D,
N0X13,0X8D,0XE6,0X41,0XC5,0X51,0XC6,0X69,0X65,0X61,0XA6,0X61,0XE8,0X51,0XC7,0X41,
N0XE8,0X41,0X09,0X3A,0X57,0X8D,0X77,0X75,0X98,0X55,0XF9,0X4D,0XDA,0X45,0XDA,0X4D,
N0XFA,0X4D,0XD9,0X4D,0XB9,0X4D,0XFA,0X55,0XF9,0X4D,0XF8,0X4D,0X97,0X4D,0XD8,0X6D,
N0X8A,0X2A,0X27,0X3A,0X26,0X4A,0X0D,0XA4,0X0D,0XBC,0X0D,0XC4,0XED,0XBB,0X0E,0XB4,
N0XC6,0X51,0XBE,0XFF,0XDF,0XFF,0XFF,0XF7,0X2A,0X2A,0X8B,0X1A,0XF9,0X65,0XD9,0X4D,
N0XFA,0X4D,0XFA,0X55,0XFA,0X4D,0XF9,0X4D,0XFA,0X4D,0XDA,0X4D,0XDA,0X4D,0XB9,0X55,
N0X97,0X65,0X75,0X85,0XC6,0X49,0X83,0X69,0X61,0X79,0XC9,0XDB,0XA9,0XE3,0XA9,0XE3,
N0XCB,0XCB,0X0D,0XBC,0X84,0X49,0XFF,0XFF,0XDF,0XF7,0XFF,0XF7,0X09,0X2A,0X6A,0X22,
N0X76,0X6D,0XB7,0X5D,0XB8,0X55,0XB9,0X4D,0XD9,0X4D,0XFA,0X4D,0XD9,0X4D,0XD9,0X55,
N0XB9,0X55,0X97,0X6D,0X55,0X85,0XC6,0X41,0XED,0XC3,0X89,0XDB,0X87,0XEB,0X41,0XD2,
N0X41,0XDA,0X62,0XCA,0X40,0X81,0XA2,0X69,0XBC,0XFF,0XBD,0XFF,0XFE,0XF7,0XFF,0XF7,
N0XBF,0XEF,0XFF,0XEF,0X6A,0X22,0X77,0X6D,0X77,0X65,0XD9,0X5D,0XD9,0X4D,0XFA,0X4D,
N0XF9,0X4D,0XB7,0X55,0X76,0X6D,0X48,0X2A,0XE5,0X51,0X0B,0XC4,0X64,0XC2,0X42,0XDA,
N0X41,0XE2,0X20,0XE2,0X00,0XE2,0X22,0XD2,0X20,0X89,0XC3,0X69,0XF9,0XEE,0XDD,0XF7,
N0XDE,0XF7,0XDE,0XF7,0XE8,0X41,0X08,0X42,0XDF,0XE7,0X29,0X22,0X8B,0X12,0X98,0X65,
N0XD9,0X55,0XF9,0X45,0XD8,0X4D,0X96,0X5D,0X54,0X8D,0X05,0X52,0X61,0X71,0X88,0XE3,
N0X22,0XE2,0XE0,0XE9,0X00,0XEA,0XE0,0XF1,0XE0,0XF1,0X23,0XE2,0X40,0X89,0XA3,0X69,
N0XF9,0XEE,0XFE,0XF7,0XFE,0XFF,0XFE,0XFF,0XE7,0X49,0XE8,0X49,0XDF,0XFF,0X2A,0X32,
N0X8B,0X22,0X77,0X65,0XD8,0X55,0XF9,0X45,0XB9,0X5D,0X56,0X6D,0XE7,0X49,0XA8,0XA2,
N0X64,0XC2,0X22,0XDA,0X02,0XEA,0XE1,0XF1,0XE1,0XF9,0XC0,0XF9,0XA0,0XF9,0XE2,0XE1,
N0X00,0X89,0XA3,0X69,0XF9,0XEE,0XFD,0XFF,0XDD,0XF7,0XFE,0XFF,0XA6,0X41,0XC8,0X41,
N0XDF,0XFF,0XE9,0X31,0X4A,0X22,0X97,0X6D,0XD8,0X55,0XF8,0X45,0X78,0X65,0X36,0X7D,
N0XC6,0X51,0XC8,0XAA,0X85,0XC2,0X44,0XCA,0X44,0XDA,0X24,0XDA,0X03,0XE2,0X03,0XEA,
N0XE2,0XF9,0X03,0XEA,0X85,0XC2,0X08,0XAB,0XA4,0X59,0XFA,0XE6,0X5B,0XE7,0XDE,0XF7,
N0XBE,0XFF,0XBF,0XFF,0XBF,0XFF,0XE9,0X39,0X8A,0X32,0X76,0X75,0XD7,0X55,0XF8,0X4D,
N0XB9,0X7D,0X36,0X85,0XC7,0X41,0XA5,0X59,0XA4,0X61,0X42,0X61,0X43,0X71,0X23,0X79,
N0X22,0X81,0X66,0XC2,0X04,0XE2,0X03,0XE2,0X64,0XDA,0X86,0XBA,0X43,0X69,0XDA,0XFE,
N0X3B,0XEF,0XFE,0XFF,0XFF,0XFF,0XDF,0XFF,0XBF,0XFF,0X09,0X3A,0X29,0X2A,0X76,0X7D,
N0X97,0X65,0XD8,0X55,0X4B,0X1A,0X09,0X22,0XFF,0XFF,0XDE,0XFF,0XBE,0XFF,0XBE,0XFF,
N0XBF,0XFF,0X5D,0XFF,0X1B,0XFF,0XE2,0X70,0XE0,0XA0,0X03,0XDA,0XE2,0XD1,0XA6,0XD2,
N0X43,0X79,0XB9,0XFE,0XD9,0XEE,0XDC,0XFF,0XBC,0XFF,0XBD,0XFF,0X9D,0XFF,0XE7,0X41,
N0X07,0X32,0X75,0X8D,0X76,0X6D,0X97,0X65,0X6B,0X32,0X49,0X32,0XFF,0XF7,0XFE,0XFF,
N0XFF,0XFF,0XDF,0XFF,0XBF,0XFF,0XBF,0XFF,0X9D,0XFF,0XE4,0X79,0XE0,0X90,0X44,0XDA,
N0X64,0XEA,0XE3,0XC9,0XC8,0XB2,0X63,0X69,0XC3,0X61,0XE2,0X51,0X02,0X5A,0XE2,0X51,
N0XE3,0X51,0X03,0X52,0X24,0X4A,0X25,0X3A,0X34,0X85,0X55,0X7D,0X4A,0X2A,0X49,0X2A,
N0X5C,0XD7,0XFF,0XF7,0XFF,0XFF,0XDF,0XFF,0XDF,0XFF,0XBE,0XFF,0XD9,0XFE,0X82,0X71,
N0X20,0X91,0X24,0XD2,0X23,0XDA,0X64,0XD2,0X61,0X89,0X50,0XED,0XB0,0XED,0XCF,0XE5,
N0XCF,0XDD,0XCF,0XDD,0XD0,0XDD,0XD0,0XDD,0XF1,0XD5,0XF3,0XC5,0X47,0X32,0X69,0X2A,
N0X77,0X6D,0X56,0X7D,0X08,0X22,0X07,0X3A,0XC7,0X41,0XA7,0X51,0XA7,0X51,0XA6,0X59,
N0X43,0X61,0X86,0XA2,0XC3,0XA9,0X23,0XC2,0X65,0XD2,0X84,0XC2,0X60,0X79,0X6F,0XED,
N0X4D,0XED,0X6D,0XED,0X8D,0XE5,0X8D,0XE5,0X8D,0XE5,0X8E,0XDD,0XCF,0XDD,0XD1,0XCD,
N0X47,0X3A,0X49,0X2A,0X97,0X5D,0X76,0X65,0X8A,0X2A,0X08,0X32,0X86,0X41,0XA6,0X59,
N0X85,0X61,0X64,0X69,0X22,0X79,0X24,0XAA,0XC2,0XB1,0X02,0XC2,0X00,0X99,0X00,0X89,
N0X4F,0XFD,0XA0,0X71,0XC0,0X71,0X00,0X7A,0XC0,0X69,0XC0,0X71,0XE0,0X71,0XE0,0X69,
N0XC0,0X59,0X23,0X4A,0X33,0X8D,0X55,0X85,0XB9,0X55,0XB8,0X5D,0XF5,0X5C,0X09,0X22,
N0XC7,0X49,0X89,0X82,0X47,0X8A,0X26,0X9A,0XE4,0XB1,0X81,0XB1,0XA0,0XB9,0XE1,0XC1,
N0XC1,0XB9,0X43,0XB2,0X60,0X79,0X6F,0XED,0X8E,0XED,0X6D,0XE5,0XAE,0XE5,0X8E,0XE5,
N0X6F,0XDD,0X90,0XDD,0XD1,0XCD,0X04,0X3A,0X74,0X7D,0X97,0X6D,0XD9,0X4D,0XD9,0X55,
N0XB9,0X65,0X57,0X75,0X35,0X9D,0X08,0X5A,0XA5,0X69,0X63,0X79,0X25,0XB2,0XA2,0XB1,
N0XE2,0XC1,0XA1,0XB9,0XE2,0XB1,0XE3,0XA1,0X61,0X71,0XB1,0XE5,0X8F,0XD5,0XD0,0XD5,
N0XD0,0XD5,0XD1,0XD5,0XB1,0XD5,0XF3,0XCD,0XD2,0XBD,0X87,0X32,0X95,0X6D,0XB7,0X65,
N0X1A,0X46,0XD9,0X45,0XD9,0X4D,0XB8,0X5D,0X56,0X65,0X35,0X7D,0X29,0X42,0XA6,0X59,
N0X07,0X92,0X06,0XAA,0XC4,0XA9,0XE5,0XA9,0X05,0XAA,0X45,0X9A,0X66,0X8A,0XE4,0X59,
N0X24,0X4A,0X64,0X42,0X44,0X3A,0X45,0X3A,0X46,0X3A,0X47,0X3A,0X67,0X2A,0X94,0X7D,
N0XB6,0X65,0XD7,0X5D,0XD9,0X3D,0XFA,0X45,0XFA,0X45,0XB9,0X4D,0XFA,0X5D,0X97,0X65,
N0X56,0X85,0XD4,0X9C,0X86,0X61,0X44,0X79,0X65,0X81,0X44,0X81,0X64,0X79,0X84,0X69,
N0XC5,0X59,0XF2,0XA4,0X32,0X8D,0X73,0X85,0X73,0X85,0X74,0X85,0X54,0X7D,0X95,0X7D,
N0X76,0X75,0XB7,0X6D,0XD7,0X5D,0XD7,0X55,0XFA,0X45,0XD9,0X45,0XD9,0X45,0XB9,0X45,
N0XD9,0X4D,0X98,0X55,0X98,0X75,0X15,0X8D,0XA7,0X49,0X86,0X61,0X66,0X61,0X86,0X61,
N0X86,0X61,0XC6,0X59,0XC7,0X41,0X76,0X95,0X76,0X75,0X96,0X6D,0X96,0X65,0XB7,0X6D,
N0XB8,0X6D,0X77,0X5D,0XB8,0X65,0XB8,0X55,0XD8,0X4D,0XF8,0X4D,};
L 8 "app\game.c" 2
N#include "flappybird_bird_d.c"
L 1 ".\app\RES\Pic\flappybird_bird_d.c" 1
Nconst unsigned char gImage_flappybird_bird_d[936] = { /* 0X00,0X10,0X1A,0X00,0X12,0X00,0X01,0X1B, */
N0XF8,0X45,0XF8,0X4D,0XD9,0X4D,0XF9,0X4D,0XF9,0X4D,0XD8,0X55,0X96,0X65,0X55,0X7D,
N0XF3,0X94,0X26,0X52,0XA4,0X61,0X83,0X71,0X63,0X71,0XA5,0X69,0XC8,0X51,0XE9,0X49,
N0XE9,0X41,0X0A,0X42,0X37,0X8D,0X77,0X6D,0XD8,0X4D,0X39,0X46,0XF8,0X45,0X19,0X46,
N0XF9,0X45,0XF9,0X45,0XF8,0X45,0X19,0X4E,0XF9,0X4D,0XD9,0X4D,0X98,0X4D,0XD8,0X65,
N0X8A,0X22,0X27,0X3A,0X05,0X52,0X0C,0XAC,0XCB,0XC3,0XCB,0XCB,0XCB,0XCB,0XED,0XB3,
N0XC6,0X49,0XDF,0XFF,0XDF,0XFF,0XFF,0XFF,0X09,0X2A,0X6B,0X1A,0XF9,0X65,0XF9,0X4D,
N0XF9,0X4D,0X19,0X4E,0XF9,0X4D,0XF9,0X4D,0X19,0X4E,0XF9,0X45,0XFA,0X4D,0XDA,0X4D,
N0XB9,0X5D,0X77,0X7D,0XE5,0X49,0XA2,0X69,0X80,0X79,0XC8,0XE3,0X87,0XF3,0X87,0XF3,
N0XA9,0XD3,0X0C,0XBC,0XA5,0X49,0XFF,0XFF,0XDE,0XF7,0XFF,0XFF,0XE8,0X39,0X4A,0X2A,
N0X76,0X6D,0XB8,0X55,0XB9,0X4D,0XD9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF8,0X45,0XF9,0X4D,
N0XD9,0X55,0X98,0X65,0X56,0X7D,0XE6,0X41,0X0C,0XC4,0X88,0XE3,0X86,0XF3,0X20,0XDA,
N0X20,0XF2,0X21,0XE2,0X20,0X89,0XA2,0X69,0XFD,0XFF,0XDE,0XEF,0XFE,0XF7,0XDE,0XFF,
N0X9E,0XFF,0XFF,0XF7,0X6A,0X22,0X97,0X6D,0X98,0X5D,0XD9,0X55,0XD9,0X4D,0XF9,0X4D,
N0X19,0X46,0XB7,0X4D,0X77,0X65,0X49,0X22,0XE5,0X51,0XEB,0XCB,0X42,0XCA,0X21,0XE2,
N0X21,0XEA,0XE0,0XF1,0XC0,0XF9,0X02,0XE2,0X41,0X81,0XC4,0X59,0X1A,0XE7,0XFE,0XF7,
N0XDE,0XF7,0XBE,0XF7,0XC7,0X49,0XE8,0X49,0XBF,0XEF,0X29,0X22,0X8B,0X1A,0X98,0X65,
N0XD9,0X4D,0X19,0X46,0XF9,0X45,0XB7,0X5D,0X55,0X8D,0XE6,0X51,0X40,0X79,0X66,0XF3,
N0X00,0XEA,0XC0,0XF1,0XC0,0XF9,0XC0,0XF9,0XC0,0XF9,0X02,0XEA,0X42,0X89,0XC4,0X59,
N0XF9,0XDE,0XFE,0XF7,0XFF,0XFF,0XFF,0XFF,0XC8,0X49,0XC8,0X49,0XDF,0XFF,0X29,0X3A,
N0X6B,0X2A,0X77,0X6D,0XD9,0X55,0X19,0X46,0XFA,0X4D,0X77,0X65,0XC6,0X51,0X87,0XB2,
N0X23,0XD2,0X00,0XF2,0XE0,0XF9,0XC0,0XF9,0XC0,0XF9,0XC0,0XF9,0X80,0XF9,0XE2,0XE9,
N0XE0,0X90,0X84,0X71,0XF9,0XE6,0XFE,0XF7,0XDD,0XEF,0XFF,0XFF,0XA6,0X41,0XC8,0X49,
N0XDF,0XFF,0XE9,0X31,0X2B,0X22,0X98,0X75,0XD8,0X55,0XF9,0X4D,0XDA,0X45,0X77,0X6D,
N0X85,0X61,0X86,0XC2,0X23,0XE2,0XE1,0XE9,0XE2,0XF1,0XC1,0XF1,0XC0,0XF1,0XE0,0XF9,
N0XC1,0XF9,0XE2,0XF1,0X45,0XD2,0XC8,0XB2,0XA5,0X51,0XFA,0XDE,0X5B,0XDF,0XFE,0XF7,
N0XBE,0XFF,0XBF,0XFF,0XBF,0XFF,0XE9,0X39,0X4B,0X32,0X57,0X75,0XB8,0X5D,0XF8,0X4D,
N0XD8,0X4D,0X97,0X75,0XC6,0X51,0X88,0XAA,0XA7,0XCA,0X45,0XCA,0X26,0XD2,0X25,0XDA,
N0X03,0XDA,0X22,0XF2,0XE1,0XF9,0XC1,0XF1,0X02,0XE2,0X86,0XD2,0X43,0X69,0XDA,0XF6,
N0X1A,0XE7,0XDD,0XFF,0X9D,0XFF,0XBE,0XFF,0X9F,0XFF,0X09,0X42,0X09,0X3A,0X56,0X85,
N0XB7,0X65,0XD8,0X55,0XB8,0X65,0X35,0X75,0XE7,0X49,0XA5,0X69,0X63,0X71,0X63,0X79,
N0X22,0X79,0X42,0X89,0X21,0X91,0X44,0XCA,0X02,0XE2,0X02,0XF2,0X02,0XF2,0X23,0XD2,
N0XC9,0XB2,0XA5,0X61,0XE3,0X51,0X03,0X4A,0X04,0X52,0XE4,0X51,0XE5,0X51,0XC4,0X49,
N0X25,0X52,0X26,0X3A,0X75,0X7D,0X97,0X6D,0X2A,0X2A,0X4A,0X3A,0X1C,0XEF,0XBE,0XFF,
N0XBD,0XFF,0XDD,0XFF,0X9C,0XFF,0X9C,0XFF,0XD8,0XFE,0X62,0X71,0X00,0X91,0X03,0XD2,
N0X22,0XEA,0X23,0XD2,0X82,0X81,0X51,0XE5,0XCE,0XED,0XED,0XED,0XCC,0XE5,0XCD,0XE5,
N0XCD,0XE5,0XED,0XE5,0XCD,0XDD,0XF0,0XD5,0X25,0X42,0X28,0X32,0XC9,0X41,0XE8,0X41,
N0X1C,0XE7,0XBE,0XF7,0XFF,0XFF,0XDE,0XFF,0XBD,0XFF,0XBC,0XFF,0XD8,0XFE,0X62,0X69,
N0X20,0X91,0X23,0XCA,0X43,0XDA,0X85,0XD2,0X61,0X79,0X90,0XED,0X6B,0XED,0X8A,0XED,
N0XAA,0XED,0XAA,0XED,0XAB,0XED,0X8B,0XED,0XAB,0XE5,0XAE,0XD5,0X25,0X42,0X28,0X3A,
N0XE9,0X51,0XE9,0X49,0X9F,0XF7,0XFF,0XFF,0XDE,0XF7,0XBD,0XFF,0XDE,0XFF,0X9D,0XFF,
N0X42,0X71,0X24,0XB2,0XC1,0XC1,0XE1,0XC9,0X00,0XA1,0X20,0X81,0X6F,0XED,0XA0,0X69,
N0XA0,0X71,0XC0,0X79,0XC0,0X69,0XE0,0X69,0XC0,0X71,0XA0,0X69,0XE1,0X69,0X03,0X52,
N0X53,0X85,0X96,0X6D,0X0A,0X42,0X09,0X42,0XBF,0XF7,0XBF,0XF7,0XDE,0XF7,0X1B,0XEF,
N0XE7,0X51,0X65,0X69,0X05,0XB2,0X82,0XC1,0XA0,0XC9,0XA1,0XC9,0XC2,0XB9,0X44,0XAA,
N0XA0,0X79,0X8E,0XE5,0X8E,0XED,0X6D,0XED,0X8D,0XE5,0XAE,0XE5,0X6E,0XE5,0X90,0XE5,
N0X91,0XD5,0X05,0X3A,0X96,0X75,0XD8,0X5D,0X6A,0X2A,0X49,0X2A,0XDF,0XF7,0XDF,0XFF,
N0XBE,0XFF,0XFB,0XE6,0XC7,0X59,0X65,0X71,0XE4,0XC1,0X81,0XD1,0X80,0XD1,0X80,0XC9,
N0XA1,0XC9,0XE2,0XB1,0X20,0X79,0X90,0XED,0X8E,0XDD,0XAE,0XDD,0XAF,0XDD,0XAF,0XDD,
N0X8F,0XE5,0XD1,0XDD,0X91,0XC5,0X66,0X3A,0X96,0X6D,0XD8,0X55,0X76,0X6D,0X76,0X75,
N0X6A,0X2A,0X29,0X2A,0X49,0X3A,0X29,0X3A,0X08,0X42,0X86,0X61,0XE5,0XA9,0XA3,0XC1,
N0XC3,0XB9,0XC3,0XB9,0XC3,0XB9,0X04,0XAA,0X66,0X92,0XE4,0X61,0X03,0X4A,0X23,0X4A,
N0X23,0X4A,0X23,0X4A,0X03,0X4A,0X25,0X4A,0X46,0X3A,0X74,0X7D,0XB7,0X5D,0XD9,0X55,
N0XD8,0X55,0XB8,0X5D,0X98,0X65,0X97,0X6D,0X97,0X6D,0X97,0X75,0X76,0X7D,0X15,0X95,
N0XA6,0X61,0X64,0X79,0X65,0X71,0X65,0X71,0X64,0X71,0X85,0X69,0XC6,0X51,0X13,0X9D,
N0X74,0X7D,0X95,0X75,0X95,0X75,0X95,0X75,0X95,0X75,0X96,0X75,0XB6,0X6D,0XD7,0X65,
N0XD8,0X55,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XD9,0X55,0XD9,0X5D,0XD9,0X5D,0XB8,0X5D,
N0X98,0X65,0X56,0X7D,0XE8,0X49,0XA6,0X59,0XA7,0X59,0XA7,0X59,0XA7,0X59,0XC7,0X51,
N0XE8,0X41,0X56,0X8D,0X97,0X6D,0XD8,0X5D,0XD8,0X5D,0XD8,0X5D,0XD9,0X5D,0XD9,0X55,
N0XD9,0X55,0XF9,0X55,0XF9,0X4D,0XF9,0X4D,};
L 9 "app\game.c" 2
N#include "flappybird_tag.c"
L 1 ".\app\RES\Pic\flappybird_tag.c" 1
Nconst unsigned char gImage_flappybird_tag[15960] = { /* 0X00,0X10,0X5F,0X00,0X54,0X00,0X01,0X1B, */
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF8,0X45,0X19,0X4E,0XD9,0X45,0XF9,0X4D,0XD9,0X4D,0XD9,0X55,0XDA,0X55,0XD9,0X55,
N0XF9,0X4D,0XD8,0X55,0X76,0X75,0X6A,0X2A,0X28,0X3A,0XE8,0X39,0XEA,0X49,0XA9,0X49,
N0XCA,0X49,0XA9,0X49,0XC9,0X49,0XE9,0X49,0XE9,0X41,0X4A,0X2A,0X97,0X5D,0XF9,0X4D,
N0XF9,0X45,0XF9,0X45,0X1A,0X46,0XF9,0X45,0X19,0X4E,0XD8,0X45,0XF9,0X45,0XF9,0X45,
N0XF9,0X45,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0X19,0X4E,
N0XD8,0X45,0X1A,0X4E,0X1A,0X4E,0XD9,0X4D,0XB8,0X55,0XB9,0X5D,0X98,0X5D,0XB8,0X5D,
N0X77,0X65,0X35,0X7D,0X29,0X2A,0X28,0X3A,0XE8,0X41,0XC9,0X41,0XE9,0X49,0XC9,0X49,
N0XA9,0X41,0XA8,0X41,0XC8,0X41,0XE9,0X39,0X4A,0X2A,0XD8,0X75,0XB8,0X55,0XD8,0X4D,
N0XD9,0X4D,0X1A,0X4E,0XF9,0X45,0XD8,0X45,0XF9,0X4D,0X1A,0X4E,0XF9,0X45,0XF9,0X45,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X45,0XF9,0X45,0XF9,0X45,
N0XD9,0X45,0XD9,0X4D,0XD8,0X55,0XD8,0X65,0X76,0X6D,0X8B,0X22,0X0A,0X22,0X4B,0X3A,
N0X09,0X3A,0XDF,0XFF,0XDF,0XFF,0XFF,0XFF,0X9F,0XFF,0XDF,0XFF,0XC8,0X39,0X09,0X4A,
N0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XEF,0X6B,0X2A,0X77,0X75,0XB8,0X65,0XD8,0X55,
N0XB8,0X4D,0XF9,0X4D,0XF9,0X55,0XD8,0X4D,0XF9,0X4D,0X19,0X46,0XF9,0X45,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X45,0XFA,0X45,0X1A,0X46,0XFA,0X45,
N0XD9,0X55,0XB8,0X65,0X56,0X6D,0X4A,0X1A,0XFF,0XEF,0XFF,0XFF,0XDF,0XFF,0XDF,0XFF,
N0XBB,0XDE,0XDB,0XDE,0XBA,0XDE,0XFC,0XE6,0XC8,0X41,0XDF,0XFF,0XFF,0XFF,0XDF,0XFF,
N0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XDF,0XF7,0X4A,0X32,0X4A,0X1A,0X97,0X6D,0XD9,0X5D,
N0XD8,0X4D,0XF9,0X55,0XD8,0X4D,0XD8,0X45,0XF9,0X45,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X45,0XF9,0X45,0XD8,0X45,0XD8,0X5D,
N0X8B,0X1A,0X49,0X2A,0XFF,0XEF,0X1B,0XD7,0XBA,0XD6,0X9A,0XD6,0X9A,0XDE,0X9A,0XDE,
N0X99,0XD6,0XDB,0XDE,0X9B,0XDE,0XE8,0X49,0XFB,0XDE,0XB9,0XD6,0XFF,0XFF,0XFF,0XFF,
N0XFF,0XFF,0XFF,0XFF,0XE8,0X49,0XDF,0XFF,0XFF,0XFF,0X2A,0X22,0X97,0X65,0XD8,0X55,
N0XD9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XD8,0X4D,0XF9,0X5D,0X97,0X6D,0X4A,0X32,
N0XE8,0X39,0XFF,0XFF,0XB9,0XCE,0XDA,0XD6,0XBA,0XD6,0XBA,0XDE,0XBA,0XDE,0XBA,0XD6,
N0XFB,0XE6,0X9B,0XDE,0XC8,0X41,0X99,0XD6,0XB9,0XD6,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
N0XFF,0XFF,0XE8,0X49,0XBF,0XFF,0X9F,0XFF,0X4B,0X3A,0X77,0X65,0XD8,0X4D,0XF9,0X4D,
N0XF9,0X45,0XF9,0X4D,0XD9,0X45,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0X19,0X4E,0XD9,0X55,0X57,0X75,0X29,0X2A,0X9B,0XCE,0XDB,0XDE,
N0XDA,0XD6,0XDA,0XCE,0XBA,0XD6,0XBA,0XD6,0XBA,0XD6,0XDA,0XD6,0XB9,0XD6,0X9A,0XD6,
N0XBB,0XE6,0XE8,0X49,0XDA,0XDE,0XDA,0XDE,0XDF,0XFF,0XFF,0XFF,0XFF,0XFF,0XDF,0XFF,
N0X08,0X42,0XFF,0XFF,0XBF,0XFF,0X09,0X3A,0X97,0X65,0XF8,0X4D,0XF9,0X4D,0XD9,0X45,
N0X1A,0X4E,0XD9,0X45,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X45,0XB8,0X5D,0X36,0X7D,0X2A,0X3A,0XBB,0XDE,0X9A,0XDE,0XBA,0XD6,
N0XDA,0XD6,0XBA,0XD6,0XBB,0XDE,0XBA,0XD6,0XDA,0XD6,0XBA,0XD6,0XBA,0XD6,0XDB,0XE6,
N0XE8,0X49,0X7A,0XDE,0X9A,0XDE,0XFF,0XFF,0XDF,0XFF,0XFF,0XFF,0XFF,0XFF,0XE8,0X39,
N0XDF,0XFF,0XBF,0XFF,0X09,0X3A,0X76,0X6D,0XB8,0X55,0XF9,0X55,0XF9,0X4D,0XD9,0X45,
N0XFA,0X45,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XD9,0X4D,0XB9,0X5D,0X57,0X7D,0X09,0X32,0XDB,0XDE,0XBB,0XE6,0X9A,0XD6,0XBB,0XDE,
N0X9B,0XDE,0X9A,0XDE,0XBA,0XDE,0XBA,0XDE,0XB9,0XD6,0XB9,0XD6,0XDA,0XD6,0XDA,0XDE,
N0XC7,0X41,0XE9,0X49,0X9B,0XDE,0XDF,0XFF,0XDF,0XFF,0XFF,0XFF,0XFF,0XFF,0XDF,0XFF,
N0X9F,0XFF,0X09,0X4A,0X15,0X7D,0X97,0X6D,0XB8,0X5D,0XD8,0X4D,0XF9,0X45,0X1A,0X4E,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XB8,0X5D,0X77,0X7D,0X2A,0X32,0X09,0X4A,0XC8,0X49,0XA7,0X41,0XC8,0X41,0XE8,0X49,
N0XC8,0X49,0XE7,0X41,0XDB,0XDE,0XBA,0XD6,0XFA,0XDE,0XDA,0XCE,0XDA,0XD6,0XBB,0XDE,
N0X7A,0XDE,0XC9,0X49,0X09,0X4A,0XC8,0X41,0XE8,0X49,0XE8,0X41,0X09,0X4A,0XE8,0X51,
N0XE9,0X49,0X2A,0X3A,0X6B,0X22,0XEC,0X0A,0XD8,0X55,0XD9,0X4D,0XD9,0X45,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X55,0X97,0X5D,
N0X57,0X7D,0X0A,0X32,0X09,0X42,0XE8,0X49,0X09,0X4A,0XE8,0X49,0XC8,0X49,0XE8,0X49,
N0XE8,0X41,0X9B,0XD6,0XBB,0XDE,0XBA,0XD6,0XDA,0XCE,0XDA,0XD6,0XDB,0XDE,0X9B,0XDE,
N0XE9,0X49,0XC8,0X49,0XE8,0X49,0XE8,0X51,0XC8,0X49,0XC8,0X49,0XC8,0X51,0XA8,0X51,
N0XC9,0X41,0X2A,0X3A,0X8B,0X1A,0XB7,0X5D,0XD8,0X4D,0XFA,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XD9,0X4D,0XB8,0X55,0X97,0X6D,0XF5,0X7C,
N0XE9,0X39,0X09,0X4A,0XA7,0X39,0XE8,0X41,0XC7,0X41,0XC7,0X49,0XC8,0X49,0XE8,0X41,
N0XDC,0XDE,0XBC,0XDE,0X9B,0XD6,0XBA,0XD6,0XFB,0XDE,0X9A,0XD6,0XBC,0XE6,0XC8,0X41,
N0XC8,0X41,0XA7,0X41,0XA7,0X41,0XA8,0X41,0XA8,0X41,0XA7,0X49,0XC8,0X51,0XA8,0X49,
N0X0A,0X3A,0X6A,0X22,0XD7,0X6D,0XD8,0X55,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XD8,0X55,0X77,0X65,0X6B,0X22,0X09,0X3A,0X9B,0XDE,
N0XDF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XDF,0XFF,0XDF,0XFF,0XBB,0XDE,0X09,0X4A,
N0XC8,0X41,0X9C,0XE6,0XFC,0XE6,0X9A,0XD6,0XE8,0X41,0XE8,0X49,0XBB,0XDE,0XBB,0XDE,
N0XDB,0XE6,0X9B,0XE6,0XDC,0XE6,0XBB,0XDE,0XBA,0XDE,0XBA,0XDE,0X7B,0XDE,0XDC,0XDE,
N0X3D,0XBF,0X77,0X6D,0XD8,0X55,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XD8,0X55,0X56,0X6D,0X29,0X2A,0XE8,0X39,0XDF,0XFF,0XDF,0XFF,
N0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0X08,0X4A,0XBB,0XE6,0X9C,0XE6,
N0X7B,0XDE,0XBB,0XDE,0X08,0X42,0X9A,0XDE,0X7A,0XD6,0XE8,0X41,0XE8,0X41,0XA7,0X41,
N0XA7,0X41,0XE9,0X41,0X08,0X42,0XE8,0X41,0XC7,0X41,0XE9,0X49,0X0A,0X42,0X6B,0X2A,
N0XB8,0X75,0XD8,0X55,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XD8,0X55,0X77,0X75,0X2A,0X2A,0XE8,0X31,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
N0XDF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0X28,0X4A,0X9A,0XDE,0XBB,0XDE,0XBA,0XDE,
N0X9A,0XDE,0XE8,0X49,0XBA,0XDE,0X9A,0XDE,0XE8,0X49,0XC9,0X49,0XC9,0X51,0XC9,0X51,
N0XA9,0X49,0XA8,0X49,0XC8,0X49,0XA8,0X49,0XEA,0X51,0XC9,0X39,0X4A,0X22,0X97,0X65,
N0XF9,0X55,0XF9,0X45,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X45,
N0XF9,0X45,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XB8,0X55,0X57,0X75,0X4A,0X2A,0XE8,0X31,0XFF,0XFF,0XDF,0XFF,0XFF,0XFF,0XDF,0XFF,
N0XDF,0XFF,0XDF,0XFF,0XFF,0XFF,0XC6,0X39,0XBA,0XDE,0XDA,0XDE,0XBA,0XD6,0XBA,0XDE,
N0XE7,0X41,0XBA,0XDE,0XDB,0XDE,0XC8,0X49,0XA8,0X49,0XA8,0X49,0XC8,0X49,0XA8,0X49,
N0XC9,0X49,0XC8,0X49,0XC8,0X49,0XC9,0X49,0X0A,0X3A,0X6B,0X1A,0X97,0X5D,0XD9,0X55,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X45,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X45,0XF9,0X45,
N0XF9,0X45,0XF9,0X4D,0XFA,0X4D,0XD9,0X4D,0XF9,0X4D,0XF9,0X4D,0XD8,0X4D,0XB8,0X55,
N0X77,0X6D,0X6B,0X22,0XE9,0X31,0XBF,0XFF,0XFF,0XFF,0XDF,0XFF,0X9B,0XDE,0XC9,0X41,
N0XA8,0X41,0XE8,0X49,0XBA,0XDE,0XBA,0XDE,0XDA,0XDE,0XBA,0XDE,0XBA,0XD6,0XDB,0XDE,
N0XE8,0X39,0XE8,0X41,0X9A,0XDE,0X9A,0XDE,0X9A,0XDE,0XBB,0XE6,0X7A,0XD6,0XBB,0XDE,
N0X9B,0XE6,0X7B,0XDE,0X0A,0X3A,0X2B,0X2A,0X8C,0X12,0XB8,0X5D,0XB9,0X4D,0X1A,0X4E,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X45,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X45,0XF9,0X45,0XF9,0X45,
N0XF9,0X4D,0XB9,0X4D,0X1A,0X56,0XB8,0X45,0XF8,0X4D,0XED,0X02,0XB8,0X5D,0X98,0X65,
N0X77,0X6D,0X36,0X8D,0X4A,0X42,0X2A,0X42,0XE9,0X39,0X0A,0X42,0X0A,0X42,0XC9,0X39,
N0XE9,0X41,0X9A,0XD6,0X99,0XD6,0XBA,0XDE,0X99,0XDE,0X9A,0XD6,0XBB,0XD6,0XBB,0XDE,
N0X7A,0XD6,0X29,0X42,0X29,0X42,0X29,0X42,0X29,0X42,0X69,0X42,0X09,0X3A,0X29,0X42,
N0X4A,0X3A,0X36,0X85,0X56,0X75,0X98,0X65,0XD9,0X5D,0XF9,0X4D,0XD9,0X45,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X45,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XD9,0X4D,0XD9,0X4D,0XF9,0X45,0XF9,0X45,0XF9,0X45,0XF9,0X45,
N0XF9,0X4D,0XB8,0X45,0XF9,0X55,0XD9,0X55,0XCD,0X0A,0X98,0X65,0XB9,0X55,0XB8,0X5D,
N0X57,0X6D,0X4A,0X1A,0X4A,0X2A,0X2A,0X2A,0X4B,0X32,0X2A,0X32,0X4A,0X32,0X09,0X32,
N0XDB,0XD6,0XDB,0XDE,0XBA,0XDE,0XDA,0XDE,0XDA,0XDE,0XBB,0XD6,0XDC,0XDE,0XBC,0XD6,
N0X2A,0X3A,0X4A,0X32,0X2A,0X2A,0X2A,0X2A,0X2A,0X2A,0X2A,0X2A,0X2B,0X2A,0X6B,0X1A,
N0X77,0X65,0XF8,0X5D,0XD8,0X4D,0XF8,0X4D,0XF9,0X4D,0XF9,0X45,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X45,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XD9,0X4D,0XD9,0X4D,0XF9,0X4D,0XF9,0X45,0XF9,0X45,0XF9,0X45,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X55,0XB8,0X55,0XAD,0X0A,0X98,0X65,0XB9,0X55,0XB8,0X55,0XD9,0X6D,
N0X77,0X6D,0X76,0X6D,0X77,0X75,0X56,0X75,0X57,0X75,0X77,0X7D,0X35,0X7D,0X4A,0X32,
N0X08,0X3A,0X29,0X42,0X08,0X42,0X29,0X42,0X09,0X3A,0X0A,0X3A,0X6B,0X3A,0X15,0X7D,
N0X56,0X75,0X77,0X75,0X98,0X75,0X37,0X75,0X78,0X7D,0X58,0X75,0XB9,0X6D,0XD8,0X55,
N0XF8,0X45,0XF8,0X45,0XF9,0X45,0XF9,0X45,0XF9,0X45,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X45,0X19,0X4E,0XD8,0X45,0XD9,0X45,0XD8,0X45,
N0XD8,0X4D,0XD9,0X55,0XCD,0X0A,0X98,0X65,0XB9,0X5D,0XB9,0X5D,0X77,0X5D,0XB7,0X65,
N0XD7,0X65,0XB7,0X5D,0XD7,0X55,0XD8,0X5D,0XB7,0X5D,0X97,0X6D,0X4B,0X22,0X6B,0X32,
N0X29,0X2A,0X2A,0X32,0X2A,0X32,0X2A,0X32,0X2B,0X2A,0X6C,0X22,0X97,0X65,0XD8,0X5D,
N0XD8,0X5D,0XB8,0X55,0XB9,0X5D,0X99,0X55,0X99,0X5D,0XB9,0X5D,0XB9,0X4D,0XD9,0X45,
N0X1A,0X4E,0XF8,0X45,0XF9,0X45,0XF9,0X45,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X45,0XF9,0X45,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0X1A,0X4E,0X19,0X4E,0X19,0X4E,0XF9,0X4D,
N0XD8,0X55,0X98,0X5D,0XAC,0X02,0XAD,0X02,0XB8,0X65,0XB8,0X65,0XB7,0X65,0XB7,0X5D,
N0XB7,0X55,0X19,0X4E,0XD8,0X45,0XD8,0X4D,0XD8,0X5D,0X57,0X6D,0X57,0X75,0X77,0X75,
N0X56,0X75,0X37,0X7D,0X37,0X75,0X58,0X75,0X77,0X65,0XD8,0X55,0XF8,0X45,0XF9,0X45,
N0XF9,0X45,0XFA,0X4D,0XD9,0X4D,0XFA,0X4D,0XD9,0X4D,0XF9,0X4D,0XF9,0X4D,0XD9,0X45,
N0XF9,0X4D,0XF9,0X4D,0X19,0X4E,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X45,0XF9,0X45,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XD9,0X45,0XF9,0X4D,0XF9,0X45,0XF8,0X45,0XF8,0X45,0XD8,0X4D,
N0XB8,0X5D,0X98,0X65,0X97,0X65,0XAC,0X0A,0XAC,0X12,0X6B,0X12,0XAC,0X1A,0X8C,0X0A,
N0XD8,0X55,0X19,0X4E,0XFA,0X4D,0XD9,0X4D,0XB8,0X55,0XB8,0X5D,0X98,0X55,0XD9,0X5D,
N0XB9,0X5D,0XD9,0X5D,0XB8,0X55,0XD9,0X55,0XF9,0X4D,0X19,0X4E,0XF9,0X45,0X1A,0X46,
N0XF9,0X45,0XF9,0X45,0XF9,0X45,0X19,0X46,0X19,0X46,0X19,0X46,0XF9,0X4D,0XD9,0X4D,
N0XF9,0X4D,0XD9,0X45,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X45,0XF9,0X45,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0X19,0X4E,0XF9,0X45,0X19,0X46,0X19,0X4E,0XF9,0X55,0XAD,0X02,
N0X98,0X65,0X97,0X6D,0X77,0X6D,0X77,0X6D,0X77,0X6D,0X77,0X6D,0X98,0X65,0XD9,0X4D,
N0XF9,0X45,0XF9,0X45,0XFA,0X4D,0XD9,0X4D,0XF9,0X4D,0XF9,0X4D,0XD9,0X45,0XF9,0X4D,
N0XD9,0X45,0X19,0X4E,0XD9,0X45,0XF9,0X4D,0XF9,0X45,0XF9,0X45,0X19,0X46,0X19,0X46,
N0X19,0X46,0X19,0X46,0XF9,0X45,0XF9,0X45,0XF9,0X45,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X45,0XF9,0X45,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XD9,0X45,0X1A,0X4E,0XF9,0X45,0XD8,0X45,0XF8,0X4D,0XB8,0X55,0XAD,0X0A,0X78,0X75,
N0X58,0X75,0X78,0X75,0XB7,0X65,0XB7,0X5D,0XF8,0X5D,0XB8,0X4D,0XD9,0X4D,0XF9,0X4D,
N0XDA,0X4D,0XD9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X45,0X19,0X46,0XF9,0X45,0XF9,0X45,
N0XF8,0X4D,0XF8,0X4D,0XF8,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X45,0XF9,0X45,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X45,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X45,0XF9,0X45,0X39,0X4E,0XF9,0X4D,0XB8,0X55,0X99,0X6D,0X8D,0X1A,0X8D,0X1A,
N0X8C,0X12,0XAC,0X02,0XD8,0X4D,0XF8,0X4D,0X19,0X4E,0XF9,0X4D,0XFA,0X4D,0XD9,0X4D,
N0XF9,0X4D,0XF9,0X45,0XF9,0X45,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X45,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X45,0XF9,0X45,0XF9,0X45,0XF9,0X4D,0XF8,0X4D,
N0XF8,0X4D,0XD9,0X4D,0XF9,0X4D,0XF9,0X45,0XF9,0X45,0XF9,0X45,0XF9,0X45,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X45,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0X19,0X4E,0XD8,0X45,0X19,0X4E,0XD8,0X4D,0X98,0X5D,0XAD,0X0A,0X8D,0X12,0X8C,0X0A,
N0XCD,0X02,0XD9,0X55,0XF8,0X45,0XF9,0X45,0XF9,0X4D,0XD9,0X45,0XF9,0X45,0X19,0X46,
N0X19,0X46,0X19,0X46,0XF9,0X4D,0XF9,0X4D,0XF9,0X45,0XF9,0X45,0XF9,0X45,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XD9,0X4D,0XD9,0X4D,0XF9,0X45,0XF9,0X45,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0X19,0X4E,0XD8,0X45,
N0XF9,0X45,0X19,0X4E,0XF9,0X4D,0XD9,0X55,0XB8,0X5D,0XB9,0X65,0XB8,0X5D,0XB8,0X55,
N0XF9,0X55,0X19,0X46,0XF9,0X45,0X1A,0X4E,0X19,0X4E,0X19,0X46,0X19,0X46,0X19,0X46,
N0X19,0X46,0XF9,0X45,0XF9,0X45,0XF9,0X45,0XF9,0X45,0XF9,0X45,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XD9,0X4D,
N0XF9,0X4D,0XF9,0X45,0XF9,0X45,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X45,
N0XF9,0X4D,0XF9,0X45,0XF9,0X45,0XF9,0X45,0XD9,0X45,0XD9,0X4D,0XFA,0X4D,0X19,0X4E,
N0X19,0X46,0XF9,0X45,0XF8,0X45,0XD8,0X4D,0XD8,0X4D,0XF8,0X55,0XF9,0X55,0XB8,0X45,
N0X19,0X46,0X19,0X46,0XB8,0X45,0XD9,0X4D,0XF9,0X45,0X19,0X46,0X19,0X46,0X19,0X46,
N0X19,0X46,0XF9,0X45,0XF9,0X4D,0XF9,0X4D,0XF9,0X45,0XF9,0X4D,0XD9,0X4D,0XD9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XD9,0X4D,0XF9,0X4D,0XF9,0X45,0XF9,0X45,0XF9,0X45,0XF9,0X45,
N0XF9,0X45,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X45,0XF9,0X45,0XF9,0X45,0XFA,0X4D,0XD9,0X4D,0X1A,0X56,0XB9,0X45,0XF9,0X45,
N0X19,0X46,0X19,0X46,0XF9,0X4D,0X18,0X4E,0XF8,0X4D,0XD8,0X45,0XF9,0X4D,0X19,0X46,
N0X1A,0X4E,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X45,0XF9,0X45,0X19,0X46,0XF9,0X45,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X45,0XF9,0X4D,0XD9,0X4D,0XD9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XD9,0X4D,0XF9,0X4D,0XF9,0X45,0X19,0X46,0XF9,0X45,0XF9,0X45,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X45,0X19,0X46,0XF9,0X45,0XD9,0X45,0XD9,0X4D,0X1A,0X56,0XF9,0X4D,0XD9,0X45,
N0X19,0X4E,0XD8,0X4D,0XD8,0X4D,0XF8,0X4D,0X19,0X46,0X3A,0X46,0X1A,0X46,0XF9,0X45,
N0XF9,0X4D,0XD9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XD9,0X4D,0XD9,0X4D,
N0XF9,0X4D,0XF9,0X45,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X45,0XF9,0X45,0XF9,0X4D,
N0XD9,0X4D,0XF9,0X4D,0X19,0X46,0X19,0X46,0XF9,0X45,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X45,
N0XF9,0X45,0XF9,0X45,0XFA,0X4D,0XD9,0X4D,0XD9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XD9,0X4D,0XF9,0X4D,0X19,0X46,0XF9,0X3D,0XF9,0X45,0XFA,0X4D,0XD9,0X4D,
N0XFA,0X4D,0XD9,0X4D,0XD9,0X4D,0XF9,0X4D,0XF9,0X4D,0XD9,0X55,0XD9,0X55,0XD9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X45,0XF9,0X45,0XF9,0X45,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0X19,0X46,0X19,0X46,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X45,0XF9,0X45,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XFA,0X4D,0XF9,0X45,0XF9,0X45,0X19,0X46,0XD9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XD9,0X4D,0XD9,0X4D,0XF9,0X4D,0XF9,0X4D,0XD9,0X55,0XB8,0X55,0XB8,0X5D,0XB8,0X55,
N0XD9,0X4D,0XF9,0X45,0XF9,0X45,0X1A,0X4E,0XD9,0X45,0XF9,0X4D,0XF9,0X4D,0XD8,0X45,
N0XF9,0X45,0XF9,0X45,0XF9,0X45,0XF9,0X45,0XF9,0X45,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XD9,0X45,
N0XF9,0X4D,0X19,0X4E,0X19,0X4E,0XD8,0X45,0XF9,0X4D,0X1A,0X4E,0XF9,0X45,0XD9,0X4D,
N0XF9,0X4D,0XD8,0X4D,0X97,0X55,0X97,0X65,0XAC,0X0A,0XAC,0X12,0X98,0X65,0XF9,0X55,
N0XF9,0X45,0XF9,0X45,0XF9,0X45,0X19,0X4E,0XF9,0X4D,0XF8,0X4D,0X19,0X4E,0XF9,0X45,
N0XF9,0X45,0XF9,0X45,0XF9,0X45,0XF9,0X45,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XD9,0X45,0X1A,0X4E,
N0XD9,0X45,0XF9,0X45,0X3A,0X4E,0XF9,0X45,0XD9,0X45,0XD9,0X45,0XF9,0X4D,0XF9,0X55,
N0XB8,0X5D,0XB8,0X75,0X56,0X7D,0X6B,0X2A,0X4A,0X2A,0X56,0X75,0XF8,0X55,0X19,0X46,
N0XF9,0X4D,0XD9,0X45,0X1A,0X4E,0XF9,0X45,0XF8,0X45,0XD8,0X45,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X45,0XF9,0X45,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0X19,0X4E,0XD9,0X45,
N0XF9,0X45,0XF9,0X45,0XF9,0X45,0XF9,0X4D,0X1A,0X4E,0XF9,0X45,0XD8,0X55,0X77,0X6D,
N0X6B,0X2A,0X2A,0X32,0XFF,0XF7,0XBF,0XEF,0X8A,0X2A,0X96,0X65,0XF8,0X55,0XF9,0X4D,
N0XF9,0X4D,0XD9,0X45,0XF9,0X45,0X19,0X4E,0X19,0X4E,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0X19,0X46,0XF9,0X45,0XF9,0X4D,0X19,0X4E,
N0XD8,0X45,0X19,0X4E,0XF9,0X45,0XF8,0X45,0X18,0X46,0XD7,0X5D,0X6B,0X22,0XFF,0XF7,
N0XDF,0XF7,0XFF,0XFF,0XFF,0XFF,0XDF,0XEF,0X4A,0X2A,0X8B,0X12,0XB8,0X55,0XF9,0X4D,
N0X1A,0X4E,0XF9,0X45,0X19,0X4E,0XD8,0X45,0XF9,0X4D,0XF9,0X4D,0XD9,0X4D,0XD9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XD9,0X4D,0XD9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X45,0XF9,0X4D,0XF8,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XD8,0X45,0X19,0X4E,0XF7,0X55,0X76,0X65,0X09,0X2A,0XFF,0XFF,0XFF,0XFF,
N0XDF,0XF7,0XFF,0XFF,0XFF,0XFF,0X09,0X3A,0X6B,0X2A,0XB8,0X65,0XB8,0X45,0XF9,0X4D,
N0XF9,0X45,0XD9,0X45,0X19,0X4E,0XF9,0X4D,0XF9,0X4D,0XD9,0X4D,0XD9,0X4D,0XF9,0X4D,
N0XF9,0X45,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XD9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF8,0X45,0XF9,0X4D,0XB8,0X4D,
N0XF9,0X5D,0X77,0X5D,0X56,0X65,0X76,0X85,0X09,0X32,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
N0XDF,0XFF,0XDF,0XFF,0X09,0X42,0X2A,0X2A,0X77,0X65,0XFA,0X5D,0XFA,0X4D,0XD9,0X45,
N0X19,0X4E,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X45,0X19,0X46,
N0XF9,0X45,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X55,0XB8,0X45,0X19,0X46,0X19,0X46,0XF9,0X4D,0XD9,0X55,0XB9,0X55,
N0XCD,0X02,0X8B,0X12,0X4A,0X22,0XFF,0XF7,0XFF,0XFF,0XFF,0XFF,0XDF,0XFF,0XFF,0XFF,
N0XDF,0XFF,0XDF,0XFF,0XFF,0XEF,0XCC,0X12,0XB9,0X55,0XFA,0X4D,0XFA,0X45,0XF9,0X45,
N0XF9,0X45,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X45,0X19,0X46,0X19,0X46,
N0XF9,0X45,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0X19,0X46,0XF9,0X45,0XFA,0X45,0XDA,0X4D,0XD9,0X4D,0XB9,0X55,
N0XD8,0X5D,0X76,0X75,0X29,0X32,0XFF,0XFF,0XDE,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
N0XE8,0X39,0X6A,0X32,0X77,0X6D,0XB9,0X55,0XFA,0X4D,0XFA,0X45,0XF9,0X45,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X45,0X19,0X46,0X19,0X46,0XF9,0X45,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X45,0XF9,0X45,0XF9,0X45,0XFA,0X45,0XFA,0X45,0XDA,0X4D,0XD9,0X4D,0XD8,0X4D,
N0XB7,0X65,0X2A,0X2A,0XBF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XE8,0X39,
N0X29,0X2A,0X98,0X65,0XD9,0X55,0XD9,0X4D,0XFA,0X45,0XF9,0X45,0X19,0X4E,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X45,0X19,0X46,0XF9,0X45,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X45,0XF9,0X45,0XFA,0X4D,0XD9,0X4D,0XD9,0X4D,0X19,0X4E,0XB7,0X65,
N0X2A,0X2A,0XEA,0X39,0XE9,0X39,0XE9,0X39,0XC8,0X39,0XE9,0X39,0XE9,0X39,0X4B,0X2A,
N0X97,0X5D,0XF9,0X4D,0XFA,0X4D,0XF9,0X45,0X19,0X4E,0XD9,0X45,0XF9,0X4D,0XF9,0X4D,
N0XD9,0X4D,0XD9,0X4D,0XF9,0X4D,0XF9,0X45,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X45,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XD9,0X4D,0XD9,0X4D,0XD8,0X4D,0XD8,0X5D,0X6B,0X1A,
N0X4B,0X2A,0X6B,0X2A,0X6B,0X2A,0X4B,0X2A,0X6B,0X2A,0X4B,0X22,0XAC,0X1A,0XB8,0X55,
N0XF9,0X4D,0XF9,0X45,0XF9,0X45,0XD9,0X45,0X19,0X4E,0XF9,0X4D,0XF9,0X4D,0XD9,0X4D,
N0XD9,0X4D,0XF9,0X4D,0XF9,0X4D,0XD9,0X4D,0XD9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X45,0XF9,0X45,0X19,0X46,0XF9,0X45,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XD9,0X4D,0XD8,0X4D,0XD8,0X55,0XD8,0X55,0X97,0X5D,
N0XB7,0X5D,0XB8,0X5D,0XD8,0X5D,0X97,0X55,0XD8,0X55,0XB7,0X4D,0XF9,0X55,0XF9,0X4D,
N0X1A,0X4E,0XF9,0X45,0X19,0X4E,0XD8,0X45,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X45,0XF9,0X45,0X19,0X46,0X19,0X46,0XF8,0X4D,0XF8,0X4D,
N0XF8,0X4D,0XF9,0X4D,0XF9,0X4D,0X19,0X4E,0XD9,0X45,0X19,0X4E,0X19,0X4E,0XD8,0X45,
N0XF9,0X4D,0X19,0X46,0X19,0X46,0X18,0X46,0X18,0X46,0XF9,0X4D,0XD9,0X4D,0XD9,0X45,
N0X19,0X4E,0XD8,0X45,0X19,0X4E,0XF9,0X4D,0XF9,0X4D,0XF9,0X45,0XF9,0X45,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XD9,0X4D,0XD9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XD9,0X3D,0X1A,0X46,0XF9,0X45,0XF9,0X45,0XF9,0X4D,0XD9,0X4D,
N0XD9,0X4D,0XF9,0X45,0XF9,0X45,0X1A,0X4E,0XD9,0X45,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X45,0XF9,0X45,0XF9,0X45,0XF9,0X45,0XF9,0X45,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X45,
N0XF9,0X45,0XF9,0X45,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X45,0XF9,0X45,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XD9,0X4D,0XD9,0X4D,0XD9,0X4D,
N0XF9,0X4D,0XFA,0X45,0X19,0X3E,0XF9,0X45,0XF9,0X45,0XF9,0X4D,0XD9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0X1A,0X4E,0XD9,0X45,0X1A,0X4E,0XF9,0X4D,0XD9,0X4D,0XF9,0X4D,0XF8,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X45,0XF9,0X45,0XF9,0X45,0XF9,0X45,0XF9,0X45,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X45,0XF9,0X45,0XF9,0X45,0XF9,0X45,0XF9,0X45,
N0XF9,0X45,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XD9,0X4D,0XF9,0X4D,0XF8,0X4D,0XF8,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X45,0XF9,0X45,
N0XF9,0X45,0XF9,0X45,0XF9,0X45,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF8,0X4D,0XF8,0X4D,
N0XF9,0X4D,0XF9,0X45,0XF9,0X45,0XF9,0X45,0XF9,0X45,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X45,0XF9,0X45,0XF9,0X45,0XF9,0X45,0XF9,0X4D,0XF9,0X4D,
N0XF8,0X4D,0XF8,0X4D,0XF9,0X45,0XF9,0X4D,0XF9,0X4D,0XD9,0X4D,0XD9,0X4D,0XD9,0X4D,
N0XF9,0X45,0XF9,0X45,0XF9,0X45,0XF9,0X45,0XF9,0X4D,0XF9,0X4D,0X19,0X4E,0XF8,0X45,
N0XF9,0X45,0XF9,0X45,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X45,0XF9,0X45,0XF9,0X4D,0XF9,0X4D,0XF9,0X45,0XF9,0X45,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X45,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X45,
N0XF9,0X4D,0XF9,0X45,0X19,0X46,0X19,0X46,0X18,0X46,0X18,0X46,0X19,0X46,0XF9,0X45,
N0XF9,0X4D,0XD9,0X4D,0XDA,0X4D,0XDA,0X4D,0XF9,0X4D,0XF9,0X4D,0XF8,0X45,0XF9,0X4D,
N0XF9,0X4D,0XF8,0X4D,0XF8,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X45,0XF9,0X45,0XF9,0X45,
N0XF9,0X45,0XF9,0X45,0XF9,0X45,0XF9,0X4D,0XF9,0X4D,0XF8,0X4D,0XF8,0X4D,0XF9,0X4D,
N0XF9,0X4D,0X19,0X46,0X19,0X46,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X45,0XF9,0X45,0XF8,0X45,0XF9,0X45,0XF9,0X4D,0XF9,0X4D,0XF8,0X4D,
N0XF8,0X4D,0XF9,0X45,0XF9,0X4D,0XF9,0X4D,0XD9,0X4D,0XD9,0X4D,0XF9,0X4D,0XF9,0X45,
N0X19,0X4E,0XF9,0X4D,0XD8,0X45,0XFA,0X4D,0XF9,0X4D,0XF8,0X45,0X18,0X46,0XF9,0X45,
N0XF9,0X45,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X45,
N0XF9,0X45,0XF9,0X4D,0XF9,0X4D,0XF9,0X45,0XF9,0X45,0XF9,0X45,0XF9,0X45,0XF9,0X45,
N0XF9,0X45,0XF9,0X45,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X45,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X45,0X18,0X46,0X18,0X46,0X18,0X46,0XF9,0X45,0XF9,0X45,0XF9,0X4D,
N0XF9,0X4D,0XDA,0X4D,0XD9,0X4D,0XF9,0X4D,0XF9,0X45,0XF8,0X45,0XF9,0X45,0XF9,0X45,
N0XF8,0X45,0XF9,0X4D,0XF9,0X4D,0XD9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X45,0X19,0X46,0XF9,0X45,0XF9,0X45,0XF9,0X4D,0XD9,0X4D,0XD8,0X55,0XF8,0X4D,
N0X19,0X46,0X19,0X46,0XF9,0X4D,0XF9,0X4D,0XF9,0X45,0XF9,0X45,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X45,0XF9,0X45,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X45,0XF9,0X45,
N0XF9,0X4D,0XD9,0X4D,0XD9,0X4D,0XD9,0X4D,0XF9,0X4D,0XF9,0X45,0X19,0X46,0XF9,0X45,
N0XF9,0X4D,0XF9,0X4D,0XD9,0X4D,0XD9,0X4D,0X19,0X46,0XF9,0X45,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X45,0XF9,0X45,0XF9,0X45,0XF9,0X45,0XF9,0X45,
N0XF9,0X4D,0XF9,0X4D,0XD9,0X4D,0XD9,0X4D,0XD9,0X4D,0XF9,0X4D,0XF9,0X45,0XF9,0X45,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X45,0XF9,0X45,0XF9,0X4D,0XF9,0X4D,0XF9,0X45,0XF9,0X45,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X45,0XF9,0X45,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X45,0XF9,0X45,
N0XD9,0X4D,0XF9,0X4D,0XF9,0X45,0XF9,0X45,0XF9,0X45,0X19,0X46,0XF9,0X45,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XD9,0X4D,0XD9,0X4D,0XD9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X45,0XF9,0X45,0XF9,0X45,0XF9,0X4D,0XF9,0X4D,0XD9,0X4D,0XF9,0X4D,0XF9,0X45,
N0XF9,0X45,0XF8,0X4D,0XF8,0X4D,0XF9,0X45,0XF9,0X45,0XF9,0X45,0XF9,0X45,0XF9,0X45,
N0XF9,0X45,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X45,0XF9,0X45,0XFA,0X45,0XF9,0X4D,
N0XD9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X45,0X19,0X46,0XF9,0X45,0XF9,0X45,0XD9,0X4D,
N0XB9,0X4D,0XD9,0X4D,0XD9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X45,0XF9,0X45,0XFA,0X45,0XFA,0X45,0XF9,0X45,0XF9,0X45,
N0XF9,0X4D,0XF9,0X4D,0XD9,0X4D,0XD9,0X4D,0XF9,0X4D,0XF9,0X45,0XF9,0X45,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X45,0XF9,0X45,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X45,0XF9,0X45,0XF9,0X45,0XF9,0X4D,0XD9,0X4D,0XD9,0X4D,
N0XD9,0X4D,0XD9,0X4D,0XD9,0X4D,0XF9,0X4D,0XF9,0X4D,0X19,0X46,0X19,0X46,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X45,0XF9,0X45,0XF9,0X4D,0XFA,0X45,0XF9,0X45,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XD9,0X4D,0XF9,0X4D,0XF9,0X4D,0XDA,0X4D,0XDA,0X4D,
N0XD9,0X4D,0XF9,0X4D,0XF9,0X45,0XF9,0X45,0XF9,0X45,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF8,0X4D,0XF8,0X4D,0XD9,0X4D,0XF9,0X4D,0XF9,0X45,0X19,0X46,0XF9,0X45,0XF9,0X45,
N0XF9,0X45,0XF9,0X45,0X19,0X46,0X19,0X46,0XF9,0X45,0XFA,0X45,0XF9,0X45,0XF9,0X45,
N0XF9,0X45,0XF9,0X45,0XF9,0X45,0XF9,0X45,0XF9,0X4D,0XFA,0X4D,0XF9,0X4D,0XB9,0X4D,
N0XF9,0X55,0XD9,0X55,0XD8,0X4D,0XD9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XFA,0X45,0XFA,0X45,0XFA,0X45,0X19,0X46,0XF9,0X45,0XF9,0X45,
N0XF9,0X4D,0XF9,0X45,0XF9,0X45,0XF9,0X45,0XF9,0X4D,0XD9,0X4D,0XD9,0X4D,0XD9,0X55,
N0XD9,0X4D,0XD9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X45,0XF9,0X45,0XFA,0X4D,0XDA,0X4D,0XDA,0X4D,0XDA,0X4D,0XDA,0X4D,
N0XDA,0X4D,0XFA,0X4D,0XF9,0X4D,0XF8,0X4D,0XF8,0X4D,0XF8,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XDA,0X4D,0XFA,0X45,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X45,
N0XF9,0X45,0XF9,0X4D,0XF9,0X4D,0XF9,0X45,0XF9,0X45,0XD9,0X4D,0XDA,0X4D,0XD9,0X4D,
N0XF9,0X4D,0XF9,0X45,0X19,0X46,0X19,0X46,0XF9,0X45,0XDA,0X4D,0XD9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XD9,0X4D,0XD9,0X4D,0XF9,0X45,0X19,0X46,0XF9,0X4D,0XF9,0X4D,0XF9,0X45,
N0XF9,0X45,0X18,0X46,0X19,0X46,0XF9,0X45,0XFA,0X4D,0XF9,0X4D,0XF9,0X45,0X19,0X46,
N0X19,0X46,0XF9,0X45,0XF9,0X4D,0XD9,0X45,0XF9,0X4D,0XD9,0X4D,0XD9,0X55,0XB8,0X5D,
N0XED,0X02,0XCC,0X02,0XD9,0X5D,0XD9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X45,0XFA,0X45,0XF9,0X45,0XF9,0X45,0XF9,0X45,0XF8,0X45,0XF8,0X45,
N0XF9,0X45,0XF9,0X45,0XF9,0X45,0XF9,0X4D,0XD9,0X4D,0XD9,0X4D,0XD9,0X4D,0XD9,0X4D,
N0XD9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XFA,0X4D,0XFA,0X4D,0XFA,0X4D,0XFA,0X4D,0XFA,0X4D,0XFA,0X45,
N0XF9,0X45,0XF9,0X4D,0XF8,0X4D,0XF8,0X4D,0XF8,0X4D,0XF9,0X45,0XF9,0X4D,0XF9,0X4D,
N0XD9,0X4D,0XD9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X45,0XF9,0X45,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X45,0X19,0X46,0XF9,0X45,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X45,0X19,0X46,0XF9,0X45,0XD9,0X4D,0XD9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XDA,0X4D,0XDA,0X4D,0XF9,0X45,0XF9,0X45,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XD9,0X4D,0XD9,0X4D,0XF9,0X4D,0XF8,0X4D,0X19,0X46,0X19,0X46,
N0X19,0X46,0XF9,0X45,0X1A,0X46,0X1A,0X46,0XF9,0X4D,0XD9,0X5D,0X97,0X6D,0X6B,0X12,
N0X8B,0X0A,0XB8,0X5D,0XD9,0X4D,0XF9,0X45,0XF9,0X45,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF8,0X4D,0XF8,0X4D,0XF8,0X4D,0XF8,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X45,0X18,0X46,0X18,0X46,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X45,0XF9,0X45,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X45,0X19,0X46,0XF9,0X45,0XF8,0X4D,
N0XF9,0X4D,0XB8,0X5D,0XB8,0X55,0XD8,0X55,0XD8,0X55,0XD8,0X55,0XD8,0X55,0XD8,0X55,
N0XD8,0X55,0XD8,0X55,0XF8,0X4D,0XD7,0X55,0XD8,0X55,0XD8,0X55,0XD8,0X55,0XD8,0X55,
N0XD8,0X55,0XD8,0X4D,0XD8,0X55,0XB8,0X55,0XB8,0X55,0XB9,0X55,0XD9,0X55,0XB9,0X55,
N0XB9,0X55,0XD8,0X55,0XD8,0X55,0XB8,0X55,0XB8,0X55,0XD9,0X55,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XD9,0X4D,0XD9,0X4D,0XD9,0X4D,0XF8,0X4D,0X19,0X46,0X19,0X46,0XF8,0X4D,
N0XF9,0X4D,0X19,0X46,0XF9,0X45,0XF9,0X4D,0XB8,0X55,0X77,0X6D,0X6B,0X1A,0XAC,0X12,
N0X97,0X5D,0XD9,0X4D,0XF9,0X45,0XF9,0X45,0XF8,0X4D,0XF8,0X4D,0XD9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF8,0X4D,0XF8,0X4D,0XF8,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF8,0X4D,0XF8,0X4D,0XD8,0X55,0XD8,0X55,0XD8,0X55,
N0XD8,0X55,0XD8,0X55,0XD8,0X55,0XD9,0X55,0XD9,0X55,0XD8,0X55,0XD8,0X55,0XB8,0X55,
N0XD8,0X55,0XD8,0X55,0XD8,0X55,0XD8,0X55,0XD8,0X55,0XD7,0X55,0XD8,0X55,0XB9,0X55,
N0XB9,0X55,0XB8,0X55,0XD8,0X55,0XD8,0X4D,0XF8,0X4D,0XF8,0X4D,0XD8,0X55,0XD8,0X55,
N0X77,0X6D,0X77,0X6D,0XB8,0X6D,0X97,0X65,0X97,0X6D,0X97,0X6D,0X76,0X6D,0X97,0X6D,
N0X97,0X6D,0X76,0X65,0X96,0X6D,0X97,0X6D,0X76,0X6D,0X97,0X75,0X97,0X6D,0X97,0X6D,
N0X97,0X6D,0X97,0X6D,0X76,0X65,0XB7,0X6D,0X97,0X6D,0X77,0X65,0XB7,0X75,0X76,0X65,
N0X96,0X6D,0X97,0X6D,0X77,0X6D,0X97,0X6D,0XB7,0X5D,0XF8,0X55,0XF8,0X45,0X19,0X46,
N0XF9,0X45,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XD8,0X45,0XF8,0X45,0XF8,0X55,0XD8,0X55,
N0XD8,0X4D,0X1A,0X4E,0XF9,0X45,0X98,0X4D,0X98,0X75,0X6B,0X12,0X8B,0X0A,0XB8,0X5D,
N0XF9,0X4D,0X19,0X4E,0XF9,0X4D,0XD8,0X4D,0XB8,0X55,0XD9,0X55,0XD9,0X4D,0X19,0X4E,
N0X19,0X46,0XF8,0X45,0XF8,0X45,0X19,0X4E,0XF8,0X45,0XF9,0X45,0X1A,0X4E,0XF9,0X4D,
N0XFA,0X4D,0XD9,0X4D,0X97,0X5D,0X97,0X6D,0X97,0X65,0X96,0X65,0XB7,0X6D,0X96,0X6D,
N0X97,0X6D,0X77,0X6D,0X98,0X6D,0X97,0X6D,0X96,0X6D,0XB7,0X6D,0X97,0X6D,0X97,0X6D,
N0X96,0X75,0X76,0X6D,0X96,0X6D,0X96,0X6D,0XB6,0X6D,0X96,0X65,0X77,0X6D,0X77,0X6D,
N0X97,0X6D,0X97,0X6D,0X97,0X65,0XB7,0X65,0XB7,0X6D,0X97,0X6D,0X56,0X65,0XFF,0XEF,
N0XFF,0XEF,0XFF,0XE7,0XFF,0XEF,0XFF,0XEF,0XFF,0XEF,0XFF,0XF7,0XFF,0XEF,0XFF,0XEF,
N0XFF,0XF7,0XFF,0XF7,0XFF,0XF7,0XFF,0XF7,0XFF,0XF7,0XFF,0XF7,0XFF,0XF7,0XFF,0XF7,
N0XFF,0XF7,0XFF,0XEF,0XFF,0XE7,0XFF,0XEF,0XFF,0XE7,0XFF,0XEF,0XFF,0XF7,0XFF,0XF7,
N0XFF,0XF7,0XFF,0XF7,0XFF,0XEF,0XFF,0XDF,0XB7,0X6D,0XB7,0X4D,0X19,0X4E,0X19,0X4E,
N0XD8,0X45,0XD9,0X45,0XD9,0X4D,0X19,0X4E,0XF9,0X4D,0X97,0X55,0XB8,0X5D,0XD9,0X55,
N0XB9,0X4D,0XF9,0X4D,0XF9,0X55,0X77,0X65,0XAC,0X12,0XAC,0X02,0XD9,0X5D,0XB8,0X4D,
N0XD9,0X4D,0XD9,0X55,0XB9,0X5D,0XB8,0X5D,0X98,0X55,0XD9,0X4D,0XF9,0X45,0XF9,0X45,
N0X19,0X46,0XF9,0X45,0XF9,0X4D,0X19,0X4E,0XF9,0X45,0XD9,0X45,0XD9,0X4D,0X98,0X5D,
N0X97,0X75,0XFF,0XE7,0XFF,0XEF,0XFF,0XF7,0XFF,0XEF,0XFF,0XEF,0XFF,0XEF,0XFF,0XEF,
N0XFF,0XEF,0XFF,0XEF,0XFF,0XEF,0XFF,0XEF,0XFE,0XEF,0XFF,0XF7,0XFF,0XF7,0XFF,0XF7,
N0XFF,0XF7,0XFF,0XF7,0XFF,0XEF,0XFF,0XEF,0XFF,0XEF,0XFF,0XEF,0XFF,0XEF,0XFF,0XEF,
N0XFF,0XEF,0XFF,0XF7,0XFF,0XEF,0XFF,0XEF,0XFF,0XE7,0XFF,0XE7,0XDE,0XFF,0XBD,0XFF,
N0X9D,0XFF,0X7C,0XFF,0X7C,0XFF,0XBD,0XFF,0X7D,0XFF,0X9D,0XFF,0X9C,0XFF,0X3B,0XFF,
N0X7C,0XFF,0X5D,0XFF,0X7D,0XFF,0XBD,0XFF,0X9D,0XFF,0X7C,0XFF,0X3B,0XFF,0X5C,0XFF,
N0X9D,0XFF,0XBD,0XFF,0X9E,0XFF,0XBE,0XFF,0X7C,0XFF,0X5C,0XFF,0X5C,0XFF,0X7D,0XFF,
N0X3C,0XFF,0X7E,0XFF,0XBF,0XFF,0XFF,0XE7,0X97,0X6D,0XB8,0X55,0XD8,0X4D,0XF9,0X45,
N0XFA,0X4D,0XFA,0X4D,0XD9,0X4D,0XD8,0X55,0XCD,0X0A,0X78,0X6D,0X99,0X65,0XB9,0X5D,
N0XF9,0X55,0XB8,0X4D,0XB8,0X65,0XAC,0X02,0XCD,0X02,0XB8,0X55,0XF9,0X55,0XF9,0X55,
N0X98,0X5D,0XAD,0X0A,0XAD,0X0A,0XCD,0X02,0XF9,0X55,0XD9,0X4D,0XD9,0X4D,0X1A,0X56,
N0XD9,0X4D,0XFA,0X4D,0XF9,0X45,0XF9,0X45,0XD9,0X55,0X97,0X65,0XFF,0XE7,0XDF,0XFF,
N0X7D,0XFF,0X7C,0XFF,0X7C,0XFF,0X7D,0XFF,0X9D,0XFF,0X9E,0XFF,0X9E,0XFF,0X9E,0XFF,
N0X9D,0XFF,0X7C,0XFF,0X9B,0XFF,0X9B,0XFF,0X5B,0XFF,0X7C,0XFF,0X7C,0XFF,0X5C,0XFF,
N0X5C,0XFF,0X7D,0XFF,0X9D,0XFF,0X7D,0XFF,0XBE,0XFF,0XBE,0XFF,0XBE,0XFF,0X9D,0XFF,
N0X5B,0XFF,0X7C,0XFF,0X9D,0XFF,0XDE,0XFF,0XFF,0XFF,0X9D,0XFF,0X88,0X8A,0X06,0XA2,
N0X46,0XAA,0X68,0X92,0X68,0X8A,0X68,0X9A,0X47,0XA2,0X05,0XAA,0X26,0XB2,0XE6,0XA9,
N0X28,0XAA,0X68,0X9A,0X68,0X92,0X68,0X9A,0X47,0XAA,0X06,0XBA,0X27,0XB2,0X68,0X92,
N0X89,0X82,0X88,0X8A,0X48,0X92,0X48,0X9A,0X26,0XAA,0X06,0XBA,0X06,0XC2,0X26,0XC2,
N0X07,0XB2,0X1B,0XFF,0X9E,0XFF,0XFF,0XEF,0XB7,0X6D,0XB7,0X55,0XF8,0X55,0XD9,0X4D,
N0XDA,0X4D,0XD9,0X45,0XD9,0X55,0XB8,0X65,0X8C,0X02,0X8C,0X02,0XED,0X02,0XB8,0X4D,
N0XB8,0X4D,0XD8,0X5D,0XB8,0X5D,0XB8,0X5D,0XB8,0X55,0XD8,0X55,0XB8,0X55,0XCD,0X02,
N0X99,0X65,0X99,0X65,0XB9,0X5D,0XD9,0X55,0XD9,0X4D,0XD9,0X55,0XBA,0X4D,0XDA,0X4D,
N0XDA,0X4D,0X19,0X4E,0XF8,0X55,0X76,0X65,0XFF,0XEF,0XBE,0XFF,0XB9,0XFE,0X27,0XB2,
N0X06,0XBA,0X06,0XB2,0X47,0XAA,0X68,0X92,0X89,0X8A,0X69,0X8A,0X69,0X92,0X48,0X9A,
N0X47,0XAA,0X26,0XAA,0X26,0XB2,0X26,0XAA,0X06,0XA2,0X27,0XA2,0X27,0XA2,0X27,0XB2,
N0X06,0XAA,0X48,0XA2,0X68,0X9A,0X28,0X8A,0X69,0X8A,0X48,0X8A,0X48,0X9A,0X47,0XAA,
N0X67,0XB2,0X88,0XA2,0XFA,0XFE,0XDE,0XFF,0X5B,0XFF,0X47,0XA2,0XC5,0XC1,0XE5,0XC1,
N0X3B,0XFF,0X5B,0XFF,0X99,0XFE,0X47,0XC2,0XC4,0XC9,0XE5,0XC9,0XA5,0XB1,0X28,0XB2,
N0X3A,0XFF,0X1A,0XFF,0XFA,0XFE,0XE7,0XB1,0X85,0XD1,0XE6,0XC9,0X7C,0XFF,0XBD,0XFF,
N0X7C,0XFF,0X3A,0XFF,0X3A,0XFF,0X26,0XBA,0XC4,0XD9,0X82,0XE1,0XA2,0XF1,0X82,0XE9,
N0X84,0XD9,0X07,0XBA,0X7D,0XFF,0XFF,0XE7,0X95,0X75,0X96,0X5D,0X1A,0X56,0XD9,0X45,
N0XFA,0X45,0XF9,0X4D,0XD8,0X4D,0XF9,0X5D,0XF9,0X55,0XB8,0X4D,0XF9,0X4D,0XF9,0X55,
N0XD8,0X5D,0X97,0X65,0X97,0X65,0XB7,0X65,0XD8,0X55,0XB8,0X4D,0XF9,0X55,0XB8,0X4D,
N0XF9,0X55,0XB8,0X4D,0XF9,0X4D,0XF9,0X4D,0XD9,0X4D,0XBA,0X4D,0XFA,0X4D,0XF9,0X4D,
N0XB7,0X4D,0XB6,0X65,0XFF,0XEF,0X5C,0XFF,0X06,0XB2,0X83,0XD1,0X84,0XE9,0X83,0XE9,
N0XA4,0XE1,0XE5,0XC1,0X3B,0XFF,0X5C,0XFF,0X7D,0XFF,0X5C,0XFF,0XB9,0XFE,0XA5,0XB9,
N0XE6,0XC9,0XA5,0XB9,0XE6,0XB1,0XFA,0XFE,0XFA,0XFE,0X06,0XAA,0X84,0XB1,0X06,0XBA,
N0X68,0XAA,0X5C,0XFF,0X5D,0XFF,0X1D,0XFF,0X1C,0XFF,0X3B,0XFF,0XE6,0XA9,0X26,0XB2,
N0X26,0XB2,0XD9,0XFE,0XBE,0XFF,0X5B,0XFF,0X27,0XAA,0X83,0XD1,0XA4,0XD1,0X47,0XA2,
N0X1A,0XFF,0XE6,0XB9,0XA5,0XC9,0XA4,0XD1,0X36,0XFE,0XBA,0XFE,0X99,0XFE,0X67,0XBA,
N0X05,0XAA,0X27,0XAA,0X99,0XFE,0X84,0XD9,0XA5,0XC9,0X9D,0XFF,0XBD,0XFF,0X67,0X92,
N0X26,0XAA,0X47,0XAA,0X36,0XFE,0X82,0XE1,0X61,0XF9,0X20,0XF9,0X41,0XF9,0X22,0XF9,
N0X64,0XD9,0X67,0XA2,0X9C,0XFF,0XFE,0XEF,0XFF,0XD7,0XD8,0X5D,0XD9,0X4D,0X1A,0X4E,
N0XF9,0X45,0XF8,0X45,0XF8,0X45,0XF8,0X45,0X19,0X4E,0XF9,0X4D,0XB8,0X55,0X77,0X65,
N0X8B,0X12,0X6B,0X1A,0X8B,0X12,0XB7,0X65,0XB8,0X4D,0XF9,0X4D,0X19,0X46,0XD8,0X45,
N0X3A,0X4E,0XF9,0X45,0XF9,0X45,0XFA,0X4D,0XB9,0X4D,0XD9,0X4D,0XB8,0X55,0XD7,0X6D,
N0XFF,0XE7,0X9D,0XFF,0X28,0XAA,0X83,0XD9,0X42,0XF9,0X21,0XF9,0X22,0XF9,0X42,0XF1,
N0X83,0XD1,0X68,0XAA,0X7C,0XFF,0X1B,0XFF,0X68,0XA2,0XE6,0XC9,0X84,0XD1,0XC5,0XD1,
N0XF6,0XFD,0X99,0XFE,0X28,0XAA,0X48,0XA2,0XB9,0XFE,0X78,0XFE,0X26,0XBA,0X67,0XA2,
N0XFA,0XFE,0X3C,0XFF,0X49,0X9A,0X28,0XAA,0X27,0XAA,0XDA,0XFE,0X98,0XFE,0X46,0XB2,
N0XB8,0XFE,0XBD,0XFF,0X5C,0XFF,0XE6,0XA1,0XC4,0XE1,0X62,0XE1,0XA4,0XB1,0X97,0XFE,
N0X83,0XD9,0X83,0XE1,0XC4,0XC9,0X1A,0XFF,0X3C,0XFF,0X3B,0XFF,0XC5,0XB9,0XC4,0XC9,
N0X47,0XB2,0XF9,0XFE,0XA4,0XD1,0XE5,0XC1,0X7C,0XFF,0X9D,0XFF,0X26,0XB2,0XA4,0XB9,
N0X26,0XBA,0X98,0XFE,0X42,0XE1,0X62,0XF9,0X00,0XF9,0X21,0XF9,0X62,0XF9,0X62,0XE1,
N0XC4,0XC1,0X1A,0XFF,0XBD,0XFF,0XFF,0XF7,0X97,0X6D,0XB8,0X4D,0XFA,0X4D,0X19,0X4E,
N0XD8,0X45,0X19,0X4E,0X19,0X46,0XB8,0X45,0XD9,0X5D,0XB8,0X6D,0X36,0X75,0X2A,0X2A,
N0XE9,0X39,0X2A,0X3A,0X37,0X75,0XD9,0X65,0XD8,0X4D,0XF9,0X45,0X19,0X4E,0XF9,0X45,
N0XD8,0X45,0X19,0X46,0XD9,0X45,0XD9,0X4D,0XF9,0X5D,0X77,0X6D,0XFF,0XEF,0X7D,0XFF,
N0X1B,0XFF,0X84,0XC9,0X63,0XE9,0X22,0XF9,0X62,0XF9,0X21,0XF9,0X21,0XF9,0XA3,0XE9,
N0XE5,0XB1,0X1B,0XFF,0X78,0XFE,0X06,0XC2,0X42,0XE1,0X62,0XE1,0X05,0XCA,0X97,0XFE,
N0XB9,0XFE,0X27,0XA2,0X89,0XA2,0XB9,0XFE,0X1A,0XFF,0X68,0XA2,0X88,0X9A,0X1A,0XFF,
N0X1B,0XFF,0XE6,0XA9,0X83,0XC9,0XE5,0XC1,0X1A,0XFF,0X7B,0XFF,0X25,0X9A,0XD9,0XFE,
N0X9D,0XFF,0X3B,0XFF,0X26,0XAA,0X83,0XE1,0X62,0XE9,0XE4,0XC1,0X76,0XFE,0X62,0XE9,
N0X62,0XE9,0XC4,0XC9,0X1A,0XFF,0XBE,0XFF,0X7D,0XFF,0X06,0XC2,0XC4,0XC9,0X46,0XAA,
N0XF9,0XFE,0XA4,0XC9,0XC4,0XB9,0X9D,0XFF,0X7C,0XFF,0X06,0XBA,0XC4,0XC9,0X26,0XBA,
N0X57,0XFE,0X43,0XE1,0X22,0XF9,0X21,0XF9,0X21,0XF9,0X21,0XF9,0X62,0XF1,0XC4,0XD9,
N0X06,0XBA,0X88,0X92,0XDE,0XFF,0XFF,0XD7,0XB8,0X65,0XD9,0X55,0XD9,0X45,0X19,0X4E,
N0XD8,0X45,0XF9,0X45,0XD9,0X4D,0XB8,0X65,0X6C,0X1A,0X4B,0X32,0XFF,0XFF,0XBF,0XFF,
N0XDF,0XFF,0X4B,0X2A,0X8C,0X12,0XD9,0X55,0XF9,0X45,0XF9,0X45,0X19,0X4E,0XF9,0X45,
N0X19,0X46,0X19,0X46,0XF8,0X4D,0X77,0X65,0XFF,0XE7,0XFF,0XFF,0X89,0X92,0XC5,0XB9,
N0XA4,0XE1,0X42,0XF1,0X62,0XF9,0X21,0XF9,0X42,0XF9,0X41,0XF9,0X62,0XE9,0X05,0XC2,
N0XFA,0XFE,0X58,0XFE,0XC5,0XD1,0X42,0XF1,0X61,0XF1,0X04,0XC2,0X97,0XFE,0X1A,0XFF,
N0X68,0X92,0X68,0X8A,0X3B,0XFF,0X3B,0XFF,0X47,0X92,0X88,0X9A,0X3A,0XFF,0X1A,0XFF,
N0X26,0XB2,0XA4,0XD9,0XE5,0XC9,0X7B,0XFF,0X7B,0XFF,0X06,0X9A,0XB9,0XFE,0XBE,0XFF,
N0X3B,0XFF,0X26,0XAA,0XA3,0XE1,0X62,0XE9,0XC3,0XC1,0X96,0XFE,0X62,0XE9,0X82,0XE9,
N0XC4,0XC9,0XFA,0XFE,0X9E,0XFF,0X7D,0XFF,0X27,0XA2,0X05,0XB2,0X67,0X9A,0XF9,0XFE,
N0XA4,0XC9,0XC5,0XC1,0X9D,0XFF,0X9D,0XFF,0X27,0XAA,0XE5,0XB1,0X06,0XA2,0XD9,0XFE,
N0X43,0XE1,0X02,0XF9,0X42,0XF9,0X21,0XF9,0X41,0XF9,0X41,0XF1,0X83,0XD9,0XC5,0XB9,
N0X47,0X92,0XDD,0XFF,0XFF,0XEF,0XFF,0XD7,0XB8,0X55,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X45,0XD8,0X55,0X78,0X75,0X4B,0X2A,0X0A,0X3A,0XFF,0XFF,0XDF,0XFF,0XFF,0XFF,
N0X0A,0X3A,0X4B,0X22,0X98,0X55,0XFA,0X4D,0XF9,0X4D,0XF9,0X45,0XF9,0X45,0X19,0X46,
N0XF8,0X45,0XB7,0X55,0XFF,0XD7,0XFF,0XF7,0XBE,0XFF,0X68,0X92,0XE5,0XB9,0XA4,0XD9,
N0X62,0XF1,0X41,0XF9,0X21,0XF9,0X21,0XF9,0X42,0XF9,0X63,0XE9,0XE6,0XC9,0XDA,0XFE,
N0X98,0XFE,0XC4,0XC1,0X62,0XE9,0X62,0XE9,0XE5,0XC9,0X97,0XFE,0X3A,0XFF,0X88,0X82,
N0XA9,0X82,0X3B,0XFF,0X3C,0XFF,0X48,0X9A,0X89,0X9A,0X1B,0XFF,0X3B,0XFF,0X47,0X9A,
N0XA5,0XB1,0XE6,0XB9,0X19,0XFF,0X5A,0XFF,0XE6,0XA1,0XB9,0XFE,0XBD,0XFF,0X5C,0XFF,
N0X06,0XAA,0X62,0XE1,0X62,0XE9,0XC3,0XC1,0X76,0XFE,0X82,0XE9,0X83,0XE9,0XA4,0XC1,
N0X3B,0XFF,0X9E,0XFF,0XBE,0XFF,0X3B,0XFF,0XD8,0XFE,0X1A,0XFF,0X1A,0XFF,0XC5,0XC9,
N0XC5,0XB9,0X7D,0XFF,0XBE,0XFF,0XFA,0XFE,0X98,0XFE,0XD8,0XFE,0XE5,0XC1,0X43,0XE9,
N0X43,0XF9,0X01,0XF9,0X41,0XF9,0X00,0XF9,0X41,0XE9,0X26,0XD2,0XD9,0XFE,0X1B,0XFF,
N0XDE,0XFF,0XFF,0XEF,0X76,0X6D,0XB8,0X55,0XD8,0X4D,0XD9,0X4D,0XD9,0X4D,0XF9,0X4D,
N0XD8,0X55,0XB8,0X7D,0X2A,0X2A,0X09,0X42,0XDF,0XFF,0XFF,0XFF,0XFF,0XFF,0XE8,0X39,
N0X6B,0X32,0XB9,0X65,0XD9,0X45,0XFA,0X4D,0XD9,0X45,0X19,0X4E,0XF8,0X45,0X19,0X4E,
N0XD8,0X55,0X56,0X6D,0XFF,0XEF,0XDF,0XFF,0X3C,0XFF,0XB9,0XFE,0X05,0XCA,0X82,0XE9,
N0X41,0XF9,0X21,0XF9,0X42,0XF9,0X41,0XF9,0X63,0XE9,0XC6,0XC1,0XFA,0XFE,0X78,0XFE,
N0X05,0XCA,0X62,0XE9,0X42,0XE9,0XC4,0XC1,0X98,0XFE,0X7B,0XFF,0X3A,0XFF,0X7C,0XFF,
N0X9D,0XFF,0X1C,0XFF,0X69,0X9A,0XAA,0XA2,0X1B,0XFF,0X5B,0XFF,0X1A,0XFF,0XB9,0XFE,
N0X98,0XFE,0X45,0XB2,0X46,0XB2,0X07,0XBA,0XBA,0XFE,0XBD,0XFF,0X5C,0XFF,0XE6,0XA9,
N0XC4,0XE9,0X42,0XE9,0XA4,0XC1,0X77,0XFE,0X83,0XE1,0X83,0XE1,0XE5,0XC1,0X3B,0XFF,
N0X9E,0XFF,0XBE,0XFF,0XF9,0XFE,0XB8,0XFE,0XFA,0XFE,0X3B,0XFF,0XC4,0XC9,0XE4,0XB9,
N0X9D,0XFF,0XBE,0XFF,0X1A,0XFF,0XB8,0XFE,0X56,0XFE,0XC4,0XD9,0X43,0XF1,0X01,0XF9,
N0X21,0XF9,0X41,0XF9,0X62,0XF9,0X83,0XD9,0X26,0XA2,0X7D,0XFF,0XDF,0XFF,0XFF,0XF7,
N0XFF,0XD7,0X97,0X5D,0XD8,0X4D,0X19,0X4E,0XF9,0X4D,0XD9,0X4D,0XF9,0X4D,0XD8,0X55,
N0X56,0X6D,0X6A,0X32,0X29,0X42,0XDF,0XFF,0XFF,0XFF,0XFF,0XFF,0X09,0X42,0X0A,0X2A,
N0X98,0X65,0XFA,0X4D,0XD9,0X45,0X1A,0X4E,0XF9,0X45,0XF9,0X4D,0XD8,0X45,0XD8,0X4D,
N0XD8,0X5D,0X96,0X6D,0XFF,0XE7,0XBE,0XFF,0X7C,0XFF,0X06,0XA2,0X83,0XD1,0X21,0XF1,
N0X62,0XF9,0X21,0XF9,0X41,0XF9,0X82,0XE1,0X05,0XC2,0X19,0XFF,0XB8,0XFE,0XE5,0XC1,
N0X63,0XE9,0X43,0XE9,0X26,0XCA,0XB9,0XFE,0X3A,0XFF,0X1A,0XFF,0X3A,0XFF,0X7C,0XFF,
N0X5C,0XFF,0X48,0X92,0XA9,0X9A,0X1A,0XFF,0X7B,0XFF,0XB8,0XFE,0XB7,0XFE,0X56,0XFE,
N0X63,0XD1,0XC5,0XE1,0XE6,0XC1,0X99,0XFE,0XBE,0XFF,0X5C,0XFF,0X27,0XAA,0X63,0XE1,
N0X42,0XF1,0XA4,0XC9,0X37,0XFE,0X63,0XE9,0XA3,0XE9,0XA3,0XC1,0X19,0XFF,0X9D,0XFF,
N0X5D,0XFF,0X47,0XAA,0X06,0XB2,0X48,0XA2,0XD9,0XFE,0XA3,0XC9,0XE4,0XC1,0X7D,0XFF,
N0X7D,0XFF,0X46,0XA2,0XC4,0XB9,0X83,0XD1,0X83,0XE9,0X42,0XF9,0X21,0XF9,0X41,0XF9,
N0X21,0XF1,0X62,0XE9,0XC5,0XC9,0X5C,0XFF,0XFF,0XFF,0XFF,0XEF,0X56,0X7D,0X77,0X65,
N0XD8,0X5D,0XF8,0X45,0X19,0X46,0XD9,0X4D,0XF9,0X4D,0XF9,0X4D,0XD8,0X55,0XB8,0X7D,
N0X4A,0X2A,0XE8,0X41,0XDF,0XFF,0XFF,0XFF,0XDF,0XFF,0XE9,0X41,0X2A,0X2A,0XB8,0X6D,
N0XD9,0X55,0XD9,0X4D,0XD9,0X4D,0XF9,0X4D,0XF9,0X4D,0XD9,0X45,0X19,0X4E,0XF8,0X4D,
N0XB7,0X55,0XB7,0X6D,0XFF,0XE7,0XFF,0XFF,0X7C,0XFF,0XC5,0XC1,0X42,0XE1,0X62,0XF1,
N0X41,0XF9,0X40,0XF1,0XA2,0XE9,0X24,0XC2,0XF8,0XFE,0X76,0XFE,0XE5,0XC9,0X43,0XE9,
N0X23,0XE9,0XE5,0XC1,0X78,0XFE,0X3B,0XFF,0X68,0X92,0X88,0X8A,0X3A,0XFF,0X3B,0XFF,
N0X27,0X9A,0X88,0XA2,0X3A,0XFF,0XF9,0XFE,0X66,0XAA,0X04,0XBA,0XE4,0XD1,0X83,0XF1,
N0X22,0XE1,0X06,0XCA,0XB9,0XFE,0XBE,0XFF,0X5B,0XFF,0X26,0XAA,0X84,0XE9,0X22,0XE9,
N0X84,0XD1,0X77,0XFE,0X43,0XE9,0X63,0XE9,0XC4,0XD1,0XF9,0XFE,0X1A,0XFF,0XFA,0XFE,
N0XC5,0XC9,0XA5,0XD9,0XA5,0XB9,0XB9,0XFE,0X83,0XD9,0X83,0XC9,0X1B,0XFF,0X3B,0XFF,
N0XE5,0XC1,0XA3,0XE1,0X42,0XE9,0X42,0XF9,0X41,0XF9,0X21,0XF9,0X42,0XF9,0X83,0XF1,
N0X83,0XC9,0X26,0XAA,0X7D,0XFF,0XFF,0XF7,0XFF,0XDF,0X98,0X65,0XB9,0X5D,0XF9,0X55,
N0XF9,0X45,0X19,0X46,0X1A,0X4E,0XF9,0X45,0XF9,0X45,0XB8,0X55,0X56,0X75,0X2A,0X32,
N0XE8,0X41,0XDF,0XFF,0XDF,0XFF,0XFF,0XFF,0X09,0X42,0X29,0X2A,0X56,0X6D,0XB8,0X65,
N0XB8,0X5D,0XB8,0X55,0XF9,0X4D,0XD8,0X45,0XF9,0X4D,0XFA,0X45,0XF9,0X45,0XF9,0X45,
N0XD8,0X55,0X97,0X6D,0XFF,0XEF,0X9E,0XFF,0X07,0XA2,0X84,0XC9,0X83,0XE9,0X42,0XF1,
N0X61,0XF9,0XA2,0XE9,0XC3,0XC9,0XD8,0XFE,0X56,0XFE,0XC4,0XD9,0X43,0XF1,0X43,0XF1,
N0XA4,0XD1,0X37,0XFE,0X99,0XFE,0X06,0XB2,0X46,0XAA,0XB8,0XFE,0XF9,0XFE,0X26,0XAA,
N0X68,0XBA,0X77,0XFE,0XD9,0XFE,0XC4,0XC1,0XA3,0XD9,0X41,0XE1,0X42,0XF1,0X83,0XE9,
N0XC5,0XC1,0XD9,0XFE,0XBD,0XFF,0X7C,0XFF,0X26,0X9A,0XC5,0XD1,0XA5,0XE1,0XC5,0XC1,
N0XC5,0XC1,0XA4,0XD9,0XA4,0XD9,0XA3,0XC1,0X25,0XB2,0X68,0XA2,0X88,0XB2,0XA5,0XC9,
N0XA4,0XD1,0XE6,0XC1,0XE6,0XC1,0XA5,0XC9,0XE6,0XC1,0X27,0XA2,0X06,0XA2,0XC5,0XC1,
N0X83,0XD1,0X83,0XE1,0XA3,0XE9,0X83,0XE1,0XA3,0XE1,0X84,0XE1,0XA5,0XD1,0XFA,0XFE,
N0X1B,0XFF,0XDE,0XFF,0XFF,0XEF,0X97,0X65,0XD9,0X55,0XD9,0X55,0XD9,0X4D,0X19,0X4E,
N0XF9,0X45,0XF9,0X45,0XF9,0X45,0XF9,0X45,0XB8,0X5D,0X56,0X85,0X2A,0X3A,0X09,0X4A,
N0XDF,0XFF,0XDF,0XFF,0XFF,0XFF,0XE8,0X39,0X29,0X3A,0X6B,0X2A,0X6B,0X1A,0XAC,0X1A,
N0XAC,0X12,0XB7,0X55,0XF9,0X4D,0XF9,0X4D,0XFA,0X4D,0X1A,0X46,0X3A,0X46,0XF9,0X45,
N0XB8,0X55,0X77,0X6D,0XFF,0XEF,0X7D,0XFF,0XB9,0XFE,0XC5,0XC9,0XA4,0XD9,0XA3,0XE1,
N0XC3,0XD1,0XE5,0XC1,0XC4,0XB1,0X05,0XC2,0XA4,0XC9,0X63,0XD9,0XA4,0XE1,0XC5,0XC9,
N0X06,0XC2,0X07,0XBA,0XE6,0XB1,0X26,0XB2,0X46,0XB2,0X26,0XAA,0X06,0XAA,0X27,0XB2,
N0X06,0XBA,0XC5,0XB9,0X06,0XCA,0XA4,0XD9,0XA4,0XE1,0XA3,0XE1,0XE4,0XD1,0X26,0XB2,
N0XFA,0XFE,0XBE,0XFF,0XBD,0XFF,0XA9,0X82,0X27,0XA2,0X27,0XAA,0X27,0XAA,0X27,0XAA,
N0X06,0XB2,0X05,0XAA,0X67,0XA2,0X67,0X9A,0X47,0X92,0X68,0X9A,0X27,0XAA,0X26,0XB2,
N0X26,0XA2,0X47,0XAA,0X07,0XA2,0X28,0XAA,0X48,0X9A,0X48,0X9A,0X47,0XAA,0X46,0XAA,
N0X46,0XAA,0X05,0XAA,0X06,0XB2,0X06,0XB2,0X27,0XAA,0X69,0X9A,0X1C,0XFF,0XBE,0XF7,
N0XFF,0XF7,0XFF,0XDF,0XB7,0X55,0XF9,0X4D,0XF9,0X55,0XD9,0X4D,0XF9,0X4D,0XD9,0X45,
N0XF9,0X4D,0XFA,0X4D,0XF9,0X4D,0XB8,0X65,0X37,0X8D,0XC9,0X41,0X09,0X4A,0XFF,0XFF,
N0XDF,0XFF,0XFF,0XFF,0XC7,0X41,0X09,0X42,0XE8,0X31,0XE9,0X31,0XE9,0X31,0X4A,0X2A,
N0X97,0X6D,0XD8,0X55,0X1A,0X4E,0XB9,0X3D,0X1A,0X4E,0XD9,0X45,0XF9,0X4D,0XF9,0X4D,
N0XB8,0X55,0X97,0X6D,0XFF,0XD7,0X9D,0XFF,0X69,0X92,0X28,0XAA,0X06,0XAA,0X26,0XAA,
N0X47,0XAA,0X68,0XAA,0X47,0XAA,0X47,0XB2,0X06,0XB2,0X06,0XB2,0X47,0XAA,0X27,0XA2,
N0X27,0X9A,0X68,0XA2,0X48,0XA2,0X47,0XA2,0X68,0XAA,0X48,0XA2,0X68,0XA2,0X68,0XA2,
N0X68,0XA2,0X27,0XA2,0X47,0XAA,0X46,0XAA,0X06,0XB2,0X26,0XA2,0X88,0X9A,0X3C,0XFF,
N0XDF,0XFF,0XFF,0XFF,0XFF,0XFF,0XBE,0XFF,0X9D,0XFF,0X9D,0XFF,0X7D,0XFF,0X9D,0XFF,
N0XBD,0XFF,0XBC,0XFF,0XBD,0XFF,0XBD,0XFF,0X9D,0XFF,0X9D,0XFF,0X7C,0XFF,0XBD,0XFF,
N0X9D,0XFF,0X9E,0XFF,0X9E,0XFF,0X9E,0XFF,0X9D,0XFF,0XBD,0XFF,0X9C,0XFF,0XBC,0XFF,
N0XBD,0XFF,0X9D,0XFF,0X7D,0XFF,0X9E,0XFF,0XBF,0XFF,0XFF,0XEF,0XFF,0XDF,0XFF,0XDF,
N0X96,0X65,0XD8,0X4D,0X19,0X4E,0XD8,0X45,0XD9,0X4D,0XF9,0X4D,0XF9,0X4D,0XFA,0X4D,
N0XD9,0X4D,0XD8,0X5D,0X97,0X6D,0X2B,0X3A,0XEA,0X49,0XC8,0X41,0XFF,0XFF,0XFF,0XFF,
N0XFF,0XFF,0XFF,0XFF,0XDF,0XFF,0XFF,0XFF,0XDF,0XFF,0XDF,0XFF,0XFF,0XF7,0X8B,0X22,
N0X97,0X65,0XD8,0X55,0XF9,0X4D,0XF9,0X45,0X19,0X4E,0XF8,0X45,0XF8,0X45,0X1A,0X4E,
N0XD8,0X4D,0XB7,0X5D,0X55,0X7D,0XFF,0XFF,0X9E,0XFF,0X7D,0XFF,0X9D,0XFF,0X9E,0XFF,
N0X7D,0XFF,0X9D,0XFF,0X9D,0XFF,0X9D,0XFF,0X9D,0XFF,0X7C,0XFF,0XBD,0XFF,0XBD,0XFF,
N0X9E,0XFF,0X7D,0XFF,0X9D,0XFF,0X7D,0XFF,0X9D,0XFF,0X9D,0XFF,0X9E,0XFF,0X9D,0XFF,
N0XBE,0XFF,0X9D,0XFF,0X9D,0XFF,0X9D,0XFF,0X9D,0XFF,0XBE,0XFF,0XDF,0XFF,0XFF,0XFF,
N0XFF,0XDF,0XFF,0XDF,0XFF,0XE7,0XFF,0XEF,0XFF,0XF7,0XFF,0XF7,0XFF,0XEF,0XFF,0XEF,
N0XFF,0XE7,0XFF,0XE7,0XFF,0XEF,0XFF,0XEF,0XFF,0XEF,0XFF,0XE7,0XFF,0XE7,0XFF,0XE7,
N0XFF,0XE7,0XFF,0XE7,0XFF,0XEF,0XFF,0XEF,0XFF,0XEF,0XFF,0XEF,0XFF,0XEF,0XFF,0XEF,
N0XFF,0XEF,0XFF,0XE7,0XFF,0XEF,0XFF,0XDF,0XFF,0XCF,0XB8,0X65,0XB8,0X5D,0XD7,0X55,
N0XF8,0X4D,0XF8,0X4D,0X19,0X4E,0XF9,0X45,0X1A,0X4E,0XD9,0X45,0XF9,0X55,0XB8,0X5D,
N0X97,0X65,0X76,0X85,0X0A,0X3A,0XC9,0X49,0XE9,0X49,0XDF,0XFF,0XFF,0XFF,0XFF,0XF7,
N0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XDF,0XFF,0XFF,0XFF,0X4A,0X32,0X36,0X7D,
N0X98,0X65,0XD9,0X55,0XF9,0X4D,0XF8,0X45,0X18,0X46,0XF8,0X45,0X1A,0X4E,0XD9,0X45,
N0XF9,0X55,0X97,0X5D,0XFF,0XDF,0XFF,0XE7,0XFF,0XE7,0XFF,0XEF,0XFF,0XEF,0XFF,0XEF,
N0XFF,0XEF,0XFF,0XEF,0XFF,0XEF,0XFF,0XEF,0XFF,0XE7,0XFF,0XE7,0XFF,0XE7,0XFF,0XEF,
N0XFF,0XEF,0XFF,0XEF,0XFF,0XE7,0XFF,0XEF,0XFF,0XEF,0XFF,0XEF,0XFF,0XEF,0XFF,0XEF,
N0XFF,0XE7,0XFF,0XEF,0XFF,0XEF,0XFF,0XEF,0XFF,0XE7,0XFF,0XE7,0XFF,0XDF,0X97,0X65,
N0X97,0X65,0X97,0X6D,0X97,0X6D,0X77,0X6D,0X77,0X6D,0X97,0X6D,0X97,0X65,0X97,0X65,
N0X97,0X65,0X77,0X6D,0X77,0X6D,0X97,0X65,0X97,0X65,0X97,0X65,0X97,0X65,0XB7,0X65,
N0X97,0X65,0X97,0X65,0X97,0X65,0X97,0X6D,0X77,0X6D,0X97,0X6D,0X97,0X6D,0X77,0X65,
N0XB8,0X6D,0X97,0X65,0X97,0X65,0XF8,0X5D,0XB8,0X4D,0XD9,0X4D,0XF9,0X4D,0XF8,0X4D,
N0XF8,0X4D,0XF9,0X4D,0X1A,0X4E,0XD9,0X45,0XFA,0X4D,0XD9,0X5D,0X8B,0X0A,0X4A,0X1A,
N0XE8,0X29,0XFF,0XFF,0XE8,0X49,0XC8,0X41,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
N0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XDF,0XFF,0X4A,0X32,0X8C,0X12,
N0X77,0X55,0XF9,0X55,0XF8,0X45,0X39,0X4E,0X18,0X46,0XF9,0X45,0X1A,0X4E,0XF9,0X4D,
N0XD8,0X4D,0XB7,0X5D,0XB7,0X65,0X97,0X65,0X97,0X6D,0X97,0X6D,0X97,0X6D,0X97,0X6D,
N0X97,0X6D,0X96,0X65,0X97,0X65,0XB7,0X65,0XB7,0X65,0X97,0X65,0X97,0X65,0X97,0X65,
N0X97,0X65,0X96,0X65,0X96,0X65,0X97,0X6D,0X97,0X6D,0X97,0X6D,0XB7,0X6D,0XB7,0X6D,
N0XB7,0X6D,0XB7,0X75,0XB7,0X75,0XD7,0X6D,0XB7,0X6D,0XB7,0X6D,0XD8,0X55,0XD8,0X55,
N0XD8,0X55,0XD8,0X55,0XD8,0X55,0XD8,0X55,0XD8,0X55,0XD8,0X55,0XD8,0X55,0XD8,0X55,
N0XB8,0X55,0XB8,0X55,0XD8,0X55,0XD8,0X55,0XD9,0X55,0XD9,0X55,0XF8,0X4D,0XD8,0X4D,
N0XD9,0X55,0XD9,0X55,0XB9,0X55,0XD8,0X55,0XD8,0X55,0XD8,0X55,0XF9,0X55,0XD9,0X55,
N0XD8,0X4D,0XF8,0X4D,0XF8,0X4D,0XF9,0X4D,0XB8,0X4D,0XD9,0X55,0XF9,0X4D,0XD8,0X4D,
N0XF9,0X4D,0XFA,0X45,0XFA,0X45,0XD9,0X4D,0X97,0X5D,0XAC,0X22,0XE9,0X31,0XE9,0X49,
N0XDF,0XFF,0XC7,0X39,0XE8,0X41,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
N0XDF,0XFF,0XFF,0XFF,0XDF,0XFF,0XFF,0XFF,0XDF,0XFF,0X09,0X32,0X6B,0X12,0XD8,0X65,
N0XD9,0X55,0XF9,0X45,0X18,0X46,0X18,0X46,0XF9,0X45,0XF9,0X4D,0XF9,0X4D,0X19,0X56,
N0XD7,0X4D,0XF7,0X55,0XF8,0X55,0XD8,0X55,0XD8,0X55,0XD8,0X55,0XD8,0X55,0XD8,0X55,
N0XD8,0X55,0XF8,0X4D,0XF8,0X4D,0XF8,0X4D,0XD8,0X55,0XD8,0X55,0XD8,0X55,0XD8,0X55,
N0XD8,0X55,0XB8,0X55,0XD8,0X55,0XD8,0X5D,0XD8,0X5D,0XF8,0X5D,0XF8,0X5D,0XF8,0X5D,
N0XD8,0X65,0XD8,0X65,0XF8,0X5D,0XF8,0X5D,0XF8,0X5D,0X19,0X46,0X19,0X46,0XF9,0X45,
N0XF9,0X45,0XF9,0X45,0XF9,0X45,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X45,0XF9,0X45,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X45,0XF9,0X45,0XF9,0X45,0XD9,0X45,0X19,0X4E,
N0X18,0X46,0X18,0X46,0X19,0X4E,0XD9,0X4D,0XD9,0X4D,0XF9,0X4D,0XD9,0X4D,0XFA,0X4D,
N0XD9,0X45,0XF9,0X45,0XFA,0X4D,0X98,0X65,0X4B,0X22,0XC9,0X41,0X88,0X49,0XDF,0XFF,
N0XDF,0XFF,0XFF,0XFF,0XDF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
N0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XDF,0XFF,0X09,0X3A,0X6A,0X1A,0X97,0X65,0XB8,0X4D,
N0X19,0X4E,0XF8,0X45,0XF8,0X45,0X19,0X4E,0XF9,0X4D,0XF9,0X4D,0XD8,0X45,0X39,0X4E,
N0XF8,0X45,0X19,0X46,0XF9,0X45,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X45,0X19,0X46,0XF9,0X45,0XF9,0X4D,0XF9,0X4D,0X19,0X46,0XF9,0X45,0XF9,0X4D,
N0XD8,0X4D,0XF8,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF8,0X4D,0XF8,0X4D,0XD8,0X4D,
N0XD8,0X55,0XF8,0X4D,0XF8,0X4D,0XF9,0X4D,0XF9,0X45,0XF9,0X45,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF8,0X4D,0XF9,0X4D,0XF9,0X4D,0XFA,0X4D,0XFA,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X45,0XF9,0X45,0XD9,0X45,0XFA,0X4D,0XF9,0X45,0X19,0X46,
N0XD8,0X3D,0X19,0X4E,0XF9,0X4D,0XF9,0X4D,0XD9,0X45,0X3A,0X4E,0XD9,0X45,0XF9,0X4D,
N0XFA,0X4D,0XB9,0X4D,0X98,0X65,0X4B,0X22,0XCA,0X41,0XC9,0X49,0XDF,0XFF,0XFF,0XFF,
N0XDF,0XFF,0XFF,0XFF,0XFF,0XFF,0XDF,0XFF,0XDF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
N0XDF,0XFF,0XDF,0XFF,0XBF,0XFF,0X09,0X3A,0X6B,0X1A,0XF8,0X6D,0X1A,0X5E,0X1A,0X4E,
N0X3A,0X4E,0X39,0X56,0XF9,0X4D,0XD9,0X4D,0X19,0X4E,0X19,0X46,0XF9,0X45,0X19,0X46,
N0XF9,0X45,0XF9,0X45,0X1A,0X4E,0XD9,0X45,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XD9,0X4D,0XF9,0X4D,0XF9,0X45,0X19,0X46,0X19,0X46,0XF9,0X45,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X45,0XF9,0X45,0XF9,0X45,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X45,0XF9,0X45,0XF9,0X45,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XFA,0X4D,0XFA,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X45,
N0XF9,0X45,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XD8,0X45,0X19,0X4E,0XF8,0X45,
N0XF8,0X45,0XD9,0X45,0XD9,0X45,0XF9,0X45,0XF9,0X45,0XF9,0X45,0X19,0X4E,0XD9,0X45,
N0XFA,0X55,0XB9,0X5D,0X8C,0X12,0X2A,0X2A,0X09,0X32,0XFF,0XFF,0XDF,0XF7,0XFF,0XFF,
N0XFF,0XFF,0XFF,0XFF,0XDF,0XFF,0XDF,0XFF,0XDF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
N0XDF,0XFF,0XDF,0XFF,0X09,0X42,0X4A,0X1A,0X97,0X65,0XF9,0X55,0XD9,0X45,0X1A,0X4E,
N0X3A,0X56,0XF9,0X4D,0XF9,0X4D,0XB8,0X45,0XF9,0X4D,0XF9,0X45,0XF9,0X45,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XFA,0X4D,
N0XFA,0X4D,0XF9,0X4D,0XF9,0X4D,0XF8,0X45,0XF9,0X45,0XF9,0X45,0XF9,0X45,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0X19,0X46,0X19,0X46,0XF9,0X4D,0XF9,0X4D,0XF9,0X45,
N0X19,0X46,0XFA,0X45,0X19,0X56,0X19,0X56,0X19,0X56,0X19,0X56,0X19,0X56,0X19,0X56,
N0X19,0X4E,0X1A,0X4E,0XF9,0X45,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X45,
N0XF9,0X45,0XF9,0X45,0XF9,0X45,0XF9,0X45,0XF9,0X45,0XF8,0X45,0X18,0X46,0XF8,0X45,
N0XD9,0X4D,0XD9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X45,0XF9,0X45,0X19,0X4E,0XF9,0X4D,
N0XFA,0X4D,0XD9,0X4D,0XFA,0X4D,0XD9,0X45,0XF8,0X45,0X18,0X46,0X19,0X46,0XF9,0X4D,
N0XB9,0X4D,0XB8,0X55,0XF8,0X65,0X96,0X6D,0X35,0X85,0X09,0X32,0X09,0X3A,0XBB,0XD6,
N0X9B,0XDE,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XDF,0XFF,
N0X9B,0XE6,0X09,0X42,0X4A,0X22,0X77,0X65,0XF9,0X55,0X19,0X4E,0XF9,0X4D,0XF8,0X4D,
N0XF9,0X4D,0XF9,0X4D,0X7B,0X5E,0X5B,0X5E,0X3A,0X56,0XD8,0X4D,0X19,0X56,0X19,0X56,
N0XF9,0X4D,0X3A,0X4E,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XFA,0X45,0XFA,0X45,
N0XF9,0X4D,0XF8,0X4D,0XD9,0X4D,0XD9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X45,0XF9,0X45,0XD9,0X4D,0XD9,0X4D,0XF9,0X45,0XF9,0X45,
N0XF8,0X4D,0X19,0X56,0X19,0X56,0X19,0X56,0X19,0X56,0X19,0X56,0X19,0X56,0X19,0X4E,
N0X19,0X4E,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X45,0XF9,0X45,
N0XF9,0X45,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X45,0X18,0X46,0X19,0X46,0XF9,0X4D,
N0XD9,0X4D,0XD9,0X45,0XF9,0X45,0X19,0X46,0XF9,0X45,0XF8,0X45,0XF8,0X4D,0XD9,0X4D,
N0XF9,0X4D,0XB9,0X4D,0X1A,0X56,0XF8,0X45,0X18,0X46,0X19,0X46,0XF9,0X45,0XF9,0X4D,
N0X19,0X4E,0XF8,0X45,0XD7,0X55,0X76,0X6D,0X6A,0X22,0X29,0X32,0XBB,0XD6,0X9B,0XDE,
N0XDF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XDB,0XDE,
N0X09,0X32,0X6B,0X1A,0XB8,0X65,0XD9,0X4D,0XF9,0X45,0XD8,0X4D,0XF9,0X4D,0X19,0X4E,
N0XF9,0X4D,0XD8,0X4D,0XD9,0X4D,0XF9,0X4D,0XF9,0X4D,0XD8,0X4D,0X19,0X56,0X19,0X4E,
N0X39,0X4E,0XF8,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XFA,0X45,0XF9,0X45,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XD9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF8,0X4D,
N0X19,0X56,0X39,0X56,0X5A,0X5E,0X5A,0X5E,0X3A,0X56,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0X19,0X4E,0X1A,0X4E,0X19,0X4E,0XF9,0X45,0XF9,0X4D,
N0XD9,0X4D,0X19,0X4E,0XF9,0X45,0XF9,0X45,0XF9,0X45,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X45,0XF9,0X45,0XF9,0X45,0XF9,0X4D,0X19,0X4E,0X19,0X56,0XF9,0X55,
N0X1A,0X56,0X19,0X4E,0XF9,0X45,0X19,0X46,0X19,0X4E,0X19,0X4E,0X19,0X56,0XF8,0X55,
N0X39,0X56,0X19,0X56,0XF9,0X5D,0XD8,0X6D,0X56,0X7D,0X49,0X32,0XE8,0X39,0XBB,0XDE,
N0XBA,0XDE,0XDB,0XDE,0X9A,0XD6,0XBB,0XE6,0X9A,0XDE,0XDB,0XD6,0X6A,0X32,0X56,0X75,
N0X98,0X65,0XD9,0X55,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XD9,0X4D,0XF9,0X4D,0XF9,0X4D,0XD9,0X4D,0XF9,0X4D,0X3A,0X56,0X3A,0X56,0X19,0X4E,
N0X19,0X4E,0X19,0X4E,0X19,0X56,0X1A,0X56,0X1A,0X4E,0X1A,0X4E,0X19,0X4E,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0X19,0X56,0X39,0X56,0X19,0X56,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XD9,0X4D,
N0X19,0X4E,0XF9,0X45,0X19,0X46,0XF9,0X45,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X45,
N0XF9,0X45,0XF9,0X45,0XF9,0X4D,0XF9,0X4D,0X19,0X4E,0X19,0X56,0X19,0X56,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X45,0XF9,0X45,0X19,0X4E,0XF9,0X4D,0X19,0X5E,0X19,0X56,0XF9,0X4D,
N0X19,0X56,0X19,0X56,0XD8,0X5D,0XB7,0X7D,0X29,0X2A,0X09,0X42,0X9B,0XDE,0XBA,0XDE,
N0XBA,0XDE,0XBB,0XDE,0X9A,0XDE,0X9A,0XDE,0XFC,0XD6,0X29,0X22,0X97,0X6D,0XD8,0X55,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XD9,0X45,0XF9,0X4D,0X19,0X4E,0XF9,0X4D,0XF8,0X4D,0XF9,0X4D,
N0XF9,0X4D,0X19,0X4E,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF8,0X4D,0XF8,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0X19,0X4E,
N0XF9,0X45,0X19,0X46,0XF9,0X45,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0X19,0X4E,
N0XFA,0X4D,0X1A,0X4E,0X19,0X4E,0X19,0X4E,0X39,0X5E,0X39,0X5E,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X45,0XF9,0X45,0XF9,0X4D,0XF9,0X4D,0X19,0X56,0X39,0X5E,0X39,0X56,0X39,0X56,
N0XD8,0X4D,0XD8,0X5D,0XB7,0X7D,0X49,0X2A,0XE8,0X39,0XC8,0X41,0XE8,0X41,0X08,0X42,
N0XC8,0X41,0XE8,0X49,0XC7,0X41,0X29,0X42,0X6A,0X22,0X97,0X6D,0XD8,0X55,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF8,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0X19,0X4E,0XF9,0X45,
N0X19,0X46,0XF9,0X45,0XF9,0X4D,0XF9,0X4D,0XF9,0X45,0XF9,0X45,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0X19,0X5E,0X19,0X5E,0XD9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X45,0XF9,0X4D,0XF8,0X4D,0XF8,0X55,0X39,0X5E,0X19,0X56,0XD8,0X4D,0XF9,0X4D,
N0XF9,0X65,0XD7,0X7D,0X29,0X2A,0XE8,0X39,0XC7,0X41,0XE7,0X41,0XC7,0X39,0XC8,0X41,
N0XC8,0X49,0XC7,0X41,0X28,0X3A,0X4A,0X22,0X76,0X65,0XD8,0X55,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,};
L 10 "app\game.c" 2
N#include "flappybird_getstart.c"
L 1 ".\app\RES\Pic\flappybird_getstart.c" 1
Nconst unsigned char gImage_flappybird_getstart[9030] = { /* 0X00,0X10,0X81,0X00,0X23,0X00,0X01,0X1B, */
N0XF8,0X45,0XF8,0X45,0XF9,0X4D,0X98,0X55,0X38,0X75,0X0C,0X2A,0X0A,0X42,0XE9,0X49,
N0XE9,0X49,0XC9,0X41,0XCA,0X49,0XCA,0X41,0XCA,0X41,0X0A,0X42,0XCA,0X41,0XEA,0X41,
N0XEA,0X49,0X0A,0X32,0X57,0X65,0XD9,0X55,0XD9,0X45,0XF9,0X45,0X1A,0X46,0XF9,0X45,
N0X19,0X46,0XF9,0X45,0XD9,0X45,0X1A,0X4E,0XD9,0X45,0XD9,0X55,0X77,0X65,0X4A,0X22,
N0X0A,0X3A,0XC9,0X41,0XC9,0X41,0XE9,0X49,0XC9,0X49,0XC9,0X49,0XEA,0X49,0XCA,0X49,
N0XE9,0X49,0X09,0X32,0X77,0X6D,0XB8,0X4D,0XD8,0X45,0X19,0X4E,0XFA,0X45,0X98,0X5D,
N0X2A,0X32,0XC8,0X49,0XC9,0X49,0XEA,0X49,0XCA,0X49,0XCA,0X49,0XC9,0X49,0XEA,0X49,
N0XCA,0X49,0XCA,0X49,0XE9,0X41,0X09,0X42,0XE9,0X41,0X2B,0X2A,0X78,0X5D,0XFA,0X55,
N0XFA,0X4D,0XF9,0X45,0XD9,0X45,0X1A,0X4E,0XD8,0X4D,0XD8,0X4D,0X1A,0X4E,0XD9,0X45,
N0XFB,0X45,0XFA,0X45,0XFA,0X45,0X1A,0X4E,0XD9,0X4D,0XFA,0X4D,0XF9,0X45,0X19,0X46,
N0XD9,0X45,0XF9,0X45,0XF9,0X45,0X19,0X46,0X19,0X46,0XF9,0X4D,0XD9,0X4D,0XFA,0X4D,
N0XF9,0X4D,0XD9,0X45,0X19,0X4E,0XF9,0X45,0XF8,0X45,0XF8,0X4D,0XD9,0X4D,0XD9,0X4D,
N0XB8,0X55,0X77,0X6D,0X0B,0X32,0XEA,0X41,0XE9,0X41,0X0A,0X42,0XAA,0X49,0XAA,0X49,
N0XC9,0X49,0XE9,0X49,0XE9,0X49,0X2A,0X32,0X77,0X65,0XB8,0X55,0XD8,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X45,0XF9,0X4D,0XF9,0X4D,0XD7,0X4D,0XD7,0X55,0X76,0X6D,0X4B,0X22,
N0X0A,0X3A,0XEA,0X49,0XCA,0X49,0XEA,0X49,0XC9,0X41,0XE9,0X49,0XC9,0X49,0XC9,0X49,
N0XC9,0X49,0XF8,0X4D,0XF8,0X4D,0X97,0X55,0X98,0X65,0X38,0X7D,0X2B,0X32,0X09,0X3A,
N0X08,0X3A,0X08,0X42,0X08,0X42,0X09,0X42,0X09,0X42,0X29,0X42,0X08,0X3A,0X09,0X42,
N0XE8,0X39,0XE9,0X41,0X09,0X32,0X77,0X75,0X98,0X5D,0XB9,0X55,0XFA,0X55,0XD9,0X4D,
N0XF9,0X4D,0XD8,0X4D,0XF9,0X4D,0X19,0X56,0XD9,0X4D,0XD9,0X4D,0XB8,0X55,0X77,0X6D,
N0X4A,0X22,0X09,0X3A,0X09,0X4A,0X08,0X42,0X07,0X3A,0X49,0X4A,0XE8,0X41,0XC9,0X39,
N0XE9,0X41,0XC8,0X41,0X2A,0X3A,0X36,0X65,0XD9,0X55,0XF9,0X4D,0XF9,0X45,0X1A,0X46,
N0X98,0X5D,0X09,0X32,0XE8,0X51,0X09,0X4A,0XC8,0X39,0X09,0X42,0X29,0X42,0X08,0X3A,
N0X08,0X3A,0XE8,0X41,0X29,0X42,0X28,0X3A,0X48,0X42,0X09,0X42,0X2A,0X32,0X37,0X6D,
N0X98,0X5D,0XD8,0X4D,0XF9,0X4D,0XFA,0X4D,0XD9,0X4D,0XF9,0X55,0XD8,0X55,0XB8,0X4D,
N0XF9,0X55,0XB9,0X45,0XFA,0X4D,0XF9,0X4D,0XB9,0X45,0XD9,0X4D,0XD9,0X4D,0X1A,0X4E,
N0XF9,0X45,0X19,0X4E,0XF9,0X45,0X1A,0X46,0XF9,0X45,0X19,0X4E,0XF8,0X45,0XD9,0X45,
N0XFA,0X4D,0XD9,0X45,0X19,0X4E,0XF9,0X45,0X19,0X46,0XF8,0X45,0X39,0X4E,0XF9,0X4D,
N0XD9,0X4D,0XB8,0X55,0X98,0X6D,0X2A,0X32,0XE9,0X41,0X08,0X3A,0X08,0X3A,0XE9,0X39,
N0X2A,0X4A,0X08,0X42,0XE8,0X41,0X09,0X4A,0X09,0X32,0X98,0X6D,0XB8,0X55,0XD8,0X4D,
N0XF9,0X4D,0XF9,0X45,0XF9,0X45,0XF9,0X4D,0XF9,0X4D,0XF8,0X4D,0XB7,0X55,0X77,0X6D,
N0X6B,0X2A,0X09,0X3A,0XE9,0X41,0XE8,0X39,0X09,0X42,0X07,0X42,0X08,0X42,0XE9,0X41,
N0XE9,0X49,0XC9,0X49,0XB8,0X4D,0XB7,0X55,0XB7,0X6D,0X6A,0X1A,0X09,0X2A,0XFF,0XF7,
N0XFE,0XEF,0XFD,0XEF,0XFD,0XEF,0XFC,0XEF,0XFD,0XEF,0XFC,0XEF,0XFC,0XEF,0XFC,0XEF,
N0XFE,0XF7,0XFF,0XFF,0XFF,0XFF,0X49,0X3A,0X16,0X75,0X36,0X65,0X78,0X65,0X98,0X65,
N0X77,0X5D,0X97,0X5D,0X98,0X65,0X77,0X55,0XD9,0X5D,0XD9,0X4D,0XD9,0X4D,0XB8,0X55,
N0X56,0X6D,0X6A,0X2A,0XFF,0XFF,0XFF,0XFF,0XFE,0XEF,0XFD,0XEF,0XFC,0XE7,0XFD,0XEF,
N0XFF,0XF7,0XFF,0XFF,0XDF,0XFF,0XE9,0X39,0X57,0X6D,0X77,0X55,0XB8,0X4D,0XF9,0X4D,
N0XD9,0X45,0X98,0X5D,0X0A,0X3A,0XA7,0X49,0XFE,0XFF,0XFE,0XF7,0XFE,0XEF,0XFD,0XE7,
N0XFD,0XE7,0XFD,0XE7,0XFD,0XEF,0XFD,0XEF,0XFD,0XEF,0XFC,0XEF,0XFE,0XF7,0XFF,0XF7,
N0X6B,0X32,0X16,0X75,0X97,0X5D,0XD8,0X55,0XB8,0X4D,0XD9,0X55,0XB8,0X5D,0X77,0X5D,
N0X98,0X65,0X98,0X5D,0XB8,0X5D,0XB9,0X5D,0XB8,0X55,0XF9,0X55,0XF9,0X55,0XD9,0X4D,
N0XD8,0X4D,0XF9,0X4D,0XF9,0X4D,0XD8,0X45,0XF9,0X4D,0XF9,0X4D,0XD8,0X45,0XF9,0X4D,
N0XFA,0X4D,0XFA,0X4D,0XD9,0X45,0XFA,0X4D,0XF9,0X45,0XD9,0X45,0X19,0X4E,0XD8,0X45,
N0XF9,0X4D,0XD8,0X4D,0X97,0X55,0X76,0X6D,0XFF,0XEF,0XFF,0XFF,0XFD,0XEF,0XFD,0XE7,
N0XFE,0XEF,0XFE,0XEF,0XFE,0XEF,0XFE,0XFF,0XDF,0XFF,0XE9,0X31,0X98,0X6D,0XB8,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0X1A,0X4E,0XD9,0X4D,0XB8,0X45,0XD8,0X4D,0XB8,0X5D,
N0X57,0X75,0X2A,0X2A,0XFF,0XF7,0XFE,0XF7,0XFE,0XEF,0XFD,0XE7,0XFD,0XEF,0XFC,0XEF,
N0XFF,0XFF,0XBF,0XFF,0XA8,0X49,0X97,0X5D,0X97,0X6D,0X6B,0X22,0XFF,0XE7,0XFF,0XF7,
N0XFE,0XF7,0X90,0X85,0XF0,0X85,0XCF,0X7D,0XEF,0X85,0XEE,0X7D,0XEE,0X7D,0X0F,0X86,
N0XAE,0X7D,0X90,0X8D,0XFC,0XEF,0XFF,0XFF,0XE8,0X39,0X2A,0X2A,0X4B,0X22,0X4C,0X22,
N0X4B,0X1A,0X6B,0X1A,0X8B,0X1A,0X6B,0X1A,0XAC,0X1A,0X8C,0X0A,0X98,0X5D,0XB8,0X5D,
N0X57,0X55,0X56,0X75,0X4A,0X22,0XFF,0XF7,0XFE,0XEF,0XD1,0X85,0XCF,0X75,0XEF,0X7D,
N0XEF,0X85,0XB1,0X8D,0XFD,0XEF,0XBE,0XFF,0XE9,0X39,0X36,0X6D,0XB8,0X5D,0XD8,0X55,
N0XD9,0X4D,0XD9,0X45,0X98,0X5D,0X0A,0X3A,0XA7,0X41,0XFE,0XF7,0X91,0X85,0XD0,0X85,
N0XEF,0X7D,0X10,0X7E,0XEF,0X7D,0XCF,0X7D,0XCF,0X85,0XAF,0X7D,0XD0,0X8D,0XFC,0XEF,
N0XFE,0XF7,0XDF,0XF7,0X4B,0X32,0X8B,0X12,0X96,0X65,0X97,0X5D,0X98,0X65,0X8C,0X12,
N0X8C,0X1A,0X6A,0X1A,0X8B,0X1A,0XAB,0X1A,0X6B,0X12,0XAC,0X0A,0X97,0X5D,0XD8,0X55,
N0XF9,0X4D,0XF9,0X4D,0XD9,0X4D,0XF9,0X45,0XF9,0X45,0XF9,0X4D,0XD9,0X4D,0X1A,0X4E,
N0XD9,0X45,0X1A,0X4E,0XFA,0X45,0XF9,0X45,0XF9,0X4D,0XD9,0X45,0X1A,0X4E,0X1A,0X4E,
N0XF9,0X45,0XF9,0X4D,0XB8,0X4D,0XB8,0X55,0X96,0X6D,0XFF,0XEF,0XFD,0XEF,0XB0,0X85,
N0XCE,0X7D,0XF0,0X7D,0XD0,0X7D,0XB0,0X85,0XFC,0XE7,0XFF,0XFF,0X2A,0X3A,0X77,0X65,
N0XB8,0X4D,0XB8,0X45,0XF9,0X4D,0XF9,0X45,0XF9,0X45,0XFA,0X4D,0XFA,0X4D,0XD9,0X4D,
N0X77,0X55,0X36,0X75,0X4A,0X2A,0XFE,0XEF,0X91,0X8D,0XD0,0X85,0XEF,0X7D,0XEF,0X7D,
N0XD0,0X8D,0XFD,0XF7,0XDF,0XFF,0X87,0X49,0X36,0X6D,0X36,0X75,0X29,0X2A,0XFF,0XF7,
N0XFE,0XF7,0XFB,0XE7,0X2E,0X7E,0X4D,0X6E,0X4D,0X6E,0X6C,0X6E,0X6C,0X6E,0X6C,0X6E,
N0X4C,0X6E,0X6E,0X76,0X2F,0X7E,0XFA,0XD7,0XFF,0XFF,0XE9,0X41,0XEA,0X41,0X2B,0X42,
N0X0A,0X3A,0X2A,0X3A,0X29,0X3A,0X29,0X3A,0X09,0X3A,0X2A,0X32,0X4B,0X2A,0X37,0X75,
N0X57,0X65,0X57,0X65,0X36,0X6D,0X2A,0X22,0XFF,0XEF,0XFD,0XEF,0X0E,0X76,0X6C,0X66,
N0X6B,0X66,0X6D,0X76,0XEE,0X7D,0XFC,0XE7,0XFF,0XFF,0XE9,0X39,0X36,0X6D,0X97,0X55,
N0XB7,0X4D,0XB7,0X45,0XF8,0X4D,0X56,0X5D,0XEA,0X39,0XC7,0X49,0XFC,0XE7,0XEF,0X7D,
N0X4D,0X76,0X4C,0X66,0X6D,0X6E,0X6D,0X6E,0X6C,0X6E,0X6C,0X76,0X4C,0X6E,0X0D,0X76,
N0XF9,0XD7,0XFC,0XE7,0XFF,0XF7,0XE8,0X31,0X4A,0X2A,0X35,0X7D,0X17,0X6D,0X16,0X75,
N0X4B,0X2A,0X29,0X32,0X49,0X32,0X49,0X3A,0X49,0X3A,0X29,0X32,0X4A,0X2A,0X77,0X75,
N0XB8,0X55,0X19,0X4E,0XD9,0X45,0XF9,0X45,0X1A,0X46,0X19,0X46,0X1A,0X4E,0XFA,0X4D,
N0XD9,0X45,0XF9,0X45,0XF9,0X3D,0X1A,0X46,0XF9,0X45,0XD9,0X45,0X1A,0X4E,0XFA,0X45,
N0XD9,0X45,0XF9,0X4D,0XD9,0X45,0XD9,0X4D,0X98,0X55,0X56,0X65,0XFF,0XE7,0XFB,0XDF,
N0X4E,0X76,0X8D,0X6E,0X4C,0X66,0X6E,0X76,0X2F,0X7E,0XFA,0XD7,0XFE,0XFF,0X09,0X32,
N0X76,0X6D,0XB8,0X4D,0XD9,0X4D,0XF9,0X45,0X19,0X46,0XF8,0X45,0X19,0X46,0XD8,0X45,
N0XD8,0X4D,0XB8,0X5D,0X56,0X7D,0X69,0X2A,0XFD,0XE7,0XF0,0X7D,0X6E,0X76,0X6D,0X66,
N0X6D,0X6E,0X0E,0X7E,0XFC,0XEF,0XDE,0XFF,0XA7,0X49,0X4B,0X2A,0X2A,0X2A,0XFF,0XF7,
N0XFD,0XEF,0XFA,0XDF,0XEE,0X7D,0X8D,0X6E,0X8B,0X5E,0X8B,0X5E,0XAC,0X5E,0X8B,0X5E,
N0XAB,0X5E,0XCC,0X5E,0X6C,0X5E,0X4E,0X6E,0XFA,0XD7,0XFE,0XF7,0XE9,0X49,0XE9,0X49,
N0XE8,0X41,0XFF,0XFF,0XFD,0XF7,0XFC,0XEF,0XFC,0XEF,0XFE,0XF7,0XFE,0XEF,0XFF,0XF7,
N0X4A,0X2A,0X6B,0X1A,0XF5,0X6C,0XF5,0X6C,0X6A,0X2A,0XFF,0XF7,0XFC,0XE7,0X2D,0X66,
N0XCC,0X5E,0XCB,0X5E,0X6B,0X66,0XED,0X75,0XFB,0XE7,0XFE,0XFF,0XE9,0X39,0XF5,0X64,
N0X76,0X5D,0X97,0X55,0XD8,0X4D,0XD8,0X4D,0X36,0X55,0X0A,0X42,0XC7,0X41,0XFC,0XE7,
N0X0E,0X6E,0X6C,0X66,0XEC,0X6E,0X6A,0X5E,0XAB,0X5E,0XAB,0X5E,0XAB,0X5E,0X8B,0X5E,
N0X8C,0X66,0X4D,0X6E,0XEF,0X7D,0XFD,0XEF,0XFE,0XF7,0XFF,0XF7,0X2A,0X32,0X2B,0X2A,
N0X4B,0X32,0XFF,0XEF,0XFE,0XEF,0XFD,0XEF,0XFD,0XEF,0XFD,0XEF,0XFE,0XEF,0XFF,0XF7,
N0X4A,0X22,0X77,0X5D,0XD9,0X55,0XB8,0X4D,0XF9,0X4D,0XF9,0X55,0XB8,0X55,0XB8,0X55,
N0XB8,0X5D,0XB8,0X5D,0XD9,0X5D,0XB8,0X55,0XB8,0X55,0XB8,0X5D,0XB8,0X5D,0X98,0X5D,
N0XB8,0X5D,0XB9,0X5D,0XB8,0X5D,0X98,0X55,0X98,0X55,0X77,0X55,0X56,0X65,0XFF,0XE7,
N0XFB,0XDF,0X4D,0X6E,0XAB,0X5E,0XAB,0X5E,0X6C,0X66,0X4D,0X76,0XFA,0XD7,0XFE,0XFF,
N0X49,0X42,0X14,0X6D,0X35,0X55,0X97,0X5D,0X97,0X5D,0XB7,0X55,0XB7,0X55,0XD8,0X5D,
N0X97,0X5D,0X77,0X5D,0X56,0X65,0XD4,0X74,0X68,0X2A,0XFD,0XE7,0XEE,0X75,0X6C,0X66,
N0XEC,0X66,0XAB,0X5E,0X2D,0X6E,0XFC,0XE7,0XFF,0XFF,0XA7,0X49,0XE9,0X31,0X29,0X32,
N0XFE,0XEF,0X8F,0X85,0X4E,0X76,0X6C,0X66,0X8A,0X56,0XCB,0X5E,0XCC,0X56,0XAC,0X56,
N0XAC,0X56,0XCC,0X56,0XCC,0X4E,0XAD,0X56,0X6F,0X66,0XFB,0XCF,0XFE,0XF7,0X08,0X4A,
N0XDF,0XFF,0XFF,0XFF,0XFC,0XE7,0XEF,0X85,0X0D,0X6E,0X4E,0X76,0X0E,0X6E,0XCF,0X75,
N0XFD,0XE7,0XFF,0XEF,0XFF,0XEF,0X73,0X6C,0X94,0X74,0X29,0X2A,0XFF,0XEF,0XFC,0XE7,
N0X4E,0X6E,0X8B,0X56,0XAC,0X5E,0X8D,0X66,0X4F,0X6E,0XFB,0XD7,0XFE,0XF7,0XE9,0X39,
N0XD4,0X74,0X15,0X65,0X57,0X5D,0XB8,0X5D,0XB7,0X45,0X36,0X55,0XEA,0X39,0XC6,0X41,
N0XFC,0XE7,0X2D,0X6E,0X8B,0X5E,0XAA,0X5E,0XAB,0X5E,0XAB,0X5E,0XCC,0X56,0XAB,0X4E,
N0XEC,0X56,0XCB,0X5E,0X8B,0X56,0X6E,0X6E,0XCF,0X75,0XFD,0XE7,0XFF,0XFF,0X09,0X42,
N0XFF,0XFF,0XFE,0XEF,0XFD,0XE7,0XD0,0X7D,0X0E,0X76,0X0D,0X6E,0X0F,0X76,0XD0,0X7D,
N0XFE,0XE7,0XFF,0XEF,0X6A,0X1A,0X56,0X6D,0X97,0X5D,0X97,0X5D,0X56,0X65,0XAB,0X22,
N0X6B,0X2A,0X29,0X22,0X4A,0X2A,0X4A,0X2A,0X4A,0X2A,0X4A,0X22,0X6A,0X2A,0X29,0X22,
N0X6A,0X32,0X4A,0X2A,0X4A,0X2A,0X4A,0X22,0XAB,0X22,0X35,0X6D,0XF5,0X64,0XD4,0X6C,
N0XFF,0XEF,0XFB,0XDF,0X6D,0X6E,0XCA,0X56,0XAB,0X5E,0X8C,0X66,0X0D,0X6E,0XFA,0XDF,
N0XFE,0XFF,0X08,0X42,0X48,0X32,0X69,0X2A,0X29,0X2A,0X2A,0X2A,0X4A,0X2A,0X29,0X22,
N0X2A,0X2A,0X6B,0X2A,0X4A,0X2A,0X09,0X2A,0X6A,0X42,0X27,0X32,0XFC,0XE7,0X2F,0X86,
N0X6B,0X66,0X8A,0X56,0XAB,0X5E,0X6E,0X6E,0XFC,0XE7,0XFF,0XFF,0XA7,0X49,0XE9,0X41,
N0X08,0X3A,0XFD,0XEF,0XEF,0X7D,0X8D,0X66,0XAA,0X56,0XEB,0X5E,0XCB,0X56,0XC5,0X1C,
N0XA6,0X1C,0XA6,0X1C,0XC6,0X1C,0XC6,0X14,0XA7,0X1C,0X69,0X34,0XFC,0XCF,0XFE,0XF7,
N0XFF,0XFF,0XFF,0XFF,0XFD,0XEF,0XEF,0X85,0X2C,0X6E,0X8B,0X5E,0XAB,0X5E,0XAC,0X5E,
N0X4D,0X66,0XF0,0X85,0XFC,0XE7,0XFF,0XEF,0X4A,0X32,0X4A,0X3A,0X29,0X3A,0XFF,0XF7,
N0XFB,0XE7,0X2D,0X6E,0XAC,0X5E,0XAC,0X5E,0X8C,0X5E,0X4F,0X6E,0XFB,0XD7,0XFE,0XF7,
N0XE8,0X39,0X2A,0X32,0X4B,0X22,0X8C,0X1A,0X36,0X5D,0X77,0X45,0X36,0X55,0X0A,0X42,
N0XC6,0X41,0XFB,0XE7,0X4E,0X76,0X8B,0X5E,0XCA,0X5E,0XAB,0X5E,0X8B,0X5E,0XC5,0X1C,
N0XCD,0X56,0XCB,0X4E,0XCB,0X56,0XEB,0X56,0X8C,0X5E,0X2E,0X76,0XFA,0XD7,0XFE,0XF7,
N0XDF,0XFF,0XFE,0XFF,0XFC,0XEF,0XEF,0X85,0X2D,0X6E,0X6B,0X66,0XCC,0X66,0X6C,0X5E,
N0X4E,0X6E,0XD0,0X85,0XFE,0XEF,0XFF,0XE7,0X8B,0X2A,0X6B,0X12,0X56,0X6D,0X6A,0X2A,
N0XFF,0XEF,0XFF,0XEF,0XFF,0XF7,0XFE,0XF7,0XFE,0XEF,0XFF,0XF7,0XFE,0XEF,0XFE,0XEF,
N0XFE,0XF7,0XFF,0XF7,0XDE,0XF7,0XFF,0XFF,0X29,0X3A,0X09,0X2A,0X4A,0X2A,0X4A,0X2A,
N0X49,0X2A,0XFF,0XF7,0XFB,0XDF,0X6D,0X66,0XAB,0X56,0XAB,0X5E,0X6C,0X66,0X4E,0X76,
N0XFA,0XD7,0XFE,0XF7,0XFF,0XFF,0XFE,0XF7,0XFE,0XEF,0XFF,0XF7,0XFF,0XF7,0XFF,0XF7,
N0XFF,0XF7,0XFF,0XF7,0XFF,0XEF,0XFF,0XEF,0XFF,0XEF,0XFF,0XF7,0XFD,0XF7,0XFB,0XEF,
N0X0E,0X7E,0X6B,0X66,0XAB,0X5E,0XCB,0X5E,0X4D,0X6E,0XFD,0XE7,0XFF,0XFF,0XC8,0X49,
N0XE9,0X41,0X08,0X3A,0XFD,0XEF,0XEF,0X7D,0X6D,0X66,0XAB,0X56,0XCB,0X5E,0X8C,0X5E,
N0X88,0X2C,0X69,0X2C,0X69,0X34,0X69,0X34,0X49,0X2C,0X4A,0X34,0X2B,0X44,0XFD,0XDF,
N0XFF,0XF7,0XFF,0XF7,0XFD,0XEF,0XFB,0XD7,0X2D,0X6E,0X8C,0X66,0X8A,0X56,0XCA,0X5E,
N0XAB,0X5E,0X6C,0X5E,0X4E,0X76,0XFB,0XDF,0XFD,0XE7,0X48,0X3A,0X09,0X42,0XE9,0X41,
N0XFF,0XFF,0XFB,0XE7,0X4D,0X76,0XAB,0X5E,0XAB,0X56,0XAC,0X5E,0X4E,0X6E,0XFB,0XD7,
N0XFE,0XF7,0XE8,0X41,0XE9,0X41,0X2A,0X3A,0X6B,0X2A,0X16,0X65,0X77,0X4D,0X16,0X5D,
N0XEA,0X41,0XC6,0X41,0XFB,0XE7,0X2E,0X76,0X8C,0X66,0XAB,0X5E,0XAB,0X5E,0X8C,0X5E,
N0XA7,0X2C,0X8E,0X5E,0XCC,0X5E,0XAA,0X56,0XCA,0X56,0X8B,0X5E,0X2D,0X6E,0XFA,0XD7,
N0XFD,0XF7,0XFE,0XF7,0XFD,0XEF,0XFA,0XD7,0X2D,0X6E,0XAC,0X6E,0X8B,0X5E,0XAB,0X5E,
N0XAC,0X5E,0X6C,0X5E,0X0E,0X76,0XFC,0XDF,0XFF,0XF7,0X4A,0X3A,0X4A,0X2A,0XF5,0X84,
N0X4A,0X3A,0XFF,0XF7,0XFE,0XF7,0XFD,0XEF,0XFC,0XE7,0XFC,0XE7,0XFC,0XDF,0XFC,0XDF,
N0XFC,0XDF,0XFC,0XE7,0XFC,0XE7,0XFD,0XEF,0XFF,0XFF,0X29,0X4A,0XE9,0X39,0X0A,0X42,
N0X09,0X42,0X29,0X42,0XFE,0XF7,0XFB,0XE7,0X4D,0X6E,0XAB,0X5E,0XAB,0X5E,0X6C,0X66,
N0X2D,0X76,0XFA,0XD7,0XFD,0XEF,0XFD,0XEF,0XFD,0XE7,0XFC,0XE7,0XFD,0XDF,0XFE,0XE7,
N0XFE,0XEF,0XFE,0XEF,0XFD,0XE7,0XFC,0XDF,0XFC,0XDF,0XFC,0XDF,0XFC,0XE7,0XFC,0XDF,
N0XFB,0XDF,0X0E,0X76,0X8C,0X66,0XAB,0X5E,0XAB,0X5E,0X2E,0X6E,0XFC,0XE7,0XFF,0XFF,
N0XA7,0X49,0XE9,0X41,0X08,0X3A,0XFD,0XEF,0XEF,0X7D,0X6D,0X66,0XAB,0X5E,0XCB,0X5E,
N0X6D,0X5E,0XFC,0XCF,0XFE,0XD7,0XFD,0XD7,0XFD,0XDF,0XFE,0XDF,0XFE,0XDF,0XFE,0XE7,
N0XFE,0XEF,0XFE,0XEF,0XFD,0XEF,0XD0,0X7D,0X4F,0X76,0X8C,0X66,0X8A,0X5E,0XEA,0X5E,
N0XCA,0X56,0XCA,0X5E,0XCC,0X5E,0X6C,0X66,0X0E,0X6E,0XD1,0X8D,0XFD,0XEF,0XFF,0XFF,
N0XFE,0XF7,0XFD,0XEF,0XF9,0XDF,0X4C,0X6E,0XAA,0X66,0XAA,0X5E,0XCC,0X5E,0X4D,0X66,
N0XF9,0XCF,0XFC,0XE7,0XFD,0XF7,0XFF,0XFF,0XFF,0XFF,0XE9,0X21,0X16,0X6D,0X57,0X55,
N0X16,0X5D,0XEA,0X41,0XC6,0X41,0XFC,0XE7,0X2E,0X76,0X8C,0X66,0XAB,0X5E,0XAB,0X5E,
N0X6C,0X66,0XF9,0XBF,0X2F,0X6E,0X6C,0X5E,0XCB,0X5E,0XAA,0X5E,0XAB,0X66,0X4D,0X6E,
N0XF9,0XCF,0XFC,0XE7,0XFC,0XEF,0XD0,0X7D,0X2E,0X76,0X8C,0X66,0X8A,0X5E,0XCB,0X5E,
N0XAB,0X5E,0XCB,0X5E,0X8B,0X5E,0X6C,0X66,0X0E,0X7E,0XFD,0XEF,0XFF,0XF7,0XFF,0XF7,
N0X29,0X3A,0XFF,0XF7,0XFE,0XF7,0XFC,0XE7,0XAE,0X7D,0X2F,0X7E,0X2E,0X76,0X2E,0X76,
N0X4F,0X76,0X4F,0X76,0X0E,0X76,0X30,0X86,0X90,0X8D,0XFD,0XF7,0X08,0X4A,0XA8,0X41,
N0XFF,0XFF,0XFE,0XFF,0XFC,0XEF,0XFD,0XEF,0XF9,0XCF,0X6C,0X66,0XCB,0X5E,0XAB,0X5E,
N0XAC,0X66,0X4E,0X76,0XF9,0XCF,0XFB,0XDF,0XB1,0X8D,0XEF,0X85,0XEE,0X75,0X50,0X7E,
N0XF0,0X75,0X91,0X85,0XFC,0XE7,0XAF,0X7D,0X0F,0X7E,0X2F,0X7E,0X0E,0X76,0X2F,0X76,
N0X0F,0X76,0XFA,0XD7,0X2E,0X76,0X8C,0X66,0XAB,0X5E,0XAB,0X5E,0X2D,0X76,0XFC,0XE7,
N0XFF,0XFF,0XA7,0X49,0XE8,0X49,0X07,0X42,0XFD,0XEF,0XCF,0X85,0X4D,0X6E,0X8B,0X5E,
N0XCB,0X5E,0X4D,0X66,0XFC,0XDF,0XFF,0XEF,0XFF,0XF7,0XFF,0XF7,0XFF,0XF7,0XFE,0XEF,
N0XFF,0XF7,0XFE,0XF7,0XFC,0XE7,0XF0,0X85,0X4E,0X6E,0X6D,0X66,0X6A,0X5E,0XAA,0X5E,
N0XCA,0X5E,0XAA,0X56,0XAA,0X56,0XCB,0X56,0XAB,0X56,0X6D,0X5E,0X0F,0X7E,0XFC,0XE7,
N0XFC,0XE7,0XD0,0X8D,0X2E,0X76,0XAD,0X6E,0X8B,0X5E,0XAB,0X5E,0XCB,0X5E,0X8B,0X5E,
N0X6B,0X5E,0X8C,0X6E,0X4D,0X6E,0XEE,0X7D,0XFC,0XE7,0XFF,0XEF,0X6A,0X2A,0XF5,0X6C,
N0X36,0X4D,0X16,0X5D,0XEA,0X41,0XC7,0X41,0XFC,0XE7,0X0E,0X76,0X8C,0X66,0XAB,0X5E,
N0XAA,0X5E,0X6B,0X66,0XFA,0XD7,0XEF,0X7D,0X6C,0X66,0XCB,0X5E,0XAA,0X5E,0X6A,0X5E,
N0X6D,0X76,0XF8,0XC7,0XFB,0XDF,0XCF,0X7D,0X6E,0X76,0X8C,0X66,0X8A,0X5E,0XAB,0X5E,
N0XAB,0X5E,0X8B,0X5E,0XAA,0X5E,0XAA,0X5E,0XCB,0X66,0X4C,0X66,0XCF,0X7D,0XFD,0XEF,
N0XFF,0XF7,0XFF,0XEF,0XFD,0XE7,0XD0,0X85,0X2E,0X76,0X6D,0X6E,0X8D,0X66,0X8C,0X5E,
N0X8C,0X66,0X6C,0X66,0X8C,0X66,0X4C,0X66,0X2D,0X6E,0XF0,0X85,0XFD,0XF7,0XFF,0XFF,
N0XDF,0XFF,0XFE,0XF7,0XCF,0X7D,0X6E,0X76,0X4D,0X6E,0XAD,0X6E,0XCB,0X66,0XCA,0X5E,
N0XCA,0X5E,0X6B,0X56,0X6D,0X6E,0XF9,0XC7,0XFB,0XDF,0XEF,0X7D,0X2C,0X6E,0X6B,0X66,
N0X8C,0X66,0X4D,0X6E,0XAF,0X7D,0XFB,0XE7,0XEE,0X75,0X4D,0X6E,0X2C,0X66,0X8D,0X66,
N0X6D,0X66,0X4D,0X6E,0XFA,0XD7,0X2E,0X76,0XAC,0X5E,0XCB,0X56,0XAB,0X5E,0X4D,0X6E,
N0XFC,0XE7,0XFF,0XFF,0XA7,0X49,0XE8,0X41,0X07,0X3A,0XFD,0XEF,0XCF,0X85,0X4C,0X6E,
N0X8B,0X5E,0XAB,0X5E,0X4D,0X6E,0XFD,0XEF,0XFE,0XFF,0XFD,0XF7,0XFD,0XEF,0XFD,0XEF,
N0XFD,0XF7,0XFC,0XE7,0XFD,0XEF,0XFB,0XE7,0X0E,0X76,0X4C,0X66,0XCC,0X5E,0XCB,0X5E,
N0XCB,0X5E,0X8B,0X5E,0XAB,0X5E,0XCB,0X5E,0XAB,0X56,0XEC,0X56,0X8B,0X56,0X0E,0X76,
N0XFA,0XDF,0XFB,0XDF,0XEE,0X75,0X8C,0X66,0XAB,0X56,0XAB,0X5E,0XAB,0X5E,0XAB,0X5E,
N0XAB,0X5E,0XCB,0X5E,0XAA,0X5E,0XAB,0X5E,0X4D,0X6E,0XFB,0XDF,0XFF,0XEF,0X29,0X22,
N0X16,0X6D,0X36,0X4D,0X15,0X5D,0X0A,0X42,0XC7,0X41,0XFC,0XE7,0X0E,0X76,0X8C,0X66,
N0XAA,0X5E,0XCA,0X5E,0X6B,0X66,0XF9,0XD7,0XAF,0X7D,0X8D,0X6E,0XAB,0X5E,0X8A,0X5E,
N0X8B,0X66,0X4D,0X6E,0XF8,0XC7,0XFA,0XD7,0X0E,0X76,0X6B,0X5E,0XCB,0X5E,0XCB,0X5E,
N0XAB,0X5E,0X8C,0X5E,0XAC,0X5E,0XAB,0X66,0X89,0X56,0XAA,0X56,0X8C,0X66,0X2E,0X7E,
N0XFB,0XE7,0XFD,0XEF,0XFD,0XEF,0XFB,0XDF,0X0E,0X6E,0X8D,0X6E,0X8B,0X5E,0XAB,0X56,
N0XCB,0X5E,0XCB,0X5E,0XAB,0X5E,0XAB,0X56,0XAC,0X66,0X4D,0X6E,0X0F,0X7E,0XFC,0XEF,
N0XFD,0XF7,0XFE,0XEF,0XFB,0XDF,0X2C,0X66,0XAB,0X5E,0XCC,0X56,0XAB,0X56,0XAA,0X56,
N0XCA,0X5E,0XAA,0X56,0XCB,0X5E,0X6D,0X66,0XF8,0XC7,0XFA,0XD7,0X2E,0X7E,0X6B,0X66,
N0XCA,0X66,0X89,0X56,0X8C,0X6E,0XCE,0X7D,0XFA,0XDF,0X2E,0X76,0X6C,0X6E,0XAC,0X66,
N0XAB,0X5E,0XAB,0X5E,0X6C,0X66,0XF9,0XCF,0X2E,0X76,0X8C,0X66,0XAB,0X5E,0XAB,0X5E,
N0X4D,0X6E,0XFB,0XE7,0XFE,0XFF,0XA7,0X49,0XEA,0X41,0X08,0X3A,0XFD,0XEF,0XCF,0X7D,
N0X6C,0X6E,0XAB,0X5E,0XCB,0X5E,0X6D,0X66,0XFC,0XE7,0XFC,0XDF,0X0F,0X7E,0X2E,0X6E,
N0X4E,0X6E,0X0E,0X76,0XEF,0X85,0XFA,0XDF,0XFA,0XD7,0X2E,0X7E,0X8C,0X66,0XAB,0X56,
N0XEB,0X56,0XAB,0X56,0X6D,0X66,0XA7,0X2C,0X8D,0X66,0X8C,0X5E,0XAB,0X56,0XAC,0X66,
N0X2E,0X7E,0XF9,0XD7,0XFB,0XDF,0X0E,0X76,0X8C,0X66,0XCB,0X56,0XCB,0X5E,0XCB,0X5E,
N0XCB,0X56,0XCB,0X5E,0XAA,0X5E,0XCA,0X5E,0XCA,0X56,0X8D,0X6E,0XFB,0XDF,0XFF,0XF7,
N0X4A,0X2A,0XB4,0X64,0X36,0X4D,0X15,0X5D,0X09,0X42,0XC6,0X41,0XFC,0XE7,0X0E,0X76,
N0X8C,0X66,0XAB,0X5E,0XCA,0X5E,0X6B,0X66,0XFA,0XDF,0XAF,0X7D,0X6D,0X66,0XAB,0X5E,
N0XAA,0X5E,0XAB,0X66,0X4C,0X66,0XF8,0XC7,0XF9,0XCF,0X4E,0X76,0X8C,0X5E,0XAA,0X56,
N0XEB,0X5E,0X8B,0X56,0X8D,0X5E,0XA6,0X24,0X8C,0X66,0XCB,0X66,0XEB,0X5E,0X8B,0X5E,
N0X2F,0X7E,0XFB,0XDF,0XFD,0XEF,0XFB,0XDF,0X2D,0X6E,0XAC,0X66,0X6A,0X5E,0XAA,0X5E,
N0XCC,0X5E,0XCC,0X5E,0XAB,0X56,0XAB,0X56,0XCC,0X5E,0X8B,0X56,0X6D,0X6E,0X0E,0X76,
N0XFB,0XDF,0XFC,0XE7,0XFA,0XCF,0X2E,0X6E,0X8C,0X5E,0XCB,0X5E,0XAB,0X56,0XCC,0X56,
N0XAB,0X5E,0XCB,0X66,0XAA,0X5E,0XAB,0X5E,0X4D,0X66,0XF9,0XC7,0XFA,0XD7,0XEE,0X75,
N0X8C,0X66,0XCB,0X5E,0XCB,0X5E,0X8C,0X66,0XAE,0X7D,0XFB,0XDF,0X0D,0X6E,0X6C,0X66,
N0X8B,0X5E,0XAB,0X5E,0XAB,0X5E,0X6B,0X66,0XF9,0XCF,0X2D,0X76,0X8C,0X66,0XAB,0X5E,
N0XAB,0X5E,0X4D,0X6E,0XFB,0XE7,0XFE,0XFF,0XA7,0X49,0XEA,0X41,0X08,0X3A,0XFD,0XE7,
N0XEF,0X7D,0X6C,0X66,0XAB,0X5E,0XAB,0X5E,0X4D,0X66,0XFB,0XE7,0XFA,0XD7,0X2D,0X66,
N0XAC,0X5E,0XCC,0X5E,0X6C,0X5E,0X4D,0X76,0XF8,0XCF,0XFA,0XDF,0X2E,0X76,0X8C,0X66,
N0XAA,0X56,0XAA,0X56,0XAC,0X5E,0X2E,0X6E,0XFA,0XCF,0X2D,0X66,0X8C,0X66,0XCC,0X5E,
N0X8B,0X66,0X4E,0X7E,0XFA,0XDF,0XFB,0XDF,0X0E,0X76,0X8D,0X5E,0XAB,0X56,0XCB,0X56,
N0XAB,0X56,0XAA,0X56,0XEB,0X56,0XCB,0X5E,0XCB,0X5E,0XCA,0X56,0X6D,0X66,0XFC,0XDF,
N0XFF,0XEF,0X2A,0X2A,0XF5,0X6C,0X36,0X4D,0XF5,0X5C,0X09,0X42,0XC6,0X41,0XFC,0XE7,
N0X2E,0X76,0X8C,0X66,0XCB,0X56,0XCA,0X56,0X8C,0X66,0XFA,0XD7,0XCF,0X7D,0X6D,0X66,
N0XAB,0X56,0XCB,0X5E,0X6A,0X5E,0X4C,0X66,0XF8,0XC7,0XFA,0XD7,0X2E,0X76,0XAC,0X66,
N0XAA,0X56,0XAB,0X56,0XAC,0X5E,0X4E,0X66,0XF9,0XBF,0X6C,0X5E,0XAB,0X5E,0XAA,0X56,
N0X6B,0X5E,0X0E,0X76,0XFC,0XDF,0XFB,0XDF,0XEF,0X7D,0X8C,0X66,0XAA,0X5E,0XCB,0X66,
N0XAA,0X5E,0X8B,0X56,0XAB,0X56,0XCB,0X5E,0XCB,0X56,0XCB,0X56,0XAC,0X5E,0X6D,0X6E,
N0X0D,0X76,0XFB,0XDF,0XAE,0X75,0X4E,0X6E,0X6C,0X5E,0XCC,0X5E,0XAA,0X56,0XEC,0X56,
N0XAB,0X56,0XAB,0X5E,0X8A,0X5E,0XCB,0X5E,0X8B,0X5E,0X4D,0X66,0XF9,0XCF,0XFA,0XD7,
N0X0E,0X76,0X8C,0X66,0XAA,0X56,0XCB,0X56,0X4C,0X66,0XEF,0X7D,0XFA,0XD7,0X4D,0X76,
N0X8C,0X66,0X8B,0X56,0XEB,0X5E,0XCB,0X5E,0X6C,0X66,0XF9,0XCF,0X2D,0X76,0X8C,0X66,
N0XAB,0X5E,0XAB,0X5E,0X4D,0X6E,0XFC,0XE7,0XFF,0XFF,0XA7,0X49,0XE9,0X41,0X08,0X3A,
N0XFD,0XE7,0XEF,0X7D,0X8C,0X66,0XAB,0X5E,0XAB,0X5E,0X4D,0X6E,0XFB,0XE7,0XFB,0XE7,
N0X6D,0X6E,0X8B,0X5E,0XAB,0X56,0X8C,0X5E,0X4E,0X6E,0XF9,0XCF,0XFA,0XD7,0X0E,0X76,
N0X8C,0X6E,0XCB,0X5E,0XCB,0X5E,0X6C,0X5E,0XEE,0X75,0XFA,0XD7,0X0D,0X6E,0X6C,0X66,
N0X8B,0X5E,0X8C,0X66,0X0D,0X6E,0XFA,0XD7,0XFB,0XD7,0X2F,0X6E,0X8E,0X5E,0XCC,0X56,
N0XAB,0X56,0XCB,0X56,0XCA,0X56,0XEB,0X5E,0X8B,0X56,0XCC,0X56,0X0C,0X57,0X6D,0X5E,
N0XFC,0XDF,0XFF,0XF7,0X49,0X2A,0XF4,0X64,0X35,0X4D,0XF4,0X54,0X09,0X42,0XC6,0X41,
N0XFC,0XE7,0X0E,0X76,0X8C,0X66,0XCB,0X56,0XCA,0X56,0X8B,0X5E,0XF8,0XCF,0XEE,0X75,
N0X8C,0X66,0XAB,0X5E,0X8A,0X56,0XAC,0X66,0X4D,0X6E,0XF8,0XC7,0XFA,0XD7,0X0F,0X76,
N0XAC,0X66,0XCA,0X56,0XEC,0X5E,0X6C,0X66,0XEE,0X75,0XF9,0XCF,0X8D,0X66,0XAB,0X5E,
N0XCC,0X5E,0X8C,0X66,0X0E,0X76,0XFB,0XDF,0XFB,0XDF,0X0E,0X76,0X6B,0X5E,0XCB,0X5E,
N0XAB,0X5E,0X8B,0X5E,0XAC,0X56,0XCC,0X56,0XAB,0X56,0XCA,0X56,0XAA,0X56,0XAB,0X5E,
N0X8C,0X66,0X4D,0X6E,0XF9,0XCF,0X2E,0X76,0X4C,0X66,0XCC,0X66,0XAB,0X5E,0XCB,0X5E,
N0XCB,0X56,0XAC,0X56,0XCC,0X5E,0XAB,0X5E,0XAA,0X5E,0X8B,0X66,0X4D,0X6E,0XF9,0XCF,
N0XFA,0XD7,0X2F,0X7E,0X8C,0X66,0XAB,0X56,0XAB,0X56,0X8C,0X66,0XEE,0X75,0XFA,0XD7,
N0X0D,0X6E,0X6C,0X66,0XCC,0X66,0X8B,0X56,0X8B,0X5E,0X6C,0X66,0XF9,0XCF,0X2E,0X76,
N0X8C,0X66,0XAB,0X5E,0XAB,0X5E,0X4E,0X6E,0XFC,0XE7,0XFF,0XFF,0XA7,0X49,0XC9,0X49,
N0X08,0X3A,0XFD,0XEF,0XEF,0X7D,0X8C,0X66,0XAB,0X56,0XAB,0X5E,0X4D,0X6E,0XFC,0XE7,
N0XFB,0XDF,0X2C,0X6E,0XCB,0X5E,0XCB,0X56,0X8C,0X5E,0X6E,0X6E,0XF9,0XCF,0XFB,0XD7,
N0X0F,0X7E,0X4C,0X66,0XAB,0X5E,0XAB,0X56,0XAC,0X66,0XED,0X75,0XFA,0XD7,0X2D,0X6E,
N0X8C,0X66,0XAB,0X5E,0X6B,0X66,0X2E,0X76,0XFB,0XD7,0XFC,0XD7,0X2A,0X44,0X47,0X2C,
N0XA6,0X2C,0X8C,0X5E,0XAB,0X5E,0XCB,0X5E,0XAB,0X56,0X8C,0X5E,0XA6,0X24,0X66,0X24,
N0X69,0X3C,0XFD,0XE7,0XFF,0XF7,0X49,0X2A,0XF4,0X64,0X55,0X4D,0X15,0X55,0XEA,0X41,
N0XA6,0X41,0XFC,0XE7,0X2E,0X76,0X8C,0X5E,0XCB,0X56,0XCA,0X56,0XAB,0X5E,0X4C,0X66,
N0X6D,0X6E,0X8B,0X5E,0XCB,0X5E,0XAB,0X5E,0X8C,0X66,0X4D,0X6E,0XF9,0XC7,0XFA,0XD7,
N0X2F,0X7E,0X8B,0X5E,0XCA,0X56,0XAB,0X5E,0X8D,0X6E,0X0E,0X76,0XF9,0XCF,0X6C,0X66,
N0XCC,0X5E,0XAB,0X5E,0X6C,0X66,0X0F,0X7E,0XFB,0XDF,0XFB,0XDF,0X0E,0X76,0X8C,0X66,
N0XCB,0X5E,0X8A,0X56,0XAC,0X66,0XA6,0X24,0XA6,0X24,0XAC,0X5E,0XCA,0X5E,0XCA,0X5E,
N0XAA,0X5E,0X8C,0X66,0X4C,0X6E,0XF9,0XCF,0X2D,0X6E,0X8C,0X66,0XAB,0X5E,0XCB,0X5E,
N0XAB,0X5E,0X85,0X2C,0X85,0X24,0XAC,0X5E,0XAB,0X56,0XCB,0X5E,0X8B,0X66,0X4D,0X6E,
N0XF8,0XCF,0XFA,0XDF,0X0E,0X76,0X8C,0X66,0XCB,0X56,0XCB,0X5E,0X6C,0X66,0XCE,0X75,
N0XFB,0XDF,0X0D,0X6E,0X6D,0X6E,0X8B,0X5E,0XAB,0X5E,0XCC,0X5E,0X8C,0X66,0XF9,0XCF,
N0X2E,0X6E,0X8D,0X66,0XAC,0X56,0XAC,0X56,0X4E,0X66,0XFD,0XE7,0XFF,0XFF,0XA8,0X49,
N0XC9,0X49,0X08,0X42,0XFD,0XEF,0XEE,0X7D,0X8C,0X66,0XCB,0X5E,0XCB,0X5E,0X4D,0X6E,
N0XFD,0XE7,0XFC,0XDF,0X4C,0X6E,0XCB,0X5E,0XCB,0X56,0X8C,0X5E,0X4D,0X6E,0XF8,0XCF,
N0XFB,0XDF,0XEE,0X75,0X6D,0X66,0XAB,0X5E,0XAB,0X5E,0XAB,0X66,0X2D,0X6E,0XF9,0XCF,
N0X6C,0X66,0X8B,0X5E,0XAB,0X56,0XAC,0X66,0X2E,0X6E,0XFC,0XDF,0XFE,0XEF,0XFE,0XF7,
N0XFD,0XDF,0XFA,0XCF,0X4C,0X6E,0XAB,0X66,0XAB,0X5E,0XAC,0X5E,0X6D,0X6E,0XF9,0XCF,
N0XFC,0XDF,0XFE,0XF7,0XFF,0XFF,0XFF,0XFF,0X29,0X2A,0XF4,0X64,0X35,0X4D,0XF4,0X54,
N0XEA,0X41,0XA7,0X41,0XFC,0XE7,0X2E,0X76,0XAC,0X5E,0XEB,0X56,0XCA,0X56,0XCA,0X5E,
N0XAB,0X66,0XAB,0X66,0XCB,0X56,0XCA,0X56,0XAB,0X5E,0X6B,0X66,0X2E,0X6E,0XFA,0XC7,
N0XFA,0XCF,0X2F,0X76,0X8C,0X5E,0XCB,0X5E,0X8B,0X5E,0X8C,0X66,0X4C,0X6E,0XF8,0XC7,
N0X8C,0X5E,0XCC,0X5E,0X8B,0X56,0X6C,0X66,0XEF,0X7D,0XFB,0XDF,0XFB,0XDF,0X0E,0X76,
N0X8B,0X66,0XAA,0X5E,0XCA,0X5E,0X6B,0X66,0XFA,0XCF,0XFA,0XCF,0X6C,0X66,0XCB,0X5E,
N0XAB,0X56,0XCB,0X5E,0X8B,0X66,0X4C,0X6E,0XF9,0XCF,0X2D,0X6E,0X6B,0X5E,0XCB,0X5E,
N0XCB,0X5E,0X6C,0X66,0XFB,0XD7,0XFA,0XCF,0X6C,0X66,0XCB,0X56,0XCB,0X5E,0X8C,0X66,
N0X2D,0X76,0XF9,0XCF,0XF9,0XD7,0X0D,0X76,0X8C,0X66,0XAB,0X56,0XAB,0X5E,0X6C,0X66,
N0XCF,0X7D,0XFA,0XDF,0X2D,0X76,0X6B,0X66,0X8B,0X66,0XCB,0X5E,0XAC,0X5E,0X8D,0X5E,
N0XFA,0XC7,0X6F,0X6E,0X8D,0X56,0XAC,0X4E,0XEE,0X56,0X2F,0X5E,0XFE,0XE7,0XFF,0XFF,
N0XA8,0X49,0XC9,0X49,0XE8,0X39,0XFC,0XE7,0X0F,0X7E,0XAC,0X66,0XAA,0X56,0XCB,0X5E,
N0X4E,0X6E,0XFD,0XEF,0XFC,0XE7,0X6D,0X6E,0XAA,0X56,0XAA,0X56,0X8B,0X5E,0X4D,0X6E,
N0XF9,0XCF,0XFA,0XD7,0X0E,0X76,0X8D,0X66,0XCB,0X5E,0XAA,0X56,0XAB,0X5E,0X2B,0X5E,
N0X8D,0X6E,0X6B,0X5E,0XAB,0X5E,0XCB,0X56,0X8C,0X5E,0X4F,0X76,0XFC,0XE7,0XFF,0XFF,
N0XE8,0X41,0XFF,0XF7,0XFC,0XE7,0X2D,0X6E,0X8B,0X66,0XAB,0X5E,0XAC,0X66,0X0D,0X6E,
N0XFB,0XDF,0XFE,0XF7,0XA7,0X41,0XC8,0X49,0XE8,0X39,0X29,0X2A,0XF5,0X64,0X35,0X4D,
N0X15,0X5D,0XEA,0X41,0XC6,0X41,0XFC,0XE7,0X2E,0X76,0XAC,0X5E,0XCB,0X56,0XCA,0X56,
N0XCA,0X5E,0XAA,0X5E,0XCB,0X5E,0XCA,0X56,0XCB,0X56,0XAB,0X56,0XAE,0X66,0X68,0X34,
N0XFA,0XC7,0XFB,0XD7,0X2E,0X76,0X8B,0X5E,0XAA,0X56,0XCC,0X66,0XAB,0X66,0X6B,0X5E,
N0X8B,0X5E,0XAB,0X5E,0XCB,0X5E,0XCB,0X56,0XAD,0X66,0X0F,0X7E,0XFB,0XDF,0XFA,0XD7,
N0X2E,0X76,0X8C,0X66,0XAA,0X5E,0XAA,0X5E,0X6C,0X6E,0XFC,0XE7,0XFC,0XE7,0X6D,0X6E,
N0XAB,0X56,0XCB,0X56,0XAB,0X56,0X8B,0X66,0X2C,0X6E,0XF8,0XCF,0X4E,0X76,0XAD,0X66,
N0XAB,0X56,0X8A,0X56,0X6D,0X6E,0XFD,0XEF,0XFC,0XE7,0X6D,0X6E,0XAA,0X56,0XCB,0X56,
N0X8C,0X66,0X4E,0X76,0XF8,0XCF,0XF9,0XD7,0X2E,0X7E,0X8C,0X66,0XAB,0X56,0XAB,0X5E,
N0X6C,0X66,0X0F,0X7E,0XFA,0XD7,0X2C,0X6E,0X8C,0X66,0X8B,0X5E,0X8A,0X56,0XAC,0X5E,
N0X8D,0X66,0XFB,0XCF,0X69,0X34,0XA8,0X24,0XE8,0X24,0XC8,0X24,0X69,0X34,0XFE,0XE7,
N0XFF,0XFF,0XA8,0X49,0XCA,0X49,0X08,0X42,0XFD,0XE7,0XEE,0X75,0X6B,0X66,0XAA,0X5E,
N0XCB,0X5E,0X4D,0X6E,0XFD,0XE7,0XFB,0XDF,0X6D,0X6E,0XAA,0X56,0XCB,0X5E,0XAB,0X66,
N0X4E,0X6E,0XF9,0XC7,0XFA,0XD7,0X0E,0X76,0X6C,0X66,0XCB,0X56,0XEA,0X5E,0XCA,0X5E,
N0XAB,0X66,0X8B,0X5E,0XAB,0X56,0XEC,0X5E,0XCB,0X4E,0XAC,0X5E,0X2F,0X76,0XFC,0XE7,
N0XFF,0XFF,0XC8,0X41,0XFF,0XF7,0XFC,0XE7,0X4D,0X76,0X8B,0X5E,0XCB,0X5E,0XAC,0X5E,
N0X2D,0X6E,0XFA,0XD7,0XFE,0XFF,0XE8,0X49,0XC8,0X49,0XE8,0X41,0X4A,0X32,0XD4,0X64,
N0X36,0X4D,0XF5,0X5C,0X09,0X42,0XC6,0X41,0XFC,0XE7,0X0E,0X76,0X6C,0X66,0XAB,0X5E,
N0XCA,0X5E,0XCA,0X5E,0XAB,0X5E,0XAB,0X5E,0XCA,0X56,0XCB,0X56,0XAC,0X4E,0X6E,0X5E,
N0X2A,0X3C,0XFC,0XD7,0XFB,0XD7,0X2F,0X76,0X8B,0X5E,0XCB,0X56,0XCB,0X5E,0XAB,0X5E,
N0XCB,0X5E,0XAA,0X5E,0XAA,0X5E,0XCB,0X5E,0XEB,0X56,0X8B,0X56,0X0E,0X76,0XFB,0XDF,
N0XFA,0XD7,0X0E,0X76,0X6C,0X5E,0XCC,0X5E,0XCA,0X56,0X4C,0X5E,0XFC,0XE7,0XFC,0XE7,
N0X4D,0X66,0XEC,0X5E,0XCB,0X56,0X8B,0X5E,0X8C,0X6E,0X4D,0X76,0XF9,0XCF,0X0D,0X6E,
N0X6C,0X5E,0XCB,0X5E,0XEB,0X5E,0X4D,0X66,0XFC,0XE7,0XFC,0XE7,0X4C,0X66,0XCA,0X56,
N0XEB,0X5E,0X8B,0X5E,0X2D,0X76,0XF9,0XCF,0XFB,0XDF,0X0E,0X76,0X6C,0X5E,0XCB,0X56,
N0XAA,0X56,0X8B,0X5E,0X4D,0X6E,0XF7,0XBF,0X8C,0X66,0X8B,0X5E,0XAB,0X5E,0XAB,0X5E,
N0XCC,0X66,0X4D,0X66,0XFB,0XD7,0XAA,0X3B,0X2B,0X44,0X0A,0X34,0XE9,0X33,0XEA,0X43,
N0XFE,0XEF,0XFF,0XFF,0XA8,0X49,0XCA,0X49,0XE8,0X39,0XFD,0XE7,0X0E,0X76,0X8B,0X66,
N0XCA,0X5E,0XAB,0X5E,0X6D,0X6E,0XFC,0XE7,0XFB,0XDF,0X6D,0X6E,0XCB,0X56,0XCA,0X5E,
N0X8B,0X5E,0X4E,0X6E,0XF9,0XCF,0XF9,0XD7,0X2E,0X76,0X8C,0X66,0XAA,0X56,0XCA,0X56,
N0XAA,0X56,0XAB,0X5E,0XCB,0X5E,0XAC,0X56,0XCC,0X56,0XCC,0X4E,0X6C,0X56,0X50,0X7E,
N0XFC,0XE7,0XFF,0XFF,0XE8,0X49,0XFF,0XFF,0XFB,0XE7,0X2C,0X6E,0XAB,0X5E,0XAB,0X5E,
N0X6B,0X5E,0X4D,0X76,0XFA,0XDF,0XFE,0XF7,0XE8,0X49,0XC7,0X49,0X09,0X4A,0X4A,0X32,
N0XF5,0X6C,0X16,0X4D,0XD5,0X5C,0X09,0X42,0XC6,0X41,0XFB,0XE7,0X2E,0X76,0X6C,0X66,
N0XAB,0X5E,0XAB,0X5E,0XAB,0X5E,0X8B,0X56,0XCB,0X5E,0XAA,0X56,0XCC,0X5E,0XA7,0X24,
N0X49,0X34,0XFE,0XDF,0XFD,0XE7,0XFB,0XD7,0X4F,0X7E,0X8C,0X5E,0XCB,0X56,0X8B,0X56,
N0XAB,0X56,0XCA,0X56,0XEA,0X5E,0XCB,0X5E,0XAC,0X56,0XEC,0X4E,0XAD,0X56,0X0F,0X6E,
N0XFB,0XD7,0XFA,0XD7,0X2E,0X76,0X8D,0X66,0XAB,0X56,0XCB,0X56,0X8D,0X66,0XFB,0XDF,
N0XFC,0XE7,0X4D,0X66,0XAB,0X56,0XAB,0X56,0XAC,0X5E,0X8C,0X6E,0X2D,0X6E,0XF9,0XCF,
N0X4E,0X76,0X8C,0X66,0XCB,0X5E,0XAA,0X56,0X6D,0X6E,0XFC,0XE7,0XFB,0XDF,0X6D,0X6E,
N0XCB,0X56,0XCA,0X56,0XCB,0X5E,0X2D,0X6E,0XFA,0XCF,0XFB,0XD7,0XEE,0X6D,0XAD,0X66,
N0XCB,0X56,0XCB,0X5E,0XCB,0X5E,0X8C,0X66,0X8D,0X66,0XAC,0X5E,0XCB,0X5E,0XAB,0X56,
N0XCC,0X5E,0X8B,0X5E,0X4D,0X6E,0XFD,0XE7,0XFF,0XEF,0XFE,0XE7,0XFE,0XE7,0XFE,0XE7,
N0XFD,0XEF,0XFE,0XF7,0XFF,0XFF,0XA8,0X49,0XCA,0X49,0XE8,0X39,0XFD,0XE7,0XEE,0X75,
N0X6B,0X66,0XAA,0X5E,0XAB,0X5E,0X6C,0X6E,0XFB,0XDF,0XF9,0XD7,0X6C,0X66,0XCB,0X56,
N0XCA,0X5E,0X8B,0X5E,0X6E,0X6E,0XF9,0XC7,0XFA,0XD7,0X0E,0X76,0X8C,0X66,0XCB,0X5E,
N0XCB,0X56,0XAB,0X5E,0XAB,0X66,0X8B,0X5E,0XC6,0X1C,0XE8,0X1C,0X08,0X1D,0XC8,0X24,
N0X29,0X34,0XFE,0XE7,0XFF,0XF7,0XE8,0X41,0XFE,0XF7,0XFC,0XE7,0X6D,0X6E,0XAB,0X5E,
N0X8B,0X56,0X8C,0X66,0X0D,0X6E,0XFA,0XDF,0XFE,0XF7,0XFF,0XFF,0XDF,0XFF,0XFF,0XFF,
N0X09,0X2A,0XD5,0X6C,0X16,0X55,0XF5,0X5C,0X09,0X3A,0XE6,0X39,0XFB,0XE7,0X2E,0X76,
N0X6C,0X66,0XAB,0X5E,0XAB,0X5E,0XAB,0X5E,0XCC,0X5E,0XAB,0X5E,0XAB,0X56,0X6D,0X66,
N0XFB,0XD7,0XFC,0XDF,0XFE,0XF7,0XFE,0XF7,0XFB,0XDF,0X0D,0X76,0X8C,0X66,0XAB,0X5E,
N0XCC,0X5E,0XAC,0X56,0XCC,0X5E,0XAB,0X56,0XE7,0X1C,0XE8,0X1C,0XE8,0X14,0XC9,0X1C,
N0X6A,0X34,0XFC,0XCF,0XFA,0XD7,0X0D,0X76,0X8C,0X66,0XCB,0X56,0XCA,0X56,0X6C,0X66,
N0XFB,0XDF,0XFC,0XE7,0X4C,0X66,0XCB,0X5E,0XAB,0X5E,0XAC,0X5E,0X8D,0X66,0X4D,0X6E,
N0XF9,0XCF,0X2D,0X6E,0X6B,0X66,0XAA,0X5E,0XCB,0X5E,0X4D,0X66,0XFC,0XE7,0XFB,0XDF,
N0X4D,0X6E,0XAB,0X5E,0XCA,0X56,0XAB,0X5E,0X6E,0X6E,0XF9,0XC7,0XFB,0XCF,0X69,0X3C,
N0X6D,0X5E,0XCB,0X5E,0XAA,0X5E,0X8A,0X56,0X8B,0X5E,0XAB,0X5E,0XCB,0X66,0X8A,0X56,
N0XAB,0X5E,0XAB,0X5E,0XAB,0X5E,0X6E,0X6E,0XFD,0XE7,0XFE,0XF7,0XFF,0XF7,0XFF,0XF7,
N0XFE,0XF7,0XFE,0XF7,0XFF,0XFF,0XFF,0XFF,0XA8,0X49,0XC9,0X41,0X08,0X3A,0XFD,0XEF,
N0X10,0X7E,0X8D,0X66,0XAB,0X5E,0XCB,0X5E,0X6B,0X66,0XF8,0XCF,0XF6,0XBF,0X8C,0X66,
N0XCB,0X56,0XAA,0X56,0X8B,0X66,0X4E,0X76,0XF9,0XC7,0XFA,0XD7,0X0E,0X76,0X6B,0X5E,
N0XAB,0X56,0XCC,0X5E,0X8B,0X56,0XAA,0X5E,0X8C,0X66,0X88,0X2C,0X49,0X24,0X49,0X2C,
N0X2A,0X34,0XAA,0X3B,0XFF,0XE7,0XFF,0XFF,0X08,0X42,0XFF,0XFF,0XFA,0XD7,0X4E,0X6E,
N0X8C,0X5E,0XAB,0X5E,0X8C,0X5E,0X4D,0X6E,0XF8,0XC7,0XFA,0XCF,0XFB,0XDF,0XFF,0XF7,
N0XFF,0XFF,0X2A,0X32,0XB4,0X6C,0X36,0X55,0XF5,0X54,0X0A,0X3A,0XE6,0X39,0XFB,0XE7,
N0X2E,0X76,0X6C,0X66,0XAB,0X5E,0XAB,0X5E,0XAB,0X5E,0X8C,0X66,0X4B,0X5E,0XAC,0X5E,
N0X6D,0X66,0XF9,0XD7,0XFD,0XF7,0XFE,0XFF,0XFD,0XF7,0XFB,0XD7,0X2D,0X6E,0X8C,0X66,
N0XAB,0X5E,0XAB,0X5E,0X8B,0X56,0XAC,0X5E,0XAD,0X5E,0X48,0X24,0X6A,0X2C,0X4A,0X24,
N0X2A,0X2C,0XEB,0X3B,0XFD,0XD7,0XFB,0XD7,0X2E,0X76,0X8C,0X66,0XCB,0X5E,0XAA,0X56,
N0X8C,0X66,0XF8,0XC7,0XF9,0XCF,0X6B,0X66,0XAA,0X5E,0XAB,0X5E,0X8B,0X5E,0X8D,0X66,
N0X4D,0X6E,0XF9,0XCF,0X4E,0X76,0XAC,0X66,0XAA,0X5E,0XAB,0X56,0X6C,0X66,0XF9,0XCF,
N0XF8,0XC7,0X6D,0X6E,0XAB,0X5E,0XCB,0X5E,0XAB,0X5E,0X6D,0X6E,0XF8,0XBF,0XFD,0XDF,
N0X0A,0X3C,0X2F,0X6E,0X6D,0X5E,0X8C,0X56,0XCC,0X5E,0XEC,0X5E,0X8B,0X4E,0XAB,0X5E,
N0XCB,0X66,0XCB,0X5E,0XAB,0X5E,0XAB,0X5E,0X4D,0X6E,0XFD,0XE7,0XFD,0XE7,0XFC,0XE7,
N0XFC,0XE7,0XFB,0XE7,0XFC,0XE7,0XFE,0XF7,0XFF,0XFF,0XA7,0X49,0XE9,0X49,0XE7,0X39,
N0XFE,0XEF,0XD0,0X75,0X4E,0X66,0XAD,0X5E,0X8B,0X5E,0XAB,0X5E,0X6C,0X66,0XAD,0X6E,
N0XAB,0X56,0XCB,0X56,0XCA,0X5E,0X8B,0X66,0X2D,0X76,0XF9,0XCF,0XFB,0XD7,0X0E,0X66,
N0XCE,0X66,0XAB,0X56,0XAC,0X5E,0XCB,0X5E,0XAA,0X56,0X4B,0X5E,0XFA,0XCF,0XFE,0XEF,
N0XFE,0XEF,0XFF,0XF7,0XFF,0XFF,0XFF,0XFF,0XDF,0XFF,0X08,0X42,0XFE,0XFF,0XFC,0XE7,
N0X4F,0X6E,0XAD,0X5E,0XAB,0X5E,0XAB,0X5E,0XAB,0X5E,0X8C,0X5E,0X8D,0X5E,0X6F,0X76,
N0XFC,0XDF,0XFF,0XF7,0X29,0X2A,0XF5,0X6C,0X35,0X4D,0X15,0X55,0X0A,0X3A,0XC7,0X41,
N0XFC,0XE7,0X2E,0X76,0X6B,0X6E,0XAA,0X5E,0XCA,0X56,0X8B,0X5E,0X2D,0X76,0X2E,0X76,
N0X8C,0X5E,0XAD,0X66,0XF7,0XBF,0XFA,0XDF,0XFD,0XF7,0XFD,0XF7,0XFC,0XD7,0X2E,0X66,
N0XCD,0X66,0XCB,0X5E,0XAB,0X56,0XCB,0X5E,0XAB,0X5E,0X4D,0X66,0XFC,0XDF,0XFE,0XE7,
N0XFF,0XF7,0XFF,0XF7,0XFF,0XF7,0XFE,0XEF,0XFC,0XD7,0X4F,0X76,0X8C,0X66,0X8A,0X56,
N0XCB,0X5E,0XAB,0X5E,0X6C,0X5E,0XAD,0X66,0X8A,0X5E,0XAA,0X5E,0XAA,0X5E,0XAB,0X5E,
N0X8C,0X66,0X2D,0X66,0XFB,0XCF,0X50,0X6E,0X6C,0X5E,0XAB,0X5E,0XAB,0X5E,0X8B,0X5E,
N0X8C,0X6E,0X6C,0X66,0X8B,0X5E,0XEC,0X5E,0X8B,0X56,0XAC,0X66,0X4D,0X6E,0XF9,0XCF,
N0XFD,0XEF,0XFE,0XEF,0XAA,0X3B,0X29,0X34,0XD0,0X5E,0XCE,0X4E,0XEE,0X4E,0X0E,0X57,
N0XCC,0X56,0XAA,0X56,0XAB,0X5E,0X8A,0X5E,0XCB,0X5E,0X6C,0X66,0XFA,0XCF,0XF0,0X7D,
N0X4F,0X76,0X4D,0X6E,0X2D,0X6E,0X2F,0X7E,0XFC,0XEF,0XFF,0XFF,0XA7,0X49,0XE8,0X41,
N0X08,0X3A,0XFE,0XEF,0XCA,0X43,0X68,0X2C,0X8E,0X5E,0XAC,0X5E,0XAB,0X5E,0XCC,0X5E,
N0X8B,0X56,0XEC,0X5E,0XAA,0X56,0XCB,0X5E,0X8B,0X66,0X2D,0X6E,0XFA,0XCF,0XFB,0XCF,
N0X6A,0X3C,0X4E,0X5E,0XCD,0X56,0XAC,0X5E,0XAB,0X5E,0XCB,0X56,0X8D,0X66,0XFB,0XDF,
N0XFF,0XF7,0X08,0X42,0XE9,0X39,0XE9,0X31,0X0A,0X3A,0XE9,0X39,0X08,0X3A,0XFE,0XF7,
N0XFC,0XE7,0X48,0X34,0X6D,0X5E,0XAB,0X5E,0XAA,0X56,0XEB,0X56,0XEB,0X56,0XEB,0X56,
N0X6C,0X5E,0XFC,0XDF,0XFF,0XF7,0X28,0X2A,0XF4,0X64,0X35,0X45,0X15,0X55,0X0A,0X42,
N0XC7,0X41,0XFC,0XE7,0X2E,0X76,0X6B,0X6E,0XAA,0X5E,0XCA,0X56,0X8B,0X5E,0XF9,0XCF,
N0XCF,0X75,0X8D,0X66,0XAC,0X5E,0X8D,0X66,0X0E,0X76,0XFC,0XEF,0XFD,0XEF,0XFD,0XD7,
N0X6A,0X3C,0X6E,0X5E,0XCC,0X56,0XAB,0X56,0XAA,0X56,0XAC,0X5E,0X4E,0X6E,0XFC,0XE7,
N0XFF,0XFF,0XE8,0X39,0XE8,0X41,0XE8,0X41,0XFF,0XF7,0XFD,0XDF,0X49,0X3C,0X6C,0X5E,
N0XCB,0X5E,0XAB,0X56,0XCB,0X56,0XCC,0X56,0XAB,0X56,0XAA,0X5E,0XAA,0X5E,0XAB,0X5E,
N0XCC,0X5E,0X6C,0X66,0X4E,0X6E,0XFB,0XCF,0X6A,0X44,0X67,0X24,0XAD,0X5E,0XAB,0X56,
N0XCB,0X5E,0XAA,0X5E,0XCB,0X5E,0XAB,0X56,0XCB,0X56,0XAC,0X5E,0X8C,0X5E,0X4D,0X6E,
N0XFA,0XCF,0XFD,0XEF,0XFF,0XF7,0XFF,0XEF,0XFD,0XD7,0X6A,0X34,0XA9,0X24,0XA9,0X24,
N0XA7,0X1C,0XAD,0X5E,0XCB,0X5E,0XAB,0X5E,0XAA,0X5E,0XAA,0X5E,0X8C,0X66,0XFA,0XCF,
N0X2F,0X76,0X8D,0X66,0XAB,0X5E,0X8B,0X5E,0X4D,0X6E,0XFC,0XE7,0XFE,0XFF,0XC7,0X49,
N0X08,0X42,0X07,0X3A,0XFF,0XF7,0XFD,0XE7,0XFA,0XBF,0X67,0X24,0X8D,0X5E,0XAC,0X5E,
N0XAB,0X5E,0XAB,0X56,0XAC,0X56,0XCB,0X56,0XCB,0X56,0X8C,0X5E,0X2E,0X6E,0XFA,0XD7,
N0XFD,0XEF,0XFD,0XE7,0X69,0X24,0XC7,0X1C,0X8C,0X56,0XAC,0X5E,0XAB,0X56,0X6D,0X66,
N0XFB,0XDF,0XFF,0XF7,0X6A,0X32,0X52,0X64,0X73,0X5C,0X93,0X5C,0X32,0X64,0X29,0X32,
N0XFF,0XFF,0XFE,0XEF,0XFC,0XD7,0X67,0X2C,0XAD,0X5E,0XCB,0X56,0XCB,0X56,0XCB,0X56,
N0XEB,0X56,0X8D,0X66,0XFB,0XDF,0XFE,0XEF,0X48,0X2A,0XF4,0X64,0X35,0X4D,0X14,0X55,
N0XE9,0X41,0XC6,0X41,0XFC,0XE7,0X0E,0X76,0X8C,0X66,0XAA,0X56,0X0B,0X57,0X8B,0X56,
N0XFA,0XD7,0XCF,0X7D,0X6D,0X66,0XCC,0X5E,0XAB,0X5E,0X4C,0X66,0X10,0X7E,0XFC,0XD7,
N0XFF,0XEF,0XFE,0XE7,0X69,0X2C,0XC6,0X1C,0XCC,0X5E,0XCC,0X56,0XAC,0X56,0X6E,0X6E,
N0XFD,0XE7,0XFF,0XFF,0X29,0X3A,0XF1,0X73,0XE9,0X41,0XFF,0XFF,0XFF,0XEF,0XFC,0XD7,
N0X87,0X24,0XAD,0X56,0XCC,0X56,0XCC,0X56,0XCC,0X5E,0XAB,0X5E,0XAA,0X5E,0XCB,0X5E,
N0XAB,0X5E,0XCC,0X5E,0X6C,0X66,0X0E,0X6E,0XFD,0XE7,0XFC,0XDF,0XFA,0XBF,0X87,0X1C,
N0XCC,0X56,0XCB,0X56,0XCB,0X56,0XCB,0X56,0XCB,0X56,0XCB,0X56,0XCC,0X56,0XAD,0X5E,
N0X4E,0X6E,0XFA,0XD7,0XFE,0XF7,0XE7,0X39,0XFF,0XFF,0XFE,0XF7,0XFE,0XEF,0XFD,0XE7,
N0XFD,0XE7,0XFC,0XDF,0X2D,0X66,0XAC,0X66,0XCB,0X5E,0XAA,0X56,0XAA,0X5E,0X8C,0X66,
N0XF9,0XCF,0X2F,0X76,0X8D,0X5E,0XCC,0X5E,0X8B,0X56,0X4D,0X6E,0XFB,0XE7,0XFE,0XFF,
N0XA7,0X49,0X49,0X2A,0X49,0X2A,0XDF,0XEF,0XFF,0XEF,0XFC,0XD7,0X29,0X34,0X6F,0X6E,
N0X8E,0X66,0X8D,0X66,0XAD,0X66,0X8E,0X5E,0XAE,0X66,0X8D,0X5E,0X8E,0X66,0X2F,0X76,
N0XFB,0XD7,0XFE,0XF7,0XFF,0XF7,0XEA,0X33,0X69,0X2C,0X8F,0X66,0X6D,0X5E,0XAD,0X66,
N0X0E,0X6E,0XFC,0XDF,0XFF,0XEF,0X29,0X22,0X73,0X5C,0XB4,0X4C,0XD4,0X4C,0XB4,0X54,
N0X4A,0X1A,0XFF,0XF7,0XFF,0XEF,0XFE,0XDF,0X09,0X34,0X2E,0X5E,0X8D,0X56,0XCD,0X5E,
N0X8C,0X5E,0X8C,0X56,0X6E,0X6E,0XFC,0XDF,0XFF,0XF7,0X49,0X2A,0XF4,0X64,0X35,0X4D,
N0X14,0X55,0X09,0X42,0XE7,0X49,0XFC,0XE7,0X0F,0X76,0X6E,0X66,0XAE,0X66,0XAC,0X56,
N0X8E,0X66,0XFB,0XDF,0X90,0X7D,0X4F,0X6E,0XAE,0X5E,0XAD,0X5E,0X8E,0X66,0X0F,0X6E,
N0XFC,0XD7,0XFF,0XF7,0XFF,0XF7,0XEA,0X3B,0X48,0X2C,0X6E,0X66,0XAE,0X5E,0X8E,0X5E,
N0X50,0X6E,0XFD,0XE7,0XFF,0XF7,0X29,0X32,0X11,0X6C,0X2A,0X32,0XFF,0XF7,0XFF,0XF7,
N0XFF,0XEF,0X6A,0X3C,0X2E,0X56,0X8E,0X5E,0XAE,0X5E,0X6D,0X5E,0XAD,0X66,0XAD,0X66,
N0X8C,0X5E,0X8D,0X5E,0X6D,0X5E,0X6F,0X6E,0X10,0X7E,0XFD,0XEF,0XFF,0XF7,0XFD,0XD7,
N0X4A,0X34,0X6E,0X66,0XAC,0X5E,0X8D,0X5E,0X8D,0X5E,0X8D,0X5E,0XAD,0X5E,0XAD,0X56,
N0X6E,0X5E,0X30,0X76,0XFB,0XD7,0XFE,0XF7,0X08,0X4A,0XDF,0XFF,0XDE,0XFF,0XFF,0XFF,
N0XFF,0XFF,0XFE,0XF7,0XFC,0XE7,0X4E,0X76,0X8C,0X5E,0X8A,0X56,0XEB,0X5E,0XCB,0X5E,
N0X8C,0X66,0XFA,0XD7,0X30,0X7E,0X4E,0X66,0X6D,0X5E,0XAE,0X66,0X4F,0X76,0XFC,0XE7,
N0XFE,0XFF,0XA7,0X49,0X56,0X4D,0XF5,0X5C,0X4A,0X2A,0XFF,0XF7,0XFF,0XF7,0XFE,0XE7,
N0XEA,0X3B,0X29,0X34,0X49,0X2C,0X69,0X2C,0X8A,0X34,0X49,0X2C,0X69,0X34,0X6A,0X3C,
N0X2B,0X44,0XFD,0XDF,0XFF,0XFF,0XFF,0XFF,0XFF,0XEF,0XFD,0XDF,0X4A,0X3C,0X89,0X34,
N0X48,0X34,0X4A,0X44,0XFD,0XE7,0XFF,0XF7,0X6A,0X32,0XD4,0X64,0XD5,0X4C,0XF5,0X44,
N0XF5,0X4C,0XB4,0X54,0X6B,0X22,0X09,0X22,0XFF,0XF7,0XFE,0XE7,0X2A,0X34,0X49,0X24,
N0X89,0X34,0X89,0X34,0X89,0X34,0X4A,0X44,0XFE,0XE7,0XFF,0XF7,0X09,0X32,0XD4,0X6C,
N0X35,0X4D,0XF5,0X54,0XE9,0X41,0X87,0X41,0XFE,0XF7,0X2B,0X4C,0X4B,0X34,0X49,0X2C,
N0X69,0X2C,0X49,0X3C,0XFC,0XDF,0XAB,0X53,0X2A,0X3C,0X49,0X34,0X49,0X2C,0X6A,0X34,
N0X2B,0X44,0XFC,0XD7,0XFF,0XFF,0XFF,0XFF,0XFE,0XEF,0XFD,0XE7,0X4A,0X3C,0X69,0X2C,
N0XAA,0X2C,0X4A,0X3C,0XFE,0XEF,0XFF,0XF7,0X2B,0X32,0X33,0X6C,0X52,0X5C,0X8B,0X2A,
N0XE9,0X29,0XFF,0XF7,0XFE,0XDF,0X2C,0X44,0X6A,0X3C,0X49,0X2C,0XAA,0X34,0X69,0X2C,
N0X69,0X34,0X89,0X34,0X8A,0X2C,0X8A,0X34,0X2A,0X34,0XEB,0X43,0XFF,0XFF,0XDF,0XFF,
N0XFF,0XEF,0XFE,0XDF,0X4B,0X3C,0X69,0X34,0X69,0X34,0X69,0X34,0X69,0X34,0X69,0X34,
N0X69,0X34,0X6A,0X34,0X2B,0X44,0XFC,0XDF,0XFF,0XFF,0XC8,0X49,0XC8,0X51,0X29,0X52,
N0XFF,0XFF,0XFE,0XEF,0XFD,0XE7,0XFB,0XD7,0X2D,0X66,0X6B,0X5E,0XCC,0X66,0XAB,0X5E,
N0X6A,0X56,0X6D,0X66,0XFA,0XCF,0X09,0X44,0X6A,0X3C,0X6A,0X34,0X49,0X34,0X0A,0X44,
N0XFE,0XEF,0XFF,0XFF,0XA8,0X49,0X56,0X35,0X56,0X4D,0XB4,0X64,0X2A,0X32,0XE9,0X31,
N0XFF,0XEF,0XFF,0XE7,0XFF,0XDF,0XFE,0XD7,0XFE,0XD7,0XFE,0XD7,0XFE,0XDF,0XFD,0XD7,
N0XFE,0XDF,0XFF,0XDF,0XFF,0XEF,0XDF,0XF7,0X09,0X4A,0XBF,0XFF,0XFF,0XF7,0XFE,0XDF,
N0XFD,0XD7,0XFD,0XD7,0XFE,0XDF,0XFF,0XF7,0XFF,0XEF,0X2A,0X2A,0XB4,0X64,0XD5,0X4C,
N0X57,0X4D,0X36,0X45,0X15,0X4D,0XB4,0X54,0X73,0X64,0X08,0X32,0XFF,0XEF,0XFF,0XDF,
N0XFE,0XD7,0XFD,0XD7,0XFE,0XD7,0XFE,0XD7,0XFF,0XE7,0XFF,0XF7,0XFF,0XF7,0X2A,0X32,
N0XF5,0X6C,0X35,0X4D,0X15,0X55,0X2A,0X3A,0XC8,0X41,0XFF,0XF7,0XFE,0XE7,0XFF,0XDF,
N0XFF,0XD7,0XFE,0XD7,0XFE,0XDF,0XFF,0XEF,0XFE,0XE7,0XFF,0XE7,0XFE,0XDF,0XFE,0XD7,
N0XFE,0XDF,0XFE,0XDF,0XFF,0XEF,0XFF,0XFF,0XC8,0X41,0XFF,0XFF,0XFF,0XF7,0XFE,0XDF,
N0XFE,0XD7,0XFE,0XD7,0XFE,0XDF,0XFF,0XEF,0XFF,0XF7,0X0B,0X2A,0X94,0X6C,0XD4,0X54,
N0XB3,0X54,0X73,0X6C,0X29,0X32,0XFF,0XEF,0XFF,0XEF,0XFD,0XD7,0XFE,0XD7,0XFE,0XD7,
N0XFE,0XD7,0XFE,0XD7,0XFE,0XD7,0XFE,0XCF,0XFE,0XD7,0XFF,0XDF,0XFF,0XE7,0XDF,0XF7,
N0XE9,0X49,0XE9,0X41,0XFF,0XF7,0XFF,0XE7,0XFE,0XD7,0XFE,0XD7,0XFE,0XD7,0XFE,0XD7,
N0XFE,0XDF,0XFE,0XD7,0XFE,0XDF,0XFE,0XE7,0XFF,0XF7,0XFF,0XFF,0XC8,0X49,0XC9,0X51,
N0XC8,0X41,0XFE,0XEF,0XB2,0X85,0XEF,0X75,0X6E,0X76,0X6C,0X66,0XAC,0X66,0X8B,0X56,
N0XCC,0X5E,0X8C,0X5E,0X6E,0X6E,0XFC,0XDF,0XFC,0XDF,0XFE,0XDF,0XFF,0XD7,0XFE,0XD7,
N0XFF,0XE7,0XFF,0XF7,0XDF,0XFF,0XC8,0X49,0X57,0X45,0X36,0X4D,0XD3,0X4C,0XCB,0X22,
N0X4A,0X2A,0XFF,0XF7,0XFF,0XF7,0XFF,0XEF,0XFF,0XEF,0XFF,0XEF,0XFF,0XE7,0XFF,0XEF,
N0XFF,0XEF,0XFF,0XF7,0XFF,0XEF,0XFF,0XEF,0XFF,0XFF,0X09,0X42,0XDF,0XF7,0XFF,0XF7,
N0XFF,0XEF,0XFF,0XEF,0XFF,0XEF,0XFF,0XEF,0XFF,0XFF,0XFF,0XF7,0X8B,0X32,0XD4,0X64,
N0X56,0X55,0X15,0X3D,0X56,0X45,0X15,0X3D,0X15,0X4D,0XB4,0X54,0X4A,0X2A,0XFF,0XF7,
N0XFF,0XEF,0XFF,0XEF,0XFF,0XEF,0XFF,0XF7,0XFF,0XEF,0XFF,0XF7,0XFF,0XFF,0XFF,0XF7,
N0X4B,0X2A,0XF5,0X64,0X36,0X4D,0XF5,0X4C,0X4A,0X22,0X29,0X32,0XFF,0XF7,0XFF,0XF7,
N0XFF,0XEF,0XFF,0XEF,0XFF,0XEF,0XFF,0XEF,0XFF,0XF7,0XFF,0XF7,0XFF,0XEF,0XFF,0XEF,
N0XFF,0XF7,0XFF,0XF7,0XFF,0XF7,0XFF,0XF7,0XDF,0XFF,0X09,0X42,0XDF,0XFF,0XFF,0XFF,
N0XFF,0XF7,0XFF,0XEF,0XFF,0XEF,0XFF,0XEF,0XFF,0XF7,0XFF,0XF7,0X4B,0X2A,0X94,0X5C,
N0XD4,0X4C,0X15,0X55,0XB4,0X54,0X6A,0X1A,0XFF,0XEF,0XFF,0XEF,0XFF,0XEF,0XFF,0XEF,
N0XFF,0XEF,0XFF,0XE7,0XFF,0XEF,0XFF,0XEF,0XFF,0XEF,0XFF,0XE7,0XFF,0XEF,0XFF,0XF7,
N0XFF,0XFF,0X08,0X42,0XE9,0X41,0XFF,0XFF,0XFF,0XF7,0XFF,0XF7,0XFF,0XEF,0XFF,0XEF,
N0XFF,0XEF,0XFF,0XEF,0XFF,0XEF,0XFF,0XF7,0XFF,0XF7,0XFF,0XF7,0XFF,0XFF,0XE9,0X41,
N0XE9,0X49,0XE7,0X41,0XFE,0XEF,0XF0,0X7D,0X4D,0X6E,0X8C,0X66,0X8B,0X66,0X8B,0X5E,
N0XCC,0X56,0XCD,0X56,0X8D,0X5E,0X0E,0X6E,0XFB,0XE7,0XFE,0XF7,0XFF,0XEF,0XFF,0XEF,
N0XFF,0XEF,0XFF,0XEF,0XFF,0XFF,0XDF,0XFF,0XC9,0X41,0X57,0X45,0X77,0X4D,0X35,0X4D,
N0XD3,0X4C,0XB4,0X5C,0X2A,0X1A,0X4A,0X2A,0X4A,0X2A,0X2A,0X2A,0X4A,0X2A,0X6A,0X2A,
N0X4A,0X2A,0X4A,0X2A,0X2A,0X2A,0X4A,0X2A,0X4A,0X2A,0X4A,0X2A,0X2A,0X2A,0X6A,0X2A,
N0X6A,0X2A,0X2A,0X2A,0X4A,0X2A,0X4A,0X2A,0X4A,0X2A,0X2A,0X2A,0X4A,0X2A,0X6B,0X1A,
N0XD4,0X54,0X56,0X45,0X97,0X45,0X76,0X45,0X76,0X45,0X15,0X3D,0X15,0X55,0XB3,0X5C,
N0X6A,0X22,0X2A,0X22,0X4A,0X2A,0X2A,0X2A,0X2A,0X2A,0X29,0X2A,0X4A,0X2A,0X2A,0X22,
N0X4B,0X22,0XCC,0X1A,0XF5,0X54,0X36,0X45,0X35,0X4D,0XF4,0X5C,0XB4,0X64,0X4A,0X22,
N0X4A,0X2A,0X49,0X22,0X49,0X2A,0X4A,0X2A,0X4A,0X2A,0X2A,0X2A,0X4A,0X2A,0X4A,0X2A,
N0X49,0X2A,0X49,0X2A,0X4A,0X32,0X2A,0X2A,0X0A,0X2A,0X4A,0X32,0X4B,0X32,0X4A,0X2A,
N0X4A,0X2A,0X09,0X22,0X29,0X2A,0X29,0X2A,0X69,0X2A,0X49,0X2A,0X4A,0X22,0X6C,0X1A,
N0XD5,0X54,0X16,0X4D,0X15,0X3D,0X35,0X4D,0XD4,0X54,0X6A,0X22,0X4A,0X22,0X69,0X22,
N0X49,0X22,0X4A,0X2A,0X2A,0X2A,0X4B,0X2A,0X2A,0X22,0X4A,0X2A,0X6A,0X2A,0X29,0X22,
N0X4A,0X2A,0X49,0X2A,0X49,0X2A,0X29,0X32,0X0A,0X32,0X2A,0X32,0X4A,0X2A,0X4A,0X2A,
N0X4A,0X2A,0X49,0X2A,0X49,0X2A,0X49,0X2A,0X49,0X2A,0X2A,0X2A,0X4A,0X2A,0X4A,0X2A,
N0X4B,0X32,0XE9,0X41,0X08,0X42,0XFD,0XEF,0XEF,0X75,0X6C,0X66,0XAB,0X5E,0XAB,0X5E,
N0XCC,0X5E,0XCC,0X56,0XCE,0X56,0X8F,0X66,0X29,0X3C,0XFD,0XEF,0X28,0X42,0X29,0X32,
N0X4A,0X2A,0X4A,0X22,0X6A,0X2A,0X4A,0X2A,0X0A,0X2A,0X2A,0X32,0XB8,0X4D,0XB8,0X4D,
N0X56,0X45,0X56,0X45,0X56,0X4D,0X15,0X4D,0XD4,0X54,0XD4,0X54,0XF4,0X4C,0XD4,0X4C,
N0XD4,0X4C,0XD4,0X4C,0XF5,0X4C,0XD4,0X4C,0XD4,0X54,0XD4,0X54,0XD4,0X4C,0XB4,0X4C,
N0XD4,0X54,0XB3,0X4C,0XD5,0X54,0XD5,0X4C,0XF4,0X4C,0XF4,0X4C,0X14,0X55,0X15,0X55,
N0X35,0X4D,0X77,0X4D,0X97,0X45,0XB8,0X45,0XD8,0X4D,0X97,0X45,0X97,0X4D,0X36,0X45,
N0X35,0X4D,0XF5,0X4C,0X15,0X55,0XF5,0X54,0XB4,0X54,0XD4,0X54,0XB3,0X4C,0X14,0X55,
N0X36,0X55,0XF5,0X44,0X15,0X45,0X77,0X4D,0X97,0X4D,0X77,0X45,0X36,0X4D,0X16,0X4D,
N0XF5,0X4C,0XF4,0X4C,0XF3,0X4C,0X14,0X55,0XD4,0X4C,0XD4,0X4C,0XD5,0X54,0XD4,0X54,
N0XD4,0X54,0XD4,0X4C,0XD4,0X4C,0XD4,0X4C,0XD4,0X54,0XF5,0X54,0XD5,0X4C,0XD5,0X4C,
N0XD4,0X4C,0XD4,0X4C,0XD5,0X54,0XF5,0X54,0XD4,0X4C,0XF4,0X4C,0X15,0X55,0X15,0X55,
N0X36,0X4D,0X36,0X45,0X97,0X45,0X77,0X3D,0X56,0X4D,0X56,0X4D,0X15,0X55,0X15,0X55,
N0XF4,0X4C,0XF4,0X4C,0XF4,0X4C,0XD4,0X4C,0XB4,0X54,0XD5,0X54,0XD4,0X54,0XD4,0X54,
N0XD4,0X54,0XD4,0X54,0XF4,0X4C,0XD4,0X4C,0XD4,0X54,0XD4,0X54,0XD4,0X4C,0XD4,0X4C,
N0XD4,0X54,0XD4,0X54,0XD4,0X4C,0XD4,0X4C,0XD4,0X54,0XD4,0X54,0XD4,0X4C,0XD4,0X4C,
N0XD4,0X44,0X73,0X54,0X0B,0X32,0X49,0X42,0XFC,0XEF,0XEF,0X7D,0X6C,0X66,0XCB,0X5E,
N0X8A,0X5E,0XAB,0X56,0XAC,0X56,0XA6,0X1C,0X69,0X34,0XFE,0XDF,0XFF,0XF7,0X29,0X32,
N0X73,0X5C,0XB4,0X54,0XB3,0X4C,0XF4,0X4C,0XF5,0X54,0X16,0X55,0X15,0X55,0XD9,0X4D,
N0XB8,0X45,0X77,0X45,0X77,0X3D,0X36,0X3D,0X56,0X3D,0X15,0X3D,0X15,0X3D,0X14,0X3D,
N0X15,0X3D,0X15,0X3D,0X15,0X3D,0X15,0X3D,0X15,0X3D,0XF5,0X3C,0XF5,0X44,0X16,0X3D,
N0X15,0X3D,0XF4,0X3C,0X15,0X3D,0XF5,0X3C,0X15,0X3D,0X14,0X3D,0X35,0X3D,0X35,0X3D,
N0X35,0X3D,0X76,0X3D,0X77,0X3D,0X98,0X3D,0XD9,0X4D,0XB8,0X45,0X98,0X45,0X77,0X3D,
N0X77,0X45,0X56,0X45,0X35,0X3D,0X15,0X3D,0X16,0X3D,0X16,0X45,0XF5,0X3C,0X14,0X3D,
N0X14,0X3D,0X36,0X3D,0X77,0X3D,0X36,0X35,0X97,0X45,0X77,0X45,0X77,0X45,0X57,0X45,
N0X37,0X45,0X16,0X3D,0X35,0X3D,0X14,0X3D,0X14,0X3D,0X15,0X3D,0X16,0X3D,0XD5,0X3C,
N0X15,0X45,0XF5,0X3C,0X15,0X3D,0X16,0X3D,0X15,0X35,0X15,0X3D,0XF5,0X3C,0X16,0X3D,
N0XF5,0X3C,0XF5,0X3C,0X15,0X3D,0XF5,0X3C,0XF5,0X3C,0X35,0X3D,0X15,0X35,0X56,0X45,
N0X15,0X3D,0X56,0X3D,0X97,0X45,0X77,0X3D,0X77,0X3D,0X77,0X45,0X36,0X45,0X36,0X3D,
N0X36,0X45,0X15,0X3D,0X15,0X3D,0X15,0X3D,0X15,0X3D,0XD5,0X3C,0XF5,0X3C,0X14,0X3D,
N0XF4,0X3C,0XF5,0X44,0XF5,0X44,0XF5,0X3C,0X15,0X35,0X15,0X3D,0XF5,0X34,0X15,0X3D,
N0X15,0X3D,0XF5,0X3C,0XF5,0X3C,0X15,0X3D,0X15,0X3D,0XF5,0X3C,0XF5,0X3C,0X15,0X3D,
N0XF4,0X34,0X15,0X35,0XD4,0X4C,0X2B,0X2A,0XE9,0X39,0XFE,0XF7,0XB0,0X85,0X4E,0X76,
N0X6D,0X66,0X6D,0X66,0X8D,0X66,0X6E,0X66,0X69,0X34,0XEA,0X3B,0XFF,0XE7,0XFF,0XEF,
N0X4A,0X2A,0XB4,0X4C,0XF5,0X44,0XF4,0X34,0X15,0X35,0X56,0X3D,0X36,0X3D,0X56,0X3D,
N0XD9,0X4D,0XB8,0X45,0XB8,0X45,0X97,0X45,0X97,0X45,0X57,0X3D,0X56,0X3D,0X36,0X3D,
N0X36,0X3D,0X36,0X3D,0X36,0X3D,0X36,0X3D,0X36,0X3D,0X36,0X3D,0X36,0X3D,0X36,0X3D,
N0X36,0X3D,0X36,0X3D,0X36,0X3D,0X36,0X3D,0X56,0X3D,0X36,0X3D,0X36,0X3D,0X56,0X3D,
N0X56,0X3D,0X56,0X3D,0X97,0X45,0XB8,0X45,0XB8,0X45,0XD9,0X4D,0XD9,0X4D,0XD9,0X4D,
N0XB8,0X45,0XB8,0X45,0X77,0X45,0X77,0X45,0X56,0X3D,0X56,0X3D,0X36,0X3D,0X36,0X3D,
N0X36,0X3D,0X36,0X3D,0X56,0X3D,0X56,0X3D,0X77,0X3D,0X97,0X45,0X97,0X45,0X97,0X45,
N0X77,0X45,0X77,0X45,0X77,0X45,0X56,0X3D,0X56,0X3D,0X56,0X3D,0X56,0X3D,0X36,0X3D,
N0X36,0X3D,0X36,0X3D,0X36,0X3D,0X36,0X3D,0X56,0X3D,0X56,0X3D,0X36,0X3D,0X36,0X3D,
N0X36,0X3D,0X36,0X3D,0X36,0X3D,0X36,0X3D,0X36,0X3D,0X36,0X3D,0X56,0X3D,0X56,0X3D,
N0X56,0X3D,0X56,0X3D,0X77,0X45,0XB7,0X45,0XB8,0X45,0X98,0X45,0X98,0X45,0X77,0X45,
N0X57,0X45,0X56,0X3D,0X36,0X3D,0X36,0X3D,0X36,0X3D,0X36,0X3D,0X36,0X3D,0X36,0X3D,
N0X36,0X3D,0X36,0X3D,0X36,0X45,0X36,0X3D,0X36,0X3D,0X56,0X3D,0X36,0X3D,0X36,0X3D,
N0X36,0X3D,0X36,0X3D,0X36,0X45,0X36,0X45,0X56,0X3D,0X56,0X3D,0X36,0X3D,0X36,0X3D,
N0X36,0X3D,0X36,0X3D,0X36,0X35,0X15,0X4D,0X4A,0X2A,0XE9,0X39,0XFF,0XFF,0X4B,0X53,
N0XAA,0X43,0X09,0X3C,0X09,0X3C,0XE9,0X3B,0XCA,0X43,0XFE,0XE7,0XFF,0XEF,0XFF,0XE7,
N0X6B,0X2A,0X73,0X54,0X15,0X4D,0X56,0X3D,0X76,0X3D,0X56,0X3D,0X57,0X45,0X36,0X45,
N0X77,0X45,0XD9,0X45,0XD9,0X45,0XD9,0X4D,0XB8,0X45,0XB8,0X45,0X98,0X45,0X97,0X45,
N0X77,0X45,0X77,0X45,0X77,0X45,0X77,0X45,0X77,0X45,0X77,0X45,0X77,0X45,0X77,0X45,
N0X77,0X45,0X77,0X45,0X77,0X45,0X77,0X45,0X77,0X45,0X97,0X45,0X77,0X45,0X77,0X45,
N0X97,0X45,0X97,0X45,0X97,0X45,0XB8,0X45,0XD8,0X4D,0XD9,0X45,0XF9,0X4D,0XF9,0X4D,
N0XD9,0X45,0XD9,0X4D,0XD9,0X45,0XB8,0X45,0X98,0X45,0X97,0X45,0X97,0X45,0X77,0X45,
N0X77,0X45,0X77,0X45,0X77,0X45,0X97,0X45,0X97,0X45,0XB8,0X45,0XD8,0X4D,0XB8,0X45,
N0XB8,0X45,0XB8,0X45,0XB8,0X45,0X97,0X45,0X97,0X45,0X97,0X45,0X77,0X45,0X77,0X45,
N0X77,0X45,0X77,0X45,0X77,0X45,0X77,0X45,0X77,0X45,0X77,0X45,0X77,0X45,0X77,0X45,
N0X77,0X45,0X77,0X45,0X77,0X45,0X77,0X45,0X77,0X45,0X77,0X45,0X77,0X45,0X97,0X45,
N0X97,0X45,0X97,0X45,0X97,0X45,0XB8,0X45,0XB8,0X4D,0XD8,0X4D,0XB9,0X4D,0XB9,0X45,
N0XB9,0X45,0X97,0X45,0X97,0X45,0X97,0X45,0X77,0X45,0X77,0X45,0X77,0X45,0X77,0X45,
N0X77,0X45,0X77,0X45,0X77,0X45,0X77,0X45,0X77,0X45,0X77,0X45,0X77,0X45,0X77,0X45,
N0X77,0X45,0X77,0X45,0X77,0X45,0X77,0X45,0X77,0X45,0X97,0X45,0X97,0X45,0X77,0X45,
N0X77,0X45,0X77,0X45,0X77,0X45,0X77,0X3D,0X15,0X4D,0X29,0X22,0X29,0X42,0XDF,0XFF,
N0XFF,0XFF,0XFF,0XF7,0XFF,0XEF,0XFE,0XE7,0XFE,0XEF,0XFF,0XF7,0XFF,0XF7,0XFF,0XF7,
N0X2A,0X22,0X93,0X5C,0X36,0X55,0X35,0X45,0X97,0X3D,0X97,0X3D,0X77,0X3D,0X77,0X45,
N0X97,0X45,0XB8,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XD8,0X4D,0XD9,0X4D,0XD8,0X4D,
N0XD8,0X4D,0XB8,0X4D,0XB8,0X4D,0XB8,0X4D,0XB8,0X4D,0XB8,0X4D,0XB8,0X4D,0XB8,0X4D,
N0XB8,0X45,0XB8,0X45,0XB8,0X4D,0XB8,0X4D,0XB8,0X4D,0XB8,0X4D,0XB8,0X4D,0XB8,0X4D,
N0XB8,0X4D,0XB8,0X4D,0XD8,0X4D,0XD8,0X4D,0XD8,0X4D,0XF9,0X4D,0XD9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XD9,0X4D,0XD8,0X4D,0XD8,0X4D,0XD8,0X4D,
N0XB8,0X4D,0XB8,0X4D,0XB8,0X4D,0XB8,0X4D,0XD8,0X4D,0XB8,0X4D,0XD8,0X4D,0XD9,0X4D,
N0XD9,0X4D,0XD9,0X4D,0XD9,0X4D,0XD8,0X4D,0XD8,0X4D,0XB8,0X45,0XB8,0X45,0XB8,0X45,
N0XB8,0X4D,0XB8,0X4D,0XB8,0X4D,0XB8,0X4D,0XB8,0X4D,0XB8,0X4D,0XB8,0X4D,0XB8,0X4D,
N0XB8,0X45,0XB8,0X45,0XB8,0X4D,0XB8,0X4D,0XB8,0X4D,0XB8,0X4D,0XB8,0X45,0XB8,0X45,
N0XB8,0X45,0XB8,0X45,0XD8,0X4D,0XD8,0X4D,0XD8,0X4D,0XD8,0X4D,0XD9,0X4D,0XD9,0X4D,
N0XD9,0X4D,0XD9,0X4D,0XD8,0X4D,0XD8,0X4D,0XB8,0X4D,0XB8,0X4D,0XB8,0X4D,0XB8,0X4D,
N0XB8,0X4D,0XB8,0X4D,0XB8,0X4D,0XB8,0X4D,0XB8,0X4D,0XB8,0X4D,0XB8,0X4D,0XB8,0X4D,
N0XB8,0X4D,0XB8,0X4D,0XB8,0X4D,0XB8,0X4D,0XB8,0X4D,0XB8,0X4D,0XB8,0X45,0XB8,0X45,
N0XB8,0X45,0XB8,0X4D,0XB8,0X4D,0X97,0X45,0X97,0X45,0X56,0X55,0X29,0X2A,0XE9,0X41,
N0XC8,0X41,0XC8,0X41,0XC7,0X41,0XE7,0X41,0XE7,0X41,0XE7,0X41,0XE7,0X41,0X09,0X42,
N0X8A,0X32,0X93,0X5C,0X35,0X55,0X56,0X45,0X77,0X45,0XD8,0X4D,0XD8,0X45,0XD8,0X4D,
N0XD8,0X4D,0XB8,0X4D,0XD8,0X4D,};
L 11 "app\game.c" 2
N#include "flappybird_column_bottom.c"
L 1 ".\app\RES\Pic\flappybird_column_bottom.c" 1
Nconst unsigned char gImage_flappybird_column_bottom[1638] = { /* 0X00,0X10,0X27,0X00,0X15,0X00,0X01,0X1B, */
N0XF9,0X4D,0XD7,0X65,0X67,0X22,0XCE,0X8C,0X0C,0X8D,0XAC,0X95,0X2C,0X9E,0X4C,0XA6,
N0XAF,0XB6,0X10,0XC7,0X30,0XC7,0X91,0XCF,0XD2,0XDF,0XF2,0XDF,0XF4,0XDF,0XD3,0XD7,
N0XB2,0XD7,0X50,0XC7,0X0F,0XBF,0X30,0XC7,0X8E,0XAE,0X2C,0XA6,0X2D,0XA6,0XCB,0X95,
N0X4A,0X85,0X4A,0X85,0XC8,0X74,0X87,0X6C,0X67,0X64,0X25,0X5C,0XE5,0X53,0X05,0X54,
N0XC4,0X53,0X06,0X5C,0XA7,0X5B,0XC9,0X5B,0X86,0X22,0X95,0X75,0X97,0X65,0XD8,0X5D,
N0X96,0X6D,0X68,0X2A,0X8A,0X63,0X87,0X63,0XC5,0X5B,0X05,0X5C,0XE4,0X5B,0XC4,0X5B,
N0XE5,0X63,0XC5,0X5B,0XC4,0X5B,0XC4,0X63,0XC4,0X63,0XC5,0X5B,0XC5,0X5B,0XE5,0X63,
N0XC4,0X5B,0XC4,0X5B,0XE5,0X63,0XC5,0X63,0XC5,0X5B,0XE6,0X63,0XA5,0X5B,0XC5,0X5B,
N0XE6,0X5B,0XC5,0X5B,0XC6,0X5B,0XE6,0X5B,0XE6,0X5B,0XC5,0X5B,0XE6,0X5B,0X06,0X64,
N0XE7,0X5B,0XA7,0X5B,0XA9,0X5B,0XA7,0X2A,0X54,0X75,0XB8,0X75,0X76,0X75,0X75,0X7D,
N0X06,0X32,0X29,0X63,0XA9,0X6B,0X87,0X63,0X87,0X5B,0XA7,0X63,0X87,0X63,0X87,0X6B,
N0X87,0X63,0X87,0X63,0X86,0X6B,0X86,0X63,0X87,0X63,0X87,0X63,0X87,0X63,0X88,0X63,
N0X87,0X63,0X67,0X63,0X88,0X63,0X88,0X63,0X67,0X63,0X88,0X63,0X88,0X63,0X88,0X63,
N0X87,0X63,0X87,0X63,0X87,0X63,0X87,0X5B,0XA7,0X63,0XA7,0X63,0XA6,0X5B,0XA7,0X5B,
N0X88,0X63,0X8A,0X63,0X06,0X2A,0X55,0X85,0X77,0X7D,0X89,0X2A,0X47,0X32,0X05,0X3A,
N0X44,0X42,0X23,0X3A,0X43,0X3A,0X42,0X3A,0X42,0X3A,0X43,0X42,0X43,0X42,0X43,0X42,
N0X63,0X42,0X42,0X42,0X42,0X42,0X42,0X42,0X42,0X3A,0X43,0X3A,0X43,0X3A,0X43,0X42,
N0X43,0X3A,0X43,0X42,0X43,0X3A,0X23,0X3A,0X63,0X3A,0X43,0X3A,0X42,0X32,0X22,0X32,
N0X42,0X32,0X42,0X32,0X42,0X32,0X62,0X3A,0X62,0X3A,0XA2,0X3A,0X62,0X32,0X63,0X3A,
N0X24,0X32,0XA7,0X3A,0X48,0X32,0X09,0X22,0X46,0X3A,0X04,0X32,0X88,0X63,0X86,0X5B,
N0X86,0X5B,0XC6,0X63,0XA5,0X63,0XA5,0X63,0XA5,0X5B,0X85,0X5B,0X86,0X5B,0X85,0X5B,
N0X65,0X63,0X85,0X63,0XA5,0X63,0XA5,0X5B,0XA6,0X5B,0X85,0X5B,0XA5,0X5B,0XC6,0X5B,
N0XA5,0X5B,0XA5,0X5B,0XA5,0X5B,0XC5,0X5B,0XA5,0X5B,0XC5,0X5B,0XC5,0X5B,0XE5,0X5B,
N0XE5,0X5B,0XE5,0X5B,0XE5,0X5B,0XE5,0X5B,0X25,0X5C,0XC4,0X53,0XE6,0X5B,0X86,0X5B,
N0XA9,0X63,0X8A,0X5B,0X27,0X32,0X05,0X4A,0X24,0X42,0XA7,0X63,0XA5,0X5B,0XE5,0X63,
N0XA3,0X5B,0XA3,0X5B,0XE4,0X63,0XE4,0X63,0XC4,0X5B,0XE5,0X63,0XC4,0X63,0XA4,0X5B,
N0XC4,0X63,0XC4,0X63,0XC4,0X5B,0XE5,0X63,0XA3,0X53,0XC4,0X5B,0X04,0X5C,0XC4,0X5B,
N0XA3,0X53,0XE4,0X5B,0XC4,0X53,0XC4,0X5B,0XE4,0X5B,0XE4,0X5B,0X04,0X5C,0X04,0X5C,
N0X04,0X5C,0X04,0X5C,0X03,0X54,0XC3,0X4B,0X44,0X5C,0XE4,0X53,0X06,0X5C,0XE7,0X63,
N0X88,0X5B,0X05,0X3A,0XC5,0X49,0X45,0X4A,0X55,0XDF,0X93,0XD7,0XD2,0XDF,0XD1,0XDF,
N0XF2,0XE7,0XF2,0XE7,0XD2,0XDF,0XB1,0XD7,0XB2,0XD7,0X71,0XD7,0X30,0XCF,0X30,0XCF,
N0XEF,0XBE,0XAE,0XB6,0XAE,0XB6,0X4D,0XAE,0X2C,0XA6,0X2C,0XA6,0XCB,0X95,0X89,0X8D,
N0X69,0X8D,0X28,0X85,0X07,0X7D,0X08,0X7D,0XA6,0X74,0X86,0X6C,0X86,0X6C,0X45,0X64,
N0X24,0X5C,0X24,0X5C,0X03,0X4C,0X03,0X4C,0X24,0X54,0X05,0X5C,0X85,0X53,0XA7,0X63,
N0X66,0X42,0XE6,0X51,0XE3,0X41,0X33,0XD7,0XB2,0XDF,0XB0,0XDF,0XF1,0XE7,0XF1,0XE7,
N0XF1,0XE7,0XD1,0XDF,0XB1,0XD7,0XD1,0XDF,0X70,0XCF,0X4F,0XC7,0X4F,0XC7,0X0F,0XC7,
N0XCD,0XB6,0XAD,0XB6,0X8D,0XAE,0X2B,0XA6,0X0B,0XA6,0XEA,0X9D,0XA9,0X95,0X89,0X8D,
N0X28,0X85,0XE7,0X7C,0XE7,0X7C,0XA6,0X74,0X86,0X6C,0XA6,0X6C,0X65,0X64,0X24,0X5C,
N0X04,0X54,0X24,0X54,0X23,0X54,0X03,0X4C,0X04,0X54,0X06,0X5C,0XA7,0X5B,0X45,0X42,
N0XE5,0X49,0X23,0X4A,0X32,0XD7,0XB1,0XDF,0XB0,0XDF,0XD0,0XE7,0XF1,0XE7,0XF1,0XE7,
N0XF1,0XDF,0XB0,0XDF,0XB1,0XDF,0X90,0XD7,0X4F,0XCF,0X6F,0XCF,0X2E,0XC7,0XAD,0XB6,
N0XAD,0XB6,0X8C,0XAE,0X4B,0XA6,0X4B,0XA6,0XEA,0X95,0XA9,0X8D,0XA9,0X8D,0X48,0X85,
N0X27,0X7D,0XE7,0X74,0XC6,0X6C,0X86,0X6C,0X86,0X6C,0X66,0X64,0X04,0X5C,0X24,0X5C,
N0X04,0X54,0X24,0X54,0X24,0X54,0X04,0X54,0XE6,0X5B,0XA7,0X63,0X24,0X42,0X04,0X4A,
N0X22,0X4A,0X52,0XDF,0XB1,0XDF,0XB0,0XDF,0XB0,0XDF,0XF1,0XE7,0XF1,0XE7,0XF1,0XE7,
N0XD0,0XDF,0XB1,0XDF,0X70,0XD7,0X4F,0XC7,0X4F,0XC7,0X0E,0XC7,0XAC,0XB6,0XAD,0XB6,
N0X8C,0XAE,0X4B,0XA6,0X2B,0XA6,0XEA,0X95,0XA9,0X8D,0XA9,0X8D,0X48,0X7D,0X07,0X7D,
N0XE7,0X74,0XC7,0X74,0X86,0X64,0X86,0X6C,0X65,0X64,0X04,0X5C,0X24,0X5C,0X04,0X54,
N0X04,0X54,0X04,0X54,0X05,0X54,0XE6,0X5B,0XA7,0X63,0X24,0X42,0X23,0X42,0X42,0X42,
N0X73,0XDF,0X91,0XDF,0XB1,0XDF,0X90,0XDF,0XF1,0XE7,0XF1,0XE7,0XF0,0XDF,0XD0,0XDF,
N0XB0,0XDF,0X90,0XD7,0X4F,0XC7,0X6F,0XC7,0X2E,0XBF,0XAD,0XB6,0XAD,0XB6,0X6C,0XAE,
N0X4B,0XA6,0X2B,0XA6,0XCA,0X95,0X89,0X8D,0XA9,0X8D,0X47,0X85,0X07,0X7D,0X07,0X75,
N0XC6,0X74,0XA5,0X6C,0X86,0X6C,0X65,0X64,0X04,0X5C,0X24,0X5C,0X04,0X5C,0X04,0X54,
N0X04,0X54,0X05,0X54,0XE6,0X5B,0XA7,0X63,0X24,0X42,0X23,0X42,0X42,0X42,0X73,0XDF,
N0X92,0XDF,0XB1,0XDF,0XB0,0XDF,0XF1,0XE7,0XF1,0XE7,0XF0,0XDF,0XAF,0XDF,0XB0,0XDF,
N0X90,0XCF,0X4F,0XC7,0X4F,0XC7,0X2E,0XBF,0XCD,0XB6,0XAD,0XB6,0X6C,0XAE,0X2B,0XA6,
N0X2B,0XA6,0XCA,0X95,0X89,0X8D,0X89,0X8D,0X27,0X85,0X07,0X7D,0X06,0X7D,0XC5,0X74,
N0XA5,0X6C,0XA5,0X6C,0X64,0X64,0X03,0X5C,0X04,0X5C,0X04,0X5C,0X04,0X54,0X04,0X54,
N0X05,0X54,0XE6,0X5B,0XA7,0X63,0X24,0X42,0X04,0X42,0X22,0X42,0X52,0XD7,0XB2,0XDF,
N0XB1,0XDF,0XD1,0XE7,0XF1,0XE7,0XF0,0XE7,0XEF,0XE7,0XAE,0XDF,0XAF,0XDF,0X8F,0XCF,
N0X4E,0XC7,0X4E,0XC7,0X0D,0XBF,0XAC,0XB6,0XAD,0XB6,0X6C,0XAE,0X4B,0XA6,0X2B,0XA6,
N0XC9,0X95,0XA8,0X8D,0XA8,0X8D,0X27,0X85,0X27,0X7D,0X06,0X7D,0XC5,0X6C,0X85,0X6C,
N0XA5,0X6C,0X64,0X64,0X23,0X5C,0X23,0X5C,0X03,0X54,0X23,0X54,0X24,0X54,0X04,0X54,
N0XE6,0X5B,0XA7,0X63,0X24,0X42,0X04,0X4A,0X22,0X42,0X32,0XD7,0XB1,0XDF,0XB0,0XDF,
N0XD1,0XE7,0XF1,0XE7,0XF1,0XEF,0XEF,0XE7,0XAF,0XDF,0XAF,0XD7,0X8F,0XCF,0X4E,0XC7,
N0X4E,0XC7,0X0E,0XBF,0XAC,0XB6,0XAD,0XB6,0X6C,0XAE,0X2B,0XA6,0X2B,0XA6,0XC9,0X95,
N0XA8,0X8D,0XA8,0X8D,0X27,0X85,0X27,0X7D,0X07,0X7D,0XA5,0X6C,0X85,0X6C,0XA5,0X6C,
N0X64,0X64,0X23,0X5C,0X23,0X5C,0X22,0X54,0X23,0X54,0X23,0X54,0X04,0X54,0XC6,0X5B,
N0XA7,0X63,0X25,0X42,0XE4,0X49,0X22,0X4A,0X52,0XD7,0XB1,0XD7,0XD0,0XD7,0XF0,0XDF,
N0XF1,0XEF,0XF1,0XE7,0XF0,0XE7,0XB0,0XDF,0XB0,0XD7,0X90,0XCF,0X4F,0XC7,0X4F,0XC7,
N0X2E,0XC7,0XCD,0XBE,0XAD,0XB6,0X6C,0XAE,0X2B,0XA6,0X2B,0XA6,0XCA,0X95,0X89,0X8D,
N0XA9,0X8D,0X47,0X85,0X27,0X7D,0X07,0X7D,0XA6,0X6C,0XA5,0X6C,0XA6,0X6C,0X44,0X64,
N0X04,0X5C,0X24,0X5C,0X03,0X54,0X23,0X54,0X03,0X54,0X05,0X5C,0XC6,0X5B,0X88,0X63,
N0X05,0X42,0XE5,0X49,0X23,0X42,0X52,0XDF,0XB0,0XD7,0XD0,0XDF,0XD0,0XDF,0XF2,0XEF,
N0XF2,0XE7,0XF2,0XE7,0XB1,0XDF,0XB1,0XD7,0X70,0XCF,0X2F,0XC7,0X2F,0XC7,0X0E,0XC7,
N0XCD,0XBE,0XAD,0XB6,0X6C,0XAE,0X2B,0XA6,0X2B,0XA6,0XCA,0X9D,0X89,0X95,0XA9,0X8D,
N0X28,0X85,0X07,0X7D,0X07,0X7D,0XA6,0X74,0XA6,0X6C,0XA6,0X6C,0X45,0X64,0X04,0X5C,
N0X24,0X5C,0X03,0X54,0X23,0X54,0X04,0X54,0XE5,0X5B,0XC6,0X63,0X88,0X63,0X05,0X42,
N0X05,0X42,0X24,0X42,0X33,0XDF,0X92,0XDF,0XD1,0XE7,0XD0,0XDF,0XF2,0XEF,0XF2,0XE7,
N0XB1,0XE7,0XB1,0XDF,0X90,0XDF,0X70,0XD7,0X4F,0XD7,0X2F,0XCF,0XEE,0XC6,0XAD,0XBE,
N0XAE,0XBE,0X6D,0XAE,0X2C,0XA6,0X2C,0XA6,0XEB,0X9D,0X8A,0X95,0X89,0X8D,0X28,0X85,
N0XE7,0X7C,0X07,0X7D,0XC6,0X74,0X85,0X6C,0X86,0X6C,0X45,0X64,0X04,0X5C,0X24,0X5C,
N0X03,0X54,0X24,0X5C,0XE4,0X53,0XC5,0X5B,0XC7,0X63,0X88,0X63,0X45,0X42,0XE6,0X41,
N0X45,0X4A,0X14,0XDF,0X53,0XDF,0XB2,0XE7,0XB2,0XE7,0XD3,0XEF,0XD4,0XEF,0X73,0XDF,
N0X93,0XDF,0X92,0XDF,0X71,0XDF,0X31,0XD7,0XF0,0XCE,0XD0,0XC6,0XD0,0XC6,0X8F,0XBE,
N0X4E,0XAE,0X0D,0XA6,0X0D,0XAE,0XCC,0X9D,0X8B,0X95,0X8B,0X95,0X2A,0X8D,0XE9,0X84,
N0X09,0X85,0XA8,0X7C,0X87,0X74,0X87,0X74,0X26,0X64,0XE5,0X5B,0X05,0X5C,0XE4,0X5B,
N0XE5,0X5B,0XC5,0X5B,0XA6,0X5B,0XA7,0X63,0X88,0X63,0X25,0X42,0XE7,0X41,0XE5,0X41,
N0X74,0XD6,0X35,0XE7,0XD2,0XD6,0X33,0XDF,0X95,0XE7,0X55,0XDF,0X96,0XE7,0XB6,0XEF,
N0XB6,0XEF,0X95,0XEF,0X75,0XE7,0X55,0XDF,0X55,0XDF,0X55,0XDF,0X75,0XE7,0X55,0XDF,
N0X14,0XD7,0X14,0XD7,0XB3,0XCE,0X72,0XC6,0X71,0XBE,0X30,0XB6,0XCF,0XAD,0XCF,0XAD,
N0X8E,0XA5,0X4D,0X95,0X2D,0X95,0XEC,0X8C,0X8B,0X84,0XAB,0X84,0X8B,0X7C,0X4A,0X74,
N0X4B,0X74,0XEA,0X6B,0X89,0X6B,0X4A,0X6B,0X26,0X42,0XE8,0X41,0XE7,0X41,0X25,0X42,
N0X24,0X42,0X43,0X42,0X43,0X3A,0X64,0X42,0X65,0X42,0X24,0X3A,0X44,0X3A,0X44,0X42,
N0X44,0X3A,0X44,0X3A,0X44,0X3A,0X44,0X3A,0X44,0X3A,0X44,0X3A,0X24,0X3A,0X24,0X3A,
N0X45,0X42,0X44,0X3A,0X44,0X3A,0X65,0X42,0X44,0X3A,0X44,0X3A,0X65,0X3A,0X44,0X3A,
N0X44,0X3A,0X65,0X3A,0X45,0X3A,0X25,0X3A,0X45,0X3A,0X45,0X32,0X24,0X32,0X46,0X3A,
N0X26,0X3A,0X06,0X3A,0X47,0X42,0XC6,0X39,0XC9,0X31,0X09,0X3A,0X48,0X3A,0X47,0X3A,
N0X26,0X32,0X67,0X3A,0X07,0X2A,0X68,0X3A,0X48,0X32,0X47,0X32,0X47,0X32,0X47,0X32,
N0X67,0X32,0X68,0X32,0X67,0X32,0X47,0X32,0X68,0X3A,0X68,0X3A,0X48,0X32,0X68,0X3A,
N0X48,0X32,0X48,0X32,0X48,0X32,0X47,0X32,0X27,0X32,0X47,0X32,0X27,0X32,0X27,0X32,
N0X28,0X32,0X27,0X32,0X07,0X2A,0X27,0X2A,0X68,0X32,0X68,0X32,0X48,0X32,0X48,0X32,
N0X07,0X2A,0X08,0X32,0X08,0X32,};
L 12 "app\game.c" 2
N#include "flappybird_column_middle.c"
L 1 ".\app\RES\Pic\flappybird_column_middle.c" 1
Nconst unsigned char gImage_flappybird_column_middle[490] = { /* 0X00,0X10,0X23,0X00,0X07,0X00,0X01,0X1B, */
N0X62,0X42,0X0B,0X95,0X49,0X8D,0XA9,0X95,0X2B,0XA6,0X2B,0XA6,0X8D,0XB6,0XEE,0XC6,
N0X0E,0XC7,0X6F,0XD7,0XD0,0XDF,0XD0,0XDF,0XF1,0XE7,0XB0,0XDF,0XB1,0XDF,0X6F,0XD7,
N0X0E,0XC7,0X0E,0XC7,0XAD,0XB6,0X2B,0XA6,0X2B,0XA6,0XA9,0X95,0X48,0X85,0X68,0X85,
N0XC7,0X74,0XA6,0X6C,0XA6,0X6C,0X24,0X5C,0X04,0X54,0X24,0X54,0X24,0X54,0X24,0X54,
N0X04,0X54,0XE6,0X5B,0X63,0X3A,0X42,0X42,0X0B,0X95,0X49,0X8D,0XA9,0X95,0X2B,0XA6,
N0X2B,0XA6,0XAD,0XBE,0X0E,0XCF,0X0E,0XC7,0X6F,0XD7,0XB0,0XDF,0XD0,0XDF,0XF1,0XE7,
N0XB0,0XDF,0XB1,0XDF,0X6F,0XD7,0X0E,0XC7,0X0E,0XC7,0XAD,0XBE,0X4B,0XA6,0X2B,0XA6,
N0XC9,0X95,0X68,0X85,0X68,0X85,0XC7,0X74,0XA6,0X6C,0XA6,0X6C,0X24,0X5C,0X04,0X54,
N0X24,0X54,0X24,0X54,0X24,0X54,0X04,0X54,0XE6,0X5B,0X63,0X3A,0X42,0X42,0X0B,0X95,
N0X49,0X8D,0XA9,0X95,0X2B,0XA6,0X2B,0XA6,0XAD,0XBE,0X2F,0XCF,0X2E,0XCF,0X6F,0XD7,
N0XB0,0XDF,0XD0,0XDF,0XF1,0XE7,0XB0,0XDF,0XB1,0XDF,0X6F,0XD7,0XEE,0XC6,0X0E,0XC7,
N0XAD,0XB6,0X2B,0XA6,0X2B,0XA6,0XC9,0X95,0X68,0X85,0X68,0X85,0XC7,0X74,0XA6,0X6C,
N0XA6,0X6C,0X24,0X5C,0X04,0X54,0X24,0X54,0X24,0X54,0X24,0X54,0X04,0X54,0XE6,0X5B,
N0X63,0X3A,0X62,0X42,0X0C,0X95,0X49,0X8D,0XA9,0X95,0X2B,0XA6,0X2B,0XA6,0XAD,0XBE,
N0X0E,0XCF,0X0E,0XC7,0X6F,0XD7,0XB0,0XDF,0XD0,0XDF,0XF1,0XE7,0XB0,0XDF,0XB1,0XDF,
N0X6F,0XD7,0X0E,0XC7,0X0E,0XC7,0XAD,0XBE,0X2B,0XA6,0X2B,0XA6,0XA9,0X95,0X48,0X85,
N0X68,0X85,0XC7,0X74,0XA6,0X6C,0XA6,0X6C,0X24,0X5C,0X04,0X54,0X24,0X54,0X24,0X54,
N0X24,0X54,0X04,0X54,0XE6,0X5B,0X63,0X3A,0X62,0X42,0X0B,0X95,0X49,0X8D,0XA9,0X95,
N0X2B,0XA6,0X2B,0XA6,0X8D,0XBE,0X0E,0XC7,0X0E,0XC7,0X6F,0XD7,0XD0,0XDF,0XD0,0XDF,
N0XF1,0XE7,0XB0,0XDF,0XB1,0XDF,0X6F,0XD7,0X0E,0XC7,0X0E,0XC7,0XAD,0XBE,0X4B,0XA6,
N0X2B,0XA6,0XC9,0X95,0X68,0X85,0X68,0X85,0XC7,0X74,0XA6,0X6C,0XA6,0X6C,0X24,0X5C,
N0X04,0X54,0X24,0X54,0X24,0X54,0X24,0X54,0X04,0X54,0XE6,0X5B,0X63,0X3A,0X42,0X42,
N0XEB,0X8C,0X29,0X8D,0XA9,0X95,0X2B,0XA6,0X2B,0XA6,0X8D,0XBE,0X0E,0XC7,0X0E,0XC7,
N0X6F,0XD7,0XD0,0XDF,0XD0,0XDF,0XF1,0XE7,0XB0,0XDF,0XB1,0XDF,0X6F,0XD7,0X2E,0XCF,
N0X2E,0XC7,0XAD,0XBE,0X4B,0XA6,0X2B,0XA6,0XA9,0X95,0X48,0X85,0X68,0X85,0XC7,0X74,
N0XA6,0X6C,0XA6,0X6C,0X24,0X5C,0X04,0X54,0X24,0X54,0X24,0X54,0X24,0X54,0X04,0X54,
N0XE6,0X5B,0X63,0X3A,0X42,0X42,0XEB,0X8C,0X29,0X8D,0XA9,0X95,0X2B,0XA6,0X2B,0XA6,
N0XAD,0XBE,0X0E,0XC7,0X0E,0XC7,0X6F,0XD7,0XB0,0XDF,0XD0,0XDF,0XF1,0XE7,0XB0,0XDF,
N0XB1,0XDF,0X6F,0XD7,0X0E,0XC7,0X0E,0XC7,0XAD,0XBE,0X2B,0XA6,0X2B,0XA6,0XA9,0X95,
N0X48,0X85,0X48,0X85,0XC7,0X74,0XA6,0X6C,0XA6,0X6C,0X24,0X5C,0X04,0X54,0X24,0X54,
N0X24,0X54,0X24,0X54,0X04,0X54,0XE6,0X5B,0X63,0X3A,};
L 13 "app\game.c" 2
N#include "flappybird_gameover.c"
L 1 ".\app\RES\Pic\flappybird_gameover.c" 1
Nconst unsigned char gImage_flappybird_gameover[7830] = { /* 0X00,0X10,0X87,0X00,0X1D,0X00,0X01,0X1B, */
N0XF9,0X4D,0XD8,0X55,0XD9,0X5D,0X57,0X6D,0X2A,0X32,0XE8,0X41,0X08,0X4A,0XE8,0X49,
N0XE8,0X49,0X09,0X4A,0XC7,0X49,0XE8,0X49,0X08,0X4A,0XC8,0X41,0XE8,0X41,0XE8,0X49,
N0X09,0X4A,0X09,0X3A,0X4B,0X2A,0X77,0X6D,0XFA,0X55,0XF9,0X45,0XF9,0X4D,0XF9,0X55,
N0XFA,0X4D,0XFA,0X4D,0XFA,0X4D,0XFA,0X4D,0XFA,0X4D,0XFA,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XFA,0X4D,0XFA,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XFA,0X4D,0XD9,0X4D,0XD9,0X4D,0X1A,0X4E,0XB9,0X4D,0XDA,0X55,0XFA,0X4D,0XF9,0X45,
N0XF9,0X4D,0XFA,0X4D,0XDA,0X4D,0XFA,0X4D,0XF9,0X45,0X19,0X46,0X19,0X4E,0XF9,0X45,
N0XFA,0X4D,0XFA,0X4D,0XF9,0X45,0XFA,0X4D,0XFA,0X4D,0XDA,0X4D,0XFA,0X4D,0XF9,0X45,
N0X19,0X4E,0XD9,0X45,0XFA,0X4D,0XD9,0X45,0XFA,0X4D,0XF9,0X55,0X97,0X5D,0X56,0X75,
N0X29,0X3A,0XE8,0X49,0XE8,0X49,0XE8,0X41,0XE8,0X49,0XE8,0X49,0XE9,0X41,0XE9,0X41,
N0XC8,0X49,0X29,0X42,0X37,0X7D,0X99,0X65,0XDA,0X55,0XDA,0X4D,0XFA,0X45,0X1A,0X46,
N0X1A,0X46,0XFA,0X45,0XFA,0X4D,0XFA,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0X19,0X46,
N0XF9,0X45,0X19,0X46,0XFA,0X4D,0XDA,0X4D,0XFA,0X4D,0XD9,0X45,0XF9,0X4D,0XF9,0X4D,
N0XFA,0X4D,0XD9,0X45,0XFA,0X4D,0XFA,0X4D,0XD9,0X4D,0XF9,0X55,0XDA,0X4D,0XDA,0X4D,
N0XD9,0X55,0XD9,0X4D,0X1A,0X4E,0X19,0X46,0XF8,0X45,0X19,0X4E,0XD9,0X45,0X1A,0X56,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XFB,0X4D,0XDA,0X45,0XFA,0X4D,0XD8,0X4D,
N0XD8,0X55,0X77,0X65,0X8B,0X22,0XFF,0XF7,0XDF,0XFF,0XDE,0XFF,0XBD,0XFF,0XBE,0XFF,
N0XBE,0XFF,0XBD,0XFF,0XBE,0XFF,0XDE,0XFF,0XDE,0XFF,0XDE,0XFF,0XBE,0XFF,0XBF,0XFF,
N0X09,0X3A,0X4B,0X32,0X78,0X6D,0XB9,0X4D,0X1A,0X46,0XF9,0X4D,0XF9,0X4D,0XFA,0X4D,
N0XFA,0X4D,0XFA,0X45,0XFA,0X4D,0XFA,0X4D,0XFA,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XFA,0X4D,0XFA,0X4D,0XFA,0X4D,0XFA,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XD9,0X4D,
N0XFA,0X4D,0X19,0X4E,0XF9,0X4D,0X1A,0X56,0XD9,0X4D,0XD9,0X4D,0XFA,0X5D,0XD9,0X55,
N0XF9,0X5D,0XB9,0X55,0X99,0X55,0XF9,0X55,0XF8,0X55,0XD8,0X55,0XF9,0X55,0XD9,0X4D,
N0XFA,0X4D,0X1A,0X4E,0XD9,0X45,0XFA,0X4D,0XDA,0X4D,0XF9,0X4D,0X1A,0X4E,0XF9,0X45,
N0XF9,0X45,0XF9,0X4D,0X1A,0X56,0XB8,0X4D,0X98,0X55,0X97,0X6D,0X8B,0X22,0XFF,0XF7,
N0XDF,0XFF,0XDE,0XFF,0XDE,0XFF,0XDE,0XFF,0XDE,0XFF,0XDF,0XFF,0XDF,0XFF,0XDE,0XFF,
N0XDF,0XFF,0X6C,0X2A,0X78,0X6D,0XB9,0X5D,0XD9,0X55,0XF9,0X45,0X1A,0X4E,0XFA,0X45,
N0XFA,0X45,0XFA,0X4D,0XFA,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X45,0X19,0X4E,
N0X1A,0X4E,0XFA,0X45,0XDA,0X4D,0XD9,0X55,0XD9,0X5D,0XB9,0X55,0XB8,0X55,0XD9,0X55,
N0XB9,0X55,0X98,0X55,0XB9,0X5D,0X98,0X55,0XD9,0X55,0XD9,0X4D,0XDA,0X4D,0XFA,0X55,
N0XF9,0X4D,0XD9,0X45,0XF9,0X45,0X19,0X4E,0XF9,0X4D,0X1A,0X4E,0XD9,0X4D,0XFA,0X4D,
N0XF9,0X4D,0XD8,0X45,0X1A,0X4E,0XDA,0X45,0XFB,0X4D,0X1A,0X4E,0XF9,0X4D,0XB8,0X5D,
N0X36,0X75,0X4B,0X32,0XFF,0XFF,0XBE,0XFF,0XDC,0XFF,0XBB,0XFF,0XBB,0XFF,0XBB,0XFF,
N0XBB,0XFF,0XDB,0XFF,0XBB,0XFF,0XBB,0XFF,0XBB,0XFF,0X9B,0XFF,0XDE,0XFF,0XE8,0X39,
N0X2B,0X2A,0X78,0X75,0XB8,0X55,0X19,0X4E,0XD9,0X45,0XFA,0X4D,0XFA,0X4D,0XFA,0X4D,
N0XFA,0X45,0XFA,0X45,0XFA,0X4D,0XFA,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XFA,0X4D,
N0XFA,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XFA,0X4D,0XFA,0X4D,0XFA,0X4D,
N0XFA,0X4D,0XFA,0X4D,0XFA,0X4D,0XFA,0X4D,0XFA,0X4D,0XF9,0X4D,0XD9,0X4D,0XFA,0X4D,
N0X1A,0X4E,0XD8,0X3D,0X19,0X46,0XF9,0X4D,0XB8,0X55,0X98,0X65,0X77,0X6D,0X57,0X75,
N0X78,0X75,0X98,0X75,0X58,0X6D,0X57,0X6D,0X78,0X6D,0X98,0X6D,0XB9,0X65,0X98,0X55,
N0XB8,0X4D,0X1A,0X4E,0XFA,0X4D,0XFA,0X4D,0XFA,0X4D,0XD9,0X45,0X19,0X46,0X3A,0X4E,
N0XF9,0X4D,0XB8,0X4D,0XB8,0X5D,0X77,0X65,0X36,0X7D,0X2A,0X32,0XFF,0XFF,0XDE,0XFF,
N0XDB,0XFF,0XBA,0XFF,0X9A,0XFF,0XBB,0XFF,0XDB,0XFF,0XDB,0XFF,0XBD,0XFF,0XFF,0XFF,
N0X2A,0X2A,0X57,0X75,0X78,0X65,0XF9,0X5D,0XF9,0X4D,0XF9,0X45,0XFA,0X4D,0XFA,0X4D,
N0XFA,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X45,0XF9,0X4D,0XF9,0X55,0XB8,0X4D,
N0X1A,0X4E,0XDA,0X55,0X58,0X65,0X78,0X75,0X77,0X6D,0X77,0X6D,0X77,0X65,0X77,0X6D,
N0X78,0X75,0X57,0X6D,0X77,0X6D,0XB8,0X65,0XD9,0X55,0XFA,0X4D,0XD9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0X1A,0X4E,0XB9,0X45,0XFA,0X4D,0XFA,0X4D,0XD9,0X4D,0XD9,0X4D,0XFA,0X4D,
N0XFA,0X4D,0XD9,0X4D,0XDA,0X4D,0XDA,0X4D,0XB8,0X45,0X77,0X65,0X36,0X6D,0X4B,0X32,
N0XDF,0XFF,0XDD,0XFF,0XBB,0XFF,0X4F,0XDD,0X2E,0XE5,0X2E,0XE5,0X2E,0XE5,0X2E,0XE5,
N0X4E,0XE5,0X4F,0XE5,0X4F,0XE5,0X2E,0XED,0X50,0XE5,0XBD,0XFF,0X09,0X42,0X6C,0X32,
N0X78,0X6D,0XD8,0X5D,0X19,0X56,0XFA,0X4D,0XFA,0X45,0XFA,0X4D,0XF9,0X45,0X19,0X46,
N0XF9,0X45,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X45,0XFA,0X4D,0XFA,0X4D,0XFA,0X4D,
N0XFA,0X4D,0XFA,0X4D,0XFA,0X4D,0XFA,0X4D,0XFA,0X4D,0XFA,0X4D,0XFA,0X4D,0XFA,0X4D,
N0XFA,0X4D,0XFA,0X4D,0XFA,0X4D,0XFA,0X4D,0XF9,0X4D,0XFA,0X4D,0XF9,0X4D,0XF9,0X45,
N0X3A,0X46,0X39,0X46,0XF8,0X55,0X77,0X65,0X8B,0X22,0X4B,0X2A,0X4A,0X2A,0X6A,0X2A,
N0X4A,0X22,0X4B,0X2A,0X6C,0X32,0X4B,0X22,0X4A,0X22,0X8B,0X1A,0X98,0X6D,0XF9,0X5D,
N0XD9,0X45,0XF9,0X45,0XFA,0X4D,0XF9,0X45,0X19,0X4E,0XF9,0X45,0XF9,0X4D,0XD9,0X45,
N0XF9,0X5D,0X77,0X65,0X6B,0X22,0X29,0X32,0XFF,0XFF,0XFD,0XFF,0XBB,0XFF,0X6E,0XDD,
N0X4D,0XE5,0X4E,0XE5,0X6F,0XED,0X4E,0XE5,0X4E,0XDD,0X70,0XD5,0XDC,0XFF,0XFF,0XFF,
N0X6B,0X2A,0X6B,0X1A,0X77,0X65,0XD9,0X55,0XF9,0X4D,0XFA,0X4D,0XFA,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X45,0XFA,0X4D,0XF9,0X4D,0XB8,0X4D,0XF9,0X55,0XD9,0X55,
N0X98,0X5D,0X8C,0X2A,0X2A,0X2A,0X2A,0X22,0X6A,0X2A,0X6A,0X22,0X8B,0X2A,0X2A,0X22,
N0X6B,0X2A,0X6B,0X22,0X6B,0X12,0X97,0X6D,0XB8,0X5D,0XF9,0X55,0X19,0X4E,0XF9,0X4D,
N0XFA,0X4D,0XFA,0X4D,0XFA,0X4D,0XB9,0X4D,0XFA,0X55,0XFA,0X4D,0XF9,0X4D,0XD9,0X45,
N0XFA,0X4D,0XD9,0X55,0XD9,0X4D,0X1A,0X56,0X0A,0X3A,0X2A,0X3A,0XFF,0XFF,0XFD,0XFF,
N0X2E,0XDD,0X2B,0XED,0X0A,0XED,0X2A,0XF5,0X0B,0XFD,0X2B,0XFD,0X0A,0XF5,0X0A,0XED,
N0X2B,0XF5,0X2B,0XFD,0X0A,0XF5,0X2D,0XED,0XDD,0XFF,0X09,0X3A,0X2B,0X22,0X57,0X6D,
N0XB7,0X5D,0XF8,0X4D,0XD8,0X4D,0X19,0X4E,0X19,0X46,0X19,0X46,0X19,0X46,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XFA,0X4D,0XFA,0X4D,0XFA,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XD9,0X4D,0XF9,0X4D,0X19,0X4E,0XF8,0X45,
N0XF9,0X4D,0X97,0X5D,0X6A,0X2A,0XFF,0XF7,0XFF,0XFF,0XDF,0XF7,0XFF,0XF7,0XFF,0XFF,
N0XDF,0XF7,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XF7,0X6A,0X22,0XB7,0X5D,0X1A,0X56,
N0XF9,0X4D,0XF9,0X4D,0X19,0X4E,0XD9,0X4D,0XDA,0X55,0XBA,0X4D,0XF9,0X55,0XB8,0X5D,
N0X4A,0X22,0XFF,0XF7,0XFF,0XFF,0XFD,0XFF,0X2E,0XDD,0X4C,0XF5,0X2A,0XF5,0X29,0XF5,
N0X2B,0XF5,0X0A,0XF5,0XE9,0XF4,0X4A,0XFD,0X4A,0XF5,0X0C,0XD5,0XFD,0XFF,0XFF,0XFF,
N0XFF,0XF7,0X6C,0X2A,0XB8,0X5D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0XFA,0X4D,0XFA,0X4D,0XF9,0X4D,0X19,0X4E,0XF9,0X55,0X98,0X65,0X6B,0X1A,
N0XFF,0XEF,0XFF,0XFF,0XFF,0XFF,0XFF,0XF7,0XFF,0XF7,0XFF,0XF7,0XFF,0XFF,0XFF,0XF7,
N0XFF,0XF7,0XFF,0XF7,0X6A,0X3A,0X6A,0X22,0XB7,0X5D,0XD9,0X45,0XFA,0X4D,0XFA,0X4D,
N0XD9,0X45,0X1A,0X4E,0XFA,0X4D,0XD9,0X4D,0XF9,0X4D,0X19,0X4E,0XF9,0X4D,0XFA,0X4D,
N0XB8,0X4D,0XD8,0X4D,0XD9,0X4D,0XC9,0X51,0XE8,0X51,0XDE,0XFF,0XDA,0XFF,0X6C,0XF5,
N0X29,0XFD,0X29,0XFD,0X09,0XFD,0XE9,0XFC,0X09,0XFD,0X29,0XFD,0X08,0XFD,0X09,0XFD,
N0X09,0XFD,0XE8,0XFC,0X2C,0XF5,0XDC,0XFF,0XE9,0X39,0X4B,0X3A,0X56,0X7D,0XB7,0X6D,
N0X97,0X65,0XB8,0X65,0XB8,0X65,0XB8,0X5D,0XD8,0X5D,0XB7,0X65,0XB7,0X65,0XB8,0X65,
N0XB8,0X65,0XB8,0X65,0XB8,0X65,0XB8,0X65,0XB8,0X65,0XB8,0X65,0XB8,0X65,0XB8,0X65,
N0XB8,0X65,0XB8,0X65,0XB8,0X65,0XB8,0X65,0XB8,0X65,0XB8,0X65,0XB8,0X65,0XB8,0X65,
N0XB8,0X65,0XB8,0X65,0XB8,0X65,0X98,0X65,0XB8,0X65,0XD8,0X65,0XB8,0X5D,0X98,0X65,
N0X97,0X7D,0X29,0X3A,0XBE,0XFF,0XDD,0XFF,0XDC,0XFF,0XDB,0XFF,0XDC,0XFF,0XDC,0XFF,
N0XDD,0XFF,0XDD,0XFF,0XDD,0XFF,0XFE,0XFF,0X29,0X3A,0X77,0X75,0XB8,0X5D,0XF9,0X55,
N0XF9,0X45,0XF9,0X4D,0XF9,0X4D,0XDA,0X55,0XDA,0X55,0XF9,0X4D,0XB8,0X65,0X4A,0X32,
N0XBF,0XFF,0XFE,0XFF,0XDB,0XFF,0X2C,0XF5,0X09,0XFD,0X08,0XFD,0X29,0XFD,0X09,0XFD,
N0X09,0XFD,0X29,0XFD,0X08,0XFD,0X07,0XFD,0X6B,0XF5,0XDB,0XFF,0XFE,0XFF,0XDF,0XFF,
N0XE9,0X31,0X77,0X75,0X97,0X65,0XB8,0X65,0XB8,0X65,0XB7,0X65,0XB7,0X65,0XB8,0X65,
N0XB8,0X65,0XB8,0X65,0XB8,0X65,0XB7,0X5D,0X96,0X65,0X57,0X7D,0X2A,0X32,0XFF,0XFF,
N0XDD,0XFF,0XDC,0XFF,0XDD,0XFF,0XDD,0XFF,0XBC,0XFF,0XDC,0XFF,0XDC,0XFF,0XFD,0XFF,
N0XFD,0XFF,0XC7,0X41,0X29,0X3A,0XB8,0X75,0XB8,0X65,0X98,0X5D,0XB9,0X65,0XB8,0X5D,
N0X98,0X65,0XB8,0X65,0XB8,0X65,0XD7,0X5D,0XB7,0X5D,0XB8,0X65,0X98,0X65,0XB8,0X65,
N0XB8,0X65,0X98,0X65,0XC8,0X49,0XC7,0X51,0XDC,0XFF,0X4F,0XD5,0X2B,0XED,0X49,0XFD,
N0X09,0XFD,0XE9,0XFC,0X0A,0XFD,0XC8,0XFC,0XE8,0XFC,0X08,0XFD,0XE9,0XFC,0XE9,0XFC,
N0XE8,0XFC,0X0C,0XF5,0X9D,0XFF,0X0A,0X4A,0XC9,0X41,0X2A,0X42,0X29,0X32,0X29,0X2A,
N0X2A,0X32,0X2B,0X32,0X2A,0X32,0X2A,0X32,0X09,0X3A,0X29,0X32,0X29,0X32,0X49,0X2A,
N0X29,0X32,0X29,0X32,0X29,0X32,0X29,0X32,0X29,0X32,0X29,0X32,0X29,0X32,0X29,0X32,
N0X29,0X32,0X29,0X32,0X29,0X32,0X29,0X32,0X29,0X32,0X29,0X32,0X29,0X32,0X29,0X32,
N0X29,0X32,0X29,0X32,0X09,0X32,0X2A,0X3A,0X2A,0X2A,0X2A,0X32,0X2B,0X3A,0XC9,0X39,
N0XDF,0XFF,0XBC,0XFF,0X2E,0XE5,0X4D,0XED,0X2B,0XED,0X2B,0XED,0X6D,0XF5,0XEC,0XE4,
N0X4F,0XED,0X99,0XFF,0XDC,0XFF,0XFE,0XFF,0X09,0X3A,0X4B,0X1A,0XD8,0X5D,0X19,0X4E,
N0XD9,0X45,0XFA,0X4D,0XFA,0X4D,0XD9,0X4D,0XF9,0X4D,0XB7,0X5D,0X4B,0X32,0XDF,0XFF,
N0XDD,0XFF,0X50,0XDD,0X2C,0XF5,0X09,0XFD,0X09,0XFD,0XC8,0XFC,0X0A,0XFD,0XE9,0XFC,
N0X09,0XFD,0X29,0XFD,0X29,0XFD,0X0A,0XF5,0X4E,0XDD,0XDC,0XFF,0XDF,0XFF,0X09,0X42,
N0X2A,0X42,0X09,0X32,0X2A,0X32,0X49,0X2A,0X49,0X32,0X29,0X32,0X2A,0X32,0X0A,0X32,
N0X29,0X32,0X29,0X32,0X29,0X32,0X49,0X32,0X29,0X32,0XFF,0XFF,0XDD,0XFF,0XDA,0XFF,
N0X4E,0XDD,0X4C,0XED,0X2C,0XED,0X6D,0XF5,0X2C,0XED,0X2D,0XED,0X4E,0XE5,0X9A,0XFF,
N0XDE,0XFF,0XFF,0XFF,0X2A,0X2A,0XD5,0X7C,0X2B,0X32,0X2B,0X32,0X4B,0X3A,0X4A,0X32,
N0X29,0X32,0X49,0X32,0X4A,0X32,0X4A,0X2A,0X4A,0X32,0X4A,0X32,0X0A,0X2A,0X2A,0X32,
N0X0A,0X32,0XE9,0X51,0XE7,0X51,0XBB,0XFF,0X6F,0XE5,0X2B,0XF5,0X08,0XF5,0X29,0XFD,
N0X09,0XFD,0XEA,0XFC,0XA5,0XCB,0X64,0XC3,0XA5,0XC3,0X85,0XC3,0X86,0XC3,0X86,0XC3,
N0X88,0XB3,0XBE,0XFF,0XC8,0X49,0X09,0X52,0XBF,0XFF,0XDD,0XFF,0XDD,0XFF,0XBD,0XFF,
N0XBD,0XFF,0XBD,0XFF,0XBD,0XFF,0XBC,0XFF,0XBC,0XFF,0XBC,0XFF,0XDD,0XFF,0XDE,0XFF,
N0XDE,0XFF,0XDD,0XFF,0XDC,0XFF,0XDC,0XFF,0XDC,0XFF,0XDC,0XFF,0XBC,0XFF,0XBC,0XFF,
N0XBC,0XFF,0XBC,0XFF,0XDC,0XFF,0XDC,0XFF,0XDC,0XFF,0XDC,0XFF,0XBC,0XFF,0XBC,0XFF,
N0XBD,0XFF,0XBE,0XFF,0XBF,0XFF,0XBF,0XFF,0X09,0X4A,0XE9,0X49,0XC8,0X51,0XBD,0XFF,
N0X50,0XDD,0X4C,0XF5,0X08,0XF5,0X29,0XFD,0X29,0XFD,0X09,0XFD,0X2A,0XFD,0X0B,0XF5,
N0X4D,0XED,0X50,0XD5,0XBC,0XFF,0XE8,0X51,0X2A,0X32,0X97,0X6D,0XD9,0X55,0XFA,0X4D,
N0XFA,0X4D,0XF9,0X4D,0X19,0X4E,0X19,0X46,0XD8,0X5D,0X2A,0X32,0XBE,0XFF,0X9B,0XFF,
N0X4F,0XE5,0X0B,0XF5,0X0A,0XFD,0XE9,0XFC,0X2A,0XFD,0X65,0XC3,0X85,0XC3,0X2A,0XFD,
N0X09,0XFD,0X09,0XFD,0X0B,0XFD,0X4E,0XE5,0XBA,0XFF,0XDD,0XFF,0XBD,0XFF,0XBD,0XFF,
N0XBD,0XFF,0XBD,0XFF,0XDD,0XFF,0XFD,0XFF,0XDD,0XFF,0XBD,0XFF,0XBD,0XFF,0XBC,0XFF,
N0XBC,0XFF,0XBC,0XFF,0XDD,0XFF,0XFF,0XFF,0XFE,0XFF,0X70,0XD5,0X2D,0XE5,0X2A,0XF5,
N0X09,0XFD,0X09,0XFD,0X09,0XFD,0X09,0XFD,0X2A,0XFD,0X0B,0XF5,0X4F,0XE5,0XDD,0XFF,
N0XFF,0XFF,0XE9,0X41,0X0A,0X42,0XBF,0XFF,0XDF,0XFF,0XBE,0XFF,0XDD,0XFF,0XBC,0XFF,
N0XBC,0XFF,0XBC,0XFF,0XDD,0XFF,0XBD,0XFF,0XBE,0XFF,0XDF,0XFF,0XDF,0XFF,0XC9,0X49,
N0XC9,0X51,0XC7,0X51,0XBB,0XFF,0X4E,0XDD,0X2B,0XF5,0X29,0XFD,0X28,0XFD,0X29,0XF5,
N0X2D,0XED,0X98,0XFF,0XBA,0XFF,0XDB,0XFF,0XBB,0XFF,0XBC,0XFF,0XBD,0XFF,0XBD,0XFF,
N0XDF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFD,0XFF,0X4E,0XD5,0X6D,0XED,0X0C,0XED,0X2D,0XF5,
N0X2D,0XED,0X2D,0XED,0X2C,0XED,0X2C,0XED,0X0C,0XED,0X2E,0XED,0XBA,0XFF,0X50,0XD5,
N0X4E,0XE5,0X2C,0XED,0X4D,0XED,0X2D,0XED,0X4D,0XED,0X2C,0XED,0X2C,0XED,0X2C,0XED,
N0X2C,0XED,0X2C,0XED,0X2C,0XED,0X2C,0XED,0X2C,0XED,0X2C,0XED,0X2D,0XED,0X2D,0XE5,
N0X70,0XDD,0XBB,0XFF,0XDE,0XFF,0XFF,0XFF,0XBF,0XFF,0XDE,0XFF,0XBB,0XFF,0X4E,0XE5,
N0X2B,0XED,0X29,0XF5,0X29,0XFD,0X09,0XFD,0X09,0XFD,0X29,0XFD,0X09,0XFD,0X2B,0XF5,
N0X4E,0XE5,0XDB,0XFF,0XBE,0XFF,0XFF,0XFF,0X4B,0X22,0X78,0X6D,0XBA,0X55,0XFA,0X4D,
N0XF9,0X4D,0X19,0X46,0X19,0X46,0XB7,0X5D,0X4A,0X32,0XDE,0XFF,0XBB,0XFF,0X4E,0XE5,
N0X2B,0XF5,0X09,0XFD,0X28,0XFD,0X2B,0XF5,0XB9,0XFF,0XB9,0XFF,0X0B,0XF5,0XE9,0XFC,
N0XEA,0XFC,0X0B,0XFD,0X4E,0XE5,0XB9,0XFF,0XDA,0XFF,0X70,0XD5,0X4E,0XE5,0X2D,0XED,
N0X2D,0XED,0X4E,0XE5,0X50,0XD5,0XBA,0XFF,0X2E,0XE5,0X2D,0XED,0X2C,0XF5,0X2B,0XF5,
N0X2C,0XED,0X4E,0XE5,0XFC,0XFF,0XDB,0XFF,0X4D,0XE5,0X2A,0XF5,0X09,0XFD,0X08,0XFD,
N0X09,0XFD,0XE9,0XFC,0X29,0XFD,0XE9,0XFC,0X0A,0XFD,0X2D,0XED,0XDC,0XFF,0XFF,0XFF,
N0XDF,0XFF,0XDF,0XFF,0XFF,0XFF,0XFD,0XFF,0X6F,0XDD,0X0C,0XE5,0X4C,0XF5,0X0C,0XF5,
N0X2D,0XED,0X2D,0XED,0X2D,0XED,0X4F,0XDD,0XDD,0XFF,0XDF,0XFF,0XE8,0X49,0XC9,0X51,
N0XC7,0X51,0XBB,0XFF,0X4E,0XE5,0X2B,0XF5,0X09,0XFD,0X29,0XFD,0X2A,0XF5,0X2E,0XE5,
N0XBA,0XFF,0XDC,0XFF,0XFD,0XFF,0XFD,0XFF,0XDD,0XFF,0XDF,0XFF,0XDF,0XFF,0XFF,0XFF,
N0XFF,0XFF,0XFE,0XFF,0XDA,0XFF,0X6C,0XED,0X08,0XF5,0X09,0XFD,0XE8,0XFC,0X09,0XFD,
N0X29,0XFD,0X29,0XFD,0X09,0XFD,0X09,0XFD,0X0B,0XFD,0X97,0XFF,0X4E,0XE5,0X2A,0XF5,
N0X29,0XFD,0X09,0XFD,0X09,0XFD,0XE9,0XFC,0X2A,0XFD,0X29,0XFD,0X09,0XFD,0X09,0XFD,
N0X29,0XFD,0X09,0XFD,0X29,0XFD,0X09,0XFD,0X29,0XFD,0X09,0XFD,0X2B,0XFD,0X4D,0XED,
N0XB9,0XFF,0XDC,0XFF,0XFE,0XFF,0XFF,0XFF,0XDD,0XFF,0XB8,0XFF,0X2B,0XED,0X2A,0XF5,
N0X4A,0XFD,0X09,0XFD,0XE9,0XFC,0X09,0XFD,0X09,0XFD,0X29,0XFD,0X2A,0XFD,0X2C,0XED,
N0XB9,0XFF,0XDD,0XFF,0XDF,0XF7,0X6C,0X32,0X78,0X75,0X99,0X55,0XD9,0X45,0XFA,0X4D,
N0XF9,0X45,0XF9,0X4D,0XB8,0X5D,0X49,0X32,0XDE,0XFF,0XBA,0XFF,0X4E,0XE5,0X2A,0XF5,
N0X09,0XFD,0X28,0XFD,0X4B,0XED,0XDB,0XFF,0XDB,0XFF,0X0B,0XF5,0XE9,0XFC,0XEA,0XFC,
N0X0C,0XFD,0X4F,0XE5,0XB9,0XFF,0XB9,0XFF,0X6E,0XE5,0X2A,0XF5,0X29,0XFD,0X29,0XFD,
N0X2B,0XF5,0X2E,0XE5,0XB8,0XFF,0X2B,0XF5,0X09,0XFD,0X09,0XFD,0X08,0XFD,0X29,0XFD,
N0X0B,0XED,0XBA,0XFF,0XDA,0XFF,0X0B,0XED,0X29,0XFD,0X09,0XFD,0X09,0XFD,0X09,0XFD,
N0X09,0XFD,0XC8,0XFC,0X29,0XFD,0XE9,0XFC,0X2C,0XF5,0XDA,0XFF,0XDC,0XFF,0XDE,0XFF,
N0XFE,0XFF,0XFC,0XFF,0XD9,0XFF,0X2B,0XED,0X29,0XFD,0X09,0XFD,0X09,0XFD,0XE9,0XFC,
N0X09,0XFD,0X0A,0XFD,0X0C,0XED,0XDC,0XFF,0XDF,0XFF,0XE7,0X49,0XC9,0X49,0XC7,0X51,
N0XBB,0XFF,0X2E,0XE5,0X0B,0XFD,0XE9,0XFC,0X0A,0XFD,0X0B,0XF5,0X2E,0XE5,0XB9,0XFF,
N0X99,0XFF,0XBA,0XFF,0XDA,0XFF,0XDA,0XFF,0XDA,0XFF,0XDB,0XFF,0XFE,0XFF,0XFE,0XFF,
N0XDC,0XFF,0X90,0XDD,0X0A,0XED,0X29,0XFD,0XE9,0XFC,0X09,0XFD,0X09,0XFD,0X29,0XFD,
N0X09,0XFD,0X29,0XFD,0X09,0XFD,0X2B,0XF5,0X97,0XFF,0X4E,0XE5,0X2A,0XF5,0X08,0XFD,
N0X09,0XFD,0X29,0XFD,0X29,0XFD,0XE9,0XFC,0XE9,0XFC,0X09,0XFD,0X08,0XFD,0X08,0XFD,
N0X08,0XFD,0X08,0XFD,0X09,0XFD,0X09,0XFD,0X09,0XFD,0X2A,0XFD,0X2A,0XF5,0X4C,0XED,
N0X4E,0XD5,0XDB,0XFF,0XDE,0XFF,0XDC,0XFF,0X2D,0XED,0X4A,0XFD,0X0A,0XFD,0XE9,0XFC,
N0X09,0XFD,0X09,0XFD,0X29,0XFD,0X09,0XFD,0XE8,0XFC,0X09,0XFD,0X0A,0XFD,0X2E,0XE5,
N0XBD,0XFF,0XFF,0XFF,0X0A,0X22,0X77,0X75,0XF9,0X55,0X1A,0X46,0XFA,0X4D,0XFA,0X4D,
N0XFA,0X4D,0XB8,0X65,0X29,0X32,0XDD,0XFF,0XBB,0XFF,0X4E,0XE5,0X2A,0XF5,0X09,0XFD,
N0X09,0XFD,0X2C,0XED,0XDC,0XFF,0XDB,0XFF,0X2C,0XED,0X09,0XFD,0X09,0XFD,0X0B,0XF5,
N0X4E,0XE5,0XB9,0XFF,0XB9,0XFF,0X4E,0XE5,0X2A,0XF5,0X28,0XFD,0X28,0XFD,0X2A,0XF5,
N0X2E,0XE5,0X98,0XFF,0X0C,0XF5,0X0A,0XFD,0X2A,0XFD,0X09,0XFD,0X09,0XFD,0X2B,0XFD,
N0X78,0XFF,0X2F,0XE5,0X2B,0XFD,0XE8,0XFC,0X09,0XFD,0X09,0XFD,0X29,0XFD,0X09,0XFD,
N0X29,0XFD,0X09,0XFD,0X2A,0XFD,0X0A,0XF5,0X2B,0XED,0X6E,0XDD,0XFC,0XFF,0XFC,0XFF,
N0X6F,0XDD,0X4C,0XED,0X0A,0XFD,0X09,0XFD,0X09,0XFD,0XE8,0XFC,0X29,0XFD,0X08,0XFD,
N0X08,0XFD,0X4C,0XF5,0XBB,0XFF,0XFF,0XFF,0XE8,0X49,0XC9,0X51,0XC7,0X51,0XBA,0XFF,
N0X4D,0XE5,0X0A,0XFD,0X09,0XFD,0X0A,0XFD,0X0B,0XF5,0X2E,0XE5,0X97,0XFF,0X6E,0XE5,
N0X6E,0XE5,0X2E,0XE5,0X4E,0XE5,0X6E,0XE5,0X6F,0XDD,0XDC,0XFF,0XDC,0XFF,0XB9,0XFF,
N0X2D,0XE5,0X4A,0XFD,0X09,0XFD,0XE9,0XFC,0X09,0XFD,0X09,0XFD,0X09,0XFD,0X29,0XFD,
N0X09,0XFD,0X09,0XFD,0X2B,0XF5,0X97,0XFF,0X4E,0XE5,0X2A,0XFD,0XE8,0XFC,0X29,0XFD,
N0X09,0XFD,0XE8,0XFC,0X4A,0XFD,0XE9,0XFC,0X29,0XFD,0X29,0XFD,0X08,0XFD,0X08,0XFD,
N0X29,0XFD,0X09,0XFD,0X09,0XFD,0X0A,0XFD,0X09,0XFD,0X09,0XF5,0X4B,0XFD,0X4D,0XED,
N0XB9,0XFF,0XDD,0XFF,0XDC,0XFF,0X2C,0XF5,0XC8,0XFC,0XE9,0XFC,0X0A,0XFD,0X0A,0XFD,
N0X0A,0XFD,0X0B,0XF5,0X2A,0XF5,0X29,0XFD,0X08,0XFD,0X09,0XFD,0X2D,0XED,0XDD,0XFF,
N0XFF,0XF7,0X6A,0X2A,0X77,0X6D,0XD8,0X55,0X19,0X46,0XFA,0X4D,0XDA,0X4D,0XFA,0X4D,
N0XB8,0X65,0X29,0X32,0XDD,0XFF,0XBB,0XFF,0X4E,0XE5,0X2A,0XF5,0X09,0XFD,0X09,0XFD,
N0X2D,0XED,0XDC,0XFF,0XDC,0XFF,0X2C,0XED,0X09,0XFD,0X09,0XFD,0X2A,0XF5,0X6E,0XE5,
N0XB9,0XFF,0XB9,0XFF,0X4E,0XE5,0X0A,0XF5,0X08,0XFD,0X28,0XFD,0X2A,0XF5,0X2D,0XE5,
N0X97,0XFF,0X0B,0XFD,0X0A,0XFD,0X2A,0XFD,0X0A,0XFD,0XE9,0XFC,0X2B,0XFD,0X98,0XFF,
N0X2E,0XED,0X2B,0XFD,0X29,0XFD,0X09,0XFD,0X09,0XFD,0X0A,0XF5,0X63,0XC3,0X09,0XFD,
N0X09,0XFD,0X09,0XFD,0X2A,0XFD,0X29,0XFD,0X2B,0XED,0XBA,0XFF,0XDA,0XFF,0X4C,0XED,
N0X09,0XFD,0X29,0XFD,0X09,0XFD,0XE8,0XFC,0X29,0XFD,0X08,0XFD,0X08,0XFD,0X08,0XFD,
N0X0B,0XED,0XDC,0XFF,0XDF,0XFF,0XE8,0X49,0XAA,0X51,0XC7,0X59,0XBA,0XFF,0X4D,0XE5,
N0X2A,0XF5,0X29,0XFD,0X09,0XFD,0X2B,0XF5,0X4E,0XE5,0X98,0XFF,0X0C,0XED,0X2B,0XF5,
N0X2B,0XF5,0X2B,0XF5,0X2B,0XF5,0X0C,0XED,0XB9,0XFF,0X70,0XDD,0X2D,0XED,0X0A,0XF5,
N0X09,0XFD,0XE8,0XFC,0XE9,0XFC,0X09,0XFD,0X08,0XFD,0X28,0XFD,0X09,0XFD,0X09,0XFD,
N0X08,0XFD,0X2A,0XF5,0X97,0XFF,0X2E,0XE5,0X0A,0XFD,0X08,0XFD,0X08,0XFD,0X29,0XFD,
N0X09,0XFD,0X09,0XFD,0XE9,0XFC,0X09,0XFD,0XE8,0XFC,0X29,0XFD,0XE8,0XFC,0X09,0XFD,
N0X09,0XFD,0X2A,0XFD,0XEA,0XFC,0X2A,0XFD,0X0A,0XFD,0X0A,0XFD,0X0A,0XFD,0X2D,0XE5,
N0XDD,0XFF,0XDD,0XFF,0X0D,0XED,0X2A,0XFD,0XE9,0XFC,0X2A,0XFD,0X0C,0XED,0X97,0XFF,
N0X97,0XFF,0X2C,0XE5,0X2A,0XFD,0X09,0XFD,0XE9,0XFC,0X2C,0XED,0XFC,0XFF,0XFF,0XF7,
N0X2A,0X22,0X77,0X75,0XF9,0X55,0XD9,0X45,0XFA,0X4D,0XDA,0X55,0XFA,0X4D,0X98,0X65,
N0X29,0X32,0XDE,0XFF,0XDA,0XFF,0X4E,0XE5,0X2B,0XF5,0X09,0XFD,0X09,0XFD,0X4D,0XED,
N0XDC,0XFF,0XDC,0XFF,0X2C,0XED,0X09,0XFD,0X09,0XFD,0X2A,0XF5,0X6E,0XE5,0XD9,0XFF,
N0XB9,0XFF,0X4E,0XE5,0X0A,0XFD,0X09,0XFD,0X09,0XFD,0X2B,0XF5,0X2D,0XED,0X97,0XFF,
N0X0A,0XFD,0X09,0XFD,0X09,0XFD,0X0A,0XFD,0X2A,0XFD,0XEA,0XF4,0X97,0XFF,0X6E,0XE5,
N0X0A,0XF5,0X08,0XFD,0X09,0XFD,0X2B,0XF5,0X6D,0XED,0X75,0XFF,0X2A,0XFD,0X0A,0XFD,
N0XEA,0XFC,0X09,0XFD,0X29,0XFD,0X2B,0XF5,0XB8,0XFF,0X4F,0XDD,0X4C,0XF5,0X09,0XFD,
N0XE9,0XFC,0XE8,0XFC,0X09,0XFD,0X09,0XFD,0X29,0XFD,0X29,0XFD,0X29,0XFD,0X4D,0XF5,
N0XDC,0XFF,0XFF,0XFF,0XE8,0X49,0XAA,0X51,0XC7,0X59,0XBA,0XFF,0X4D,0XE5,0X2A,0XF5,
N0X29,0XFD,0X08,0XFD,0X2A,0XF5,0X4E,0XE5,0X77,0XFF,0X2B,0XF5,0XE9,0XFC,0X0A,0XFD,
N0X0A,0XFD,0X09,0XFD,0X2B,0XFD,0X97,0XFF,0X4E,0XE5,0X0B,0XF5,0X09,0XFD,0X09,0XFD,
N0X09,0XFD,0X0A,0XFD,0X0A,0XFD,0X29,0XFD,0X29,0XFD,0X09,0XFD,0X09,0XFD,0X08,0XFD,
N0X2A,0XF5,0X97,0XFF,0X2E,0XE5,0X0A,0XF5,0X29,0XFD,0XE8,0XFC,0X09,0XFD,0X09,0XFD,
N0X0A,0XFD,0X09,0XFD,0X09,0XFD,0X29,0XFD,0XE8,0XFC,0X29,0XFD,0X09,0XFD,0X09,0XFD,
N0XE9,0XF4,0X2B,0XFD,0X0A,0XFD,0X0A,0XFD,0XE9,0XFC,0X09,0XFD,0X0C,0XED,0XDC,0XFF,
N0XDC,0XFF,0X2D,0XED,0X0A,0XFD,0X09,0XFD,0X0A,0XF5,0X4D,0XED,0X97,0XFF,0X98,0XFF,
N0X4E,0XE5,0X0A,0XF5,0X09,0XFD,0X4A,0XFD,0X2C,0XE5,0XFC,0XFF,0XFF,0XF7,0X4A,0X2A,
N0X77,0X75,0XB8,0X55,0X1A,0X4E,0XF9,0X4D,0XD9,0X4D,0XFA,0X4D,0X98,0X65,0X2A,0X32,
N0XDE,0XFF,0XDA,0XFF,0X4E,0XE5,0X2B,0XF5,0X09,0XFD,0X29,0XFD,0X4D,0XED,0XDD,0XFF,
N0XDD,0XFF,0X2C,0XED,0X09,0XFD,0X09,0XFD,0X2A,0XF5,0X6E,0XE5,0XB9,0XFF,0XB9,0XFF,
N0X4E,0XE5,0X0A,0XFD,0X09,0XFD,0X09,0XFD,0X2B,0XF5,0X2D,0XE5,0X96,0XFF,0X0A,0XFD,
N0X09,0XFD,0X09,0XFD,0X09,0XFD,0X09,0XFD,0X2B,0XFD,0XB7,0XFF,0X4D,0XDD,0X2A,0XFD,
N0X4A,0XFD,0X09,0XFD,0X0B,0XF5,0X4E,0XDD,0XB7,0XFF,0X0B,0XF5,0XE9,0XFC,0X0A,0XFD,
N0XC9,0XFC,0X09,0XFD,0X2A,0XF5,0X97,0XFF,0X6E,0XE5,0X2B,0XF5,0X49,0XFD,0X09,0XFD,
N0XE9,0XFC,0X2A,0XFD,0X0A,0XFD,0X0A,0XF5,0X2A,0XF5,0X0B,0XFD,0X2E,0XED,0XDD,0XFF,
N0XFF,0XFF,0XE9,0X49,0XC9,0X49,0XC7,0X51,0XBA,0XFF,0X4D,0XE5,0X2A,0XF5,0X29,0XFD,
N0X29,0XFD,0X2A,0XF5,0X4E,0XE5,0X97,0XFF,0X4B,0XFD,0X09,0XFD,0X09,0XFD,0XE9,0XFC,
N0X08,0XFD,0X29,0XF5,0XB6,0XFF,0X6E,0XED,0X2B,0XF5,0X09,0XFD,0XE8,0XFC,0X0A,0XFD,
N0X0C,0XFD,0X65,0XC3,0X09,0XFD,0X09,0XFD,0X09,0XFD,0X09,0XFD,0X08,0XFD,0X2A,0XF5,
N0X97,0XFF,0X4E,0XE5,0X2A,0XF5,0X29,0XFD,0X29,0XFD,0X09,0XFD,0X0A,0XFD,0X63,0XCB,
N0XE9,0XFC,0X2A,0XFD,0X09,0XFD,0X09,0XFD,0X29,0XFD,0X09,0XFD,0X0A,0XFD,0X84,0XC3,
N0XA5,0XCB,0X0B,0XFD,0X0A,0XFD,0X29,0XFD,0X09,0XFD,0X4C,0XED,0XFC,0XFF,0XDC,0XFF,
N0X4D,0XED,0X09,0XFD,0X29,0XFD,0X29,0XF5,0X2B,0XF5,0X75,0XFF,0X76,0XFF,0X2C,0XF5,
N0X0A,0XFD,0X09,0XFD,0XE8,0XFC,0X2C,0XED,0XDC,0XFF,0XFF,0XF7,0X4A,0X2A,0X57,0X6D,
N0XF9,0X5D,0XF9,0X45,0XF9,0X4D,0XF9,0X4D,0XFA,0X4D,0XB8,0X5D,0X2A,0X32,0XDE,0XFF,
N0XDA,0XFF,0X4D,0XE5,0X2A,0XF5,0X08,0XFD,0X09,0XFD,0X2D,0XED,0XDD,0XFF,0XDD,0XFF,
N0X2C,0XED,0X09,0XFD,0X09,0XFD,0X2A,0XF5,0X6E,0XE5,0XB9,0XFF,0XB9,0XFF,0X4E,0XE5,
N0X0A,0XF5,0X09,0XFD,0X09,0XFD,0X2B,0XF5,0X2E,0XE5,0X97,0XFF,0X2A,0XF5,0X08,0XFD,
N0X09,0XFD,0X09,0XFD,0X08,0XFD,0X0A,0XF5,0XB7,0XFF,0X4D,0XE5,0X0A,0XF5,0XC8,0XFC,
N0X09,0XFD,0X2B,0XF5,0X2E,0XE5,0X97,0XFF,0X2B,0XF5,0X09,0XFD,0X08,0XFD,0X4A,0XFD,
N0X09,0XFD,0X0A,0XF5,0XB7,0XFF,0X4E,0XED,0XE9,0XF4,0X08,0XFD,0X09,0XFD,0XE9,0XFC,
N0X2A,0XF5,0XA6,0XBB,0XA7,0XBB,0X87,0XBB,0X67,0XBB,0X8A,0XB3,0XDE,0XFF,0XFF,0XFF,
N0XE9,0X49,0XC9,0X49,0XC7,0X51,0XBB,0XFF,0X2E,0XE5,0X2B,0XF5,0X29,0XFD,0X09,0XFD,
N0X2A,0XF5,0X2D,0XE5,0XB6,0XFF,0X0A,0XF5,0X09,0XFD,0X09,0XFD,0X09,0XFD,0X28,0XFD,
N0X29,0XF5,0X96,0XFF,0X4D,0XE5,0X0A,0XF5,0X09,0XFD,0X09,0XFD,0X0A,0XF5,0X2D,0XF5,
N0X76,0XFF,0X0A,0XFD,0X09,0XFD,0X09,0XFD,0X09,0XFD,0X08,0XFD,0X2A,0XFD,0X97,0XFF,
N0X4E,0XE5,0X2B,0XF5,0X09,0XFD,0X09,0XFD,0X2A,0XFD,0XEA,0XF4,0X74,0XFF,0X4B,0XFD,
N0X09,0XFD,0X09,0XFD,0X29,0XFD,0X29,0XFD,0X0A,0XF5,0X2B,0XF5,0X95,0XFF,0X75,0XFF,
N0X2C,0XF5,0X0A,0XFD,0X09,0XFD,0X08,0XFD,0X2B,0XED,0XFC,0XFF,0XDC,0XFF,0X2D,0XED,
N0X0A,0XFD,0X29,0XFD,0X29,0XFD,0X09,0XFD,0X64,0XCB,0X65,0XCB,0XEB,0XFC,0X2A,0XFD,
N0X29,0XFD,0X09,0XFD,0X2C,0XED,0XDC,0XFF,0XFF,0XF7,0X4A,0X2A,0X77,0X75,0XB8,0X55,
N0X19,0X46,0XF9,0X45,0XF9,0X4D,0XF9,0X4D,0XB8,0X65,0X2A,0X32,0XDE,0XFF,0XBB,0XFF,
N0X4D,0XE5,0X2A,0XFD,0X08,0XFD,0X09,0XFD,0X2C,0XED,0XDD,0XFF,0XDD,0XFF,0X2C,0XED,
N0X09,0XFD,0X09,0XFD,0X2A,0XF5,0X6D,0XE5,0XB8,0XFF,0XB9,0XFF,0X4E,0XE5,0X0A,0XF5,
N0X09,0XFD,0X29,0XFD,0X2B,0XF5,0X2E,0XE5,0X97,0XFF,0X2A,0XF5,0X09,0XFD,0X09,0XFD,
N0X09,0XFD,0X09,0XFD,0X2A,0XF5,0XB7,0XFF,0X4D,0XE5,0X2B,0XFD,0X09,0XFD,0X29,0XFD,
N0X0A,0XF5,0X4D,0XED,0X76,0XFF,0X2A,0XF5,0X29,0XFD,0X08,0XFD,0X08,0XFD,0X09,0XFD,
N0X0B,0XF5,0X97,0XFF,0X4D,0XE5,0X2A,0XFD,0X09,0XFD,0XE9,0XFC,0X2A,0XFD,0X2C,0XED,
N0X97,0XFF,0X99,0XFF,0X9A,0XFF,0X9B,0XFF,0X9C,0XFF,0XDF,0XFF,0XDF,0XFF,0XE9,0X49,
N0XC9,0X49,0XE8,0X59,0X9B,0XFF,0X2E,0XE5,0X2A,0XF5,0X29,0XFD,0XE9,0XFC,0X2B,0XF5,
N0X4D,0XE5,0XB6,0XFF,0X0A,0XF5,0X09,0XFD,0X09,0XFD,0X29,0XFD,0X09,0XFD,0X0A,0XFD,
N0X97,0XFF,0X2D,0XE5,0X2B,0XFD,0X09,0XFD,0X09,0XFD,0X0A,0XF5,0X4D,0XED,0X96,0XFF,
N0X2B,0XF5,0X09,0XFD,0X09,0XFD,0X09,0XFD,0X08,0XFD,0X0A,0XFD,0X98,0XFF,0X4F,0XE5,
N0X0A,0XFD,0X08,0XFD,0X08,0XFD,0X2A,0XFD,0X2D,0XED,0X97,0XFF,0X2A,0XF5,0X29,0XFD,
N0X08,0XFD,0X08,0XFD,0X09,0XFD,0X2A,0XF5,0X4D,0XED,0XB7,0XFF,0XB7,0XFF,0X4D,0XE5,
N0X4B,0XF5,0X08,0XFD,0X08,0XFD,0X2B,0XED,0XDC,0XFF,0XDD,0XFF,0X2D,0XED,0X0A,0XFD,
N0X29,0XFD,0X09,0XFD,0XE8,0XFC,0X63,0XDB,0X43,0XD3,0X09,0XFD,0X29,0XFD,0X28,0XFD,
N0X09,0XFD,0X2C,0XF5,0XDC,0XFF,0XFF,0XFF,0X4A,0X2A,0X77,0X6D,0XF9,0X55,0XF9,0X45,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0X97,0X65,0X2A,0X32,0XDE,0XFF,0XBB,0XFF,0X4E,0XED,
N0X0A,0XFD,0X08,0XFD,0X29,0XFD,0X4C,0XE5,0XDC,0XFF,0XDC,0XFF,0X2C,0XED,0X09,0XFD,
N0X29,0XFD,0X2A,0XF5,0X4D,0XE5,0XD8,0XFF,0XB9,0XFF,0X2E,0XE5,0X2A,0XFD,0X08,0XFD,
N0X09,0XFD,0X2B,0XF5,0X4E,0XE5,0XB7,0XFF,0X2B,0XF5,0X09,0XFD,0X09,0XFD,0X0A,0XFD,
N0XE9,0XFC,0X2B,0XFD,0X97,0XFF,0X4E,0XE5,0X0A,0XF5,0X09,0XFD,0X08,0XFD,0X29,0XFD,
N0X4C,0XED,0X95,0XFF,0X0A,0XFD,0X0A,0XFD,0X08,0XF5,0X29,0XFD,0XE8,0XFC,0X0A,0XFD,
N0XB7,0XFF,0X6E,0XE5,0X0A,0XF5,0X09,0XFD,0X09,0XFD,0X0A,0XF5,0X4D,0XE5,0XB9,0XFF,
N0XBC,0XFF,0XBE,0XFF,0XDF,0XFF,0XDF,0XFF,0XFF,0XFF,0XDF,0XFF,0XE9,0X49,0XC9,0X49,
N0X86,0X51,0XBB,0XFF,0X4E,0XE5,0X4A,0XF5,0X29,0XFD,0X0A,0XFD,0X2B,0XF5,0X6D,0XE5,
N0X75,0XFF,0X2B,0XFD,0X09,0XFD,0X09,0XFD,0X29,0XFD,0X09,0XFD,0X0B,0XF5,0X97,0XFF,
N0X2E,0XE5,0X0A,0XFD,0X09,0XFD,0X2A,0XFD,0X0B,0XF5,0X6E,0XED,0X96,0XFF,0X2B,0XF5,
N0X09,0XFD,0X09,0XFD,0X09,0XFD,0X08,0XFD,0X0A,0XFD,0X98,0XFF,0X4E,0XE5,0X2A,0XF5,
N0X08,0XFD,0X08,0XFD,0X2B,0XF5,0X2E,0XE5,0X98,0XFF,0X2B,0XF5,0X28,0XFD,0X08,0XFD,
N0X08,0XFD,0X09,0XFD,0X2A,0XF5,0X4D,0XE5,0XB9,0XFF,0XD9,0XFF,0X4E,0XDD,0X0A,0XED,
N0X29,0XFD,0XE8,0XFC,0X4C,0XF5,0XDC,0XFF,0XDC,0XFF,0X4D,0XF5,0X0A,0XFD,0X09,0XFD,
N0X09,0XFD,0X09,0XFD,0XC8,0XFC,0XE8,0XFC,0XE8,0XFC,0X09,0XFD,0X09,0XFD,0X09,0XFD,
N0XEC,0XEC,0XDC,0XFF,0XFF,0XFF,0X4A,0X2A,0X97,0X75,0XD9,0X55,0X3A,0X4E,0X1A,0X4E,
N0XB8,0X45,0XF9,0X4D,0X98,0X65,0X4A,0X32,0XDE,0XFF,0XBB,0XFF,0X2E,0XED,0X0A,0XFD,
N0X29,0XFD,0X08,0XF5,0X4C,0XED,0XBC,0XFF,0XDC,0XFF,0X4C,0XED,0X29,0XFD,0X09,0XFD,
N0X2B,0XFD,0X2D,0XDD,0XB8,0XFF,0XB9,0XFF,0X4F,0XE5,0X0A,0XF5,0X29,0XFD,0X29,0XFD,
N0X0A,0XF5,0X4E,0XE5,0X97,0XFF,0X4B,0XFD,0X29,0XFD,0X09,0XFD,0XE9,0XFC,0X09,0XFD,
N0XEA,0XFC,0X96,0XFF,0X4E,0XE5,0X2B,0XFD,0X09,0XFD,0X08,0XFD,0X09,0XFD,0X2A,0XF5,
N0X0A,0XF5,0X0B,0XFD,0XEA,0XFC,0X09,0XFD,0X29,0XFD,0X09,0XFD,0X0A,0XFD,0XB7,0XFF,
N0X6E,0XE5,0X2A,0XF5,0X09,0XFD,0X09,0XFD,0X2B,0XF5,0X4E,0XE5,0XDB,0XFF,0XE7,0X51,
N0X09,0X3A,0X4A,0X2A,0X4A,0X22,0X4B,0X2A,0X4B,0X32,0X0A,0X32,0XC9,0X51,0XE7,0X59,
N0XBA,0XFF,0X4D,0XE5,0X2A,0XF5,0X09,0XFD,0X0A,0XFD,0X0B,0XF5,0X4D,0XDD,0XB6,0XFF,
N0X0A,0XF5,0X09,0XFD,0X29,0XFD,0X08,0XFD,0X29,0XFD,0X2B,0XF5,0X97,0XFF,0X6F,0XE5,
N0X0A,0XF5,0XE8,0XFC,0X29,0XFD,0X2B,0XF5,0X2D,0XE5,0X97,0XFF,0X2B,0XF5,0X09,0XFD,
N0X09,0XFD,0X09,0XFD,0X08,0XFD,0X2A,0XF5,0X97,0XFF,0X4E,0XE5,0X2A,0XF5,0X29,0XFD,
N0X28,0XFD,0X2B,0XF5,0X2E,0XE5,0X98,0XFF,0X2A,0XF5,0X28,0XFD,0X09,0XFD,0X09,0XFD,
N0X29,0XFD,0X2B,0XF5,0X4E,0XE5,0XB9,0XFF,0XB9,0XFF,0X4D,0XE5,0X4B,0XFD,0X08,0XFD,
N0X09,0XFD,0X0C,0XED,0XDC,0XFF,0XDC,0XFF,0X0B,0XE5,0X09,0XFD,0X09,0XF5,0X2A,0XFD,
N0X29,0XFD,0X09,0XFD,0X09,0XFD,0XE9,0XFC,0X0A,0XFD,0XC9,0XFC,0XEA,0XFC,0X2D,0XF5,
N0XDC,0XFF,0XFF,0XF7,0X8A,0X2A,0X77,0X75,0XB9,0X55,0XDA,0X4D,0XD9,0X4D,0X1A,0X56,
N0XF9,0X4D,0X97,0X5D,0X49,0X2A,0XDE,0XFF,0XBB,0XFF,0X2E,0XE5,0X2B,0XFD,0X09,0XFD,
N0X29,0XFD,0X4D,0XED,0XDC,0XFF,0XBC,0XFF,0X2C,0XED,0XE8,0XFC,0X09,0XFD,0X0B,0XF5,
N0X6F,0XED,0XB9,0XFF,0X99,0XFF,0X4F,0XED,0X0B,0XF5,0XE9,0XFC,0X09,0XFD,0X2B,0XF5,
N0X4D,0XE5,0XB7,0XFF,0X0A,0XED,0X28,0XFD,0X08,0XFD,0X29,0XFD,0X09,0XFD,0X4C,0XFD,
N0X96,0XFF,0X4D,0XDD,0X0A,0XFD,0X09,0XFD,0X29,0XFD,0X09,0XFD,0X29,0XFD,0X0A,0XFD,
N0XEA,0XFC,0XCA,0XFC,0X09,0XFD,0XE9,0XFC,0XC9,0XFC,0X0B,0XFD,0X97,0XFF,0X4D,0XE5,
N0X2A,0XF5,0X09,0XFD,0X09,0XFD,0X0B,0XF5,0X4E,0XE5,0XDB,0XFF,0X28,0X3A,0X77,0X85,
N0X98,0X6D,0XB8,0X5D,0XB9,0X65,0X98,0X65,0X97,0X65,0XA8,0X51,0XA6,0X51,0XDA,0XFF,
N0X6D,0XE5,0X0A,0XF5,0X09,0XFD,0XE9,0XFC,0X0B,0XFD,0X4D,0XE5,0X96,0XFF,0X0A,0XF5,
N0X09,0XFD,0XE8,0XFC,0X29,0XFD,0X09,0XFD,0X0B,0XF5,0X97,0XFF,0X2E,0XDD,0X4B,0XFD,
N0X29,0XFD,0X29,0XFD,0X2A,0XF5,0X2D,0XE5,0X96,0XFF,0X2B,0XF5,0X09,0XFD,0X09,0XFD,
N0X29,0XFD,0X08,0XFD,0X2A,0XF5,0X96,0XFF,0X4D,0XE5,0X2B,0XF5,0X29,0XFD,0X09,0XFD,
N0X2B,0XF5,0X2E,0XE5,0X97,0XFF,0X2A,0XF5,0X08,0XFD,0X09,0XFD,0X09,0XFD,0X09,0XFD,
N0X2B,0XF5,0X4E,0XE5,0XB9,0XFF,0XB9,0XFF,0X4D,0XE5,0X0A,0XFD,0X09,0XFD,0X09,0XFD,
N0X2C,0XED,0XDC,0XFF,0XFC,0XFF,0X4C,0XF5,0X09,0XFD,0X2A,0XFD,0XE9,0XF4,0X09,0XFD,
N0X09,0XFD,0XC9,0XFC,0X64,0XCB,0X44,0XD3,0X45,0XCB,0X25,0XCB,0X87,0XBB,0XDC,0XFF,
N0XFF,0XF7,0X4A,0X22,0X98,0X75,0X99,0X55,0XFB,0X4D,0XDA,0X4D,0XFA,0X4D,0XD9,0X4D,
N0XD8,0X65,0X49,0X2A,0XFE,0XFF,0XDB,0XFF,0X4F,0XE5,0X2B,0XF5,0XE9,0XFC,0X09,0XFD,
N0X0B,0XED,0XBB,0XFF,0XBB,0XFF,0X2C,0XF5,0X29,0XFD,0X09,0XFD,0X2B,0XF5,0X2E,0XE5,
N0X99,0XFF,0XB9,0XFF,0X2E,0XE5,0X2B,0XF5,0X29,0XFD,0XE8,0XFC,0X2B,0XFD,0X2D,0XED,
N0X76,0XFF,0X4A,0XF5,0X29,0XFD,0X28,0XFD,0XE8,0XFC,0X44,0XC3,0X45,0XBB,0XB7,0XFF,
N0X6E,0XE5,0X0A,0XFD,0X09,0XFD,0X09,0XFD,0X29,0XFD,0X08,0XFD,0XE9,0XFC,0X65,0XCB,
N0X65,0XCB,0X44,0XD3,0X44,0XCB,0X65,0XD3,0X65,0XC3,0X97,0XFF,0X4D,0XED,0X2A,0XF5,
N0X09,0XFD,0X09,0XFD,0X0B,0XF5,0X4E,0XE5,0XDB,0XFF,0X29,0X32,0X77,0X6D,0XD9,0X5D,
N0XD9,0X4D,0XB9,0X4D,0XFA,0X4D,0X19,0X56,0XC8,0X51,0XE7,0X59,0XBA,0XFF,0X2E,0XE5,
N0X0B,0XFD,0XE9,0XFC,0X0A,0XFD,0X0A,0XFD,0X6D,0XF5,0X54,0XFF,0X2A,0XFD,0X09,0XFD,
N0X2A,0XFD,0XE9,0XFC,0XE9,0XFC,0XEB,0XF4,0X97,0XFF,0X4E,0XE5,0XE9,0XF4,0X29,0XFD,
N0X08,0XFD,0XE9,0XF4,0X2B,0XED,0X95,0XFF,0X2A,0XF5,0X29,0XFD,0X29,0XFD,0X29,0XFD,
N0X08,0XFD,0X2A,0XF5,0X96,0XFF,0X4D,0XE5,0X2B,0XF5,0X09,0XFD,0X09,0XFD,0X2B,0XF5,
N0X2E,0XE5,0X97,0XFF,0X2A,0XF5,0X09,0XFD,0X09,0XFD,0X09,0XFD,0X09,0XFD,0X0B,0XFD,
N0X2E,0XE5,0XB9,0XFF,0XB9,0XFF,0X4E,0XE5,0X0B,0XFD,0X09,0XFD,0X08,0XFD,0X2B,0XED,
N0XFC,0XFF,0XDB,0XFF,0X2C,0XF5,0XE8,0XFC,0X09,0XFD,0X29,0XFD,0X08,0XFD,0X08,0XFD,
N0X4C,0XFD,0X66,0XC3,0X67,0XC3,0X68,0XC3,0X88,0XBB,0XAA,0XAB,0XDD,0XFF,0XFF,0XF7,
N0X6A,0X22,0X77,0X6D,0XDA,0X55,0XDA,0X4D,0XDA,0X4D,0XDA,0X4D,0XFA,0X4D,0XB7,0X5D,
N0X49,0X2A,0XFE,0XFF,0XBB,0XFF,0X4E,0XE5,0X0A,0XF5,0X29,0XFD,0X08,0XFD,0X2B,0XFD,
N0X99,0XFF,0X99,0XFF,0X2B,0XF5,0X29,0XFD,0X08,0XFD,0X2A,0XF5,0X4E,0XE5,0XB9,0XFF,
N0XB9,0XFF,0X2D,0XE5,0X2B,0XF5,0XE8,0XF4,0X29,0XFD,0X2A,0XFD,0X2D,0XF5,0X76,0XFF,
N0X0B,0XFD,0XE9,0XFC,0X29,0XFD,0X2A,0XFD,0X87,0XC3,0XA9,0XB3,0XB8,0XFF,0X4D,0XE5,
N0X0A,0XFD,0XE9,0XFC,0X2A,0XFD,0XE9,0XFC,0X29,0XFD,0X09,0XFD,0X86,0XBB,0X67,0XB3,
N0X47,0XB3,0XA8,0XC3,0X67,0XBB,0X67,0XB3,0X98,0XFF,0X4E,0XED,0X0A,0XF5,0X09,0XFD,
N0X29,0XFD,0X0A,0XF5,0X4E,0XE5,0XDB,0XFF,0X29,0X32,0X78,0X75,0XB9,0X5D,0XD9,0X55,
N0X1A,0X56,0XD9,0X4D,0XD9,0X45,0XA8,0X51,0XC7,0X51,0X9B,0XFF,0X2E,0XE5,0X0B,0XFD,
N0XE9,0XFC,0XE9,0XFC,0X2A,0XFD,0X0A,0XF5,0X2B,0XF5,0X2A,0XFD,0XE9,0XFC,0XE8,0XFC,
N0X09,0XFD,0X09,0XFD,0X2B,0XFD,0X98,0XFF,0X4E,0XE5,0X0B,0XF5,0X09,0XFD,0X29,0XFD,
N0X09,0XFD,0X4B,0XFD,0X0A,0XF5,0X29,0XFD,0X29,0XFD,0X29,0XFD,0X29,0XFD,0X09,0XFD,
N0X2A,0XF5,0X97,0XFF,0X4E,0XE5,0X2B,0XF5,0X09,0XFD,0X09,0XFD,0X2B,0XF5,0X2E,0XE5,
N0X97,0XFF,0X2A,0XF5,0X09,0XFD,0X09,0XFD,0X09,0XFD,0X09,0XFD,0X0B,0XFD,0X2E,0XE5,
N0XB9,0XFF,0XB9,0XFF,0X4E,0XE5,0X0B,0XF5,0X09,0XFD,0X08,0XFD,0X6C,0XF5,0XFB,0XFF,
N0XFC,0XFF,0X2D,0XED,0X0A,0XFD,0X09,0XFD,0X08,0XFD,0X48,0XFD,0X09,0XFD,0X2C,0XED,
N0X98,0XFF,0X7A,0XFF,0X9B,0XFF,0XBB,0XFF,0XDC,0XFF,0XDE,0XFF,0XFF,0XE7,0X6B,0X22,
N0XB8,0X6D,0XB9,0X55,0XFA,0X4D,0XDA,0X4D,0XFA,0X55,0XF9,0X4D,0XB7,0X65,0X6A,0X32,
N0X9D,0XFF,0XBC,0XFF,0X4F,0XDD,0X2B,0XFD,0XE8,0XFC,0XE8,0XFC,0X0A,0XFD,0X0D,0XED,
N0X2D,0XED,0X0A,0XFD,0XE8,0XFC,0X28,0XFD,0X0A,0XF5,0X6F,0XE5,0XB9,0XFF,0XB8,0XFF,
N0X4D,0XE5,0X4B,0XF5,0X29,0XFD,0X29,0XFD,0XC8,0XF4,0X2B,0XFD,0X0C,0XFD,0XEB,0XFC,
N0X0B,0XFD,0X0B,0XFD,0X86,0XBB,0X9A,0XFF,0X9B,0XFF,0X99,0XFF,0X6E,0XE5,0X0A,0XF5,
N0X09,0XFD,0X09,0XFD,0X09,0XFD,0X08,0XFD,0X0A,0XF5,0X98,0XFF,0XBA,0XFF,0X9B,0XFF,
N0X5A,0XFF,0X9B,0XFF,0X9A,0XFF,0X99,0XFF,0X2E,0XED,0X0A,0XF5,0X09,0XFD,0X29,0XFD,
N0X2A,0XF5,0X4E,0XE5,0XDB,0XFF,0X29,0X32,0X78,0X75,0XB9,0X5D,0XFA,0X4D,0XB9,0X45,
N0X1A,0X4E,0XF9,0X45,0XE9,0X51,0XC7,0X51,0XBD,0XFF,0X89,0XAB,0XEC,0XFC,0XEA,0XFC,
N0X09,0XFD,0X08,0XFD,0X29,0XFD,0X29,0XFD,0X2A,0XFD,0X09,0XFD,0X29,0XFD,0X09,0XFD,
N0X29,0XFD,0X2B,0XF5,0X98,0XFF,0XCA,0XAB,0XA7,0XBB,0X0B,0XF5,0X09,0XFD,0XE8,0XFC,
N0X09,0XFD,0X09,0XFD,0X09,0XFD,0X09,0XFD,0X29,0XFD,0X29,0XFD,0X09,0XFD,0X2B,0XF5,
N0X98,0XFF,0X4E,0XE5,0X2A,0XF5,0X09,0XFD,0X09,0XFD,0X2B,0XFD,0X2E,0XE5,0X97,0XFF,
N0X2A,0XF5,0X09,0XFD,0X09,0XFD,0X09,0XFD,0X09,0XFD,0X2A,0XF5,0X4D,0XE5,0XB8,0XFF,
N0XD9,0XFF,0X4E,0XDD,0X2B,0XF5,0X09,0XFD,0X09,0XFD,0X4C,0XED,0XBB,0XFF,0XBC,0XFF,
N0XA9,0XB3,0X0B,0XFD,0X0A,0XFD,0X49,0XFD,0X28,0XFD,0X09,0XF5,0X4D,0XED,0XBA,0XFF,
N0XC6,0X49,0X08,0X42,0X27,0X3A,0X48,0X32,0X4A,0X2A,0XAC,0X2A,0XAC,0X12,0X98,0X65,
N0XD9,0X55,0XF9,0X4D,0XF9,0X45,0X19,0X4E,0XF9,0X45,0XB7,0X65,0X49,0X32,0XDE,0XFF,
N0XBD,0XFF,0X8A,0XAB,0X0B,0XFD,0XE9,0XFC,0X29,0XFD,0X09,0XFD,0X2B,0XFD,0X2B,0XFD,
N0XE9,0XFC,0X09,0XFD,0X08,0XFD,0X2B,0XF5,0X88,0XAB,0XBA,0XFF,0XB9,0XFF,0X6E,0XE5,
N0X0A,0XF5,0X09,0XFD,0X09,0XFD,0X4A,0XFD,0X0A,0XFD,0X2A,0XFD,0XCB,0XFC,0X66,0XC3,
N0X88,0XAB,0XBB,0XFF,0XBD,0XFF,0X9D,0XFF,0XDB,0XFF,0XC9,0XAB,0X0B,0XF5,0X0A,0XFD,
N0X2A,0XFD,0X09,0XFD,0X09,0XFD,0X2C,0XF5,0X9A,0XFF,0XE7,0X51,0XE7,0X49,0XE8,0X51,
N0XC7,0X51,0XA5,0X59,0X9B,0XFF,0X2F,0XE5,0X0B,0XFD,0X09,0XFD,0X29,0XFD,0X2A,0XF5,
N0X4E,0XE5,0XFC,0XFF,0X69,0X32,0X57,0X65,0XD9,0X5D,0XD9,0X4D,0XF9,0X4D,0XFA,0X4D,
N0XF9,0X4D,0X09,0X3A,0XE8,0X41,0XDE,0XFF,0X9B,0XFF,0X67,0XC3,0X64,0XD3,0XE9,0XFC,
N0X09,0XFD,0X08,0XFD,0X29,0XFD,0XE9,0XFC,0XE9,0XFC,0X09,0XFD,0X29,0XFD,0X08,0XFD,
N0X2B,0XF5,0XBA,0XFF,0X9B,0XFF,0X99,0XFF,0X87,0XBB,0X0A,0XFD,0XE9,0XFC,0X09,0XFD,
N0X09,0XFD,0X09,0XFD,0X09,0XFD,0X09,0XFD,0X09,0XFD,0X09,0XFD,0X2B,0XF5,0X98,0XFF,
N0X2E,0XE5,0X0A,0XFD,0X09,0XFD,0XE9,0XFC,0X0B,0XFD,0X2E,0XED,0X97,0XFF,0X0A,0XFD,
N0X09,0XFD,0X09,0XFD,0X09,0XFD,0X09,0XFD,0X0A,0XFD,0X2D,0XED,0XB8,0XFF,0XB9,0XFF,
N0X4E,0XDD,0X2B,0XF5,0X09,0XFD,0X09,0XFD,0X4C,0XED,0XDC,0XFF,0XDD,0XFF,0X9A,0XFF,
N0X87,0XBB,0X0B,0XFD,0X09,0XFD,0X08,0XFD,0X2A,0XFD,0X2D,0XE5,0XDB,0XFF,0X28,0X42,
N0X16,0X85,0X56,0X7D,0X76,0X75,0X77,0X75,0X77,0X6D,0X98,0X65,0XD9,0X5D,0XD9,0X55,
N0XF9,0X4D,0XF9,0X4D,0XF9,0X45,0X19,0X4E,0XB7,0X5D,0X4A,0X32,0XDF,0XFF,0XBE,0XFF,
N0X9B,0XFF,0X67,0XC3,0X43,0XCB,0X09,0XFD,0XE9,0XFC,0X09,0XFD,0X09,0XFD,0XE9,0XFC,
N0XE9,0XFC,0X09,0XFD,0X65,0XBB,0XBA,0XFF,0XBC,0XFF,0XD9,0XFF,0X4E,0XE5,0X0A,0XF5,
N0X09,0XFD,0X09,0XFD,0X09,0XFD,0X09,0XFD,0XEA,0XFC,0X66,0XCB,0X78,0XFF,0X9B,0XFF,
N0XDE,0XFF,0X09,0X4A,0X09,0X4A,0XDD,0XFF,0X9A,0XFF,0X87,0XC3,0X64,0XCB,0XE9,0XFC,
N0X09,0XFD,0XE9,0XFC,0X0D,0XF5,0XBC,0XFF,0XE8,0X41,0X0A,0X3A,0XF5,0X94,0XE9,0X41,
N0XC7,0X51,0XBC,0XFF,0X2F,0XE5,0X0B,0XFD,0X09,0XFD,0X09,0XFD,0X0A,0XF5,0X4E,0XE5,
N0XFC,0XFF,0X49,0X2A,0X98,0X6D,0XD8,0X55,0XF9,0X4D,0X1A,0X4E,0XD9,0X45,0X1A,0X56,
N0X6B,0X22,0X4A,0X2A,0XFF,0XFF,0XBC,0XFF,0XA9,0XB3,0X45,0XC3,0XEA,0XFC,0XE9,0XFC,
N0XE9,0XFC,0XE9,0XFC,0XE9,0XFC,0XE9,0XFC,0XE9,0XFC,0XE9,0XFC,0X08,0XFD,0X2B,0XF5,
N0XBB,0XFF,0XDE,0XFF,0XBB,0XFF,0XA9,0XB3,0X0C,0XFD,0XEA,0XFC,0XC9,0XFC,0XC9,0XFC,
N0XC9,0XFC,0XE9,0XFC,0XE9,0XFC,0XE9,0XFC,0XE9,0XFC,0X0B,0XFD,0X97,0XFF,0X2E,0XED,
N0X0B,0XFD,0XE9,0XFC,0XEA,0XFC,0XEB,0XFC,0X2E,0XED,0X77,0XFF,0X0B,0XFD,0XE9,0XFC,
N0XEA,0XFC,0XEA,0XFC,0XC9,0XFC,0XEA,0XFC,0X0D,0XF5,0X78,0XFF,0X98,0XFF,0X4E,0XE5,
N0X0B,0XFD,0XE9,0XFC,0XE9,0XFC,0X2C,0XED,0XDC,0XFF,0XFE,0XFF,0XBC,0XFF,0XA9,0XB3,
N0X0C,0XFD,0XC9,0XFC,0XE9,0XFC,0XEA,0XFC,0X2E,0XED,0XDC,0XFF,0X49,0X3A,0X57,0X7D,
N0X98,0X65,0XB9,0X5D,0XB9,0X5D,0XD9,0X5D,0XD9,0X55,0XD9,0X55,0XD9,0X55,0XF9,0X4D,
N0X19,0X4E,0XF8,0X45,0X19,0X46,0XD8,0X5D,0X6B,0X22,0XFF,0XF7,0XDF,0XFF,0XBD,0XFF,
N0X89,0XB3,0X86,0XC3,0XEA,0XFC,0XEA,0XFC,0XC9,0XFC,0XE9,0XFC,0XE9,0XFC,0XEA,0XFC,
N0XEA,0XFC,0XA8,0XBB,0XBC,0XFF,0XDD,0XFF,0XBA,0XFF,0X2E,0XED,0XEA,0XFC,0X0A,0XFD,
N0XEA,0XFC,0XEA,0XFC,0XC9,0XFC,0XEB,0XFC,0X89,0XB3,0XBB,0XFF,0XDD,0XFF,0XFF,0XFF,
N0X2A,0X32,0X2A,0X32,0XFF,0XFF,0XBC,0XFF,0XA9,0XB3,0X66,0XC3,0XEA,0XFC,0XE9,0XFC,
N0XE9,0XFC,0X0D,0XF5,0XBC,0XFF,0X09,0X42,0X2A,0X2A,0X16,0X8D,0X09,0X42,0XE6,0X51,
N0XBB,0XFF,0X2E,0XED,0X0A,0XFD,0XE8,0XFC,0XE9,0XFC,0X0B,0XFD,0X2E,0XED,0XBC,0XFF,
N0X49,0X32,0X97,0X6D,0XD8,0X55,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0X77,0X65,
N0X77,0X7D,0X2A,0X32,0XDE,0XFF,0XBB,0XFF,0X99,0XFF,0X67,0XBB,0X66,0XC3,0X67,0XC3,
N0X87,0XC3,0X86,0XC3,0X66,0XC3,0X66,0XC3,0X66,0XC3,0X85,0XC3,0XA8,0XB3,0XBD,0XFF,
N0XBF,0XFF,0XDD,0XFF,0X9A,0XFF,0X88,0XB3,0X67,0XBB,0X66,0XCB,0X66,0XCB,0X66,0XC3,
N0X46,0XC3,0XA7,0XCB,0X66,0XC3,0X86,0XC3,0X67,0XBB,0X99,0XFF,0XCA,0XAB,0X87,0XBB,
N0X66,0XC3,0X67,0XC3,0XA8,0XBB,0X89,0XAB,0X78,0XFF,0XC8,0XBB,0X86,0XBB,0X66,0XBB,
N0X67,0XC3,0X87,0XC3,0X67,0XBB,0X89,0XB3,0X9A,0XFF,0XBB,0XFF,0XCA,0XAB,0X87,0XBB,
N0X66,0XC3,0X87,0XC3,0X89,0XB3,0XDD,0XFF,0XFF,0XFF,0XBD,0XFF,0XBB,0XFF,0X68,0XBB,
N0X87,0XCB,0X45,0XC3,0X67,0XBB,0XCB,0XAB,0XFD,0XFF,0X28,0X32,0X77,0X75,0XB9,0X5D,
N0XDA,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,
N0XF9,0X4D,0X19,0X46,0XD8,0X4D,0X97,0X6D,0X6A,0X2A,0X2A,0X32,0XFF,0XFF,0XBC,0XFF,
N0X78,0XFF,0XA8,0XC3,0X87,0XC3,0X66,0XC3,0X86,0XC3,0X46,0XC3,0X87,0XC3,0XA8,0XBB,
N0X99,0XFF,0XDE,0XFF,0XBE,0XFF,0XBC,0XFF,0XCA,0XAB,0X67,0XB3,0X87,0XC3,0X87,0XC3,
N0X66,0XC3,0X66,0XCB,0X88,0XBB,0X9B,0XFF,0XBD,0XFF,0XFF,0XFF,0X4A,0X32,0X37,0X75,
N0X57,0X7D,0X29,0X32,0XDE,0XFF,0XBC,0XFF,0X99,0XFF,0X67,0XC3,0X66,0XCB,0X66,0XC3,
N0XA9,0XB3,0X9D,0XFF,0X2A,0X4A,0X4B,0X2A,0X56,0X8D,0X09,0X42,0XC6,0X49,0XBC,0XFF,
N0XA9,0XA3,0X86,0XBB,0XA6,0XC3,0XA6,0XC3,0X67,0XBB,0X89,0XAB,0XDD,0XFF,0X49,0X32,
N0X77,0X6D,0XB8,0X55,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XFA,0X5D,0X78,0X65,
N0X58,0X85,0X4A,0X32,0XFE,0XFF,0XFD,0XFF,0XBC,0XFF,0XBC,0XFF,0XBC,0XFF,0XBC,0XFF,
N0XBC,0XFF,0XBC,0XFF,0XBC,0XFF,0XBC,0XFF,0XBC,0XFF,0XBD,0XFF,0XDF,0XFF,0X29,0X4A,
N0XE7,0X49,0XDD,0XFF,0XDC,0XFF,0XBC,0XFF,0XBC,0XFF,0X9B,0XFF,0XBC,0XFF,0XBC,0XFF,
N0XBC,0XFF,0XBC,0XFF,0XBB,0XFF,0XBC,0XFF,0XDD,0XFF,0XDD,0XFF,0XBC,0XFF,0XDB,0XFF,
N0XBC,0XFF,0XBC,0XFF,0XDD,0XFF,0XFD,0XFF,0XBB,0XFF,0XDB,0XFF,0XDC,0XFF,0XDC,0XFF,
N0XBB,0XFF,0XDC,0XFF,0XBD,0XFF,0XDF,0XFF,0XFF,0XFF,0XBD,0XFF,0XDC,0XFF,0XBB,0XFF,
N0XBB,0XFF,0XBD,0XFF,0XBF,0XFF,0XDF,0XFF,0X28,0X52,0XDD,0XFF,0XDC,0XFF,0XDC,0XFF,
N0XDC,0XFF,0XDD,0XFF,0XBC,0XFF,0XFF,0XFF,0X6A,0X2A,0X98,0X6D,0XBA,0X55,0XFA,0X4D,
N0X19,0X46,0X19,0X46,0X19,0X46,0XFA,0X45,0XFA,0X4D,0XFA,0X4D,0XD9,0X4D,0XD9,0X4D,
N0XFA,0X4D,0XF9,0X4D,0XD8,0X5D,0XB8,0X6D,0X57,0X7D,0X4A,0X32,0XFF,0XFF,0XDD,0XFF,
N0XBC,0XFF,0XBC,0XFF,0XBD,0XFF,0XDC,0XFF,0XDC,0XFF,0XDC,0XFF,0XDC,0XFF,0XDD,0XFF,
N0XE8,0X49,0XDF,0XFF,0XBE,0XFF,0XFD,0XFF,0XDC,0XFF,0XDC,0XFF,0XBC,0XFF,0XDC,0XFF,
N0XBB,0XFF,0XDC,0XFF,0XDE,0XFF,0XE8,0X41,0X6A,0X3A,0X36,0X7D,0XD9,0X65,0X98,0X5D,
N0X78,0X7D,0X4A,0X32,0XDE,0XFF,0XDD,0XFF,0XBD,0XFF,0XBC,0XFF,0X9B,0XFF,0XDD,0XFF,
N0XDF,0XFF,0X0A,0X3A,0X2A,0X2A,0X15,0X8D,0XE9,0X41,0XE8,0X51,0XDF,0XFF,0XDE,0XFF,
N0XDC,0XFF,0XBB,0XFF,0XBB,0XFF,0XDC,0XFF,0XDD,0XFF,0XFF,0XFF,0X4A,0X2A,0X77,0X75,
N0XB8,0X5D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XDA,0X4D,0XB9,0X55,0X99,0X6D,
N0X6C,0X22,0XFF,0XF7,0XFF,0XFF,0XFF,0XFF,0XBF,0XFF,0XDF,0XFF,0XDF,0XFF,0XFF,0XFF,
N0XFF,0XFF,0XDF,0XFF,0XDF,0XFF,0XDF,0XFF,0XDF,0XFF,0XDF,0XFF,0XC8,0X41,0XE8,0X49,
N0XDF,0XFF,0XDF,0XFF,0XDF,0XFF,0XFF,0XFF,0XFF,0XFF,0XDF,0XFF,0XFF,0XFF,0XFF,0XFF,
N0XDF,0XFF,0XFF,0XFF,0XFF,0XFF,0XDF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
N0XDF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFE,0XFF,0XDF,0XFF,0XDF,0XFF,0XDF,0XFF,
N0XFF,0XFF,0XDF,0XFF,0XDF,0XFF,0XFF,0XFF,0XFF,0XFF,0XDE,0XFF,0XFF,0XFF,0XDF,0XFF,
N0XDF,0XFF,0XDF,0XFF,0XDF,0XFF,0XC8,0X49,0XDF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
N0XDF,0XFF,0XFF,0XFF,0XFF,0XFF,0X4B,0X22,0X78,0X6D,0XBA,0X55,0XFA,0X4D,0X19,0X46,
N0X19,0X46,0X1A,0X46,0XFA,0X45,0XFA,0X4D,0XFA,0X4D,0XFA,0X4D,0X1A,0X56,0XFA,0X4D,
N0XFA,0X4D,0X19,0X56,0X98,0X55,0XB8,0X6D,0X6B,0X1A,0XFF,0XF7,0XFF,0XFF,0XBF,0XFF,
N0XDF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XDF,0XFF,0XE9,0X51,
N0XBF,0XFF,0XDF,0XFF,0XDF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XDF,0XFF,0XFF,0XFF,
N0XFE,0XFF,0XFF,0XFF,0X2A,0X32,0X6B,0X1A,0X98,0X65,0XD9,0X4D,0XB9,0X4D,0XB9,0X65,
N0X6C,0X22,0XFF,0XF7,0XFF,0XFF,0XFF,0XFF,0XDF,0XFF,0XFF,0XFF,0XDF,0XFF,0XDF,0XFF,
N0X2A,0X42,0X4B,0X32,0X15,0X8D,0X0A,0X4A,0XC8,0X49,0XDF,0XFF,0XFF,0XFF,0XDF,0XFF,
N0XFF,0XFF,0XFF,0XFF,0XDF,0XFF,0XDF,0XFF,0XFF,0XFF,0X4B,0X2A,0X77,0X75,0XB8,0X5D,
N0XF9,0X4D,0XD9,0X4D,0XFA,0X4D,0XF9,0X4D,0XF9,0X4D,0XF9,0X4D,0XD9,0X55,0X77,0X6D,
N0X29,0X3A,0XC8,0X49,0XC9,0X49,0XEA,0X51,0XC9,0X49,0XC9,0X51,0XC9,0X49,0XC9,0X49,
N0XC8,0X49,0XE8,0X49,0XE9,0X49,0XC9,0X49,0XC9,0X49,0XC9,0X49,0XE9,0X49,0XC8,0X49,
N0XE9,0X49,0XE9,0X49,0XC8,0X49,0XE8,0X49,0XE9,0X49,0XC8,0X41,0XC8,0X49,0XE8,0X49,
N0XC8,0X49,0XC8,0X49,0XA8,0X49,0XE9,0X51,0XE8,0X49,0XC8,0X49,0XC8,0X49,0X09,0X52,
N0XE9,0X49,0XC7,0X41,0XC7,0X49,0XC7,0X49,0XC8,0X49,0XE9,0X51,0XC9,0X49,0XA9,0X49,
N0XA9,0X49,0XC9,0X51,0XC8,0X49,0XC8,0X49,0XC8,0X49,0XE9,0X49,0XA8,0X49,0XC9,0X49,
N0XCA,0X51,0XA9,0X49,0XC9,0X51,0XC7,0X49,0X08,0X52,0XC7,0X49,0XC8,0X49,0XC8,0X49,
N0XC8,0X51,0XE9,0X41,0X2A,0X2A,0X98,0X75,0XB9,0X5D,0XFA,0X4D,0X19,0X46,0X19,0X46,
N0XF9,0X4D,0XFA,0X4D,0XDA,0X4D,0XFA,0X4D,0XFA,0X4D,0XF9,0X45,0XD9,0X45,0X1A,0X4E,
N0XD9,0X45,0XF9,0X4D,0XD9,0X55,0X98,0X6D,0X2A,0X3A,0XC8,0X49,0XE9,0X51,0XC9,0X49,
N0XC9,0X49,0XC8,0X49,0XE9,0X49,0XC8,0X49,0XC8,0X49,0XE9,0X51,0X88,0X51,0XA8,0X51,
N0XC8,0X51,0XE9,0X51,0XC8,0X49,0XE8,0X51,0XC9,0X49,0XE9,0X51,0XA7,0X49,0XE8,0X41,
N0X4A,0X3A,0X57,0X75,0X98,0X5D,0XFA,0X55,0XD9,0X4D,0XFA,0X4D,0XD9,0X55,0X77,0X6D,
N0X2A,0X3A,0XC9,0X49,0XC9,0X49,0XE9,0X51,0XC8,0X49,0XC8,0X49,0XE9,0X51,0XC9,0X39,
N0X2B,0X2A,0X16,0X8D,0XE9,0X41,0XC8,0X49,0XC8,0X49,0X09,0X4A,0XE8,0X41,0XE8,0X49,
N0XE8,0X49,0XC8,0X49,0XEA,0X51,0XEA,0X41,0X4B,0X2A,0X78,0X75,0XB9,0X55,0XFA,0X4D,
N0XFA,0X45,0XFA,0X45,0XFA,0X45,};
L 14 "app\game.c" 2
N#include "flappybird_score_board.c"
L 1 ".\app\RES\Pic\flappybird_score_board.c" 1
Nconst unsigned char gImage_flappybird_score_board[25600] = { /* 0X00,0X10,0XA0,0X00,0X50,0X00,0X01,0X1B, */
N0XD8,0X5D,0XD8,0X5D,0X98,0X65,0X57,0X6D,0X36,0X7D,0X14,0X95,0X06,0X42,0X25,0X52,
N0X03,0X52,0X03,0X52,0X04,0X52,0X05,0X4A,0X04,0X4A,0X04,0X4A,0XE4,0X51,0XE4,0X51,
N0XE4,0X51,0X04,0X52,0X24,0X4A,0X24,0X4A,0X04,0X52,0X04,0X52,0X04,0X4A,0X04,0X4A,
N0X24,0X4A,0X04,0X4A,0X04,0X52,0X04,0X52,0X04,0X4A,0X04,0X4A,0X04,0X52,0X04,0X52,
N0X04,0X52,0X04,0X52,0X04,0X52,0X04,0X52,0X04,0X4A,0X04,0X4A,0X04,0X4A,0X04,0X4A,
N0X04,0X52,0X04,0X52,0X24,0X4A,0X04,0X4A,0X04,0X52,0XE4,0X51,0X04,0X52,0X04,0X52,
N0X04,0X4A,0X04,0X4A,0X04,0X4A,0X04,0X4A,0X04,0X4A,0X04,0X4A,0X04,0X4A,0X04,0X4A,
N0X04,0X4A,0X04,0X4A,0X04,0X4A,0X04,0X4A,0X04,0X4A,0X04,0X4A,0X04,0X4A,0X04,0X4A,
N0X03,0X4A,0X03,0X4A,0X03,0X4A,0X03,0X4A,0X03,0X4A,0X03,0X4A,0X03,0X4A,0X03,0X4A,
N0X03,0X4A,0X03,0X4A,0X03,0X4A,0X03,0X4A,0X03,0X4A,0X03,0X4A,0X03,0X4A,0X03,0X4A,
N0X04,0X4A,0X04,0X4A,0X04,0X4A,0X04,0X4A,0X04,0X4A,0X04,0X4A,0X04,0X4A,0X04,0X4A,
N0X04,0X4A,0X04,0X4A,0X04,0X4A,0X04,0X4A,0X04,0X4A,0X04,0X4A,0X04,0X4A,0X04,0X4A,
N0X04,0X4A,0X04,0X4A,0X04,0X4A,0X04,0X4A,0X04,0X4A,0X04,0X4A,0X04,0X4A,0X04,0X4A,
N0X04,0X4A,0X04,0X4A,0X04,0X4A,0X04,0X4A,0X04,0X4A,0X04,0X4A,0X04,0X4A,0X04,0X4A,
N0X04,0X4A,0X04,0X4A,0X04,0X4A,0X04,0X52,0X04,0X4A,0X04,0X4A,0X04,0X4A,0X04,0X4A,
N0X04,0X52,0X04,0X52,0X04,0X52,0X04,0X4A,0X04,0X4A,0X04,0X4A,0X04,0X4A,0X04,0X4A,
N0X24,0X4A,0X24,0X4A,0X24,0X4A,0X24,0X4A,0X04,0X4A,0X04,0X4A,0X04,0X4A,0X04,0X4A,
N0X04,0X4A,0X04,0X4A,0X24,0X4A,0X24,0X4A,0X24,0X4A,0X04,0X4A,0X04,0X4A,0X04,0X52,
N0XE4,0X51,0XE4,0X51,0X05,0X4A,0X05,0X4A,0X05,0X4A,0X04,0X4A,0XE4,0X51,0X04,0X52,
N0X24,0X52,0X05,0X42,0X14,0X95,0X36,0X7D,0X57,0X6D,0X98,0X65,0XB8,0X5D,0XB9,0X5D,
N0XB8,0X5D,0XB8,0X65,0X77,0X65,0XAB,0X1A,0X49,0X2A,0X27,0X32,0X39,0XE7,0X17,0XEF,
N0X37,0XF7,0X37,0XF7,0X38,0XF7,0X38,0XF7,0X38,0XF7,0X38,0XF7,0X38,0XF7,0X38,0XF7,
N0X37,0XF7,0X37,0XF7,0X57,0XEF,0X37,0XF7,0X37,0XF7,0X37,0XF7,0X37,0XF7,0X57,0XEF,
N0X37,0XF7,0X37,0XF7,0X37,0XF7,0X37,0XF7,0X37,0XF7,0X57,0XEF,0X37,0XF7,0X37,0XF7,
N0X37,0XF7,0X37,0XF7,0X37,0XF7,0X37,0XF7,0X37,0XF7,0X57,0XEF,0X57,0XEF,0X37,0XF7,
N0X37,0XF7,0X37,0XF7,0X57,0XEF,0X57,0XEF,0X37,0XF7,0X17,0XF7,0X37,0XF7,0X37,0XF7,
N0X37,0XF7,0X37,0XF7,0X37,0XF7,0X37,0XF7,0X37,0XF7,0X37,0XF7,0X37,0XF7,0X37,0XF7,
N0X37,0XF7,0X37,0XF7,0X37,0XF7,0X37,0XF7,0X37,0XF7,0X37,0XF7,0X37,0XF7,0X37,0XF7,
N0X37,0XF7,0X37,0XF7,0X37,0XF7,0X37,0XF7,0X37,0XF7,0X37,0XF7,0X37,0XF7,0X37,0XF7,
N0X37,0XF7,0X37,0XF7,0X37,0XF7,0X37,0XF7,0X37,0XF7,0X37,0XF7,0X37,0XF7,0X37,0XF7,
N0X37,0XF7,0X37,0XF7,0X37,0XF7,0X37,0XF7,0X37,0XF7,0X37,0XF7,0X37,0XF7,0X37,0XF7,
N0X37,0XF7,0X37,0XF7,0X37,0XF7,0X37,0XF7,0X37,0XF7,0X37,0XF7,0X37,0XF7,0X37,0XF7,
N0X37,0XF7,0X37,0XF7,0X37,0XF7,0X37,0XF7,0X37,0XF7,0X37,0XF7,0X37,0XF7,0X37,0XF7,
N0X37,0XF7,0X37,0XF7,0X37,0XF7,0X37,0XF7,0X37,0XF7,0X37,0XF7,0X37,0XF7,0X37,0XF7,
N0X57,0XEF,0X37,0XF7,0X37,0XF7,0X37,0XF7,0X37,0XF7,0X37,0XF7,0X37,0XF7,0X37,0XF7,
N0X37,0XF7,0X37,0XF7,0X37,0XF7,0X37,0XF7,0X37,0XF7,0X37,0XF7,0X37,0XF7,0X37,0XF7,
N0X37,0XF7,0X37,0XF7,0X57,0XEF,0X57,0XEF,0X37,0XF7,0X37,0XF7,0X37,0XF7,0X37,0XF7,
N0X37,0XF7,0X37,0XF7,0X57,0XEF,0X57,0XEF,0X57,0XEF,0X37,0XF7,0X37,0XF7,0X37,0XF7,
N0X37,0XF7,0X38,0XF7,0X38,0XF7,0X38,0XF7,0X38,0XF7,0X38,0XF7,0X37,0XF7,0X37,0XF7,
N0X17,0XEF,0X39,0XEF,0X27,0X32,0X49,0X2A,0XAB,0X1A,0X97,0X65,0XB8,0X65,0XB8,0X5D,
N0X98,0X65,0X77,0X65,0X55,0X75,0X89,0X2A,0X47,0X3A,0X45,0X42,0X57,0XEF,0X55,0XF7,
N0X55,0XF7,0X55,0XF7,0X55,0XEF,0X55,0XEF,0X55,0XF7,0X35,0XF7,0X35,0XF7,0X35,0XF7,
N0X35,0XF7,0X35,0XF7,0X35,0XF7,0X35,0XF7,0X35,0XF7,0X35,0XF7,0X35,0XF7,0X35,0XF7,
N0X35,0XF7,0X35,0XF7,0X15,0XF7,0X35,0XF7,0X35,0XF7,0X35,0XF7,0X35,0XF7,0X35,0XF7,
N0X36,0XF7,0X36,0XF7,0X36,0XF7,0X36,0XF7,0X56,0XEF,0X56,0XEF,0X56,0XEF,0X36,0XEF,
N0X36,0XF7,0X36,0XF7,0X56,0XEF,0X56,0XEF,0X36,0XF7,0X36,0XF7,0X36,0XF7,0X36,0XF7,
N0X36,0XF7,0X36,0XF7,0X36,0XF7,0X36,0XF7,0X36,0XF7,0X36,0XF7,0X36,0XF7,0X36,0XF7,
N0X36,0XF7,0X36,0XF7,0X36,0XF7,0X36,0XF7,0X36,0XF7,0X36,0XF7,0X36,0XF7,0X36,0XF7,
N0X36,0XF7,0X36,0XF7,0X36,0XF7,0X36,0XF7,0X36,0XF7,0X36,0XF7,0X36,0XF7,0X36,0XF7,
N0X36,0XF7,0X36,0XF7,0X36,0XF7,0X36,0XF7,0X36,0XF7,0X36,0XF7,0X36,0XF7,0X36,0XF7,
N0X35,0XF7,0X35,0XF7,0X35,0XF7,0X35,0XF7,0X35,0XF7,0X35,0XF7,0X35,0XF7,0X35,0XF7,
N0X35,0XF7,0X35,0XF7,0X35,0XF7,0X35,0XF7,0X35,0XF7,0X35,0XF7,0X35,0XF7,0X35,0XF7,
N0X36,0XF7,0X36,0XF7,0X36,0XF7,0X36,0XF7,0X36,0XF7,0X36,0XF7,0X36,0XF7,0X36,0XF7,
N0X36,0XF7,0X36,0XF7,0X36,0XF7,0X36,0XF7,0X36,0XF7,0X36,0XF7,0X36,0XF7,0X36,0XF7,
N0X36,0XEF,0X36,0XF7,0X36,0XF7,0X36,0XF7,0X36,0XF7,0X36,0XF7,0X36,0XF7,0X36,0XF7,
N0X36,0XF7,0X36,0XF7,0X36,0XF7,0X36,0XF7,0X36,0XF7,0X36,0XF7,0X36,0XF7,0X35,0XF7,
N0X35,0XF7,0X35,0XF7,0X35,0XF7,0X35,0XF7,0X55,0XEF,0X35,0XF7,0X35,0XF7,0X35,0XF7,
N0X35,0XF7,0X35,0XF7,0X55,0XEF,0X55,0XEF,0X55,0XEF,0X35,0XF7,0X35,0XF7,0X35,0XF7,
N0X55,0XF7,0X35,0XF7,0X35,0XF7,0X35,0XF7,0X55,0XEF,0X55,0XEF,0X35,0XF7,0X55,0XEF,
N0X55,0XF7,0X56,0XEF,0X45,0X42,0X47,0X3A,0X89,0X2A,0X55,0X75,0X77,0X65,0X98,0X65,
N0X57,0X6D,0XAB,0X1A,0X69,0X2A,0X3A,0XD7,0X59,0XE7,0X16,0XEF,0XB3,0XDE,0XB2,0XDE,
N0XD2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB1,0XDE,0XB1,0XDE,0XB1,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XE6,0XB2,0XE6,0X92,0XE6,0XB2,0XE6,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XE6,0XB2,0XE6,0X92,0XE6,0X92,0XE6,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB3,0XDE,0XB3,0XDE,0XB3,0XDE,0XB3,0XDE,0XB3,0XDE,0XB3,0XDE,0XB3,0XDE,0XB3,0XDE,
N0XB3,0XE6,0XB3,0XE6,0XB3,0XE6,0XB3,0XE6,0XB3,0XE6,0XB3,0XE6,0XB3,0XE6,0XB3,0XE6,
N0XB3,0XDE,0XB3,0XDE,0XB3,0XE6,0XB3,0XE6,0XB3,0XE6,0XB3,0XE6,0XB3,0XE6,0XB3,0XE6,
N0XB2,0XE6,0XB2,0XE6,0XB2,0XE6,0XB2,0XDE,0XD2,0XDE,0XB2,0XDE,0XB2,0XE6,0XB2,0XE6,
N0XB2,0XE6,0XB2,0XDE,0XD2,0XDE,0XD2,0XDE,0XD2,0XDE,0XB2,0XE6,0XB2,0XE6,0XB2,0XE6,
N0XD2,0XE6,0XD1,0XDE,0XD2,0XE6,0XB2,0XE6,0XB2,0XDE,0XD3,0XDE,0XD3,0XDE,0XD2,0XDE,
N0XB1,0XDE,0XB2,0XDE,0X16,0XE7,0X59,0XE7,0X3A,0XD7,0X68,0X2A,0XAB,0X1A,0X57,0X6D,
N0X16,0X7D,0X6A,0X2A,0X27,0X32,0XD7,0XD6,0X95,0XDE,0X94,0XE6,0XB3,0XE6,0XB3,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB3,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0X92,0XE6,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0X92,0XE6,0X92,0XE6,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XE6,0XB2,0XE6,0XB2,0XDE,0XB2,0XDE,0XD2,0XDE,0XB2,0XDE,0XB2,0XE6,0XB2,0XE6,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XE6,0XB2,0XE6,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XD2,0XDE,0XD2,0XDE,0XD2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB3,0XDE,0XB3,0XDE,0XB3,0XDE,0XB3,0XDE,
N0XD2,0XDE,0XB2,0XDE,0XB4,0XE6,0XB5,0XDE,0XD7,0XD6,0X27,0X32,0X4A,0X2A,0X16,0X7D,
N0XF4,0X8C,0X27,0X32,0X25,0X42,0X95,0XD6,0X94,0XE6,0X72,0XE6,0XB3,0XE6,0X92,0XDE,
N0XB3,0XDE,0XB3,0XDE,0XB3,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XD3,0XDE,
N0XD2,0XDE,0XD2,0XDE,0XB2,0XDE,0XB2,0XE6,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XE6,0XB2,0XE6,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XD2,0XDE,0XD2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XE6,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XE6,0XB2,0XE6,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XD2,0XDE,0XD2,0XDE,0XB2,0XDE,0XB2,0XE6,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XD2,0XDE,0XD2,0XDE,0XB2,0XE6,0XB2,0XE6,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XD2,0XDE,0XD2,0XDE,0XD2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XD3,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB3,0XDE,0XB3,0XDE,0XB3,0XDE,
N0XB2,0XDE,0XB2,0XE6,0X72,0XE6,0X93,0XE6,0X94,0XD6,0X45,0X42,0X28,0X32,0XF4,0X8C,
N0X26,0X42,0X39,0XE7,0X57,0XEF,0XB3,0XDE,0XD3,0XE6,0XB2,0XE6,0XB2,0XE6,0XB3,0XE6,
N0X92,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB1,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0X92,0XE6,0X92,0XE6,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XD2,0XDE,0XD2,0XDE,0XD2,0XDE,0XB2,0XDE,
N0XD2,0XDE,0XD2,0XDE,0XB2,0XDE,0XB2,0XDE,0XD2,0XDE,0XD2,0XDE,0XB2,0XDE,0XB2,0XE6,
N0XB2,0XE6,0XB2,0XE6,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XE6,0XB2,0XE6,
N0XB2,0XE6,0XB2,0XDE,0XD2,0XDE,0XD2,0XDE,0XD2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB3,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XE6,0XB2,0XE6,0XB2,0XE6,0XD3,0XE6,0XB2,0XDE,0X56,0XEF,0X39,0XEF,0X26,0X42,
N0X04,0X4A,0XB5,0XDE,0XB3,0XDE,0XB2,0XDE,0XD2,0XDE,0XB2,0XE6,0X92,0XE6,0X93,0XE6,
N0XB2,0XE6,0XB2,0XE6,0XB2,0XDE,0XD1,0XDE,0XD1,0XDE,0XD2,0XDE,0XB2,0XDE,0XB3,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XD2,0XDE,0XB2,0XDE,0XD2,0XDE,
N0XB2,0XDE,0XD2,0XDE,0XB2,0XDE,0XD2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XE6,0XB2,0XE6,0XB2,0XDE,0XB2,0XDE,0XB2,0XE6,0XB2,0XE6,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XE6,0XB2,0XE6,0XB2,0XDE,0XD2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XD2,0XDE,0XD2,0XDE,0XD2,0XDE,0XD2,0XDE,
N0XD2,0XDE,0XD2,0XDE,0XD2,0XDE,0XD2,0XDE,0XD2,0XDE,0XD2,0XDE,0XD2,0XDE,0XD2,0XDE,
N0XD2,0XDE,0XD2,0XDE,0XB2,0XE6,0XD2,0XDE,0XD2,0XDE,0XD2,0XDE,0XD2,0XDE,0XD2,0XDE,
N0XD2,0XDE,0XD2,0XDE,0XD2,0XDE,0XD2,0XDE,0XD2,0XDE,0XD2,0XDE,0XD2,0XDE,0XB2,0XE6,
N0XB2,0XE6,0XB2,0XE6,0XD2,0XDE,0XD2,0XDE,0XD2,0XDE,0XB2,0XE6,0XB2,0XE6,0XB2,0XE6,
N0XB2,0XE6,0XB2,0XE6,0XD2,0XDE,0XD2,0XDE,0XD2,0XDE,0XD2,0XDE,0XB2,0XE6,0XB2,0XE6,
N0XB3,0XE6,0XB3,0XDE,0XD2,0XDE,0XD2,0XDE,0XB1,0XDE,0XB2,0XDE,0XB2,0XE6,0XB3,0XE6,
N0XB2,0XE6,0XB2,0XDE,0XB2,0XE6,0XB2,0XDE,0XB1,0XDE,0XB3,0XDE,0XB5,0XDE,0X04,0X4A,
N0X03,0X52,0X95,0XDE,0XB3,0XDE,0XD2,0XDE,0XB2,0XDE,0XB3,0XDE,0X93,0XE6,0X93,0XE6,
N0XB2,0XE6,0XB2,0XE6,0XB1,0XDE,0XD1,0XDE,0XD1,0XDE,0XD1,0XDE,0XB2,0XDE,0XB2,0XE6,
N0XB2,0XE6,0XB1,0XE6,0XB1,0XDE,0XD2,0XDE,0XB2,0XDE,0XD2,0XDE,0XD2,0XDE,0XD1,0XDE,
N0XD2,0XDE,0XD1,0XDE,0XB1,0XDE,0XD1,0XDE,0XD2,0XE6,0XB1,0XDE,0XB1,0XDE,0XD2,0XE6,
N0XD2,0XDE,0XB1,0XDE,0XB2,0XE6,0XB1,0XDE,0XD2,0XE6,0XB1,0XDE,0XB1,0XDE,0XB2,0XE6,
N0XB2,0XDE,0XB1,0XDE,0XB2,0XDE,0XB1,0XE6,0XB2,0XDE,0XD1,0XDE,0XF2,0XE6,0XB1,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB1,0XDE,0XB2,0XDE,0XB1,0XDE,0XB2,0XDE,0XB1,0XDE,0XB2,0XDE,0XB1,0XDE,
N0XB2,0XDE,0XB1,0XDE,0XB2,0XDE,0XB1,0XDE,0XB2,0XDE,0XB1,0XDE,0XB2,0XDE,0XB1,0XDE,
N0XB1,0XDE,0XD2,0XE6,0XB2,0XDE,0XB1,0XDE,0XD2,0XDE,0XD1,0XDE,0XB2,0XDE,0XB1,0XDE,
N0XD2,0XDE,0XD2,0XDE,0XB1,0XDE,0XD2,0XE6,0XB2,0XDE,0XB1,0XDE,0XD2,0XE6,0X91,0XDE,
N0XD2,0XE6,0XB1,0XDE,0XD2,0XDE,0XD2,0XDE,0XB2,0XDE,0XD2,0XE6,0X91,0XDE,0XD2,0XE6,
N0XB2,0XDE,0XB1,0XDE,0XD2,0XDE,0XB1,0XDE,0XB1,0XDE,0XD2,0XDE,0XD2,0XE6,0XB2,0XE6,
N0XB2,0XE6,0XB2,0XDE,0XB2,0XDE,0XD1,0XDE,0XD1,0XDE,0XB1,0XDE,0XB2,0XE6,0XB2,0XE6,
N0XB2,0XDE,0XB3,0XDE,0XB3,0XDE,0XB2,0XDE,0XD2,0XDE,0XB3,0XDE,0X95,0XDE,0X04,0X52,
N0X03,0X52,0X95,0XDE,0XB3,0XDE,0XD3,0XDE,0XB2,0XDE,0XB3,0XDE,0XB3,0XDE,0XB3,0XE6,
N0XB2,0XE6,0XB1,0XDE,0XD1,0XDE,0XD1,0XDE,0XD1,0XDE,0XD1,0XDE,0XB2,0XDE,0XB2,0XE6,
N0XB2,0XE6,0XB2,0XE6,0XD2,0XE6,0XB2,0XDE,0XB2,0XDE,0XB1,0XDE,0XB2,0XDE,0XD2,0XDE,
N0XB2,0XDE,0XF2,0XDE,0XD2,0XDE,0XB1,0XDE,0XD2,0XE6,0XB2,0XDE,0XD2,0XE6,0X91,0XDE,
N0XB2,0XDE,0XD2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XD2,0XE6,0XB1,0XDE,0XB2,0XDE,
N0XD2,0XDE,0XD2,0XDE,0XB2,0XDE,0XB2,0XE6,0XB2,0XDE,0XB2,0XDE,0XD2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XD2,0XE6,0XB2,0XDE,0X91,0XDE,0XD2,0XDE,0XB2,0XDE,0XB2,0XE6,0XB2,0XDE,
N0XB1,0XDE,0XD2,0XE6,0XB2,0XDE,0XB2,0XDE,0XD2,0XE6,0XB2,0XDE,0XB2,0XDE,0XB2,0XE6,
N0XB2,0XDE,0XD2,0XDE,0XD2,0XDE,0XB2,0XDE,0XB2,0XDE,0XD2,0XE6,0XB2,0XE6,0XB2,0XDE,
N0XD2,0XDE,0XD2,0XDE,0X91,0XDE,0XD2,0XDE,0XD2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XE6,
N0XB2,0XE6,0XB2,0XE6,0XB2,0XDE,0XD2,0XDE,0XD1,0XDE,0XD1,0XDE,0XB2,0XDE,0XB2,0XE6,
N0XB2,0XDE,0XB2,0XDE,0XB3,0XDE,0XB3,0XDE,0XD2,0XDE,0XB3,0XDE,0X95,0XDE,0X04,0X52,
N0X04,0X4A,0X95,0XDE,0XB3,0XDE,0XD2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XD1,0XDE,0XD1,0XDE,0XD1,0XDE,0XD1,0XDE,0XD1,0XDE,0XB2,0XDE,0XB2,0XE6,0XB2,0XE6,
N0XB2,0XE6,0X92,0XE6,0XB2,0XDE,0XB2,0XDE,0XD2,0XDE,0XD2,0XE6,0XB2,0XDE,0XD2,0XDE,
N0XD2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XE6,0X92,0XE6,0XB2,0XE6,
N0XB2,0XDE,0X91,0XDE,0XD2,0XE6,0XD2,0XE6,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XD2,0XE6,
N0XB2,0XDE,0XB2,0XDE,0XD2,0XE6,0XB2,0XDE,0XD2,0XDE,0XD2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XD2,0XDE,0XD2,0XDE,0XB2,0XDE,0XD2,0XE6,0XB2,0XDE,0XD2,0XDE,
N0XD2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XE6,0XB2,0XDE,0XB2,0XDE,0XB1,0XD6,0XF2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XD2,0XE6,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XD2,0XDE,0XD2,0XDE,0XD2,0XE6,0XB2,0XDE,0XD2,0XDE,0XB2,0XDE,0XB2,0XE6,
N0XB2,0XE6,0XB2,0XE6,0XB2,0XDE,0XB2,0XDE,0XD1,0XDE,0XD1,0XDE,0XD1,0XDE,0XD1,0XDE,
N0XB1,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XD2,0XDE,0XB3,0XDE,0X95,0XDE,0X04,0X4A,
N0X04,0X4A,0X95,0XDE,0XB3,0XDE,0XD2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XD2,0XDE,
N0XD1,0XDE,0XD1,0XDE,0XD1,0XDE,0XD2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XE6,
N0X92,0XE6,0XB2,0XE6,0XB3,0XE6,0X92,0XE6,0XB3,0XE6,0X92,0XDE,0XB2,0XDE,0XD2,0XE6,
N0XD3,0XE6,0X92,0XDE,0XD3,0XEE,0X92,0XE6,0XB2,0XE6,0XB2,0XE6,0XB2,0XE6,0X92,0XE6,
N0XB3,0XE6,0XB2,0XE6,0X92,0XDE,0XB2,0XE6,0XB2,0XE6,0XB2,0XE6,0XB2,0XE6,0X91,0XDE,
N0XD3,0XE6,0XB2,0XE6,0X92,0XDE,0XB2,0XE6,0X92,0XDE,0XD2,0XE6,0X92,0XDE,0XB2,0XE6,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XD3,0XE6,0XB2,0XDE,0XB2,0XE6,0X92,0XE6,0X92,0XE6,0X92,0XE6,0X92,0XE6,0XB2,0XDE,
N0X92,0XDE,0X91,0XDE,0XB2,0XE6,0XB2,0XE6,0X92,0XE6,0XB2,0XE6,0XD2,0XE6,0XB2,0XDE,
N0XB2,0XE6,0X92,0XE6,0XB3,0XE6,0XB2,0XE6,0X92,0XDE,0X92,0XE6,0XB2,0XE6,0X92,0XE6,
N0XB3,0XEE,0X91,0XDE,0XB2,0XE6,0X92,0XDE,0X92,0XE6,0XB2,0XEE,0X92,0XE6,0X92,0XE6,
N0X92,0XE6,0XB2,0XE6,0XB2,0XE6,0XB2,0XDE,0XD2,0XDE,0XD1,0XDE,0XD1,0XDE,0XD1,0XDE,
N0XD1,0XDE,0XD1,0XDE,0XB2,0XDE,0XB2,0XDE,0XD2,0XDE,0XB3,0XDE,0X95,0XDE,0X05,0X4A,
N0X05,0X4A,0X95,0XDE,0XB3,0XDE,0XB2,0XE6,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XD1,0XDE,0XD1,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XE6,0XB2,0XE6,0X72,0XEE,0X92,0XF6,0X92,0XEE,0X92,0XE6,0XB2,0XE6,0XB2,0XE6,
N0X71,0XE6,0X92,0XEE,0X71,0XE6,0X92,0XEE,0X92,0XE6,0X92,0XE6,0XB2,0XEE,0X91,0XE6,
N0X92,0XEE,0XB2,0XEE,0X92,0XE6,0XB2,0XE6,0X92,0XEE,0X71,0XE6,0XB2,0XE6,0XD2,0XE6,
N0X92,0XE6,0X92,0XE6,0XB2,0XEE,0XB2,0XEE,0X92,0XE6,0XB2,0XE6,0X92,0XEE,0X72,0XE6,
N0XB2,0XE6,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0X71,0XDE,0XB2,0XEE,0X51,0XEE,0X72,0XF6,0X52,0XF6,0X51,0XF6,0X92,0XE6,0X91,0XE6,
N0X92,0XEE,0X72,0XEE,0X52,0XEE,0X31,0XEE,0X93,0XF6,0X71,0XEE,0X92,0XEE,0XB2,0XEE,
N0X92,0XEE,0X71,0XEE,0X72,0XEE,0X92,0XEE,0X71,0XE6,0XB2,0XEE,0X72,0XF6,0X52,0XF6,
N0X73,0XFE,0X51,0XEE,0XB3,0XF6,0X92,0XEE,0X92,0XF6,0X31,0XEE,0X93,0XFE,0X51,0XEE,
N0X92,0XE6,0XB2,0XE6,0XB3,0XE6,0XB3,0XDE,0XB2,0XDE,0XB2,0XDE,0XD2,0XDE,0XD1,0XDE,
N0XB1,0XDE,0XD1,0XDE,0XB2,0XDE,0XB2,0XDE,0XD2,0XDE,0XB3,0XDE,0X95,0XDE,0X05,0X4A,
N0X05,0X4A,0X95,0XDE,0XB3,0XDE,0XD2,0XE6,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XD2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XD2,0XDE,
N0XB2,0XDE,0X92,0XE6,0XCC,0XCC,0X6B,0XC4,0X52,0XF6,0X92,0XF6,0X91,0XE6,0XB2,0XEE,
N0XEC,0XBC,0X72,0XF6,0X72,0XF6,0XAB,0XBC,0X0C,0XC5,0X0C,0XBD,0XCB,0XB4,0X92,0XEE,
N0X72,0XEE,0XCB,0XBC,0X2C,0XBD,0XEB,0XB4,0XEB,0XBC,0XB2,0XF6,0X92,0XEE,0X91,0XE6,
N0X71,0XE6,0XEC,0XBC,0XCB,0XBC,0XCB,0XBC,0X92,0XEE,0X51,0XEE,0X72,0XEE,0XEC,0XBC,
N0XB2,0XE6,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XE6,
N0XB2,0XE6,0X71,0XEE,0X72,0XF6,0XAB,0XC4,0X8B,0XCC,0XCC,0XC4,0XEC,0XBC,0X92,0XEE,
N0X52,0XFE,0X32,0XFE,0XCC,0XCC,0XEC,0XC4,0X8A,0XBC,0X72,0XF6,0X51,0XEE,0XEC,0XBC,
N0X0C,0XC5,0XCB,0XC4,0X32,0XFE,0X52,0XFE,0X92,0XF6,0XAB,0XBC,0XCC,0XCC,0X8B,0XC4,
N0X8B,0XC4,0X52,0XFE,0X31,0XEE,0X72,0XF6,0XAB,0XCC,0X8B,0XCC,0X8B,0XCC,0XCC,0XC4,
N0X92,0XE6,0XB2,0XDE,0XB3,0XE6,0XB3,0XE6,0XB2,0XE6,0XB2,0XDE,0XB2,0XDE,0XD2,0XDE,
N0XB2,0XDE,0XD2,0XDE,0XB2,0XDE,0XB2,0XDE,0XD1,0XDE,0XB3,0XDE,0X95,0XDE,0X05,0X4A,
N0XE4,0X51,0X95,0XE6,0XB2,0XE6,0XD1,0XDE,0XB2,0XDE,0XB2,0XDE,0XB3,0XDE,0XB3,0XDE,
N0XB2,0XDE,0XB2,0XE6,0XB2,0XE6,0XB2,0XE6,0XB2,0XDE,0XD2,0XDE,0XD1,0XDE,0XD1,0XDE,
N0XB2,0XE6,0X72,0XEE,0X8C,0XD4,0X6C,0XDC,0X6B,0XCC,0X52,0XFE,0X72,0XF6,0XAB,0XBC,
N0X8C,0XCC,0XF1,0XFD,0X32,0XFE,0XAC,0XCC,0X73,0XFE,0X93,0XFE,0X14,0XFF,0X72,0XF6,
N0X52,0XF6,0X8B,0XBC,0XF4,0XFE,0XF4,0XFE,0XB3,0XFE,0XCC,0XC4,0X92,0XF6,0X72,0XEE,
N0XEC,0XC4,0XD4,0XFE,0XF4,0XFE,0XF4,0XFE,0XCC,0XC4,0X72,0XF6,0X11,0XF6,0X0C,0XC5,
N0X92,0XE6,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XE6,
N0X72,0XE6,0XEC,0XBC,0X8B,0XBC,0XB3,0XFE,0XD4,0XFE,0XD4,0XFE,0XD3,0XFE,0X72,0XF6,
N0X6B,0XD4,0X6C,0XD4,0XD4,0XFE,0XF4,0XFE,0X34,0XFF,0X92,0XEE,0XAB,0XC4,0XD4,0XFE,
N0XF4,0XFE,0XD3,0XFE,0XAC,0XDC,0X6B,0XDC,0XF1,0XFD,0XAC,0XCC,0X8B,0XCC,0XB3,0XFE,
N0XB3,0XFE,0XAB,0XCC,0X8B,0XCC,0XF1,0XFD,0X4C,0XE4,0X6C,0XE4,0X73,0XFE,0XF4,0XFE,
N0XB1,0XE6,0XD2,0XDE,0XB2,0XDE,0XB2,0XE6,0XB2,0XE6,0XB2,0XE6,0XB2,0XE6,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XD1,0XDE,0XB2,0XDE,0X95,0XE6,0XE5,0X51,
N0XE4,0X51,0X95,0XE6,0XB3,0XE6,0XD2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB3,0XDE,0XB3,0XDE,
N0XB2,0XE6,0XB2,0XE6,0XB2,0XE6,0XB2,0XE6,0XB2,0XDE,0XD2,0XDE,0XD1,0XDE,0XD1,0XDE,
N0XB2,0XE6,0X72,0XF6,0X4B,0XD4,0X4C,0XE4,0X73,0XFE,0XAC,0XCC,0XCC,0XC4,0XB4,0XFE,
N0X8C,0XD4,0XD1,0XFD,0XF1,0XFD,0X6B,0XCC,0XAC,0XD4,0XAC,0XCC,0XCC,0XC4,0X52,0XF6,
N0X32,0XFE,0XAB,0XC4,0X72,0XFE,0X31,0XF6,0X52,0XFE,0XAB,0XC4,0X52,0XEE,0X72,0XF6,
N0XAC,0XC4,0X32,0XFE,0X32,0XFE,0X52,0XFE,0X8B,0XC4,0X52,0XFE,0X32,0XFE,0XAB,0XC4,
N0X92,0XE6,0XB2,0XE6,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XE6,
N0X92,0XEE,0X14,0XFF,0XD4,0XFE,0XAC,0XC4,0X8B,0XBC,0XCC,0XC4,0X93,0XFE,0X31,0XF6,
N0X6C,0XDC,0X6C,0XDC,0X52,0XFE,0X72,0XEE,0XB2,0XEE,0X92,0XEE,0X8B,0XC4,0X32,0XFE,
N0X51,0XF6,0X52,0XFE,0X4B,0XDC,0X2B,0XE4,0XF1,0XFD,0X6B,0XCC,0X8B,0XD4,0X12,0XFE,
N0X11,0XFE,0X8B,0XCC,0XAC,0XD4,0XD1,0XFD,0X0B,0XEC,0X2B,0XE4,0X8B,0XD4,0XCB,0XBC,
N0XB1,0XE6,0XD1,0XDE,0XB2,0XDE,0XB2,0XE6,0XB2,0XE6,0XB2,0XE6,0XB2,0XE6,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XD2,0XDE,0XB2,0XDE,0XD2,0XDE,0XB3,0XDE,0X95,0XE6,0XE4,0X51,
N0X04,0X52,0X95,0XDE,0XB3,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XD2,0XDE,0XB2,0XDE,
N0X72,0XE6,0X72,0XF6,0X6C,0XDC,0X2B,0XDC,0X94,0XFE,0XAB,0XC4,0XAB,0XBC,0XD4,0XFE,
N0X6B,0XD4,0XF1,0XFD,0X12,0XFE,0X8B,0XCC,0X8B,0XCC,0XAB,0XC4,0XCC,0XC4,0X52,0XF6,
N0X52,0XFE,0XAC,0XCC,0X52,0XFE,0X52,0XF6,0X72,0XFE,0XCB,0XBC,0X72,0XEE,0X72,0XF6,
N0X8B,0XCC,0XF1,0XFD,0X32,0XFE,0X12,0XFE,0X8B,0XCC,0X32,0XFE,0X11,0XFE,0XAC,0XCC,
N0X92,0XEE,0X92,0XE6,0XB2,0XE6,0XB2,0XDE,0XD2,0XE6,0XB2,0XDE,0XD2,0XDE,0XD2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XD2,0XDE,0XD2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XE6,0X14,0XFF,0X15,0XFF,0XAB,0XC4,0XCC,0XCC,0XAB,0XC4,0X52,0XFE,0X12,0XFE,
N0X4C,0XDC,0X8C,0XDC,0X11,0XF6,0X92,0XF6,0X72,0XE6,0X51,0XE6,0XCC,0XC4,0X52,0XFE,
N0X52,0XFE,0X32,0XFE,0X2B,0XDC,0X2C,0XE4,0XD1,0XFD,0X6B,0XD4,0X4B,0XDC,0XD1,0XFD,
N0XF1,0XFD,0X8C,0XD4,0X8C,0XCC,0XF2,0XFD,0XEB,0XEB,0X4C,0XF4,0X6B,0XCC,0XCB,0XBC,
N0X92,0XE6,0XB2,0XE6,0XB2,0XE6,0XB2,0XE6,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XD2,0XDE,0XB3,0XDE,0X95,0XDE,0X04,0X52,
N0X03,0X4A,0X95,0XDE,0XB3,0XDE,0XB3,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XE6,
N0X92,0XEE,0X72,0XFE,0X4B,0XD4,0X6C,0XDC,0X11,0XF6,0XF4,0XFE,0X15,0XFF,0X31,0XF6,
N0XAC,0XD4,0XF1,0XFD,0X12,0XFE,0X6B,0XCC,0X94,0XFE,0X73,0XFE,0XB4,0XFE,0X32,0XFE,
N0X11,0XFE,0X8C,0XCC,0X12,0XFE,0X52,0XFE,0X31,0XF6,0XAB,0XBC,0X92,0XF6,0X72,0XF6,
N0XAC,0XCC,0X6B,0XCC,0X4B,0XCC,0X8C,0XCC,0X8B,0XCC,0X32,0XFE,0XF1,0XFD,0XAC,0XD4,
N0X32,0XF6,0X92,0XF6,0X51,0XEE,0XB2,0XEE,0X92,0XE6,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XE6,
N0X92,0XE6,0X93,0XF6,0X11,0XFE,0X73,0XFE,0X73,0XFE,0X53,0XFE,0X8B,0XCC,0X52,0XFE,
N0X6B,0XCC,0X8C,0XD4,0X12,0XFE,0X52,0XFE,0X92,0XF6,0X72,0XF6,0XAB,0XC4,0X32,0XFE,
N0X32,0XFE,0X11,0XFE,0X8C,0XDC,0X6C,0XDC,0XF1,0XFD,0X8C,0XD4,0X4B,0XDC,0X4B,0XDC,
N0X6B,0XD4,0X93,0XFE,0X94,0XFE,0XF2,0XFD,0X0C,0XEC,0XCB,0XE3,0X33,0XFE,0X93,0XFE,
N0X92,0XEE,0XB2,0XE6,0XB2,0XE6,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XD2,0XDE,0XD1,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB3,0XDE,0XB3,0XDE,0X95,0XDE,0X04,0X4A,
N0X03,0X4A,0X95,0XDE,0XB3,0XDE,0XB3,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XE6,
N0X71,0XE6,0X72,0XFE,0X4B,0XD4,0X6C,0XDC,0X32,0XF6,0X92,0XEE,0X92,0XE6,0X92,0XEE,
N0XCC,0XC4,0X32,0XFE,0X12,0XFE,0X6C,0XD4,0X2B,0XDC,0X0B,0XDC,0X8C,0XDC,0X12,0XFE,
N0X32,0XFE,0X6B,0XD4,0X4C,0XDC,0X4B,0XD4,0X8C,0XD4,0XD4,0XFE,0X72,0XF6,0X72,0XEE,
N0XAB,0XBC,0XD4,0XFE,0X15,0XFF,0XF4,0XFE,0XCC,0XCC,0X12,0XFE,0XF1,0XFD,0X4B,0XD4,
N0X4B,0XD4,0X8C,0XD4,0X8B,0XCC,0X31,0XF6,0X72,0XEE,0XB2,0XE6,0XD2,0XDE,0XF2,0XDE,
N0XD2,0XDE,0XD2,0XDE,0XD2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0X92,0XE6,
N0X72,0XF6,0X6B,0XCC,0X4C,0XE4,0X2C,0XEC,0X2B,0XE4,0X6C,0XDC,0XF5,0XFE,0X72,0XEE,
N0XF4,0XFE,0XB4,0XFE,0X8C,0XD4,0X8C,0XD4,0X6B,0XCC,0X52,0XFE,0XB4,0XFE,0X8B,0XCC,
N0X6B,0XD4,0XAC,0XD4,0XB4,0XFE,0XF4,0XFE,0X32,0XFE,0XAC,0XD4,0X4B,0XCC,0X94,0XFE,
N0XB3,0XFE,0XAC,0XC4,0X8B,0XCC,0XF2,0XFD,0X0B,0XE4,0X4D,0XF4,0X0B,0XE4,0X4B,0XD4,
N0X72,0XEE,0XB2,0XE6,0XB2,0XE6,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XD2,0XDE,0XD1,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB3,0XDE,0XB3,0XDE,0X95,0XDE,0X04,0X4A,
N0X03,0X4A,0X95,0XDE,0XB3,0XDE,0XB3,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0X92,0XE6,0X51,0XEE,0XCC,0XCC,0XAC,0XCC,0X52,0XEE,0X92,0XE6,0XB2,0XE6,0X92,0XE6,
N0XCB,0XBC,0X52,0XF6,0X52,0XFE,0X8C,0XCC,0X8C,0XDC,0X6C,0XDC,0XAC,0XD4,0X11,0XFE,
N0XF1,0XFD,0XAC,0XD4,0X6C,0XD4,0X8C,0XD4,0X8B,0XCC,0XD4,0XFE,0X92,0XEE,0X72,0XE6,
N0XEC,0XBC,0XF4,0XF6,0X54,0XF7,0X34,0XFF,0XCB,0XBC,0X32,0XF6,0X52,0XFE,0XAC,0XD4,
N0X6B,0XD4,0X8C,0XD4,0XAC,0XCC,0X31,0XF6,0X92,0XEE,0X92,0XE6,0X91,0XDE,0XB2,0XDE,
N0XD2,0XDE,0XD2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XE6,0XB2,0XE6,0XB2,0XE6,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XE6,
N0X72,0XEE,0XAC,0XCC,0X8C,0XE4,0X2B,0XE4,0X6C,0XDC,0X4B,0XCC,0XF4,0XFE,0X92,0XE6,
N0X34,0XFF,0X14,0XFF,0X8B,0XC4,0X8B,0XCC,0XAC,0XCC,0X52,0XFE,0XD4,0XFE,0XAB,0XC4,
N0XAC,0XD4,0X8B,0XC4,0XF4,0XFE,0X34,0XFF,0X72,0XF6,0XAC,0XC4,0XAC,0XCC,0X73,0XFE,
N0XF4,0XFE,0XCB,0XBC,0X8B,0XBC,0X11,0XFE,0X4B,0XD4,0X4B,0XDC,0X4C,0XE4,0X8C,0XDC,
N0X72,0XEE,0XB2,0XE6,0XB2,0XE6,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XD2,0XDE,0XD1,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB3,0XDE,0XB3,0XDE,0X95,0XDE,0X04,0X4A,
N0X03,0X4A,0X95,0XDE,0XB3,0XDE,0XB3,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XE6,0XB2,0XE6,0XF4,0XF6,0X14,0XFF,0XB2,0XE6,0X91,0XDE,0XD2,0XE6,0XB2,0XE6,
N0X14,0XF7,0XB2,0XEE,0X72,0XEE,0X14,0XFF,0XF4,0XFE,0XF4,0XFE,0XF4,0XFE,0X92,0XEE,
N0X92,0XEE,0X14,0XFF,0X14,0XFF,0X15,0XFF,0XF4,0XFE,0XB2,0XEE,0X71,0XDE,0XD2,0XE6,
N0X55,0XFF,0X92,0XE6,0XD2,0XE6,0X91,0XDE,0X54,0XF7,0XB2,0XEE,0X72,0XF6,0XF4,0XFE,
N0X14,0XFF,0X14,0XFF,0XF3,0XF6,0XD3,0XEE,0XB2,0XE6,0XB2,0XDE,0XD2,0XDE,0XD2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XE6,0XB2,0XE6,0XB2,0XE6,0XB2,0XE6,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0X35,0XFF,0XD3,0XFE,0XD4,0XFE,0XF4,0XFE,0X35,0XFF,0X91,0XDE,0XD2,0XE6,
N0XB2,0XE6,0X92,0XE6,0X14,0XFF,0X14,0XFF,0X35,0XFF,0X72,0XEE,0X51,0XE6,0X35,0XFF,
N0XF4,0XFE,0X14,0XFF,0XD3,0XEE,0X92,0XE6,0X92,0XE6,0X34,0XFF,0X35,0XFF,0X93,0XF6,
N0X72,0XEE,0X35,0XFF,0X34,0XFF,0X71,0XE6,0X35,0XFF,0X15,0XFF,0XB4,0XFE,0XF4,0XFE,
N0X92,0XE6,0XB2,0XE6,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XD2,0XDE,0XD1,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB3,0XDE,0XB3,0XDE,0X95,0XDE,0X04,0X4A,
N0X03,0X4A,0X95,0XDE,0XB3,0XDE,0XB3,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XE6,0XB2,0XE6,0XD3,0XE6,0XD2,0XDE,0X91,0XDE,0XD3,0XE6,0XB2,0XE6,0X91,0XDE,
N0XD3,0XE6,0X92,0XDE,0X92,0XDE,0XB2,0XE6,0XB2,0XDE,0XB2,0XE6,0XD2,0XE6,0XB2,0XDE,
N0XB2,0XDE,0XD2,0XDE,0XB2,0XE6,0X92,0XE6,0X91,0XDE,0XB2,0XE6,0XB2,0XDE,0XD2,0XDE,
N0X92,0XE6,0X92,0XDE,0XD2,0XE6,0XD2,0XE6,0X91,0XDE,0XB2,0XDE,0X71,0XE6,0XB2,0XEE,
N0X71,0XDE,0X92,0XDE,0XF3,0XE6,0XB2,0XDE,0XD2,0XDE,0XB2,0XDE,0XD2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XE6,0XB2,0XE6,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XD2,0XDE,0XB1,0XD6,0XB2,0XE6,0XB2,0XE6,0XB2,0XE6,0XD2,0XE6,0XD2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XF3,0XE6,0X91,0XDE,0XB2,0XE6,0X92,0XE6,0XB2,0XE6,0X71,0XE6,
N0XB2,0XEE,0X92,0XE6,0XB2,0XE6,0X92,0XDE,0XB2,0XDE,0XB2,0XDE,0X92,0XE6,0X92,0XE6,
N0X72,0XE6,0XB2,0XE6,0XB2,0XE6,0XD2,0XDE,0XB2,0XDE,0XB2,0XE6,0XB2,0XEE,0X92,0XE6,
N0XB2,0XE6,0XB2,0XE6,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XD2,0XDE,0XD1,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB3,0XDE,0XB3,0XDE,0X95,0XDE,0X04,0X4A,
N0X03,0X4A,0X95,0XDE,0XB3,0XDE,0XB3,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XE6,0X91,0XDE,0XD2,0XE6,0XB2,0XDE,0XB2,0XDE,0X92,0XDE,0X92,0XE6,0XB2,0XE6,
N0XB2,0XE6,0X92,0XDE,0XD2,0XE6,0XB2,0XDE,0XB2,0XDE,0XD2,0XE6,0XB2,0XDE,0XB2,0XDE,
N0XD2,0XDE,0XD2,0XDE,0XB2,0XDE,0XB2,0XDE,0XF3,0XE6,0XB2,0XDE,0XB2,0XDE,0XD2,0XDE,
N0X92,0XE6,0XB2,0XEE,0X92,0XE6,0X92,0XE6,0XD2,0XDE,0XB2,0XDE,0XD2,0XE6,0X92,0XDE,
N0XD2,0XE6,0XB2,0XDE,0XD2,0XDE,0XB2,0XDE,0XD2,0XDE,0XD2,0XDE,0XB2,0XDE,0XD2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XD2,0XDE,0XD2,0XDE,0XD2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XF2,0XDE,0XB2,0XD6,0XB2,0XE6,0XB2,0XE6,0X91,0XDE,0XD2,0XE6,0X91,0XDE,0XD2,0XE6,
N0XB2,0XDE,0XD2,0XDE,0X91,0XD6,0XD2,0XDE,0XD2,0XE6,0X92,0XE6,0XB2,0XDE,0XD2,0XE6,
N0XB2,0XDE,0XB2,0XE6,0X91,0XDE,0XD2,0XE6,0XB2,0XDE,0XB2,0XE6,0XB2,0XE6,0XB2,0XE6,
N0XB2,0XEE,0X92,0XE6,0X91,0XDE,0XD2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB1,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB3,0XDE,0XB3,0XDE,0X95,0XDE,0X04,0X4A,
N0X03,0X4A,0X95,0XDE,0XB3,0XDE,0XB3,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XE6,0XB2,0XE6,0X92,0XE6,0XB2,0XE6,
N0XB2,0XE6,0XD2,0XE6,0XB2,0XDE,0XB2,0XDE,0XD2,0XE6,0X91,0XDE,0XD2,0XDE,0XD2,0XDE,
N0XD2,0XDE,0XB2,0XDE,0XD2,0XDE,0XD2,0XDE,0X91,0XDE,0XB2,0XDE,0XD2,0XDE,0XB2,0XDE,
N0XB2,0XE6,0X92,0XE6,0X92,0XE6,0X92,0XE6,0XD2,0XE6,0XB2,0XDE,0XB2,0XDE,0XD2,0XE6,
N0XB2,0XDE,0XD2,0XDE,0XD2,0XDE,0XB2,0XDE,0XB2,0XDE,0XD2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XD2,0XDE,0XD2,0XDE,0XD2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XD2,0XDE,0XB2,0XE6,0XB2,0XE6,0XB2,0XE6,0XB2,0XDE,0XD3,0XE6,0XB2,0XDE,
N0XD2,0XDE,0XD2,0XDE,0XD2,0XDE,0XD2,0XDE,0XB2,0XDE,0XB2,0XDE,0XD2,0XDE,0XB2,0XDE,
N0XD2,0XE6,0XB2,0XDE,0XB2,0XE6,0XB2,0XE6,0XD2,0XE6,0XB2,0XDE,0XB2,0XE6,0XB2,0XDE,
N0X92,0XDE,0XB2,0XE6,0XD2,0XDE,0XB2,0XDE,0XD2,0XDE,0XD2,0XDE,0XD2,0XDE,0XD2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB1,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB3,0XDE,0XB3,0XDE,0X95,0XDE,0X04,0X4A,
N0X03,0X4A,0X95,0XDE,0XB3,0XDE,0XB3,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XE6,0XB2,0XE6,0XB2,0XE6,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XE6,0XB2,0XE6,0XB2,0XE6,0XD2,0XDE,0XD2,0XDE,0XD2,0XDE,0XB2,0XDE,
N0XB2,0XE6,0XB2,0XE6,0XB2,0XE6,0XD2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XD2,0XDE,0XD2,0XDE,0XD2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XE6,0XB2,0XDE,0XB2,0XE6,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XE6,0XB2,0XE6,0XB2,0XE6,0XB2,0XE6,0XB2,0XE6,0XB2,0XE6,0XB2,0XDE,0XB2,0XDE,
N0XD2,0XDE,0XD2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XD2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XD2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB1,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB3,0XDE,0XB3,0XDE,0X95,0XDE,0X04,0X4A,
N0X03,0X4A,0X95,0XDE,0XB3,0XDE,0XB3,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XD2,0XDE,0XD2,0XDE,
N0XD2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XE6,0XB2,0XE6,
N0XB2,0XE6,0XB2,0XE6,0XB2,0XE6,0X92,0XE6,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XE6,0XB2,0XE6,0XB2,0XE6,0XB2,0XE6,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XE6,0XB2,0XE6,0XB2,0XDE,0XB2,0XDE,0XB2,0XE6,0XB2,0XE6,0XB2,0XDE,0XB2,0XDE,
N0XD2,0XDE,0XD2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XE6,0XB2,0XDE,0XB2,0XDE,0XD2,0XDE,0XD2,0XDE,0XD2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XD2,0XDE,0XD2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB1,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB3,0XDE,0XB3,0XDE,0X95,0XDE,0X04,0X4A,
N0X03,0X4A,0X95,0XDE,0XB3,0XDE,0XB3,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XE6,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XE6,0XB2,0XDE,0XD2,0XDE,0XB2,0XDE,0XB2,0XE6,0XB2,0XE6,
N0XB2,0XE6,0XB2,0XDE,0XB2,0XE6,0XB2,0XE6,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XE6,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XD2,0XDE,0XD2,0XDE,0XD2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XE6,0XB2,0XE6,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XE6,0XB2,0XE6,0XB2,0XE6,0XB2,0XDE,0XD2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XE6,0XB2,0XE6,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB1,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB3,0XDE,0XB3,0XDE,0X95,0XDE,0X04,0X4A,
N0X03,0X4A,0X95,0XDE,0XB3,0XDE,0XB3,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XD2,0XDE,0XD2,0XDE,0XD2,0XDE,0XB2,0XE6,0XB2,0XE6,
N0XB2,0XE6,0XB2,0XDE,0XB2,0XE6,0XB2,0XE6,0XD2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XD2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XD2,0XDE,0XD2,0XDE,0XD2,0XDE,0XD2,0XDE,0XD2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XE6,0XB2,0XE6,0XB2,0XDE,0XB2,0XDE,0XB2,0XE6,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XE6,0XB2,0XE6,0XB2,0XDE,0XD2,0XDE,0XD2,0XDE,0XB2,0XDE,
N0XB2,0XE6,0XB2,0XE6,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB1,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB3,0XDE,0XB3,0XDE,0X95,0XDE,0X04,0X4A,
N0X03,0X4A,0X95,0XDE,0XB3,0XDE,0XB3,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XD2,0XDE,
N0XD2,0XDE,0XD2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XD2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XD2,0XDE,0XD2,0XDE,0XD2,0XDE,0XB2,0XDE,0X92,0XDE,0X92,0XDE,
N0X92,0XE6,0X92,0XE6,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XD2,0XDE,0XD2,0XDE,0XB2,0XDE,0X92,0XDE,0XB2,0XDE,0XD2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XE6,0XB2,0XE6,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XE6,0XB2,0XE6,0XB2,0XE6,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XD2,0XDE,0XD2,0XDE,0XD2,0XDE,0XB2,0XDE,0XB2,0XE6,
N0XB2,0XE6,0XB2,0XE6,0XB2,0XDE,0XD2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XE6,0XB2,0XE6,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XD2,0XDE,0XD2,0XDE,0XD2,0XDE,
N0XD2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XE6,0XB2,0XE6,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XD2,0XDE,0XD2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB1,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB3,0XDE,0XB3,0XDE,0X95,0XDE,0X04,0X4A,
N0X03,0X4A,0X95,0XDE,0XB3,0XDE,0XB3,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XD2,0XDE,
N0XD2,0XDE,0XD2,0XDE,0XB2,0XE6,0XB2,0XE6,0XB2,0XDE,0XD2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XD2,0XDE,0XD2,0XDE,0XB2,0XE6,0X92,0XDE,0X91,0XDE,0X71,0XD6,
N0X71,0XDE,0X71,0XDE,0X71,0XDE,0X71,0XD6,0X91,0XD6,0X91,0XDE,0XB2,0XDE,0XD2,0XDE,
N0XD2,0XDE,0XD2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XE6,0XB2,0XE6,0XB2,0XE6,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XD2,0XDE,0XD2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XE6,0XB2,0XDE,0XB2,0XDE,0XD2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XE6,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XD2,0XDE,0XD2,0XDE,0XD2,0XDE,
N0XD2,0XDE,0XD2,0XDE,0XB2,0XDE,0XB2,0XE6,0XB2,0XE6,0XB2,0XDE,0XB2,0XDE,0XD2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XD2,0XDE,0XD2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB1,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB3,0XDE,0XB3,0XDE,0X95,0XDE,0X04,0X4A,
N0X03,0X4A,0X95,0XDE,0XB3,0XDE,0XB3,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XD2,0XDE,
N0XD2,0XDE,0XD2,0XDE,0XB2,0XDE,0XB2,0XE6,0XB2,0XE6,0XB2,0XE6,0XB2,0XE6,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XD2,0XDE,0XB2,0XDE,0XB2,0XDE,0X91,0XDE,0X91,0XD6,0X91,0XD6,
N0X91,0XD6,0X71,0XD6,0X71,0XD6,0X71,0XD6,0X71,0XD6,0X91,0XDE,0X92,0XDE,0XB2,0XE6,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XE6,0XB2,0XDE,
N0XB2,0XDE,0XD2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XD2,0XDE,0XD2,0XDE,0XD2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XE6,0XB2,0XE6,0XB2,0XDE,0XD2,0XDE,0XD2,0XD6,
N0XD2,0XDE,0XB2,0XDE,0XD2,0XDE,0XD2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB1,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB3,0XDE,0XB3,0XDE,0X95,0XDE,0X04,0X4A,
N0X04,0X4A,0X95,0XDE,0XB3,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XD2,0XDE,0XD2,0XDE,0XB2,0XDE,0XB2,0XE6,0XB2,0XE6,0XB2,0XE6,0XB2,0XE6,0XB2,0XDE,
N0XD2,0XE6,0XD2,0XDE,0XB2,0XDE,0X91,0XDE,0X91,0XD6,0X91,0XD6,0X91,0XD6,0X91,0XD6,
N0X91,0XD6,0X91,0XD6,0X91,0XD6,0X71,0XD6,0X71,0XD6,0X71,0XD6,0X71,0XDE,0X71,0XDE,
N0X91,0XDE,0XB2,0XDE,0XB2,0XDE,0XD2,0XE6,0XB2,0XE6,0XB2,0XE6,0XB2,0XE6,0XB2,0XDE,
N0XD2,0XDE,0XD2,0XDE,0XD2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XD2,0XDE,0XD2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XE6,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XD2,0XDE,0XD2,0XD6,
N0XD2,0XDE,0XB2,0XDE,0XD2,0XDE,0XD2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB1,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB3,0XDE,0XB3,0XDE,0X95,0XDE,0X04,0X4A,
N0X04,0X4A,0X95,0XDE,0XB3,0XDE,0XD2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XD2,0XDE,0XB2,0XDE,0XB2,0XDE,0X92,0XDE,0XD2,0XE6,0XB2,0XDE,0XB2,0XDE,
N0X71,0XD6,0X71,0XD6,0X71,0XD6,0X71,0XD6,0X71,0XD6,0X71,0XD6,0X71,0XD6,0X71,0XD6,
N0X71,0XD6,0X71,0XD6,0X71,0XD6,0X71,0XD6,0X71,0XD6,0X71,0XD6,0X71,0XD6,0X71,0XD6,
N0X71,0XD6,0X71,0XD6,0X71,0XD6,0X71,0XD6,0XB2,0XDE,0XD2,0XE6,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XD2,0XDE,0XD2,0XDE,0XD2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XD2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XE6,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XD2,0XDE,0XD2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB1,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB3,0XDE,0XB3,0XDE,0X95,0XDE,0X04,0X4A,
N0X04,0X4A,0X95,0XDE,0XB3,0XDE,0XD2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XD2,0XDE,0XB2,0XDE,0XD2,0XDE,0XB2,0XDE,0XD2,0XE6,0XB2,0XDE,0XB2,0XDE,
N0X71,0XD6,0X71,0XD6,0X71,0XD6,0X71,0XD6,0X71,0XD6,0X71,0XD6,0X71,0XD6,0X71,0XD6,
N0X71,0XD6,0X71,0XD6,0X71,0XD6,0X71,0XD6,0X71,0XD6,0X71,0XD6,0X71,0XD6,0X71,0XD6,
N0X71,0XD6,0X71,0XD6,0X71,0XD6,0X71,0XD6,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XD2,0XDE,0XD2,0XDE,0XD2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XE6,
N0XB2,0XE6,0XB2,0XDE,0XD2,0XDE,0XD2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XD2,0XDE,
N0XD2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB1,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB3,0XDE,0XB3,0XDE,0X95,0XDE,0X04,0X4A,
N0X04,0X4A,0X95,0XDE,0XB3,0XDE,0XD2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0X92,0XDE,0X92,0XDE,
N0X71,0XD6,0X71,0XD6,0X71,0XD6,0X71,0XD6,0X71,0XD6,0X71,0XD6,0X71,0XD6,0X71,0XD6,
N0X71,0XD6,0X71,0XD6,0X71,0XD6,0X71,0XD6,0X71,0XD6,0X71,0XD6,0X71,0XD6,0X71,0XD6,
N0X71,0XD6,0X71,0XD6,0X71,0XD6,0X71,0XD6,0X92,0XDE,0X92,0XDE,0XB2,0XDE,0XD2,0XE6,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XE6,
N0XB2,0XE6,0XB2,0XE6,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XE6,0XB2,0XE6,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB1,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB3,0XDE,0XB3,0XDE,0X95,0XDE,0X04,0X4A,
N0X04,0X4A,0X95,0XDE,0XB3,0XDE,0XD2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XD2,0XDE,0XB2,0XDE,0XB2,0XDE,0X71,0XD6,0X71,0XD6,0X71,0XD6,
N0X71,0XD6,0X71,0XD6,0X71,0XD6,0X71,0XD6,0X71,0XD6,0X71,0XD6,0X71,0XD6,0X71,0XD6,
N0X71,0XD6,0X71,0XD6,0X71,0XD6,0X71,0XD6,0X71,0XD6,0X71,0XD6,0X71,0XD6,0X71,0XD6,
N0X71,0XD6,0X71,0XD6,0X71,0XD6,0X71,0XD6,0X71,0XD6,0X71,0XD6,0X91,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XE6,0XB2,0XE6,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XE6,
N0XB2,0XE6,0XB2,0XE6,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XD2,0XDE,0XD2,0XDE,0XD2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XE6,0XB2,0XE6,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB1,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB3,0XDE,0XB3,0XDE,0X95,0XDE,0X04,0X4A,
N0X04,0X4A,0X95,0XDE,0XB3,0XDE,0XD2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XD2,0XE6,0XB2,0XDE,0XD2,0XDE,0XB2,0XDE,0XB2,0XDE,0X71,0XD6,0X71,0XD6,0X71,0XD6,
N0X71,0XD6,0X71,0XD6,0X71,0XD6,0X71,0XD6,0X71,0XD6,0X71,0XD6,0X71,0XD6,0X71,0XD6,
N0X71,0XD6,0X71,0XD6,0X71,0XD6,0X71,0XD6,0X71,0XD6,0X71,0XD6,0X71,0XD6,0X71,0XD6,
N0X71,0XD6,0X71,0XD6,0X71,0XD6,0X71,0XD6,0X71,0XD6,0X71,0XD6,0X71,0XD6,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XE6,0XB2,0XE6,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XE6,0XB2,0XE6,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XD2,0XDE,0XD2,0XDE,0XD2,0XDE,0XD2,0XDE,0XD2,0XDE,
N0XD2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XE6,0XB2,0XE6,0XB2,0XE6,0XB2,0XE6,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB1,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB3,0XDE,0XB3,0XDE,0X95,0XDE,0X04,0X4A,
N0X04,0X4A,0X95,0XDE,0XB3,0XDE,0XD2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0X71,0XD6,0X71,0XD6,0X71,0XD6,
N0X71,0XD6,0X71,0XD6,0X71,0XD6,0X71,0XD6,0X71,0XD6,0X71,0XD6,0X71,0XD6,0X71,0XD6,
N0X71,0XD6,0X71,0XD6,0X71,0XD6,0X71,0XD6,0X71,0XD6,0X71,0XD6,0X71,0XD6,0X71,0XD6,
N0X71,0XD6,0X71,0XD6,0X71,0XD6,0X71,0XD6,0X71,0XD6,0X71,0XD6,0X71,0XD6,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XE6,0XB2,0XE6,0XB2,0XDE,0XD2,0XDE,0XD2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XD2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XD2,0XDE,0XD2,0XDE,0XD2,0XDE,0XD2,0XDE,0XD2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XE6,0XB2,0XE6,0XB2,0XE6,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB1,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB3,0XDE,0XB3,0XDE,0X95,0XDE,0X04,0X4A,
N0X04,0X4A,0X95,0XDE,0XB3,0XDE,0XD2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0X92,0XDE,0X71,0XD6,0X71,0XD6,0X71,0XD6,
N0X71,0XD6,0X71,0XD6,0X71,0XD6,0X71,0XD6,0X71,0XD6,0X71,0XD6,0X71,0XD6,0X71,0XD6,
N0X71,0XD6,0X71,0XD6,0X71,0XD6,0X71,0XD6,0X71,0XD6,0X71,0XD6,0X71,0XD6,0X71,0XD6,
N0X71,0XD6,0X71,0XD6,0X71,0XD6,0X71,0XD6,0X71,0XD6,0X71,0XD6,0X71,0XD6,0X91,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XE6,0XB2,0XE6,0XB2,0XDE,0XD2,0XDE,0XD2,0XDE,0XD2,0XDE,
N0XD2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XE6,
N0XB2,0XE6,0XB2,0XE6,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XD2,0XDE,0XD2,0XDE,0XD2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB1,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB3,0XDE,0XB3,0XDE,0X95,0XDE,0X04,0X4A,
N0X04,0X4A,0X95,0XDE,0XB3,0XDE,0XD2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XD2,0XE6,0XB2,0XDE,0XB2,0XDE,0X71,0XD6,0X71,0XD6,0X71,0XD6,0X71,0XD6,
N0X71,0XD6,0X71,0XD6,0X71,0XD6,0X71,0XD6,0X71,0XD6,0X71,0XD6,0X71,0XD6,0X71,0XD6,
N0X71,0XD6,0X71,0XD6,0X71,0XD6,0X71,0XD6,0X71,0XD6,0X71,0XD6,0X71,0XD6,0X71,0XD6,
N0X71,0XD6,0X71,0XD6,0X71,0XD6,0X71,0XD6,0X71,0XD6,0X71,0XD6,0X71,0XD6,0X71,0XD6,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XD2,0XDE,0XD2,0XDE,
N0XD2,0XDE,0XB2,0XDE,0XB2,0XE6,0XB2,0XE6,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XE6,
N0XB2,0XE6,0XB2,0XE6,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XE6,0XB2,0XE6,
N0XB2,0XE6,0XB2,0XE6,0XB2,0XE6,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB1,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB3,0XDE,0XB3,0XDE,0X95,0XDE,0X04,0X4A,
N0X04,0X4A,0X95,0XDE,0XB3,0XDE,0XD2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XD2,0XE6,0XB2,0XDE,0XB2,0XDE,0X91,0XDE,0X71,0XD6,0X71,0XD6,0X71,0XD6,
N0X71,0XD6,0X71,0XD6,0X71,0XD6,0X71,0XD6,0X71,0XD6,0X71,0XD6,0X71,0XD6,0X71,0XD6,
N0X71,0XD6,0X71,0XD6,0X71,0XD6,0X71,0XD6,0X71,0XD6,0X71,0XD6,0X71,0XD6,0X71,0XD6,
N0X71,0XD6,0X71,0XD6,0X71,0XD6,0X71,0XD6,0X71,0XD6,0X71,0XD6,0X71,0XD6,0X71,0XD6,
N0XB2,0XDE,0X91,0XDE,0XD2,0XE6,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XD2,0XDE,0XD2,0XDE,0XD2,0XDE,0XB2,0XDE,0XB2,0XE6,0XB2,0XE6,0XB2,0XDE,0XB2,0XDE,
N0X92,0XDE,0XD3,0XEE,0X92,0XE6,0XB2,0XE6,0XB2,0XDE,0XB2,0XDE,0XB2,0XE6,0X72,0XE6,
N0XB2,0XEE,0X92,0XE6,0XB2,0XE6,0XD2,0XE6,0X92,0XDE,0XB2,0XE6,0XB2,0XE6,0X92,0XE6,
N0X92,0XE6,0X92,0XE6,0XB2,0XEE,0XB2,0XE6,0X92,0XE6,0XB2,0XE6,0X92,0XE6,0X92,0XE6,
N0XB2,0XE6,0XB2,0XE6,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB1,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB3,0XDE,0XB3,0XDE,0X95,0XDE,0X04,0X4A,
N0X04,0X4A,0X95,0XDE,0XB3,0XDE,0XD2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XD2,0XDE,0X91,0XDE,0X91,0XDE,0X71,0XD6,0X71,0XD6,0X71,0XD6,0X71,0XD6,
N0X71,0XD6,0X71,0XD6,0X71,0XD6,0X71,0XD6,0X71,0XD6,0X71,0XD6,0X71,0XD6,0X71,0XD6,
N0X71,0XD6,0X71,0XD6,0X71,0XD6,0X71,0XD6,0X71,0XD6,0X71,0XD6,0X71,0XD6,0X71,0XD6,
N0X71,0XD6,0X71,0XD6,0X71,0XD6,0X71,0XD6,0X71,0XD6,0X71,0XD6,0X71,0XD6,0X71,0XD6,
N0X91,0XDE,0X91,0XD6,0XD2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XD2,0XDE,0XD2,0XDE,0XD2,0XDE,0XB2,0XDE,0XB2,0XE6,0XB2,0XE6,0XB2,0XE6,0X92,0XE6,
N0X72,0XF6,0X31,0XF6,0X32,0XF6,0X72,0XFE,0X92,0XEE,0X92,0XE6,0X92,0XEE,0X92,0XF6,
N0X52,0XF6,0X52,0XF6,0X52,0XEE,0X72,0XEE,0X92,0XE6,0X92,0XE6,0X92,0XEE,0X72,0XEE,
N0X72,0XF6,0X72,0XF6,0X72,0XEE,0X51,0XEE,0X93,0XFE,0X72,0XF6,0X52,0XF6,0X93,0XF6,
N0X92,0XE6,0XB2,0XE6,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB1,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB3,0XDE,0XB3,0XDE,0X95,0XDE,0X04,0X4A,
N0X04,0X4A,0X95,0XDE,0XB3,0XDE,0XD2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XD2,0XDE,0X71,0XD6,0X71,0XD6,0X71,0XD6,0X71,0XD6,0X71,0XD6,0X71,0XD6,
N0X71,0XD6,0X71,0XD6,0X71,0XD6,0X71,0XD6,0X71,0XD6,0X71,0XD6,0X71,0XD6,0X71,0XD6,
N0X71,0XD6,0X71,0XD6,0X71,0XD6,0X71,0XD6,0X71,0XD6,0X71,0XD6,0X71,0XD6,0X71,0XD6,
N0X71,0XD6,0X71,0XD6,0X71,0XD6,0X71,0XD6,0X71,0XD6,0X71,0XD6,0X71,0XD6,0X71,0XD6,
N0X71,0XD6,0X71,0XD6,0XB2,0XDE,0XB2,0XDE,0XD2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XD2,0XDE,0XD2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XE6,0X72,0XF6,
N0X8C,0XDC,0X2B,0XE4,0X4C,0XEC,0X2B,0XDC,0X8B,0XCC,0X32,0XFE,0X32,0XFE,0X6B,0XD4,
N0X8C,0XE4,0X2B,0XDC,0X6C,0XDC,0XAC,0XD4,0X92,0XF6,0X72,0XEE,0X31,0XF6,0XAC,0XCC,
N0X8C,0XD4,0X8C,0XD4,0X6B,0XC4,0X32,0XFE,0X2B,0XD4,0X0B,0XDC,0X8C,0XDC,0X8B,0XCC,
N0X72,0XEE,0XB2,0XE6,0XB2,0XE6,0XB2,0XE6,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB1,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB3,0XDE,0XB3,0XDE,0X95,0XDE,0X04,0X4A,
N0X04,0X4A,0X95,0XDE,0XB3,0XDE,0XD2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XD2,0XDE,0X71,0XD6,0X71,0XD6,0X71,0XD6,0X71,0XD6,0X71,0XD6,0X71,0XD6,
N0X71,0XD6,0X71,0XD6,0X71,0XD6,0X71,0XD6,0X71,0XD6,0X71,0XD6,0X71,0XD6,0X71,0XD6,
N0X71,0XD6,0X71,0XD6,0X71,0XD6,0X71,0XD6,0X71,0XD6,0X71,0XD6,0X71,0XD6,0X71,0XD6,
N0X71,0XD6,0X71,0XD6,0X71,0XD6,0X71,0XD6,0X71,0XD6,0X71,0XD6,0X71,0XD6,0X71,0XD6,
N0X71,0XD6,0X71,0XD6,0XD2,0XDE,0XB2,0XDE,0XD2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0X92,0XE6,0X52,0XF6,
N0X0B,0XE4,0X0C,0XF4,0X0B,0XEC,0X2C,0XE4,0X8C,0XD4,0X32,0XFE,0X12,0XFE,0X4B,0XD4,
N0X0B,0XDC,0X2B,0XE4,0X6C,0XEC,0X6C,0XD4,0X52,0XF6,0X72,0XF6,0X72,0XFE,0X8C,0XCC,
N0X6C,0XD4,0X8C,0XD4,0XAC,0XD4,0X12,0XFE,0X4C,0XDC,0X4C,0XE4,0X2B,0XDC,0X8C,0XD4,
N0X72,0XEE,0XB2,0XE6,0XB2,0XE6,0XB2,0XE6,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB1,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB3,0XDE,0XB3,0XDE,0X95,0XDE,0X04,0X4A,
N0X04,0X4A,0X95,0XDE,0XB3,0XDE,0XD2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XD2,0XDE,0X71,0XD6,0X91,0XD6,0X71,0XD6,0X71,0XD6,0X71,0XD6,0X71,0XD6,
N0X71,0XD6,0X71,0XD6,0X71,0XD6,0X71,0XD6,0X71,0XD6,0X71,0XD6,0X71,0XD6,0X71,0XD6,
N0X71,0XD6,0X71,0XD6,0X71,0XD6,0X71,0XD6,0X71,0XD6,0X71,0XD6,0X71,0XD6,0X71,0XD6,
N0X71,0XD6,0X71,0XD6,0X71,0XD6,0X71,0XD6,0X71,0XD6,0X71,0XD6,0X71,0XD6,0X71,0XD6,
N0X91,0XD6,0X71,0XD6,0XD2,0XDE,0XB2,0XDE,0XD2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XD2,0XDE,0XD2,0XDE,0XB2,0XDE,0XB2,0XE6,0XB2,0XE6,0XB2,0XE6,0X92,0XE6,0X52,0XF6,
N0X4C,0XE4,0X0C,0XEC,0X13,0XFE,0X53,0XFE,0X93,0XFE,0X8B,0XC4,0XF1,0XFD,0X8C,0XDC,
N0X6C,0XDC,0X53,0XFE,0X32,0XFE,0X73,0XFE,0X11,0XFE,0XAC,0XC4,0X8B,0XC4,0X93,0XFE,
N0X93,0XFE,0XD4,0XFE,0XF4,0XFE,0X52,0XF6,0XD4,0XFE,0XB4,0XFE,0X6B,0XCC,0XB4,0XFE,
N0X92,0XEE,0XB2,0XE6,0XB2,0XE6,0XB2,0XE6,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB1,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB3,0XDE,0XB3,0XDE,0X95,0XDE,0X04,0X4A,
N0X04,0X4A,0X95,0XDE,0XB3,0XDE,0XD2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0X91,0XD6,0X91,0XD6,0X71,0XD6,0X71,0XD6,0X71,0XD6,0X71,0XD6,
N0X71,0XD6,0X71,0XD6,0X71,0XD6,0X71,0XD6,0X71,0XD6,0X71,0XD6,0X71,0XD6,0X71,0XD6,
N0X71,0XD6,0X71,0XD6,0X71,0XD6,0X71,0XD6,0X71,0XD6,0X71,0XD6,0X71,0XD6,0X71,0XD6,
N0X71,0XD6,0X71,0XD6,0X71,0XD6,0X71,0XD6,0X71,0XD6,0X71,0XD6,0X71,0XD6,0X71,0XD6,
N0X71,0XD6,0X71,0XD6,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XD2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XD2,0XDE,0XB2,0XDE,0XB2,0XE6,0XB2,0XE6,0XB2,0XE6,0XB2,0XE6,0X92,0XE6,0X52,0XF6,
N0X2B,0XDC,0X4C,0XE4,0X6B,0XD4,0XAC,0XCC,0XAB,0XC4,0XD4,0XFE,0X12,0XFE,0X6B,0XD4,
N0X4B,0XD4,0X8C,0XD4,0XAC,0XCC,0XCC,0XCC,0X52,0XF6,0XF4,0XFE,0XF4,0XFE,0XCC,0XC4,
N0XEC,0XC4,0X72,0XF6,0X52,0XEE,0X72,0XEE,0X92,0XF6,0X72,0XF6,0X8B,0XC4,0X52,0XF6,
N0X92,0XEE,0XB2,0XE6,0XB2,0XE6,0XB2,0XE6,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB1,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB3,0XDE,0XB3,0XDE,0X95,0XDE,0X04,0X4A,
N0X04,0X4A,0X95,0XDE,0XB3,0XDE,0XD2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0X71,0XD6,0X91,0XD6,0X71,0XD6,0X71,0XD6,0X71,0XD6,0X71,0XD6,
N0X71,0XD6,0X71,0XD6,0X71,0XD6,0X71,0XD6,0X71,0XD6,0X71,0XD6,0X71,0XD6,0X71,0XD6,
N0X71,0XD6,0X71,0XD6,0X71,0XD6,0X71,0XD6,0X71,0XD6,0X71,0XD6,0X71,0XD6,0X71,0XD6,
N0X71,0XD6,0X71,0XD6,0X71,0XD6,0X71,0XD6,0X71,0XD6,0X71,0XD6,0X71,0XD6,0X71,0XD6,
N0X71,0XD6,0X71,0XD6,0XB2,0XDE,0XB2,0XDE,0XD2,0XDE,0XB2,0XDE,0XD2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XE6,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XE6,0X72,0XF6,
N0X4B,0XDC,0X6C,0XDC,0XB4,0XFE,0XF4,0XFE,0XB3,0XFE,0X8B,0XCC,0XF1,0XFD,0X6B,0XD4,
N0X6C,0XD4,0X94,0XFE,0XF4,0XFE,0XF4,0XF6,0X72,0XEE,0X72,0XEE,0X72,0XEE,0XF4,0XFE,
N0XB3,0XFE,0XAB,0XC4,0XCC,0XCC,0X52,0XF6,0X72,0XEE,0X72,0XEE,0XCC,0XC4,0X72,0XF6,
N0X92,0XE6,0XB2,0XE6,0XB2,0XE6,0XB2,0XE6,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB1,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB3,0XDE,0XB3,0XDE,0X95,0XDE,0X04,0X4A,
N0X04,0X4A,0X95,0XDE,0XB3,0XDE,0XD2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0X71,0XD6,0X71,0XD6,0X71,0XD6,0X71,0XD6,0X71,0XD6,0X71,0XD6,
N0X71,0XD6,0X71,0XD6,0X71,0XD6,0X71,0XD6,0X71,0XD6,0X71,0XD6,0X71,0XD6,0X71,0XD6,
N0X71,0XD6,0X71,0XD6,0X71,0XD6,0X71,0XD6,0X71,0XD6,0X71,0XD6,0X71,0XD6,0X71,0XD6,
N0X71,0XD6,0X71,0XD6,0X71,0XD6,0X71,0XD6,0X71,0XD6,0X71,0XD6,0X71,0XD6,0X71,0XD6,
N0X71,0XD6,0X71,0XD6,0XD2,0XDE,0XB2,0XDE,0XD2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XE6,0XB2,0XE6,0XB2,0XDE,0XD2,0XDE,0XB2,0XDE,0XB2,0XE6,0X72,0XEE,
N0X8C,0XD4,0X6B,0XD4,0XD4,0XFE,0X14,0XFF,0XB4,0XFE,0XAC,0XCC,0X32,0XFE,0X8C,0XD4,
N0X8C,0XD4,0XB3,0XFE,0X14,0XFF,0X35,0XFF,0X92,0XEE,0X92,0XEE,0X72,0XEE,0X15,0XFF,
N0XF4,0XFE,0X8B,0XBC,0XAB,0XC4,0X72,0XF6,0X92,0XEE,0X72,0XEE,0XCB,0XBC,0X92,0XEE,
N0X92,0XE6,0XB2,0XE6,0XB2,0XE6,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB1,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB3,0XDE,0XB3,0XDE,0X95,0XDE,0X04,0X4A,
N0X04,0X4A,0X95,0XDE,0XB3,0XDE,0XD2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XD2,0XE6,0XB2,0XDE,0X71,0XD6,0X71,0XD6,0X71,0XD6,0X71,0XD6,0X51,0XD6,0X71,0XD6,
N0X71,0XD6,0X71,0XD6,0X71,0XD6,0X71,0XD6,0X71,0XD6,0X71,0XD6,0X71,0XD6,0X71,0XD6,
N0X71,0XD6,0X71,0XD6,0X71,0XD6,0X71,0XD6,0X71,0XD6,0X71,0XD6,0X71,0XD6,0X71,0XD6,
N0X71,0XD6,0X71,0XD6,0X71,0XD6,0X71,0XD6,0X91,0XDE,0X71,0XD6,0X71,0XD6,0X71,0XD6,
N0X71,0XD6,0X91,0XDE,0XB2,0XDE,0XD2,0XDE,0XD2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XE6,0XB2,0XE6,0XB2,0XE6,0XB2,0XE6,0XB2,0XDE,0XB2,0XE6,0X92,0XE6,0X72,0XEE,
N0XAC,0XC4,0XCC,0XCC,0XAB,0XBC,0XAB,0XC4,0XAC,0XC4,0XB4,0XFE,0X73,0XFE,0XAB,0XC4,
N0XCC,0XCC,0X8B,0XC4,0XAB,0XBC,0X0C,0XC5,0X52,0XEE,0XEC,0XBC,0XCB,0XBC,0XCB,0XBC,
N0XCB,0XBC,0X14,0XFF,0X14,0XFF,0X71,0XE6,0XB2,0XEE,0X72,0XE6,0XEC,0XB4,0X92,0XEE,
N0XB2,0XE6,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB1,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB3,0XDE,0XB3,0XDE,0X95,0XDE,0X04,0X4A,
N0X04,0X4A,0X95,0XDE,0XB3,0XDE,0XD2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0X34,0XEF,0X55,0XF7,0X71,0XD6,0X71,0XD6,0X92,0XDE,0X71,0XD6,
N0X71,0XD6,0X71,0XD6,0X71,0XD6,0X71,0XD6,0X71,0XD6,0X71,0XD6,0X71,0XD6,0X71,0XD6,
N0X71,0XD6,0X71,0XD6,0X71,0XD6,0X71,0XD6,0X71,0XD6,0X71,0XD6,0X71,0XD6,0X71,0XD6,
N0X91,0XDE,0X71,0XD6,0X71,0XD6,0X71,0XD6,0X71,0XD6,0X71,0XD6,0X92,0XDE,0X71,0XD6,
N0X75,0XF7,0X34,0XEF,0XD2,0XE6,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XD2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XE6,0X92,0XE6,0X92,0XE6,
N0XF4,0XFE,0XF4,0XFE,0XD4,0XFE,0XF4,0XFE,0XF4,0XFE,0X72,0XEE,0X72,0XEE,0X14,0XFF,
N0XB3,0XFE,0XF4,0XFE,0XF4,0XFE,0X35,0XFF,0X72,0XEE,0XF4,0XFE,0XF4,0XFE,0XF4,0XFE,
N0X14,0XFF,0X51,0XE6,0X92,0XE6,0XD2,0XE6,0XB2,0XE6,0XB2,0XE6,0X34,0XFF,0X92,0XE6,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB1,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB3,0XDE,0XB3,0XDE,0X95,0XDE,0X04,0X4A,
N0X04,0X4A,0X95,0XDE,0XB3,0XDE,0XD2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0X91,0XDE,0X75,0XF7,0X75,0XF7,0X51,0XD6,0X71,0XD6,0X71,0XD6,0X51,0XD6,
N0X71,0XD6,0X71,0XD6,0X71,0XD6,0X71,0XD6,0X71,0XD6,0X71,0XD6,0X71,0XD6,0X71,0XD6,
N0X71,0XD6,0X71,0XD6,0X71,0XD6,0X71,0XD6,0X71,0XD6,0X71,0XD6,0X71,0XD6,0X71,0XD6,
N0X71,0XD6,0X71,0XD6,0X71,0XD6,0X71,0XD6,0X71,0XD6,0X71,0XD6,0X71,0XD6,0X51,0XD6,
N0X75,0XF7,0X34,0XEF,0XD2,0XE6,0XB2,0XDE,0XB2,0XDE,0XD2,0XDE,0XD2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XD2,0XDE,0XD2,0XDE,0XD2,0XDE,0XD2,0XDE,0XD2,0XDE,0XB2,0XDE,0XB2,0XE6,
N0X55,0XFF,0X35,0XFF,0X35,0XFF,0X14,0XFF,0X35,0XFF,0X92,0XE6,0XB2,0XE6,0X14,0XF7,
N0X55,0XFF,0X35,0XFF,0X34,0XFF,0X34,0XFF,0X92,0XE6,0X75,0XFF,0X34,0XFF,0X34,0XFF,
N0X34,0XF7,0XB2,0XE6,0X91,0XDE,0XB2,0XDE,0XB2,0XDE,0X91,0XDE,0X55,0XF7,0XD2,0XE6,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB1,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB3,0XDE,0XB3,0XDE,0X95,0XDE,0X04,0X4A,
N0X04,0X4A,0X95,0XDE,0XB3,0XDE,0XD2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XD3,0XE6,0XB2,0XDE,0XD2,0XE6,0XB2,0XDE,0X71,0XD6,0X71,0XD6,0X71,0XD6,0X92,0XDE,
N0X71,0XD6,0X71,0XD6,0X71,0XD6,0X71,0XD6,0X71,0XD6,0X71,0XD6,0X71,0XD6,0X71,0XD6,
N0X71,0XD6,0X71,0XD6,0X71,0XD6,0X71,0XD6,0X71,0XD6,0X71,0XD6,0X71,0XD6,0X71,0XD6,
N0X71,0XD6,0X71,0XD6,0X71,0XD6,0X71,0XD6,0X71,0XD6,0X71,0XD6,0X71,0XD6,0X92,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XD2,0XDE,0XD2,0XDE,0XD2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XD2,0XDE,0XD2,0XDE,0XD2,0XDE,0XD2,0XD6,0XD2,0XDE,0XD2,0XDE,0XD2,0XDE,0XB2,0XDE,
N0X92,0XDE,0X71,0XDE,0X92,0XE6,0X92,0XE6,0X92,0XDE,0XB2,0XDE,0XD2,0XE6,0X92,0XDE,
N0XB2,0XE6,0X91,0XDE,0XD2,0XE6,0X92,0XDE,0XD2,0XE6,0XB2,0XDE,0X71,0XDE,0XB2,0XE6,
N0X91,0XDE,0XD2,0XE6,0XD2,0XDE,0XD2,0XDE,0XB2,0XD6,0XD2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB1,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB3,0XDE,0XB3,0XDE,0X95,0XDE,0X04,0X4A,
N0X04,0X4A,0X95,0XDE,0XB3,0XDE,0XD2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0X92,0XDE,0XB2,0XDE,0XB2,0XDE,0XD2,0XDE,0X54,0XEF,0XB2,0XDE,0X71,0XD6,0X71,0XD6,
N0X71,0XD6,0X71,0XD6,0X71,0XD6,0X71,0XD6,0X71,0XD6,0X71,0XD6,0X71,0XD6,0X71,0XD6,
N0X71,0XD6,0X71,0XD6,0X71,0XD6,0X71,0XD6,0X71,0XD6,0X71,0XD6,0X71,0XD6,0X71,0XD6,
N0X71,0XD6,0X91,0XDE,0X71,0XD6,0X71,0XD6,0X91,0XDE,0X71,0XD6,0X91,0XDE,0X34,0XEF,
N0XB2,0XDE,0XB2,0XDE,0XD2,0XDE,0XD2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XD2,0XE6,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XD2,0XDE,0XD2,0XDE,0XD2,0XDE,0XD2,0XDE,0XD2,0XDE,0XD2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XE6,0XB2,0XDE,0XB2,0XE6,0XB2,0XE6,0XB2,0XDE,0XB2,0XDE,0XD2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XD2,0XE6,0XD2,0XDE,0XD2,0XDE,0XB2,0XDE,0XD2,0XDE,0XD2,0XE6,
N0XD2,0XE6,0X91,0XDE,0XD2,0XDE,0XD2,0XDE,0XD2,0XDE,0XD2,0XDE,0XD2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB1,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB3,0XDE,0XB3,0XDE,0X95,0XDE,0X04,0X4A,
N0X04,0X4A,0X95,0XDE,0XB3,0XDE,0XD2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XD2,0XE6,0XB2,0XDE,0XB2,0XDE,0XF3,0XE6,0X50,0XD6,0X71,0XD6,0X91,0XDE,
N0X71,0XD6,0X71,0XD6,0X71,0XD6,0X71,0XD6,0X71,0XD6,0X71,0XD6,0X71,0XD6,0X71,0XD6,
N0X71,0XD6,0X71,0XD6,0X71,0XD6,0X71,0XD6,0X71,0XD6,0X71,0XD6,0X71,0XD6,0X71,0XD6,
N0X71,0XD6,0X91,0XDE,0X71,0XD6,0X71,0XD6,0X91,0XDE,0X50,0XD6,0X71,0XD6,0XF3,0XE6,
N0XD2,0XDE,0XD2,0XDE,0XD2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XD2,0XDE,0XD2,0XDE,0XD2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XE6,0XD2,0XE6,0XB2,0XE6,0X92,0XDE,0XD2,0XE6,0XB2,0XDE,0XD2,0XDE,0XB2,0XDE,
N0XD2,0XDE,0XD2,0XE6,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XD2,0XDE,0XD2,0XE6,0XB2,0XDE,
N0XB2,0XDE,0XD2,0XDE,0XB2,0XDE,0XB2,0XDE,0XD2,0XDE,0XB2,0XDE,0XB2,0XDE,0XD2,0XE6,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB1,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB3,0XDE,0XB3,0XDE,0X95,0XDE,0X04,0X4A,
N0X04,0X4A,0X95,0XDE,0XB3,0XDE,0XD2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0X91,0XDE,0X91,0XD6,0XB2,0XDE,0X71,0XD6,
N0X71,0XD6,0X71,0XD6,0X71,0XD6,0X71,0XD6,0X71,0XD6,0X71,0XD6,0X71,0XD6,0X71,0XD6,
N0X71,0XD6,0X71,0XD6,0X71,0XD6,0X71,0XD6,0X71,0XD6,0X71,0XD6,0X71,0XD6,0X71,0XD6,
N0X71,0XD6,0X71,0XD6,0X71,0XD6,0X71,0XD6,0X91,0XD6,0X91,0XDE,0XB2,0XDE,0X91,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XE6,0XB2,0XE6,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0X92,0XDE,0X92,0XDE,0XB2,0XE6,0X92,0XDE,0XB2,0XE6,0XB2,0XDE,0XD2,0XDE,0XD2,0XDE,
N0XB2,0XDE,0XD2,0XE6,0XB2,0XDE,0XB2,0XDE,0XD2,0XE6,0X92,0XDE,0XB2,0XDE,0XB2,0XE6,
N0XB2,0XDE,0XD2,0XE6,0XB2,0XDE,0XD2,0XE6,0XB2,0XDE,0XD2,0XE6,0XB2,0XE6,0X92,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB1,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB3,0XDE,0XB3,0XDE,0X95,0XDE,0X04,0X4A,
N0X04,0X4A,0X95,0XDE,0XB3,0XDE,0XD2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XD2,0XE6,0X54,0XF7,0X34,0XEF,0X71,0XD6,
N0X71,0XD6,0X71,0XD6,0X71,0XD6,0X71,0XD6,0X71,0XD6,0X71,0XD6,0X71,0XD6,0X71,0XD6,
N0X71,0XD6,0X71,0XD6,0X71,0XD6,0X71,0XD6,0X71,0XD6,0X71,0XD6,0X71,0XD6,0X71,0XD6,
N0X91,0XD6,0X71,0XD6,0X91,0XD6,0X71,0XD6,0X91,0XDE,0X13,0XEF,0X54,0XF7,0XD2,0XE6,
N0XB2,0XDE,0XD2,0XDE,0XD2,0XDE,0XD2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XD2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XE6,0XB2,0XE6,0XB2,0XE6,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XE6,
N0XB2,0XDE,0XB2,0XE6,0XB2,0XDE,0X92,0XDE,0XB2,0XE6,0XD2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XD2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XE6,0XB2,0XE6,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XE6,0X91,0XDE,0XB2,0XE6,0XB2,0XE6,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XD2,0XE6,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB1,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB3,0XDE,0XB3,0XDE,0X95,0XDE,0X04,0X4A,
N0X04,0X4A,0X95,0XDE,0XB3,0XDE,0XD2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XD2,0XDE,0XB2,0XDE,0XB2,0XDE,0XD2,0XDE,0X91,0XDE,0XD2,0XE6,0X54,0XF7,
N0X91,0XDE,0X71,0XD6,0X71,0XD6,0X91,0XDE,0X51,0XD6,0X71,0XD6,0X91,0XDE,0X71,0XD6,
N0X71,0XD6,0X71,0XD6,0X71,0XD6,0X71,0XD6,0X71,0XD6,0X92,0XDE,0X51,0XD6,0X71,0XD6,
N0X91,0XD6,0X71,0XD6,0X71,0XD6,0X91,0XDE,0X54,0XEF,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB1,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB3,0XDE,0XB3,0XDE,0X95,0XDE,0X04,0X4A,
N0X04,0X4A,0X95,0XDE,0XB3,0XDE,0XD2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XD2,0XDE,0XB2,0XDE,0XB2,0XDE,0XD2,0XE6,0XB2,0XDE,0XD2,0XDE,0X34,0XEF,
N0X71,0XD6,0X71,0XD6,0X91,0XDE,0X71,0XD6,0X91,0XDE,0X92,0XDE,0X51,0XD6,0X51,0XD6,
N0X92,0XDE,0X91,0XDE,0X71,0XD6,0X71,0XD6,0X71,0XD6,0X71,0XD6,0X71,0XD6,0X71,0XD6,
N0X91,0XDE,0X71,0XD6,0X71,0XD6,0X91,0XDE,0X54,0XEF,0XB2,0XDE,0XD2,0XDE,0XD2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB1,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB3,0XDE,0XB3,0XDE,0X95,0XDE,0X04,0X4A,
N0X04,0X4A,0X95,0XDE,0XB3,0XDE,0XD2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XD2,0XDE,0XB2,0XDE,0XB2,0XDE,0XD2,0XE6,0XB2,0XDE,0XB2,0XDE,0XF3,0XE6,
N0X54,0XF7,0X54,0XF7,0X75,0XF7,0X71,0XD6,0X71,0XD6,0X71,0XD6,0X71,0XD6,0X92,0XDE,
N0X51,0XD6,0X71,0XD6,0X71,0XD6,0X71,0XD6,0X91,0XD6,0X50,0XD6,0X91,0XDE,0X91,0XD6,
N0X71,0XD6,0X54,0XF7,0X75,0XF7,0X34,0XEF,0XD2,0XDE,0XF3,0XE6,0XD2,0XDE,0X91,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XD2,0XDE,
N0XD2,0XDE,0XD2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XD2,0XDE,0XD2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB1,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB3,0XDE,0XB3,0XDE,0X95,0XDE,0X04,0X4A,
N0X04,0X4A,0X95,0XDE,0XB3,0XDE,0XD2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XD2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XD2,0XDE,0XB2,0XDE,0X92,0XDE,0X55,0XF7,0X55,0XF7,0X55,0XF7,0X71,0XD6,0X71,0XD6,
N0X71,0XD6,0X71,0XD6,0X71,0XD6,0X51,0XD6,0X71,0XD6,0X91,0XDE,0X34,0XEF,0X54,0XF7,
N0X54,0XF7,0XD2,0XE6,0X91,0XDE,0XB2,0XDE,0XB2,0XDE,0X91,0XDE,0XB2,0XDE,0XD2,0XE6,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XE6,0XB2,0XDE,0XB2,0XDE,0XD2,0XDE,
N0XD2,0XDE,0XD2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XD2,0XDE,0XD2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB1,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB3,0XDE,0XB3,0XDE,0X95,0XDE,0X04,0X4A,
N0X04,0X4A,0X95,0XDE,0XB3,0XDE,0XD2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XD2,0XDE,0XD2,0XDE,0XB2,0XDE,0XD2,0XDE,0XD2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XD2,0XDE,0XD2,0XE6,0XB2,0XDE,0X92,0XDE,0XB2,0XDE,0X54,0XF7,0X55,0XF7,
N0X54,0XF7,0X54,0XEF,0X54,0XF7,0X75,0XF7,0X54,0XF7,0X54,0XEF,0XD2,0XE6,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XD2,0XE6,0XD2,0XDE,0XD2,0XDE,0XB2,0XDE,0XD2,0XE6,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XE6,0XB2,0XE6,0XB2,0XE6,0XB2,0XE6,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XE6,0XB2,0XE6,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB1,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB3,0XDE,0XB3,0XDE,0X95,0XDE,0X04,0X4A,
N0X04,0X4A,0X95,0XDE,0XB3,0XDE,0XD2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XD2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XD2,0XDE,0XD2,0XDE,0XB2,0XDE,0XF3,0XE6,0XB2,0XDE,0XB2,0XDE,0X54,0XF7,0X55,0XF7,
N0X54,0XF7,0X54,0XEF,0X54,0XF7,0X75,0XF7,0X54,0XEF,0X54,0XEF,0XD2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XD2,0XDE,0XB2,0XDE,0XD2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XE6,0XB2,0XE6,0XB2,0XE6,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XE6,0XB2,0XE6,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XE6,0XB2,0XE6,0XB2,0XE6,0XB2,0XE6,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB1,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB3,0XDE,0XB3,0XDE,0X95,0XDE,0X04,0X4A,
N0X04,0X4A,0X95,0XDE,0XB3,0XDE,0XD2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XD2,0XDE,0XD2,0XE6,0X91,0XDE,0XD2,0XDE,0XB2,0XDE,0XD3,0XE6,0X92,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XD2,0XDE,0XD2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XD2,0XE6,
N0XD2,0XE6,0XB2,0XDE,0XD3,0XE6,0X92,0XDE,0XD3,0XE6,0XB2,0XDE,0XD2,0XE6,0XD2,0XE6,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XD2,0XDE,0XD2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XD2,0XDE,
N0XD2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XE6,0XB2,0XE6,0XB2,0XE6,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB1,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB3,0XDE,0XB3,0XDE,0X95,0XDE,0X04,0X4A,
N0X04,0X52,0X95,0XDE,0XB3,0XDE,0XD2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XD2,0XE6,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XD2,0XDE,
N0XB2,0XDE,0XD2,0XDE,0X92,0XDE,0XD2,0XE6,0XD2,0XE6,0XB2,0XDE,0X92,0XDE,0XD3,0XE6,
N0XB2,0XDE,0XD2,0XDE,0XB2,0XDE,0XB2,0XDE,0XD3,0XE6,0XB2,0XDE,0XD2,0XE6,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XD2,0XE6,0X92,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XD2,0XDE,0XD2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XD2,0XDE,
N0XD2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XE6,0XB2,0XE6,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB3,0XDE,0X95,0XE6,0X04,0X52,
N0XE4,0X51,0X75,0XE6,0XB2,0XDE,0XD2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB3,0XDE,0XB3,0XDE,
N0XB2,0XE6,0XB2,0XE6,0XB2,0XE6,0XB2,0XDE,0XB2,0XDE,0XD2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB1,0XDE,0XB2,0XDE,0XB1,0XDE,0XB2,0XDE,0XB1,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XD2,0XDE,0XD2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XD2,0XDE,
N0XD2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XD2,0XDE,
N0XD2,0XDE,0XD2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XE6,0XB2,0XE6,0XB2,0XE6,
N0X92,0XDE,0XB3,0XDE,0XB2,0XDE,0XB2,0XDE,0XD2,0XDE,0XB2,0XDE,0X75,0XE6,0XE4,0X51,
N0XE4,0X51,0X75,0XE6,0XB3,0XDE,0XD2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB3,0XDE,0XB3,0XDE,
N0XB2,0XE6,0XB2,0XE6,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XD2,0XDE,0XD2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XD2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XE6,0XB2,0XE6,0XB2,0XE6,
N0XB2,0XDE,0XB2,0XDE,0XD2,0XDE,0XB2,0XDE,0XD1,0XDE,0XB2,0XDE,0X75,0XE6,0XE4,0X51,
N0XE5,0X51,0X96,0XDE,0XB3,0XDE,0XD2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB1,0XDE,0XD1,0XDE,0XD2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB3,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB1,0XDE,0XB1,0XDE,
N0XB1,0XDE,0XB1,0XDE,0XB2,0XDE,0XB2,0XDE,0XD1,0XDE,0XB2,0XDE,0X95,0XDE,0XE5,0X51,
N0X05,0X4A,0X96,0XDE,0XB3,0XDE,0XD2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XD1,0XDE,0XD1,0XDE,0XD1,0XDE,0XD2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XE6,0XB2,0XE6,
N0XB2,0XDE,0XB1,0XDE,0XB2,0XDE,0XB1,0XDE,0XB2,0XDE,0XB1,0XDE,0XB2,0XDE,0XB1,0XDE,
N0XB2,0XDE,0XB1,0XDE,0XB2,0XDE,0XB1,0XDE,0XB2,0XDE,0XB1,0XDE,0XB2,0XDE,0XB1,0XDE,
N0XB2,0XDE,0XB1,0XDE,0XB2,0XDE,0XB1,0XDE,0XB2,0XDE,0XB1,0XDE,0XB2,0XDE,0XB1,0XDE,
N0XB2,0XDE,0XB1,0XDE,0XB2,0XDE,0XB1,0XDE,0XB2,0XDE,0XB1,0XDE,0XB2,0XDE,0XB1,0XDE,
N0XB2,0XDE,0XB1,0XDE,0XB2,0XDE,0XB1,0XDE,0XB2,0XDE,0XB1,0XDE,0XB2,0XDE,0XB1,0XDE,
N0XB2,0XDE,0XB1,0XDE,0XB2,0XDE,0XB1,0XDE,0XB2,0XDE,0XB1,0XDE,0XB2,0XDE,0XB1,0XDE,
N0XB2,0XDE,0XB1,0XDE,0XB2,0XDE,0XB1,0XDE,0XB2,0XDE,0XB1,0XDE,0XB2,0XDE,0XB1,0XDE,
N0XB2,0XDE,0XB1,0XDE,0XB2,0XDE,0XB1,0XDE,0XB2,0XDE,0XB1,0XDE,0XB2,0XDE,0XB1,0XDE,
N0XB2,0XDE,0XB1,0XDE,0XB2,0XDE,0XB1,0XDE,0XB2,0XDE,0XB1,0XDE,0XB2,0XDE,0XB1,0XDE,
N0XB2,0XDE,0XB1,0XDE,0XB2,0XDE,0XB1,0XDE,0XB2,0XDE,0XB1,0XDE,0XB2,0XDE,0XB1,0XDE,
N0XB2,0XDE,0XB1,0XDE,0XB2,0XDE,0XB1,0XDE,0XB2,0XDE,0XB1,0XDE,0XB2,0XDE,0XB1,0XDE,
N0XB2,0XDE,0XB1,0XDE,0XB2,0XDE,0XB1,0XDE,0XB2,0XDE,0XB1,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XE6,0XB2,0XE6,0XB3,0XDE,0XB2,0XDE,0XD2,0XDE,0XD1,0XDE,0XD1,0XDE,0XD1,0XDE,
N0XB1,0XDE,0XB1,0XDE,0XB2,0XDE,0XB2,0XDE,0XD2,0XDE,0XB3,0XDE,0X95,0XDE,0X05,0X4A,
N0X05,0X4A,0X96,0XDE,0XB3,0XDE,0XD3,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XD1,0XDE,0XD1,0XDE,0XD2,0XDE,0XD2,0XDE,0XD2,0XDE,0XB2,0XDE,0XB2,0XE6,0XB2,0XE6,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XE6,0XB2,0XE6,0XB2,0XDE,0XB2,0XDE,0XD2,0XDE,0XD1,0XDE,0XD1,0XDE,0XD1,0XDE,
N0XB1,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XD3,0XDE,0XB3,0XDE,0X96,0XDE,0X05,0X4A,
N0X04,0X52,0X95,0XDE,0XB3,0XDE,0XD3,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XD1,0XDE,0XD1,0XDE,0XD1,0XDE,0XD2,0XDE,0XD2,0XDE,0XB2,0XDE,0XB2,0XE6,0X92,0XE6,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XE6,0XB2,0XE6,0XB2,0XDE,0XD2,0XDE,0XD1,0XDE,0XD1,0XDE,0XD1,0XDE,0XB1,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB3,0XDE,0XB3,0XDE,0XD3,0XDE,0XB3,0XDE,0X95,0XDE,0X04,0X52,
N0X03,0X52,0X94,0XE6,0XB2,0XDE,0XD2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XE6,
N0XB1,0XE6,0XB1,0XDE,0XD1,0XDE,0XD1,0XDE,0XD1,0XDE,0XB2,0XDE,0XB2,0XE6,0XB2,0XE6,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XE6,0XB2,0XE6,0XD1,0XDE,0XD1,0XDE,0XD1,0XDE,0XD1,0XDE,0XB1,0XDE,0XB2,0XE6,
N0XB2,0XDE,0XB2,0XDE,0XB3,0XDE,0XB3,0XDE,0XD2,0XDE,0XB3,0XDE,0X95,0XE6,0XE4,0X51,
N0X03,0X52,0X94,0XE6,0XB2,0XDE,0XD2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB3,0XDE,0XB2,0XE6,
N0XB2,0XE6,0XB1,0XDE,0XD1,0XDE,0XD1,0XDE,0XD1,0XDE,0XD2,0XDE,0XB2,0XE6,0XB3,0XE6,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XD1,0XDE,0XD1,0XDE,0XD1,0XDE,0XD1,0XDE,0XB2,0XDE,0XB2,0XE6,
N0XB2,0XDE,0XB3,0XDE,0XB3,0XDE,0XB2,0XDE,0XD2,0XDE,0XB3,0XDE,0X94,0XE6,0X04,0X52,
N0X05,0X52,0X75,0XDE,0XB3,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB3,0XE6,0X93,0XDE,
N0XB3,0XE6,0XB2,0XDE,0XB2,0XDE,0XD1,0XDE,0XD1,0XDE,0XD2,0XDE,0XB2,0XDE,0XB3,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB3,0XDE,0XB3,0XDE,0XD2,0XDE,0XD2,0XDE,0XD1,0XDE,0XD2,0XDE,0XB3,0XDE,0XB3,0XE6,
N0X92,0XDE,0XB3,0XE6,0XB3,0XDE,0XB2,0XDE,0XB2,0XDE,0XB3,0XDE,0X75,0XDE,0X04,0X52,
N0X26,0X42,0X15,0XC6,0XD1,0XBD,0XD4,0XE6,0X93,0XDE,0X92,0XDE,0XB3,0XE6,0X92,0XDE,
N0XB3,0XDE,0XB3,0XDE,0XB2,0XDE,0XB2,0XDE,0XB1,0XDE,0XB2,0XDE,0XB2,0XDE,0XB3,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB3,0XDE,0XB3,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB3,0XDE,0XB3,0XDE,
N0X92,0XDE,0XB3,0XE6,0X72,0XDE,0X92,0XDE,0XD3,0XE6,0XD1,0XBD,0X14,0XC6,0X26,0X42,
N0X71,0X7C,0X48,0X3A,0X45,0X4A,0X95,0XDE,0X94,0XE6,0XB3,0XE6,0X92,0XDE,0XD3,0XE6,
N0XB3,0XDE,0XB3,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB3,0XDE,0XB3,0XDE,
N0XD3,0XE6,0X92,0XDE,0XB3,0XE6,0X94,0XE6,0X94,0XDE,0X24,0X42,0X48,0X3A,0X71,0X7C,
N0XD4,0X74,0X69,0X2A,0X47,0X3A,0X76,0XD6,0XB5,0XE6,0X93,0XE6,0XB2,0XDE,0X92,0XD6,
N0XD3,0XDE,0XD3,0XDE,0XB3,0XDE,0XB3,0XE6,0XB2,0XE6,0XB2,0XE6,0XD2,0XDE,0XD2,0XDE,
N0XD2,0XDE,0XD2,0XDE,0XD2,0XDE,0XD2,0XDE,0XD2,0XDE,0XD2,0XDE,0XD2,0XDE,0XD2,0XDE,
N0XD2,0XDE,0XD2,0XDE,0XD2,0XDE,0XD2,0XDE,0XD2,0XDE,0XD2,0XDE,0XD2,0XDE,0XD2,0XDE,
N0XD2,0XDE,0XD2,0XDE,0XD2,0XDE,0XD2,0XDE,0XD2,0XDE,0XD2,0XDE,0XD2,0XDE,0XD2,0XDE,
N0XD2,0XDE,0XD2,0XDE,0XD2,0XDE,0XD2,0XDE,0XD2,0XDE,0XD2,0XDE,0XD2,0XDE,0XD2,0XDE,
N0XD2,0XDE,0XD2,0XDE,0XD2,0XDE,0XD2,0XDE,0XD2,0XDE,0XD2,0XDE,0XD2,0XDE,0XD2,0XDE,
N0XD2,0XDE,0XD2,0XDE,0XD2,0XDE,0XD2,0XDE,0XD2,0XDE,0XD2,0XDE,0XD2,0XDE,0XD2,0XDE,
N0XD2,0XDE,0XD2,0XDE,0XD2,0XDE,0XD2,0XDE,0XD2,0XDE,0XD2,0XDE,0XD2,0XDE,0XD2,0XDE,
N0XD2,0XDE,0XD2,0XDE,0XD2,0XDE,0XD2,0XDE,0XD2,0XDE,0XD2,0XDE,0XD2,0XDE,0XD2,0XDE,
N0XD2,0XDE,0XD2,0XDE,0XD2,0XDE,0XD2,0XDE,0XD2,0XDE,0XD2,0XDE,0XD2,0XDE,0XD2,0XDE,
N0XD2,0XDE,0XD2,0XDE,0XD2,0XDE,0XD2,0XDE,0XD2,0XDE,0XD2,0XDE,0XD2,0XDE,0XD2,0XDE,
N0XD2,0XDE,0XD2,0XDE,0XD2,0XDE,0XD2,0XDE,0XD2,0XDE,0XD2,0XDE,0XD2,0XDE,0XD2,0XDE,
N0XD2,0XDE,0XD2,0XDE,0XD2,0XDE,0XD2,0XDE,0XD2,0XDE,0XD2,0XDE,0XD2,0XDE,0XD2,0XDE,
N0XD2,0XDE,0XD2,0XDE,0XB2,0XDE,0XD2,0XDE,0XB2,0XDE,0XD2,0XDE,0XB2,0XDE,0XD2,0XDE,
N0XB2,0XDE,0XD2,0XDE,0XB2,0XDE,0XD2,0XDE,0XB2,0XDE,0XD2,0XDE,0XB2,0XDE,0XD2,0XDE,
N0XD2,0XDE,0XD2,0XDE,0XD2,0XDE,0XD2,0XDE,0XD2,0XDE,0XD2,0XDE,0XD2,0XDE,0XD2,0XDE,
N0XD2,0XDE,0XD2,0XDE,0XD2,0XDE,0XD2,0XDE,0XD2,0XDE,0XD2,0XDE,0XD2,0XDE,0XD2,0XDE,
N0XD2,0XDE,0XD2,0XDE,0XB2,0XE6,0XB2,0XE6,0XB3,0XE6,0XB3,0XDE,0XD3,0XDE,0XD3,0XDE,
N0XB2,0XD6,0XB2,0XDE,0X93,0XE6,0XB5,0XE6,0X76,0XD6,0X46,0X3A,0X69,0X2A,0XB4,0X74,
N0X15,0X65,0X6A,0X1A,0X47,0X2A,0X56,0XBE,0XD3,0XBD,0XD1,0XC5,0XF4,0XE6,0XD2,0XDE,
N0XD2,0XD6,0XB2,0XD6,0XB3,0XDE,0X93,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB3,0XDE,0XB2,0XDE,0XB3,0XDE,0XB2,0XDE,0XB3,0XDE,0XB2,0XDE,
N0XB3,0XDE,0XB2,0XDE,0XB3,0XDE,0XB2,0XDE,0XB3,0XDE,0XB2,0XDE,0XB3,0XDE,0XB2,0XDE,
N0XB3,0XDE,0XB2,0XDE,0XB3,0XDE,0XB2,0XDE,0XB3,0XDE,0XB2,0XDE,0XB3,0XDE,0XB2,0XDE,
N0XB3,0XDE,0XB2,0XDE,0XB3,0XDE,0XB2,0XDE,0XB3,0XDE,0XB2,0XDE,0XB3,0XDE,0XB2,0XDE,
N0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XDE,0XB2,0XD6,0XD2,0XD6,
N0XD2,0XDE,0XF3,0XE6,0XD1,0XC5,0XD3,0XBD,0X56,0XBE,0X48,0X2A,0X6A,0X1A,0XF5,0X64,
N0X35,0X55,0X14,0X5D,0XD3,0X6C,0X48,0X2A,0X47,0X42,0X45,0X4A,0X12,0XC6,0X11,0XC6,
N0X10,0XC6,0X11,0XC6,0XF1,0XC5,0XF2,0XCD,0XF1,0XCD,0XF1,0XCD,0XF1,0XCD,0XF1,0XCD,
N0X11,0XCE,0X10,0XCE,0X11,0XCE,0X10,0XCE,0X11,0XCE,0X10,0XCE,0X11,0XCE,0X10,0XCE,
N0X11,0XCE,0X10,0XCE,0X11,0XCE,0X10,0XCE,0X11,0XCE,0X10,0XCE,0X11,0XCE,0X10,0XCE,
N0X11,0XCE,0X10,0XCE,0X11,0XCE,0X10,0XCE,0X11,0XCE,0X10,0XCE,0X11,0XCE,0X10,0XCE,
N0X11,0XCE,0X10,0XCE,0X11,0XCE,0X10,0XCE,0X11,0XCE,0X10,0XCE,0X11,0XCE,0X10,0XCE,
N0X11,0XCE,0X10,0XCE,0X11,0XCE,0X10,0XCE,0X11,0XCE,0X10,0XCE,0X11,0XCE,0X10,0XCE,
N0X11,0XCE,0X10,0XCE,0X11,0XCE,0X10,0XCE,0X11,0XCE,0X10,0XCE,0X11,0XCE,0X10,0XCE,
N0X11,0XCE,0X10,0XCE,0X11,0XCE,0X10,0XCE,0X11,0XCE,0X10,0XCE,0X11,0XCE,0X10,0XCE,
N0X11,0XCE,0X10,0XCE,0X11,0XCE,0X10,0XCE,0X11,0XCE,0X10,0XCE,0X11,0XCE,0X10,0XCE,
N0X11,0XCE,0X10,0XCE,0X11,0XCE,0X10,0XCE,0X11,0XCE,0X10,0XCE,0X11,0XCE,0X10,0XCE,
N0X11,0XCE,0X10,0XCE,0X11,0XCE,0X10,0XCE,0X11,0XCE,0X10,0XCE,0X11,0XCE,0X11,0XCE,
N0X11,0XCE,0X11,0XCE,0X11,0XCE,0X11,0XCE,0X11,0XCE,0X11,0XCE,0X11,0XCE,0X11,0XCE,
N0X11,0XCE,0X11,0XCE,0X11,0XCE,0X11,0XCE,0X11,0XCE,0X11,0XCE,0X11,0XCE,0X11,0XCE,
N0XF1,0XCD,0XF1,0XCD,0XF1,0XCD,0XF1,0XCD,0XF1,0XCD,0XF1,0XCD,0XF1,0XCD,0XF1,0XCD,
N0XF1,0XCD,0XF1,0XCD,0XF1,0XCD,0XF1,0XCD,0XF1,0XCD,0XF1,0XCD,0XF1,0XCD,0XF1,0XCD,
N0XF1,0XC5,0X11,0XC6,0XF1,0XC5,0X11,0XC6,0XF1,0XC5,0X11,0XC6,0XF1,0XC5,0X11,0XC6,
N0XF1,0XC5,0X11,0XC6,0XF1,0XC5,0X11,0XC6,0XF1,0XC5,0X11,0XC6,0XF1,0XC5,0X11,0XC6,
N0X10,0XCE,0X10,0XCE,0XF1,0XCD,0XF1,0XCD,0XF1,0XCD,0X11,0XC6,0X11,0XC6,0X10,0XC6,
N0X10,0XC6,0X11,0XC6,0X45,0X4A,0X47,0X42,0X48,0X2A,0XD3,0X6C,0XF4,0X5C,0X15,0X55,
N0X56,0X55,0X15,0X55,0XF5,0X5C,0X6B,0X1A,0X29,0X2A,0X28,0X3A,0XF4,0XBD,0X13,0XC6,
N0XF2,0XC5,0XF2,0XC5,0XF3,0XC5,0XD3,0XCD,0XF3,0XCD,0XD3,0XCD,0XD3,0XCD,0XD3,0XCD,
N0XF3,0XCD,0XF2,0XCD,0XF3,0XCD,0XF2,0XCD,0XF3,0XCD,0XF2,0XCD,0XF3,0XCD,0XF2,0XCD,
N0XF3,0XCD,0XF2,0XCD,0XF3,0XCD,0XF2,0XCD,0XF3,0XCD,0XF2,0XCD,0XF3,0XCD,0XF2,0XCD,
N0XF3,0XCD,0XF2,0XCD,0XF3,0XCD,0XF2,0XCD,0XF3,0XCD,0XF2,0XCD,0XF3,0XCD,0XF2,0XCD,
N0XF3,0XCD,0XF2,0XCD,0XF3,0XCD,0XF2,0XCD,0XF3,0XCD,0XF2,0XCD,0XF3,0XCD,0XF2,0XCD,
N0XF3,0XCD,0XF2,0XCD,0XF3,0XCD,0XF2,0XCD,0XF3,0XCD,0XF2,0XCD,0XF3,0XCD,0XF2,0XCD,
N0XF3,0XCD,0XF2,0XCD,0XF3,0XCD,0XF2,0XCD,0XF3,0XCD,0XF2,0XCD,0XF3,0XCD,0XF2,0XCD,
N0XF3,0XCD,0XF2,0XCD,0XF3,0XCD,0XF2,0XCD,0XF3,0XCD,0XF2,0XCD,0XF3,0XCD,0XF2,0XCD,
N0XF3,0XCD,0XF2,0XCD,0XF3,0XCD,0XF2,0XCD,0XF3,0XCD,0XF2,0XCD,0XF3,0XCD,0XF2,0XCD,
N0XF3,0XCD,0XF2,0XCD,0XF3,0XCD,0XF2,0XCD,0XF3,0XCD,0XF2,0XCD,0XF3,0XCD,0XF2,0XCD,
N0XF3,0XCD,0XF2,0XCD,0XF3,0XCD,0XF2,0XCD,0XF3,0XCD,0XF2,0XCD,0XF3,0XCD,0XF3,0XCD,
N0XF3,0XCD,0XF3,0XCD,0XF3,0XCD,0XF3,0XCD,0XF3,0XCD,0XF3,0XCD,0XF3,0XCD,0XF3,0XCD,
N0XF3,0XCD,0XF3,0XCD,0XF3,0XCD,0XF3,0XCD,0XF3,0XCD,0XF3,0XCD,0XF3,0XCD,0XF3,0XCD,
N0XF3,0XCD,0XF3,0XCD,0XF3,0XCD,0XF3,0XCD,0XF3,0XCD,0XF3,0XCD,0XF3,0XCD,0XF3,0XCD,
N0XF3,0XCD,0XF3,0XCD,0XF3,0XCD,0XF3,0XCD,0XF3,0XCD,0XF3,0XCD,0XF3,0XCD,0XF3,0XCD,
N0XF3,0XC5,0XF3,0XC5,0XF3,0XC5,0XF3,0XC5,0XF3,0XC5,0XF3,0XC5,0XF3,0XC5,0XF3,0XC5,
N0XF3,0XC5,0XF3,0XC5,0XF3,0XC5,0XF3,0XC5,0XF3,0XC5,0XF3,0XC5,0XF3,0XC5,0XF3,0XCD,
N0XD3,0XCD,0XD3,0XCD,0XD3,0XCD,0XD3,0XCD,0XF3,0XC5,0XF3,0XC5,0XF2,0XCD,0XF2,0XC5,
N0X12,0XC6,0XF3,0XBD,0X27,0X3A,0X29,0X2A,0X6A,0X22,0XF4,0X5C,0X14,0X55,0X35,0X55,
N0X76,0X55,0X36,0X4D,0XD5,0X54,0XD5,0X64,0X73,0X6C,0X52,0X7C,0X06,0X42,0X25,0X4A,
N0X04,0X4A,0X04,0X4A,0X05,0X4A,0X05,0X4A,0X05,0X4A,0X05,0X52,0XE5,0X51,0XE4,0X51,
N0X04,0X52,0X04,0X4A,0X04,0X4A,0X04,0X4A,0X04,0X4A,0X04,0X4A,0X04,0X4A,0X04,0X4A,
N0X04,0X4A,0X04,0X4A,0X04,0X4A,0X04,0X4A,0X04,0X4A,0X04,0X4A,0X04,0X4A,0X04,0X4A,
N0X04,0X4A,0X04,0X4A,0X04,0X4A,0X04,0X4A,0X04,0X4A,0X04,0X4A,0X04,0X4A,0X04,0X4A,
N0X04,0X4A,0X04,0X4A,0X04,0X4A,0X04,0X4A,0X04,0X4A,0X04,0X4A,0X04,0X4A,0X04,0X4A,
N0X04,0X4A,0X04,0X4A,0X04,0X4A,0X04,0X4A,0X04,0X4A,0X04,0X4A,0X04,0X4A,0X04,0X4A,
N0X04,0X4A,0X04,0X4A,0X04,0X4A,0X04,0X4A,0X04,0X4A,0X04,0X4A,0X04,0X4A,0X04,0X4A,
N0X04,0X4A,0X04,0X4A,0X04,0X4A,0X04,0X4A,0X04,0X4A,0X04,0X4A,0X04,0X4A,0X04,0X4A,
N0X04,0X4A,0X04,0X4A,0X04,0X4A,0X04,0X4A,0X04,0X4A,0X04,0X4A,0X04,0X4A,0X04,0X4A,
N0X04,0X4A,0X04,0X4A,0X04,0X4A,0X04,0X4A,0X04,0X4A,0X04,0X4A,0X04,0X4A,0X04,0X4A,
N0X04,0X4A,0X04,0X4A,0X04,0X4A,0X04,0X4A,0X04,0X4A,0X04,0X4A,0X04,0X4A,0X04,0X4A,
N0X04,0X4A,0X04,0X4A,0X04,0X4A,0X04,0X4A,0X04,0X4A,0X04,0X4A,0X04,0X4A,0X04,0X4A,
N0X04,0X4A,0X04,0X4A,0X04,0X4A,0X04,0X4A,0X04,0X4A,0X04,0X4A,0X04,0X4A,0X04,0X4A,
N0X04,0X4A,0X04,0X4A,0X04,0X4A,0X04,0X4A,0X04,0X4A,0X04,0X4A,0X04,0X4A,0X04,0X4A,
N0X04,0X4A,0X04,0X4A,0X04,0X4A,0X04,0X4A,0X04,0X4A,0X04,0X4A,0X04,0X4A,0X04,0X4A,
N0X04,0X4A,0X04,0X4A,0X04,0X4A,0X04,0X4A,0X04,0X4A,0X04,0X4A,0X04,0X4A,0X04,0X4A,
N0X04,0X4A,0X04,0X4A,0X04,0X4A,0X04,0X4A,0X04,0X4A,0X04,0X4A,0X04,0X4A,0X04,0X4A,
N0X05,0X52,0XE5,0X51,0XE5,0X49,0X05,0X4A,0X05,0X4A,0X04,0X4A,0X04,0X52,0X04,0X4A,
N0X24,0X4A,0X05,0X42,0X51,0X7C,0X53,0X6C,0XD5,0X64,0XF4,0X54,0X35,0X55,0X76,0X55,
N};
L 15 "app\game.c" 2
N
Nu16 FlappyBird_Frame[480][320] __attribute__((at(0x68000000)));
Nu16 FlappyBird_Bird_Buff[18][26] __attribute__((at(0X6804C000)));
Nu16 FlappyBird_column_Buff[3][259][39] __attribute__((at(0X6804E000))) ;
Nu16 FlappyBird_column_Buff_BG[3][259][39] __attribute__((at(0X6805D000)));
N
N//==================================================================================================================
N
Nu8 hide[3] = {0,0,0};
Nstatic u16 l_x = 0, l_y = 0;
Nstatic u16 l_x_c[3] = {0},l_y_c[3] = {0};
Nu8 ud_mode = 0,bird_mode = 'u';
Nint bird_height = 119,bird_wide = 57;
Nu16 score_lock = 0;
Nu32 score = 0;
Nint difficult = 0;
N//**********************************************************
N// 帧操作区 
N//**********************************************************/
N
N//在帧上画一个点
Nvoid FlappyBird_Frame_DrawPoint( u16 x, u16 y, u16 color )
N{
N	FlappyBird_Frame[y][x] = color;
N}
N
N//在帧上填充颜色
Nvoid FlappyBird_Frame_Fill( u16 x, u16 y, u16 xx, u16 yy, u16 color )
N{
N	u16 x_t,y_t;
N	for( y_t = y; y_t <= yy; y_t++ )
N	{
N		for( x_t = x; x_t <= xx; x_t++)
N		{
N			FlappyBird_Frame_DrawPoint(x_t,y_t,color);
N		}
N	}
N}
N//清除帧
Nvoid FlappyBird_Frame_Clear( void )
N{
N	u16 x_t,y_t;
N	for( y_t = 0; y_t < 320; y_t++ )
N	{
N		for( x_t = 0; x_t < 240; x_t++)
N		{
N			FlappyBird_Frame_DrawPoint(x_t,y_t,0x4df9);
N		}
N	}
N}
N//在帧上画线
N//x1,y1:起点坐标
N//x2,y2:终点坐标  
Nvoid FlappyBird_Frame_DrawLine( u16 x1, u16 y1, u16 x2, u16 y2 , u16 color )
N{
N	u16 t; 
N	int xerr=0,yerr=0,delta_x,delta_y,distance; 
N	int incx,incy,uRow,uCol; 
N	delta_x=x2-x1; //计算坐标增量 
N	delta_y=y2-y1; 
N	uRow=x1; 
N	uCol=y1; 
N	if(delta_x>0)incx=1; //设置单步方向 
N	else if(delta_x==0)incx=0;//垂直线 
N	else {incx=-1;delta_x=-delta_x;} 
N	if(delta_y>0)incy=1; 
N	else if(delta_y==0)incy=0;//水平线 
N	else{incy=-1;delta_y=-delta_y;} 
N	if( delta_x>delta_y)distance=delta_x; //选取基本增量坐标轴 
N	else distance=delta_y; 
N	for(t=0;t<=distance+1;t++ )//画线输出 
N	{  
N		FlappyBird_Frame_DrawPoint(uRow,uCol,color);//画点 
N		xerr+=delta_x ; 
N		yerr+=delta_y ; 
N		if(xerr>distance) 
N		{ 
N			xerr-=distance; 
N			uRow+=incx; 
N		} 
N		if(yerr>distance) 
N		{ 
N			yerr-=distance; 
N			uCol+=incy; 
N		} 
N	}  
N} 
N
Nvoid FlappyBird_DrawGreenBar( u16 x, u16 y, u16 color )
N{
N	u8 i;
N	FlappyBird_Frame_Fill(x,y,240,y+12,color);
N	for( i = 0; i < 12; i++)
N		FlappyBird_DrawParallelogram(x+i*20,y+12,0x75E6);
N	
N}
N
Nvoid FlappyBird_DrawGreenBar_Play( u16 x, u16 y,u8 Speed )
N{
N	u8 i;
N	u16 temp,xx,yy;
N	for( i = 0; i < Speed ; i++ )
N	{
N		for( yy = y; yy < y + 12; yy++ )
N		{
N			for( xx = x; xx < 239 ; xx++)
N			{
N				if(x == xx)
N				{
N					temp = FlappyBird_Frame[yy][xx];
N				}
N				FlappyBird_Frame[yy][xx] = FlappyBird_Frame[yy][xx+1];
N			}
N			FlappyBird_Frame[yy][xx] = temp;
N		}
N	}
N}
N
N
Nvoid FlappyBird_DrawParallelogram( u16 x, u16 y, u16 color )
N{
N	u8 i;
N	for( i = 0; i < 10; i++ )
N		FlappyBird_Frame_DrawLine(x+i,y-1,x+10+i,y-12,color);
N}
N
Nvoid FlappyBird_Frame_ShowChar(u16 x,u16 y,u8 num,u8 size,u8 mode,u16 color)
N{  							  
N    u8 temp,t1,t;
N	u16 y0=y;
N	u16 colortemp=color;      			     
N	//设置窗口		   
N	num=num-' ';//得到偏移后的值
N	if(!mode) //非叠加方式
N	{
N	    for(t=0;t<size;t++)
N	    {   
N			if(size==12)temp=asc2_1206[num][t];  //调用1206字体
N			else temp=asc2_1608[num][t];		 //调用1608字体 	                          
N	        for(t1=0;t1<8;t1++)
N			{			    
N		        if(temp&0x80)POINT_COLOR=colortemp;
N				else POINT_COLOR=BACK_COLOR;
N				FlappyBird_Frame_DrawPoint(x,y,POINT_COLOR);	
N				temp<<=1;
N				y++;
N				if(x>=Lcd_Dev.width){POINT_COLOR=colortemp;return;}//超区域了
N				if((y-y0)==size)
N				{
N					y=y0;
N					x++;
N					if(x>=Lcd_Dev.width){POINT_COLOR=colortemp;return;}//超区域了
N					break;
N				}
N			}  	 
N	    }    
N	}else//叠加方式
N	{
N	    for(t=0;t<size;t++)
N	    {   
N			if(size==12)temp=asc2_1206[num][t];  //调用1206字体
N			else temp=asc2_1608[num][t];		 //调用1608字体 	                          
N	        for(t1=0;t1<8;t1++)
N			{			    
N		        if(temp&0x80)FlappyBird_Frame_DrawPoint(x,y,POINT_COLOR);
N				temp<<=1;
N				y++;
N				if(x>=Lcd_Dev.height){POINT_COLOR=colortemp;return;}//超区域了
N				if((y-y0)==size)
N				{
N					y=y0;
N					x++;
N					if(x>=Lcd_Dev.width){POINT_COLOR=colortemp;return;}//超区域了
N					break;
N				}
N			}  	 
N	    }     
N	}
N	POINT_COLOR=colortemp;	    	   	 	  
N}
N
Nvoid FlappyBird_Frame_ShowString(u16 x,u16 y,u16 width,u16 height,u8 size,u8 *p,u16 color)
N{         
N	u8 x0=x;
N	width+=x;
N	height+=y;
N    while((*p<='~')&&(*p>=' '))//判断是不是非法字符!
N    {       
N        if(x>=width){x=x0;y+=size;}
N        if(y>=height)break;//退出
N        FlappyBird_Frame_ShowChar(x,y,*p,size,0,color);
N        x+=size/2;
N        p++;
N    }  
N}
N
Nvoid FlappyBird_Frame_DrawBGPic( u16 x, u16 y )
N{
N	u16 color,xx = x,yy = y;
N	
N	for( yy = y; yy < 70 + y; yy++ )
N	{
N		for( xx = x; xx < 240; xx++ )
N		{
N			color = gImage_flappybird_background[((yy-y)*240+xx)*2+1];
N			color <<= 8;
N			color = color + gImage_flappybird_background[((yy-y)*240+xx)*2];
N			FlappyBird_Frame_DrawPoint(xx,yy,color);
N		}
N	}
N}
N
Nvoid FlappyBird_Frame_DrawLogo( u16 x, u16 y )
N{
N		u16 color,xx = x,yy = y;
N	
N	for( yy = y; yy < 36 + y; yy++ )
N	{
N		for( xx = x; xx < 135 + x; xx++ )
N		{
N			color = gImage_flappybird_Logo[((yy-y)*135+(xx-x))*2+1];
N			color <<= 8;
N			color = color + gImage_flappybird_Logo[((yy-y)*135+(xx-x))*2];
N			FlappyBird_Frame_DrawPoint(xx,yy,color);
N		}
N	}
N	
N}
N
Nvoid FlappyBird_Frame_DrawButton( u16 x, u16 y , u8 mode )
N{
N		u16 color,xx = x,yy = y;
N		int R,G,B;
N		if(0 == mode)
N		{
N			for( yy = y; yy < 44 + y; yy++ )
N			{
N				for( xx = x; xx < 78 + x; xx++ )
N				{
N					color = gImage_flappybird_button_play[((yy-y)*78+(xx-x))*2+1];
N					color <<= 8;
N					color = color + gImage_flappybird_button_play[((yy-y)*78+(xx-x))*2];
N					R = color & 0xf800;
N					R >>= 11;
N					G = color & 0x07e0;
N					G >>= 5;
N					B = color & 0x001f;
N					if((B - R) > 7)
N					{
N						if((G - B) > 10 && (G - R) > 10 && (B - R) < 10)
N						{
N							FlappyBird_Frame_DrawPoint(xx,yy,color);
N						}
N					}
N					else
N						FlappyBird_Frame_DrawPoint(xx,yy,color);
N				}
N			}
N		}
N		else
N		{
N			for( yy = y; yy < 44 + y; yy++ )
N			{
N				for( xx = x; xx < 78 + x; xx++ )
N				{
N					color = gImage_flappybird_button_stop[((yy-y)*78+(xx-x))*2+1];
N					color <<= 8;
N					color = color + gImage_flappybird_button_stop[((yy-y)*78+(xx-x))*2];
N					R = color & 0xf800;
N					R >>= 11;
N					G = color & 0x07e0;
N					G >>= 5;
N					B = color & 0x001f;
N					if((B - R) > 7)
N						;
N					else
N						FlappyBird_Frame_DrawPoint(xx,yy,color);
N				}
N			}
N		}
N}
N
Nvoid FlappyBird_Frame_DrawBird( u16 x, u16 y , u8 mode )
N{
N	u16 color,xx = x,yy = y;
N	int R,G,B;
N	switch(mode)
N	{
N		case 'u':
N		{
N			for( yy = y; yy < 18 + y; yy++ )
N			{
N				for( xx = x; xx < 26 + x; xx++ )
N				{
N					color = gImage_flappybird_bird_u[((yy-y)*26+(xx-x))*2+1];
N					color <<= 8;
N					color = color + gImage_flappybird_bird_u[((yy-y)*26+(xx-x))*2];
N					R = color & 0xf800;
N					R >>= 11;
N					G = color & 0x07e0;
N					G >>= 5;
N					B = color & 0x001f;
N					if((B - R) > 7)
N						;
N					else
N						FlappyBird_Frame_DrawPoint(xx,yy,color);
N				}
N			}
N		}
N		break;
N		case 'm':
N		{
N			for( yy = y; yy < 18 + y; yy++ )
N			{
N				for( xx = x; xx < 26 + x; xx++ )
N				{
N					color = gImage_flappybird_bird_m[((yy-y)*26+(xx-x))*2+1];
N					color <<= 8;
N					color = color + gImage_flappybird_bird_m[((yy-y)*26+(xx-x))*2];
N					R = color & 0xf800;
N					R >>= 11;
N					G = color & 0x07e0;
N					G >>= 5;
N					B = color & 0x001f;
N					if((B - R) > 7)
N						;
N					else
N						FlappyBird_Frame_DrawPoint(xx,yy,color);
N				}
N			}
N		}
N		break;
N		case 'd':
N		{
N			for( yy = y; yy < 18 + y; yy++ )
N			{
N				for( xx = x; xx < 26 + x; xx++ )
N				{
N					color = gImage_flappybird_bird_d[((yy-y)*26+(xx-x))*2+1];
N					color <<= 8;
N					color = color + gImage_flappybird_bird_d[((yy-y)*26+(xx-x))*2];
N					R = color & 0xf800;
N					R >>= 11;
N					G = color & 0x07e0;
N					G >>= 5;
N					B = color & 0x001f;
N					if((B - R) > 7)
N						;
N					else
N						FlappyBird_Frame_DrawPoint(xx,yy,color);
N				}
N			}
N		}
N		break;
N		case 'f':
N		{
N			for( yy = y; yy < 26 + y; yy++ )
N			{
N				for( xx = x; xx < 18 + x; xx++ )
N				{
N					color = gImage_flappybird_bird_m[((17-(xx-x))*26+(yy-y))*2+1];
N					color <<= 8;
N					color = color + gImage_flappybird_bird_m[((17-(xx-x))*26+(yy-y))*2];
N					R = color & 0xf800;
N					R >>= 11;
N					G = color & 0x07e0;
N					G >>= 5;
N					B = color & 0x001f;
N					if((B - R) > 7)
N						;
N					else
N						FlappyBird_Frame_DrawPoint(xx,yy,color);
N				}
N			}
N		}
N		break;
N		default:
N			break;
N	}
N}
N
Nvoid FlappyBird_Frame_DrawBird_Play( u16 x, u16 y, u8 mode )
N{
N	u16 xx,yy;
N	if( 0 != l_x || 0 != l_y )
N	{
N		for( yy = l_y; yy < l_y+18; yy++ )
N		{
N			for( xx = l_x; xx < l_x+26; xx++ )
N			{
N				FlappyBird_Frame_DrawPoint(xx,yy,FlappyBird_Bird_Buff[yy-l_y][xx-l_x]);
N			}
N		}
N	}
N	for( yy = y; yy < y+18; yy++ )
N	{
N		for( xx = x; xx < x+26; xx++ )
N		{
N			FlappyBird_Bird_Buff[yy-y][xx-x] = FlappyBird_Frame[yy][xx];
N		}
N	}
N	FlappyBird_Frame_DrawBird(x,y,mode);
N	l_x = x;
N	l_y = y;
N}
N
N//void FlappyBird_Frame_DrawBird_test( u16 x, u16 y , u8 ang )////旋转函数测试不成功,矩阵操作
N//{
N//	int xx,yy;
N//	int xx_t,yy_t;
N//	double temp;
N//	u16 color;
N//	int R,G,B;
N//			for( yy = y; yy < 18 + y; yy++ )
N//			{
N//				for( xx = x; xx < 26 + x; xx++ )
N//				{
N//					color = gImage_flappybird_bird_m[((yy-y)*26+(xx-x))*2+1];
N//					color <<= 8;
N//					color = color + gImage_flappybird_bird_m[((yy-y)*26+(xx-x))*2];
N//					R = color & 0xf800;
N//					R >>= 11;
N//					G = color & 0x07e0;
N//					G >>= 5;
N//					B = color & 0x001f;
N//					if((B - R) > 7)
N//						;
N//					else
N//					{
N//						temp = (double)(xx-x)*cos((double)(ang)) + (double)(yy-y)*sin((double)(ang));
N//						xx_t = (int)(temp)+xx;
N//						temp = (double)(yy-y)*cos((double)(ang)) - (double)(xx-x)*sin((double)(ang));
N//						yy_t = (int)(temp)+yy;
N//						FlappyBird_Frame_DrawPoint(xx_t,yy_t,color);
N//					}
N//				}
N//			}
N//}
Nu16 FlappyBird_Frame_MixColor(u16 color_1,u16 color_2,u8 percent)//进行帧混色操作,0-100混色等级
N{
N	u16 R_1,R_2;
N	u16 G_1,G_2;
N	u16 B_1,B_2;
N	u16 R_t,G_t,B_t;
N	if( percent > 100 )
N	{
N		;
N	}
N	else
N	{
N		R_1 = color_1 & 0xf800;
N		R_1 >>= 11;
N		G_1 = color_1 & 0x07e0;
N		G_1 >>= 5;
N		B_1 = color_1 & 0x001f;
N		
N		R_2 = color_2 & 0xf800;
N		R_2 >>= 11;
N		G_2 = color_2 & 0x07e0;
N		G_2 >>= 5;
N		B_2 = color_2 & 0x001f;
N		
N		R_t = R_1*percent/100 + R_2*(100-percent)/100;
N		G_t = G_1*percent/100 + G_2*(100-percent)/100;
N		B_t = B_1*percent/100 + B_2*(100-percent)/100;
N		
N		return LCD_DecToRGB((u8)R_t,(u8)G_t,(u8)B_t);
N	}
N	return 0xfe00;
N}
N
Nu16 FlappyBird_Frame_IntensityControl(u16 color,u8 percent,u8 mode) //调整亮度,0模式是调暗,1模式是调亮
N{
N	switch(mode)
N	{
N		case 0:
N			return FlappyBird_Frame_MixColor(color,0x0000,percent);
N		case 1:
N			return FlappyBird_Frame_MixColor(color,0xffff,percent);
N		default:
N			return 0xfe00;
N	}
N	
N}
N
Nvoid FlappyBird_Frame_AllIntensityControl_1( u8 percent, u8 mode )
N{
N	u16 x,y;
N	for( y = 0; y < 320; y++ )
N	{
N		for( x = 0; x < 240; x++ )
N		{
N			FlappyBird_Frame[y][x] = FlappyBird_Frame_IntensityControl(FlappyBird_Frame[y][x],percent,mode);
N		}
N	}
N}
N
Nvoid FlappyBird_Frame_AllIntensityControl( u8 percent, u8 mode )
N{
N	LCD_BLPWM_VAL= percent*2;
X	((TIM_TypeDef *) ((((u32)0x40000000) + 0x10000) + 0x3400))->CCR2= percent*2;
N}
N
Nvoid FlappyBird_Frame_DrawTag( u16 x, u16 y  )
N{
N		u16 color,xx = x,yy = y;
N		int R,G,B;
N		for( yy = y; yy < 84 + y; yy++ )
N		{
N			for( xx = x; xx < 95 + x; xx++ )
N			{
N				color = gImage_flappybird_tag[((yy-y)*95+(xx-x))*2+1];
N				color <<= 8;
N				color = color + gImage_flappybird_tag[((yy-y)*95+(xx-x))*2];
N				R = color & 0xf800;
N				R >>= 11;
N				G = color & 0x07e0;
N				G >>= 5;
N				B = color & 0x001f;
N				if((B - R) > 7)
N					;
N				else
N					FlappyBird_Frame_DrawPoint(xx,yy,color);
N			}
N		}
N}
N
Nvoid FlappyBird_Frame_DrawGetStart( u16 x, u16 y )
N{
N		u16 color,xx = x,yy = y;
N		int R,G,B;
N		for( yy = y; yy < 35 + y; yy++ )
N		{
N			for( xx = x; xx < 129 + x; xx++ )
N			{
N				color = gImage_flappybird_getstart[((yy-y)*129+(xx-x))*2+1];
N				color <<= 8;
N				color = color + gImage_flappybird_getstart[((yy-y)*129+(xx-x))*2];
N				R = color & 0xf800;
N				R >>= 11;
N				G = color & 0x07e0;
N				G >>= 5;
N				B = color & 0x001f;
N				if((B - R) > 7)
N					;
N				else
N					FlappyBird_Frame_DrawPoint(xx,yy,color);
N			}
N		}
N}
N
Nvoid FlappyBird_Frame_DrawColumn_bottom( u16 x, u16 y, u8 mode, u8 column )
N{
N	
N		u16 color,xx = x,yy = y;
N		int R,G,B;
N		if( 0 == mode )
N		{
N			for( yy = y; yy < 21 + y; yy++ )
N			{
N				for( xx = x; xx < 39 + x; xx++ )
N				{
N					color = gImage_flappybird_column_bottom[((yy-y)*39+(xx-x))*2+1];
N					color <<= 8;
N					color = color + gImage_flappybird_column_bottom[((yy-y)*39+(xx-x))*2];
N					R = color & 0xf800;
N					R >>= 11;
N					G = color & 0x07e0;
N					G >>= 5;
N					B = color & 0x001f;
N					if((B - R) > 7)
N						;
N					else
N						FlappyBird_column_Buff[column][yy][xx] = color;
N				}
N			}
N		}
N		else
N		{
N			for( yy = y + 20; yy >= y; yy-- )
N			{
N				for( xx = x; xx < 39 + x; xx++ )
N				{
N					color = gImage_flappybird_column_bottom[((yy-y)*39+(xx-x))*2+1];
N					color <<= 8;
N					color = color + gImage_flappybird_column_bottom[((yy-y)*39+(xx-x))*2];
N					R = color & 0xf800;
N					R >>= 11;
N					G = color & 0x07e0;
N					G >>= 5;
N					B = color & 0x001f;
N					if((B - R) > 7)
N						;
N					else
N						FlappyBird_column_Buff[column][2*y+20-yy][xx] = color;
N				}
N			}
N		}
N}
N
Nvoid FlappyBird_Frame_DrawColumn_middle( u16 x, u16 y, u8 column )
N{
N	u16 color,xx = x,yy = y;
N	int R,G,B;
N	for( yy = y; yy < y + 7; yy++ )
N	{
N		for( xx = x; xx < 35 + x; xx++ )
N		{
N			color = gImage_flappybird_column_middle[((yy-y)*35+(xx-x))*2+1];
N			color <<= 8;
N			color = color + gImage_flappybird_column_middle[((yy-y)*35+(xx-x))*2];
N			R = color & 0xf800;
N			R >>= 11;
N			G = color & 0x07e0;
N			G >>= 5;
N			B = color & 0x001f;
N			if((B - R) > 7)
N				;
N			else
N				FlappyBird_column_Buff[column][yy][xx] = color;
N		}
N	}
N}
N
Nvoid FlappyBird_Frame_DrawColumn( int x, u16 y, u8 level, u8 column )//level指上层Column_middle个数,范围是0-21
N{
N	u16 i,yy;
N	int xx;
N	for( i = 0; i < level; i++ )
N	{
N		FlappyBird_Frame_DrawColumn_middle(2,i*7,column);
N	}
N	
N	FlappyBird_Frame_DrawColumn_bottom(0,i*7,0,column);
N	
N	FlappyBird_Frame_DrawColumn_bottom(0,i*7+89,1,column);
N	
N	for( i = 0; i < 21 - level; i++ )
N	{
N		FlappyBird_Frame_DrawColumn_middle(2,110+i*7+level*7,column);
N	}
N	if(x > -42 && x < 0)
N	{
N		for( yy = y; yy < 259 + y; yy++ )
N		{
N			for( xx = -x; xx < 39; xx++ )
N			{
N				if(FlappyBird_column_Buff[column][yy-y][xx]!=0xfe)
N				{
N					FlappyBird_Frame_DrawPoint(xx+x,yy,FlappyBird_column_Buff[column][yy-y][xx]);
N				}
N			}
N		}
N	}
N	else
N	{
N		if(x > 201 && x < 239)
N		{
N			for( yy = y; yy < 259 + y; yy++ )
N			{
N				for( xx = x; xx < 240; xx++ )
N				{
N					if(FlappyBird_column_Buff[column][yy-y][xx-x]!=0xfe)
N						FlappyBird_Frame_DrawPoint(xx,yy,FlappyBird_column_Buff[column][yy-y][xx-x]);
N				}
N			}
N		}
N		else if(x < 201 && x > 0)
N		{
N			for( yy = y; yy < 259 + y; yy++ )
N			{
N				for( xx = x; xx < 39 + x; xx++ )
N				{
N					FlappyBird_Frame_DrawPoint(xx,yy,FlappyBird_column_Buff[column][yy-y][xx-x]);
N				}
N			}
N		}
N	}
N
N}
N
Nvoid FlappyBird_Frame_DrawColumn_Play( int x, u16 y, u8 level, u8 column )
N{
N	u16 xx,yy;
N	if( hide[column] )
N	{
N		for( yy = l_y_c[column]; yy < l_y_c[column] + 259; yy++ )
N		{
N			for( xx = l_x_c[column]; xx < l_x_c[column] + 39; xx++ )
N			{
N				if( yy >= level*7+22 && yy <= level*7+88 )
N				{
N					;
N				}
N				else
N					FlappyBird_Frame_DrawPoint(xx,yy,FlappyBird_column_Buff_BG[column][yy-l_y_c[column]][xx-l_x_c[column]]);
N			}
N		}
N	}
N	if( x > 201 )
N	{
N		for( yy = y; yy < y+259; yy++ )
N		{
N			for( xx = 201; xx < 240; xx++ )
N			{
N				FlappyBird_column_Buff_BG[column][yy-y][xx-201] = FlappyBird_Frame[yy][xx];
N				FlappyBird_column_Buff[column][yy-y][xx-201] = 0xfe;
N			}
N		}
N	}
N	else
N	{
N		if( x < 0 )
N		{
N			for( yy = y; yy < y+259; yy++ )
N			{
N				for( xx = 0; xx < 39; xx++ )
N				{
N					FlappyBird_column_Buff_BG[column][yy-y][xx] = FlappyBird_Frame[yy][xx];
N					FlappyBird_column_Buff[column][yy-y][xx] = 0xfe;
N				}
N			}
N		}
N		else
N		{
N			for( yy = y; yy < y+259; yy++ )
N			{
N				for( xx = x; xx < x+39; xx++ )
N				{
N					FlappyBird_column_Buff_BG[column][yy-y][xx-x] = FlappyBird_Frame[yy][xx];
N					FlappyBird_column_Buff[column][yy-y][xx-x] = FlappyBird_Frame[yy][xx];
N				}
N			}
N		}
N	}
N	FlappyBird_Frame_DrawColumn(x,y,level,column);
N	if( x < 0 )
N	{
N		l_x_c[column] = 0;
N	}
N	else
N	{
N		if( x > 201 )
N		{
N			l_x_c[column] = 201;
N		}
N		else
N		{
N			l_x_c[column] = x;
N		}
N	}
N	l_y_c[column] = y;
N	hide[column] = 1;
N}
N
Nvoid FlappyBird_Frame_DrawScoreBoard( u16 x, u16 y )
N{
N		u16 color,xx = x,yy = y;
N		int R,G,B;
N		for( yy = y; yy < 80 + y; yy++ )
N		{
N			for( xx = x; xx < 160 + x; xx++ )
N			{
N				color = gImage_flappybird_score_board[((yy-y)*160+(xx-x))*2+1];
N				color <<= 8;
N				color = color + gImage_flappybird_score_board[((yy-y)*160+(xx-x))*2];
N				R = color & 0xf800;
N				R >>= 11;
N				G = color & 0x07e0;
N				G >>= 5;
N				B = color & 0x001f;
N				if((B - R) > 7)
N					;
N				else
N					FlappyBird_Frame_DrawPoint(xx,yy,color);
N			}
N		}
N}
N
Nvoid FlappyBird_Frame_DrawGameOver( u16 x, u16 y )
N{
N		u16 color,xx = x,yy = y;
N		int R,G,B;
N		for( yy = y; yy < 29 + y; yy++ )
N		{
N			for( xx = x; xx < 135 + x; xx++ )
N			{
N				color = gImage_flappybird_gameover[((yy-y)*135+(xx-x))*2+1];
N				color <<= 8;
N				color = color + gImage_flappybird_gameover[((yy-y)*135+(xx-x))*2];
N				R = color & 0xf800;
N				R >>= 11;
N				G = color & 0x07e0;
N				G >>= 5;
N				B = color & 0x001f;
N				if((B - R) > 7)
N					;
N				else
N					FlappyBird_Frame_DrawPoint(xx,yy,color);
N			}
N		}
N}
N
Nvoid FlappyBird_Frame_DrawColumn_Play_times( int x, u16 y, u8 level, u8 column, u8 times )
N{
N	u8 i;
N	
N	for( i =0; i < times; i++ )
N	{
N		FlappyBird_Frame_DrawColumn_Play(x-i,y,level,column);
N	}
N}
N
Nvoid FlappyBird_Stage_Start( void )
N{
N	u8 x;
N	u8 Start_Flag = 1;
N	u8 Key;
N	FlappyBird_Frame_Clear();
N	FlappyBird_Frame_Fill(0,257,239,257,0x41E7);
N	FlappyBird_Frame_Fill(0,258,239,258,0xEFB6);
N	FlappyBird_Frame_Fill(0,259,239,259,0xE7F1);
N	FlappyBird_Frame_Fill(0,273,239,273,0x5BE3);
N	FlappyBird_Frame_Fill(0,274,239,274,0xCD49);
N	FlappyBird_Frame_Fill(0,275,239,275,0xCD49);
N	FlappyBird_Frame_Fill(0,276,239,320,0xDEB2);
N	FlappyBird_DrawGreenBar(0,260,0x9F2B);
N	FlappyBird_Frame_DrawBGPic(0,187);
N	FlappyBird_Frame_DrawLogo(52,70);
N	FlappyBird_Frame_DrawButton(32,213,0);
N	FlappyBird_Frame_DrawButton(130,213,1);
N	Font_Num_DrawNum_Multi(110,20,difficult,0);
N	FlappyBird_DrawFrame();
N	BACK_COLOR = 0xDEB2;
N	FlappyBird_Frame_ShowString(55,276,200,16,16,"(c) Microbai 2014",WHITE);
X	FlappyBird_Frame_ShowString(55,276,200,16,16,"(c) Microbai 2014",0xFFFF);
N	while(Start_Flag)
N	{
N		Key=key_scan();
N		if( Key == KEY_UP )
N		{
N			difficult++;
N			if( difficult > 6 )
N			{
N				difficult = 6;
N			}
N			Font_Num_DrawNum_Multi(110,20,difficult,0);
N		}
N		if( Key == KEY_DOWN )
N		{
N			difficult--;
N			if( difficult < 0 )
N			{
N				difficult = 0;
N			}
N			Font_Num_DrawNum_Multi(110,20,difficult,0);
N		}
N		t_pad.scan(0); 		 
N		if(t_pad.penStat&TP_PRES_DOWN)			//触摸屏被按下
X		if(t_pad.penStat&0x80)			
N		{	
N			lcdDisplayOn();
N		 	if(t_pad.xoff<Lcd_Dev.width&&t_pad.yoff<Lcd_Dev.height)
N			{
N					if(t_pad.xoff >= 32 && t_pad.xoff <= 110 && t_pad.yoff <= 257  && t_pad.yoff >= 213)
N					{
N						FlappyBird_Frame_DrawBGPic(0,187);
N						FlappyBird_Frame_DrawButton(32,215,0);
N						FlappyBird_Frame_DrawButton(130,213,1);
N						FlappyBird_DrawFrame();
N						while(t_pad.penStat&TP_PRES_DOWN)
X						while(t_pad.penStat&0x80)
N						{
N							t_pad.scan(0);
N							FlappyBird_DrawGreenBar_Play(0,260,3);
N							FlappyBird_Frame_DrawBird_Play(106,bird_height,bird_mode);
N							FlappyBird_DrawFrame();
N							if( x%3 == 0 )
N								switch(bird_height)
N								{
N									case 119: 
N										bird_height = 120;
N										bird_mode = 'd';
N										ud_mode = 0;
N										break;
N									case 120: 
N										if( 0 == ud_mode )
N										{
N											bird_height = 121;
N											bird_mode = 'm';
N										}
N										else
N										{
N											bird_height = 119;
N											bird_mode = 'u';
N										}
N										break;
N									case 121: 
N										if( 0 == ud_mode )
N										{
N											bird_height = 122;
N											bird_mode = 'u';
N										}
N										else
N										{
N											bird_height = 120;
N											bird_mode = 'd';
N										}
N										break;
N									case 122: 
N										if( 0 == ud_mode )
N										{
N											bird_height = 123;
N											bird_mode = 'd';
N										}
N										else
N										{
N											bird_height = 121;
N											bird_mode = 'm';
N										}
N										break;
N									case 123: 
N										bird_height = 122;
N										bird_mode = 'u';
N										ud_mode = 1;
N										break;
N								}
N								x++;
N								if(x == 100)
N								{
N									x = 0;
N								}
N						}
N						FlappyBird_Frame_DrawBGPic(0,187);
N						FlappyBird_Frame_DrawButton(32,213,0);
N						FlappyBird_Frame_DrawButton(130,213,1);
N						FlappyBird_Frame_Fill(0,257,239,257,0x41E7);
N						FlappyBird_Frame_Fill(0,258,239,258,0xEFB6);
N						FlappyBird_Frame_Fill(0,259,239,259,0xE7F1);
N						FlappyBird_DrawFrame();
N						for( x = 1; x <= 10; x++)
N						{
N							if( x%3 == 0 )
N								switch(bird_height)
N								{
N									case 119: 
N										bird_height = 120;
N										bird_mode = 'd';
N										ud_mode = 0;
N										break;
N									case 120: 
N										if( 0 == ud_mode )
N										{
N											bird_height = 121;
N											bird_mode = 'm';
N										}
N										else
N										{
N											bird_height = 119;
N											bird_mode = 'u';
N										}
N										break;
N									case 121: 
N										if( 0 == ud_mode )
N										{
N											bird_height = 122;
N											bird_mode = 'u';
N										}
N										else
N										{
N											bird_height = 120;
N											bird_mode = 'd';
N										}
N										break;
N									case 122: 
N										if( 0 == ud_mode )
N										{
N											bird_height = 123;
N											bird_mode = 'd';
N										}
N										else
N										{
N											bird_height = 121;
N											bird_mode = 'm';
N										}
N										break;
N									case 123: 
N										bird_height = 122;
N										bird_mode = 'u';
N										ud_mode = 1;
N										break;
N								}
N							FlappyBird_DrawGreenBar_Play(0,260,3);
N							FlappyBird_Frame_DrawBird_Play(106,bird_height,bird_mode);
N							FlappyBird_Frame_AllIntensityControl(100-x*10,0);
N							FlappyBird_DrawFrame();
N						}
N
N						Start_Flag = 0;
N					}
N					if(t_pad.xoff >= 130 && t_pad.xoff <= 208 && t_pad.yoff <= 257  && t_pad.yoff >= 213)
N					{
N						FlappyBird_Frame_DrawBGPic(0,187);
N						FlappyBird_Frame_DrawButton(32,213,0);
N						FlappyBird_Frame_DrawButton(130,215,1);
N						FlappyBird_DrawFrame();
N						while(t_pad.penStat&TP_PRES_DOWN)
X						while(t_pad.penStat&0x80)
N						{
N							t_pad.scan(0);
N							FlappyBird_DrawGreenBar_Play(0,260,3);
N							FlappyBird_Frame_DrawBird_Play(106,bird_height,bird_mode);
N							FlappyBird_DrawFrame();
N							if( x%3 == 0 )
N								switch(bird_height)
N								{
N									case 119: 
N										bird_height = 120;
N										bird_mode = 'd';
N										ud_mode = 0;
N										break;
N									case 120: 
N										if( 0 == ud_mode )
N										{
N											bird_height = 121;
N											bird_mode = 'm';
N										}
N										else
N										{
N											bird_height = 119;
N											bird_mode = 'u';
N										}
N										break;
N									case 121: 
N										if( 0 == ud_mode )
N										{
N											bird_height = 122;
N											bird_mode = 'u';
N										}
N										else
N										{
N											bird_height = 120;
N											bird_mode = 'd';
N										}
N										break;
N									case 122: 
N										if( 0 == ud_mode )
N										{
N											bird_height = 123;
N											bird_mode = 'd';
N										}
N										else
N										{
N											bird_height = 121;
N											bird_mode = 'm';
N										}
N										break;
N									case 123: 
N										bird_height = 122;
N										bird_mode = 'u';
N										ud_mode = 1;
N										break;
N								}
N								x++;
N								if(x == 100)
N								{
N									x = 0;
N								}
N						}
N						FlappyBird_Frame_DrawBGPic(0,187);
N						FlappyBird_Frame_DrawButton(32,213,0);
N						FlappyBird_Frame_DrawButton(130,213,1);
N						FlappyBird_Frame_Fill(0,257,239,257,0x41E7);
N						FlappyBird_Frame_Fill(0,258,239,258,0xEFB6);
N						FlappyBird_Frame_Fill(0,259,239,259,0xE7F1);
N
N						FlappyBird_DrawFrame();
N						lcdDisplayOff();
N					}
N			}
N		}
N		if( Start_Flag != 0 )
N		{
N			FlappyBird_DrawGreenBar_Play(0,260,3);
N			FlappyBird_Frame_DrawBird_Play(106,bird_height,bird_mode);
N			FlappyBird_DrawFrame();
N			if( x%3 == 0 )
N				switch(bird_height)
N				{
N					case 119: 
N						bird_height = 120;
N						bird_mode = 'd';
N						ud_mode = 0;
N						break;
N					case 120: 
N						if( 0 == ud_mode )
N						{
N							bird_height = 121;
N							bird_mode = 'm';
N						}
N						else
N						{
N							bird_height = 119;
N							bird_mode = 'u';
N						}
N						break;
N					case 121: 
N						if( 0 == ud_mode )
N						{
N							bird_height = 122;
N							bird_mode = 'u';
N						}
N						else
N						{
N							bird_height = 120;
N							bird_mode = 'd';
N						}
N						break;
N					case 122: 
N						if( 0 == ud_mode )
N						{
N							bird_height = 123;
N							bird_mode = 'd';
N						}
N						else
N						{
N							bird_height = 121;
N							bird_mode = 'm';
N						}
N						break;
N					case 123: 
N						bird_height = 122;
N						bird_mode = 'u';
N						ud_mode = 1;
N						break;
N				}
N				x++;
N				if(x == 100)
N				{
N					x = 0;
N				}
N			}
N		}
N}
N
Nvoid FlappyBird_Stage_PP( void )
N{
N	u8 x;
N	u8 Start_Flag = 1;
N	bird_height = bird_height+30;
N	FlappyBird_Frame_Clear();
N	FlappyBird_Frame_Fill(0,257,239,257,0x41E7);
N	FlappyBird_Frame_Fill(0,258,239,258,0xEFB6);
N	FlappyBird_Frame_Fill(0,259,239,259,0xE7F1);
N	FlappyBird_Frame_Fill(0,273,239,273,0x5BE3);
N	FlappyBird_Frame_Fill(0,274,239,274,0xCD49);
N	FlappyBird_Frame_Fill(0,275,239,275,0xCD49);
N	FlappyBird_Frame_Fill(0,276,239,320,0xDEB2);
N	FlappyBird_DrawGreenBar(0,260,0x9F2B);
N	FlappyBird_Frame_DrawBGPic(0,187);
N	for( x = 1; x <= 10; x++)
N	{
N		if( x%3 == 0 )
N			switch(bird_height)
N			{
N				case 149: 
N					bird_height = 150;
N					bird_mode = 'd';
N					ud_mode = 0;
N					break;
N				case 150: 
N					if( 0 == ud_mode )
N					{
N						bird_height = 151;
N						bird_mode = 'm';
N					}
N					else
N					{
N						bird_height = 149;
N						bird_mode = 'u';
N					}
N					break;
N				case 151: 
N					if( 0 == ud_mode )
N					{
N						bird_height = 152;
N						bird_mode = 'u';
N					}
N					else
N					{
N						bird_height = 150;
N						bird_mode = 'd';
N					}
N					break;
N				case 152: 
N					if( 0 == ud_mode )
N					{
N						bird_height = 153;
N						bird_mode = 'd';
N					}
N					else
N					{
N						bird_height = 151;
N						bird_mode = 'm';
N					}
N					break;
N				case 153: 
N					bird_height = 152;
N					bird_mode = 'u';
N					ud_mode = 1;
N					break;
N			}
N		FlappyBird_DrawGreenBar_Play(0,260,3);
N		FlappyBird_Frame_DrawBird_Play(57,bird_height,bird_mode);
N		FlappyBird_Frame_DrawGetStart(52,70);
N		FlappyBird_Frame_DrawTag(70,120);
N		FlappyBird_Frame_AllIntensityControl(x*20,0);
N		FlappyBird_DrawFrame();
N	}
N	while(Start_Flag)
N	{
N		t_pad.scan(0); 		 
N		if(t_pad.penStat&TP_PRES_DOWN)			//触摸屏被按下
X		if(t_pad.penStat&0x80)			
N		{	
N			Start_Flag = 0;
N		}
N		if(x > 10)
N		{
N			x = 0;
N		}
N		if(Start_Flag)
N		{
N			if( x%3 == 0 )
N				switch(bird_height)
N				{
N					case 149: 
N						bird_height = 150;
N						bird_mode = 'd';
N						ud_mode = 0;
N						break;
N					case 150: 
N						if( 0 == ud_mode )
N						{
N							bird_height = 151;
N							bird_mode = 'm';
N						}
N						else
N						{
N							bird_height = 149;
N							bird_mode = 'u';
N						}
N						break;
N					case 151: 
N						if( 0 == ud_mode )
N						{
N							bird_height = 152;
N							bird_mode = 'u';
N						}
N						else
N						{
N							bird_height = 150;
N							bird_mode = 'd';
N						}
N						break;
N					case 152: 
N						if( 0 == ud_mode )
N						{
N							bird_height = 153;
N							bird_mode = 'd';
N						}
N						else
N						{
N							bird_height = 151;
N							bird_mode = 'm';
N						}
N						break;
N					case 153: 
N						bird_height = 152;
N						bird_mode = 'u';
N						ud_mode = 1;
N						break;
N				}
N			FlappyBird_DrawGreenBar_Play(0,260,3);
N			FlappyBird_Frame_DrawBird_Play(57,bird_height,bird_mode);
N			FlappyBird_DrawFrame();
N			x++;
N		}
N	}
N	for( x = 1; x <= 10; x++ )
N	{
N		FlappyBird_Frame_AllIntensityControl(100-x*10,0);
N		_delay_ms(30);
N	}
N}
N
Nvoid FlappyBird_Stage_Play( void )
N{
N	int x;
N	int x_c[3];
N	u8 level;
N	u16 adcx;
N	
N	u8 Dead_Flag = 1;
N	clk_init(16);
N	//FSMC设置
N	FSMC_Bank1E->BWTR[6]|=2<<0; 	 
X	((FSMC_Bank1E_TypeDef *) (((u32)0xA0000000) + 0x0104))->BWTR[6]|=2<<0; 	 
N	FSMC_Bank1E->BWTR[6]|=3<<8;	 	 
X	((FSMC_Bank1E_TypeDef *) (((u32)0xA0000000) + 0x0104))->BWTR[6]|=3<<8;	 	 
N 	//SRAM设置
N	FSMC_Bank1->BTCR[5]|=6<<8;
X	((FSMC_Bank1_TypeDef *) (((u32)0xA0000000) + 0x0000))->BTCR[5]|=6<<8;
N	FlappyBird_Frame_Clear();
N	FlappyBird_Frame_Fill(0,257,239,257,0x41E7);
N	FlappyBird_Frame_Fill(0,258,239,258,0xEFB6);
N	FlappyBird_Frame_Fill(0,259,239,259,0xE7F1);
N	FlappyBird_Frame_Fill(0,273,239,273,0x5BE3);
N	FlappyBird_Frame_Fill(0,274,239,274,0xCD49);
N	FlappyBird_Frame_Fill(0,275,239,275,0xCD49);
N	FlappyBird_Frame_Fill(0,276,239,320,0xDEB2);
N	FlappyBird_DrawGreenBar(0,260,0x9F2B);
N	FlappyBird_Frame_DrawBGPic(0,187);
N	adcx=Get_Adc_Average(0x01,10);
N	srand((unsigned)adcx);
N	level = rand()%21; 
N	FlappyBird_Frame_DrawColumn_Play_times(239,0,level,0,1);
N	Font_Num_DrawNum_Multi(110,40,0,0);
N	FlappyBird_DrawFrame();
N	for( x = 1; x <= 10; x++ )
N	{
N		FlappyBird_Frame_AllIntensityControl(x*10,0);
N		_delay_ms(30);
N	}
N	for( x = 0; x<= 10; x++)
N	{
N			if( x%3 == 0 )
N			switch(bird_height)
N			{
N				case 149: 
N					bird_height = 150;
N					bird_mode = 'd';
N					ud_mode = 0;
N					break;
N				case 150: 
N					if( 0 == ud_mode )
N					{
N						bird_height = 151;
N						bird_mode = 'm';
N					}
N					else
N					{
N						bird_height = 149;
N						bird_mode = 'u';
N					}
N					break;
N				case 151: 
N					if( 0 == ud_mode )
N					{
N						bird_height = 152;
N						bird_mode = 'u';
N					}
N					else
N					{
N						bird_height = 150;
N						bird_mode = 'd';
N					}
N					break;
N				case 152: 
N					if( 0 == ud_mode )
N					{
N						bird_height = 153;
N						bird_mode = 'd';
N					}
N					else
N					{
N						bird_height = 151;
N						bird_mode = 'm';
N					}
N					break;
N				case 153: 
N					bird_height = 152;
N					bird_mode = 'u';
N					ud_mode = 1;
N					break;
N			}
N		FlappyBird_DrawGreenBar_Play(0,260,3);
N		FlappyBird_Frame_DrawBird_Play(57,bird_height,bird_mode);
N		FlappyBird_DrawFrame();
N		}
N		x = 0;
N		x_c[0] = 236;
N		while(Dead_Flag)
N		{
N			t_pad.scan(0); 		 
N			if(t_pad.penStat&TP_PRES_DOWN)			//触摸屏被按下
X			if(t_pad.penStat&0x80)			
N			{
N				FlappyBird_Frame_DrawBird_Play(57,bird_height,'u');
N				bird_height = bird_height - 6 - difficult;
N				bird_mode = 'd';
N				FlappyBird_DrawGreenBar_Play(0,260,3);
N				
N				if(bird_height < 0)
N				{
N					bird_height = 0;
N				}
N				
N				FlappyBird_Frame_DrawColumn_Play_times(x_c[0],0,level,0,1);
N				if( x_c[0] >= 18 && x_c[0] <= 83)
N				{
N					if(!((bird_height > 7*level+22) && (bird_height < 7*level+71)))
N					{
N						Dead_Flag = 0;
N					}
N					else if( 0 == score_lock )
N					{
N						score_lock = 1;
N						score ++;
N					}
N				}
N				Font_Num_DrawNum_Multi(110,40,score,0);
N				FlappyBird_DrawFrame();
N				x_c[0] = x_c[0] - 3;
N				if(x_c[0] < -42)
N				{
N					adcx=Get_Adc_Average(0x01,10);
N					srand((unsigned)adcx);
N					level = rand()%21; 
N					x_c[0] = 239;
N					score_lock = 0;
N				}	
N			}
N			else if(bird_height < 239 && bird_mode != 'f' )
N			{
N				bird_mode = 'm';
N				bird_height = bird_height + 6 + difficult;
N				if(bird_height > 238)
N				{
N					bird_height = 231;
N					bird_mode = 'f';
N					Dead_Flag = 0;
N				}
N			}
N			if(bird_mode != 'f')
N			FlappyBird_DrawGreenBar_Play(0,260,3);
N			FlappyBird_Frame_DrawBird_Play(bird_wide,bird_height,bird_mode);
N			FlappyBird_Frame_DrawColumn_Play_times(x_c[0],0,level,0,1);
N			if( x_c[0] >= 18 && x_c[0] <= 83)
N			{
N				if(!((bird_height > 7*level+22) && (bird_height < 7*level+71)))
N				{
N					Dead_Flag = 0;
N				}
N				else if( 0 == score_lock )
N				{
N					score_lock = 1;
N					score ++;
N				}
N			}
N			Font_Num_DrawNum_Multi(110,40,score,0);
N			FlappyBird_DrawFrame();
N			x_c[0] = x_c[0] - 3;
N			if(x_c[0] < -42)
N			{
N				adcx=Get_Adc_Average(0x01,10);
N				srand((unsigned)adcx);
N				level = rand()%21; 
N				x_c[0] = 239;
N				score_lock = 0;
N				
N			}	
N		}
N	
N}
N
Nvoid FlappyBird_Stage_Over( void )
N{
N	u16 i,best_score;
N	u8 Over_Flag = 1,AT24CXX_FLAG;
N	u8 x;
N	clk_init(9);
N	FSMC_SRAM_init();
N	DMA_Init();
N	FlappyBird_Frame_DrawGameOver(52,60);
N	FlappyBird_Frame_DrawScoreBoard(40,110);
N	FlappyBird_Frame_DrawButton(32,213,0);
N	FlappyBird_Frame_DrawButton(130,213,1);
N	FlappyBird_DrawFrame();
N	AT24CXX_FLAG = (u8)AT24CXX_ReadLenByte(132,1);
N	if( AT24CXX_FLAG != 0x55 )
N	{
N		AT24CXX_WriteLenByte(112,(u32)0x0000,2);
N		AT24CXX_WriteLenByte(132,(u32)0x55,1);
N	}
N	best_score = (u16)AT24CXX_ReadLenByte(112,2);
N	if( score > best_score )
N	{
N		AT24CXX_WriteLenByte(112,(u32)score,2);
N	}
N	
N	for( i = 0; i <= ((score)> (best_score) ? (score):(best_score)); i++ )
N	{
N		if( i <= score )
N		{
N			Font_Num_DrawNum_Multi(175,132,i,1);
N		}
N		Font_Num_DrawNum_Multi(175,162,i,1);
N		FlappyBird_DrawFrame();
N		_delay_ms(30);
N	}
N	score = 0;
N	
N	while(Over_Flag)
N	{
N		t_pad.scan(0);
N		if(t_pad.penStat&TP_PRES_DOWN)			//触摸屏被按下
X		if(t_pad.penStat&0x80)			
N		{	
N			lcdDisplayOn();
N		 	if(t_pad.xoff<Lcd_Dev.width&&t_pad.yoff<Lcd_Dev.height)
N			{
N					if(t_pad.xoff >= 32 && t_pad.xoff <= 110 && t_pad.yoff <= 257  && t_pad.yoff >= 213)
N					{
N						FlappyBird_Frame_DrawButton(32,215,0);
N						FlappyBird_Frame_DrawButton(130,213,1);
N						while(t_pad.penStat&TP_PRES_DOWN)
X						while(t_pad.penStat&0x80)
N						{
N							t_pad.scan(0);
N							for( x = 1; x <= 10; x++)
N							{
N								FlappyBird_Frame_AllIntensityControl(100-x*10,0);
N								_delay_ms(30);
N							}
N
N							Over_Flag = 0;
N						}
N					}
N					if(t_pad.xoff >= 130 && t_pad.xoff <= 208 && t_pad.yoff <= 257  && t_pad.yoff >= 213)
N					{
N						FlappyBird_Frame_Fill(0,257,239,257,0x41E7);
N						FlappyBird_Frame_Fill(0,258,239,258,0xEFB6);
N						FlappyBird_Frame_Fill(0,259,239,259,0xE7F1);
N						FlappyBird_Frame_DrawButton(32,213,0);
N						FlappyBird_Frame_DrawButton(130,215,1);
N						FlappyBird_DrawFrame();
N						while(t_pad.penStat&TP_PRES_DOWN)
X						while(t_pad.penStat&0x80)
N						{
N							t_pad.scan(0);
N							lcdDisplayOff();
N						}
N					}
N			}
N		}
N		FlappyBird_Frame_DrawButton(32,213,0);
N		FlappyBird_Frame_DrawButton(130,213,1);
N		ud_mode = 0;
N		bird_mode = 'u';
N		bird_height = 119;
N		bird_wide = 57;
N		score_lock = 0;
N		l_x = 0;
N		l_y = 0;
N		hide[0] = 0;
N		FlappyBird_DrawFrame();
N	}
N	
N}
N
N//==================================================================================================================
N
N
Nvoid FlappyBird_DrawFrame(void)
N{
N	u16 i,j,tmp;
N	for(i = 0;i < 480;i++)
N		for(j = 0;j < 320;j++)
N		{
N			tmp = FlappyBird_Frame[i][j]; 
N			FlappyBird_Frame[i][j] = ((tmp&0x1f)<<11) + (tmp&0x07e0) + ((tmp&0xf800)>>11);
N		}
N	lcdSetWindow(0,0,320,480);
N	DMA_Enable();
N}
N
N
