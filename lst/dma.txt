; generated by ARM C/C++ Compiler, 5.03 [Build 24]
; commandline ArmCC [--list --debug -c --asm --interleave -o.\obj\dma.o --asm_dir=.\lst\ --list_dir=.\lst\ --depend=.\obj\dma.d --cpu=Cortex-M3 --apcs=interwork -O0 -I.\core -I.\devices -I.\app -I.\boot -I.\app\RES\Num -I.\app\RES\Pic -I"D:\Program Files\Keil\ARM\RV31\INC" -I"D:\Program Files\Keil\ARM\CMSIS\Include" -I"D:\Program Files\Keil\ARM\Inc\ST\STM32F10x" --omf_browse=.\obj\dma.crf devices\dma.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                          REQUIRE _printf_sizespec
                          REQUIRE _printf_percent
                          REQUIRE _printf_d
                          REQUIRE _printf_int_dec
                  DMA_Init PROC
;;;11     //配置DMA
;;;12     void DMA_Init(void)
000000  b510              PUSH     {r4,lr}
;;;13     {
;;;14     	//开启DMA1时钟
;;;15     	RCC->AHBENR |= 1<<1;
000002  4869              LDR      r0,|L1.424|
000004  6940              LDR      r0,[r0,#0x14]
000006  f0400002          ORR      r0,r0,#2
00000a  4967              LDR      r1,|L1.424|
00000c  6148              STR      r0,[r1,#0x14]
;;;16     	//等待时钟稳定
;;;17     	_delay_ms(5);
00000e  2005              MOVS     r0,#5
000010  f7fffffe          BL       _delay_ms
;;;18     	
;;;19     	//设置DMA1的外设地址与存储器地址
;;;20     	DMA2_Channel5->CPAR = (u32)FlappyBird_Frame;
000014  4865              LDR      r0,|L1.428|
000016  4966              LDR      r1,|L1.432|
000018  6008              STR      r0,[r1,#0]
;;;21     	DMA2_Channel5->CMAR =(u32)0X6C000800;
00001a  4866              LDR      r0,|L1.436|
00001c  1d09              ADDS     r1,r1,#4
00001e  6008              STR      r0,[r1,#0]
;;;22     	
;;;23     	//复位
;;;24     	DMA2_Channel5->CCR = 0x00000000;
000020  2000              MOVS     r0,#0
000022  4963              LDR      r1,|L1.432|
000024  3908              SUBS     r1,r1,#8
000026  6008              STR      r0,[r1,#0]
;;;25     	
;;;26     	/* * * * * * 
;;;27     	*从存储器读
;;;28     	*普通模式
;;;29     	*外设地址非增量模式
;;;30     	*存储器增量模式
;;;31     	*外设数据宽度为16位
;;;32     	*存储器数据宽度为16位
;;;33     	*中等优先级
;;;34     	*非存储器到存储器模式
;;;35     	* * * * * * */
;;;36     	DMA2_Channel5->CCR |= 0<<4;
000028  4608              MOV      r0,r1
00002a  6800              LDR      r0,[r0,#0]
00002c  6008              STR      r0,[r1,#0]
;;;37     	DMA2_Channel5->CCR |= 0<<5;
00002e  4608              MOV      r0,r1
000030  6800              LDR      r0,[r0,#0]
000032  6008              STR      r0,[r1,#0]
;;;38     	DMA2_Channel5->CCR |= 1<<6;
000034  4608              MOV      r0,r1
000036  6800              LDR      r0,[r0,#0]
000038  f0400040          ORR      r0,r0,#0x40
00003c  6008              STR      r0,[r1,#0]
;;;39     	DMA2_Channel5->CCR |= 0<<7;
00003e  4608              MOV      r0,r1
000040  6800              LDR      r0,[r0,#0]
000042  6008              STR      r0,[r1,#0]
;;;40     	DMA2_Channel5->CCR |= 1<<8;
000044  4608              MOV      r0,r1
000046  6800              LDR      r0,[r0,#0]
000048  f4407080          ORR      r0,r0,#0x100
00004c  6008              STR      r0,[r1,#0]
;;;41     	DMA2_Channel5->CCR |= 1<<10;
00004e  4608              MOV      r0,r1
000050  6800              LDR      r0,[r0,#0]
000052  f4406080          ORR      r0,r0,#0x400
000056  6008              STR      r0,[r1,#0]
;;;42     	DMA2_Channel5->CCR |= 1<<12;
000058  4608              MOV      r0,r1
00005a  6800              LDR      r0,[r0,#0]
00005c  f4405080          ORR      r0,r0,#0x1000
000060  6008              STR      r0,[r1,#0]
;;;43     	DMA2_Channel5->CCR |= 1<<14;
000062  4608              MOV      r0,r1
000064  6800              LDR      r0,[r0,#0]
000066  f4404080          ORR      r0,r0,#0x4000
00006a  6008              STR      r0,[r1,#0]
;;;44     	
;;;45     }
00006c  bd10              POP      {r4,pc}
;;;46     
                          ENDP

                  DMA_LCD PROC
;;;47     
;;;48     void DMA_LCD(void)
00006e  b510              PUSH     {r4,lr}
;;;49     {
;;;50     	DMA2_Channel5->CCR &= ~(1<<0);
000070  484f              LDR      r0,|L1.432|
000072  3808              SUBS     r0,r0,#8
000074  6800              LDR      r0,[r0,#0]
000076  f0200001          BIC      r0,r0,#1
00007a  494d              LDR      r1,|L1.432|
00007c  3908              SUBS     r1,r1,#8
00007e  6008              STR      r0,[r1,#0]
;;;51     	DMA2_Channel5->CPAR = (u32)FlappyBird_Frame[160];
000080  484d              LDR      r0,|L1.440|
000082  494b              LDR      r1,|L1.432|
000084  6008              STR      r0,[r1,#0]
;;;52     	DMA2_Channel5->CNDTR = 153600;
000086  f44f3016          MOV      r0,#0x25800
00008a  1f09              SUBS     r1,r1,#4
00008c  6008              STR      r0,[r1,#0]
;;;53     	printf("| LEN = %ld|\r\n",DMA2_LCD_LEN);
00008e  484b              LDR      r0,|L1.444|
000090  6801              LDR      r1,[r0,#0]  ; DMA2_LCD_LEN
000092  a04b              ADR      r0,|L1.448|
000094  f7fffffe          BL       __2printf
;;;54     	DMA2_Channel5->CCR |= 1<<0;
000098  4845              LDR      r0,|L1.432|
00009a  3808              SUBS     r0,r0,#8
00009c  6800              LDR      r0,[r0,#0]
00009e  f0400001          ORR      r0,r0,#1
0000a2  4943              LDR      r1,|L1.432|
0000a4  3908              SUBS     r1,r1,#8
0000a6  6008              STR      r0,[r1,#0]
;;;55     	printf("| DMA2_Channel5 = %ld|\r\n",DMA2_Channel5->CNDTR);
0000a8  1d08              ADDS     r0,r1,#4
0000aa  6801              LDR      r1,[r0,#0]
0000ac  a048              ADR      r0,|L1.464|
0000ae  f7fffffe          BL       __2printf
;;;56     	while(DMA2_Channel5->CNDTR != 0)
0000b2  e005              B        |L1.192|
                  |L1.180|
;;;57     		printf("| DMA2_Channel5 = %ld|\r\n",DMA2_Channel5->CNDTR);
0000b4  483e              LDR      r0,|L1.432|
0000b6  1f00              SUBS     r0,r0,#4
0000b8  6801              LDR      r1,[r0,#0]
0000ba  a045              ADR      r0,|L1.464|
0000bc  f7fffffe          BL       __2printf
                  |L1.192|
0000c0  483b              LDR      r0,|L1.432|
0000c2  1f00              SUBS     r0,r0,#4              ;56
0000c4  6800              LDR      r0,[r0,#0]            ;56
0000c6  2800              CMP      r0,#0                 ;56
0000c8  d1f4              BNE      |L1.180|
;;;58     }
0000ca  bd10              POP      {r4,pc}
;;;59     
                          ENDP

                  DMA_Enable PROC
;;;60     //使能DMA
;;;61     void DMA_Enable(void)
0000cc  4838              LDR      r0,|L1.432|
;;;62     {
;;;63     	//第一次DMA传输
;;;64     	//关闭DMA传输
;;;65     	DMA2_Channel5->CCR &= ~(1<<0);
0000ce  3808              SUBS     r0,r0,#8
0000d0  6800              LDR      r0,[r0,#0]
0000d2  f0200001          BIC      r0,r0,#1
0000d6  4936              LDR      r1,|L1.432|
0000d8  3908              SUBS     r1,r1,#8
0000da  6008              STR      r0,[r1,#0]
;;;66     	//清除上次的传输完成标记
;;;67     //	DMA2->IFCR = 1<<17;
;;;68     	//改变存储器地址
;;;69     	DMA2_Channel5->CPAR = (u32)FlappyBird_Frame[0];
0000dc  4833              LDR      r0,|L1.428|
0000de  4934              LDR      r1,|L1.432|
0000e0  6008              STR      r0,[r1,#0]
;;;70     	//指定传输长度
;;;71     	DMA2_Channel5->CNDTR = DMA1_MEM_LEN;
0000e2  4842              LDR      r0,|L1.492|
0000e4  6800              LDR      r0,[r0,#0]  ; DMA1_MEM_LEN
0000e6  1f09              SUBS     r1,r1,#4
0000e8  6008              STR      r0,[r1,#0]
;;;72     	//开启DMA传输
;;;73     	DMA2_Channel5->CCR |= 1<<0;
0000ea  1f08              SUBS     r0,r1,#4
0000ec  6800              LDR      r0,[r0,#0]
0000ee  f0400001          ORR      r0,r0,#1
0000f2  1f09              SUBS     r1,r1,#4
0000f4  6008              STR      r0,[r1,#0]
;;;74     //	_delay_ms(1);
;;;75     	//等待
;;;76     	while(DMA2_Channel5->CNDTR != 0);
0000f6  bf00              NOP      
                  |L1.248|
0000f8  482d              LDR      r0,|L1.432|
0000fa  1f00              SUBS     r0,r0,#4
0000fc  6800              LDR      r0,[r0,#0]
0000fe  2800              CMP      r0,#0
000100  d1fa              BNE      |L1.248|
;;;77     		/*
;;;78     	{
;;;79     		if(DMA2->ISR & 1<< 18)
;;;80     			printf("DMA_ONE going helf! 1/2!    ");
;;;81     		if(DMA2->ISR & 1<<19)
;;;82     			printf("DMA_ONE going error!    ");
;;;83     		if(DMA2->ISR & 1<<17)
;;;84     		{
;;;85     			printf("DMA_ONE going end!    ");
;;;86     			break;
;;;87     		}
;;;88     	}*/
;;;89     	
;;;90     	//while((DMA2->ISR & 1<<17) == 0);
;;;91     	
;;;92     	//第二次DMA传输
;;;93     	//清除上次的传输完成标记
;;;94     //	DMA2->IFCR = 1<<17;
;;;95     	DMA2_Channel5->CPAR = (u32)FlappyBird_Frame[120];
000102  483b              LDR      r0,|L1.496|
000104  492a              LDR      r1,|L1.432|
000106  6008              STR      r0,[r1,#0]
;;;96     	DMA2_Channel5->CCR &= ~(1<<0);
000108  4829              LDR      r0,|L1.432|
00010a  3808              SUBS     r0,r0,#8
00010c  6800              LDR      r0,[r0,#0]
00010e  f0200001          BIC      r0,r0,#1
000112  4927              LDR      r1,|L1.432|
000114  3908              SUBS     r1,r1,#8
000116  6008              STR      r0,[r1,#0]
;;;97     	DMA2_Channel5->CNDTR = DMA1_MEM_LEN;
000118  4834              LDR      r0,|L1.492|
00011a  6800              LDR      r0,[r0,#0]  ; DMA1_MEM_LEN
00011c  1d09              ADDS     r1,r1,#4
00011e  6008              STR      r0,[r1,#0]
;;;98     	DMA2_Channel5->CCR |= 1<<0;
000120  1f08              SUBS     r0,r1,#4
000122  6800              LDR      r0,[r0,#0]
000124  f0400001          ORR      r0,r0,#1
000128  1f09              SUBS     r1,r1,#4
00012a  6008              STR      r0,[r1,#0]
;;;99     //	_delay_ms(1);
;;;100    	//等待
;;;101    	while(DMA2_Channel5->CNDTR != 0);
00012c  bf00              NOP      
                  |L1.302|
00012e  4820              LDR      r0,|L1.432|
000130  1f00              SUBS     r0,r0,#4
000132  6800              LDR      r0,[r0,#0]
000134  2800              CMP      r0,#0
000136  d1fa              BNE      |L1.302|
;;;102    	
;;;103    	DMA2_Channel5->CPAR = (u32)FlappyBird_Frame[240];
000138  482e              LDR      r0,|L1.500|
00013a  491d              LDR      r1,|L1.432|
00013c  6008              STR      r0,[r1,#0]
;;;104    	DMA2_Channel5->CCR &= ~(1<<0);
00013e  481c              LDR      r0,|L1.432|
000140  3808              SUBS     r0,r0,#8
000142  6800              LDR      r0,[r0,#0]
000144  f0200001          BIC      r0,r0,#1
000148  4919              LDR      r1,|L1.432|
00014a  3908              SUBS     r1,r1,#8
00014c  6008              STR      r0,[r1,#0]
;;;105    	DMA2_Channel5->CNDTR = DMA1_MEM_LEN;
00014e  4827              LDR      r0,|L1.492|
000150  6800              LDR      r0,[r0,#0]  ; DMA1_MEM_LEN
000152  1d09              ADDS     r1,r1,#4
000154  6008              STR      r0,[r1,#0]
;;;106    	DMA2_Channel5->CCR |= 1<<0;
000156  1f08              SUBS     r0,r1,#4
000158  6800              LDR      r0,[r0,#0]
00015a  f0400001          ORR      r0,r0,#1
00015e  1f09              SUBS     r1,r1,#4
000160  6008              STR      r0,[r1,#0]
;;;107    //	_delay_ms(1);
;;;108    	//等待
;;;109    	while(DMA2_Channel5->CNDTR != 0);
000162  bf00              NOP      
                  |L1.356|
000164  4812              LDR      r0,|L1.432|
000166  1f00              SUBS     r0,r0,#4
000168  6800              LDR      r0,[r0,#0]
00016a  2800              CMP      r0,#0
00016c  d1fa              BNE      |L1.356|
;;;110    	
;;;111    	DMA2_Channel5->CPAR = (u32)FlappyBird_Frame[360];
00016e  4822              LDR      r0,|L1.504|
000170  490f              LDR      r1,|L1.432|
000172  6008              STR      r0,[r1,#0]
;;;112    	DMA2_Channel5->CCR &= ~(1<<0);
000174  480e              LDR      r0,|L1.432|
000176  3808              SUBS     r0,r0,#8
000178  6800              LDR      r0,[r0,#0]
00017a  f0200001          BIC      r0,r0,#1
00017e  490c              LDR      r1,|L1.432|
000180  3908              SUBS     r1,r1,#8
000182  6008              STR      r0,[r1,#0]
;;;113    	DMA2_Channel5->CNDTR = DMA1_MEM_LEN;
000184  4819              LDR      r0,|L1.492|
000186  6800              LDR      r0,[r0,#0]  ; DMA1_MEM_LEN
000188  1d09              ADDS     r1,r1,#4
00018a  6008              STR      r0,[r1,#0]
;;;114    	DMA2_Channel5->CCR |= 1<<0;
00018c  1f08              SUBS     r0,r1,#4
00018e  6800              LDR      r0,[r0,#0]
000190  f0400001          ORR      r0,r0,#1
000194  1f09              SUBS     r1,r1,#4
000196  6008              STR      r0,[r1,#0]
;;;115    //	_delay_ms(1);
;;;116    	//等待
;;;117    	while(DMA2_Channel5->CNDTR != 0);
000198  bf00              NOP      
                  |L1.410|
00019a  4805              LDR      r0,|L1.432|
00019c  1f00              SUBS     r0,r0,#4
00019e  6800              LDR      r0,[r0,#0]
0001a0  2800              CMP      r0,#0
0001a2  d1fa              BNE      |L1.410|
;;;118    	
;;;119    	/*
;;;120    	{
;;;121    		if(DMA2->ISR & 1<< 18)
;;;122    			printf("DMA_TWO going helf! 1/2!    ");
;;;123    		if(DMA2->ISR & 1<<19)
;;;124    			printf("DMA_TWO going error!    ");
;;;125    		if(DMA2->ISR & 1<<17)
;;;126    		{
;;;127    			printf("DMA_TWO going end!    ");
;;;128    			break;
;;;129    		}
;;;130    	}*/
;;;131    	//while((DMA2->ISR & 1<<17) == 0);
;;;132    	
;;;133    }
0001a4  4770              BX       lr
;;;134    
                          ENDP

0001a6  0000              DCW      0x0000
                  |L1.424|
                          DCD      0x40021000
                  |L1.428|
                          DCD      FlappyBird_Frame
                  |L1.432|
                          DCD      0x40020460
                  |L1.436|
                          DCD      0x6c000800
                  |L1.440|
                          DCD      FlappyBird_Frame+0x19000
                  |L1.444|
                          DCD      DMA2_LCD_LEN
                  |L1.448|
0001c0  7c204c45          DCB      "| LEN = %ld|\r\n",0
0001c4  4e203d20
0001c8  256c647c
0001cc  0d0a00  
0001cf  00                DCB      0
                  |L1.464|
0001d0  7c20444d          DCB      "| DMA2_Channel5 = %ld|\r\n",0
0001d4  41325f43
0001d8  68616e6e
0001dc  656c3520
0001e0  3d20256c
0001e4  647c0d0a
0001e8  00      
0001e9  00                DCB      0
0001ea  00                DCB      0
0001eb  00                DCB      0
                  |L1.492|
                          DCD      DMA1_MEM_LEN
                  |L1.496|
                          DCD      FlappyBird_Frame+0x12c00
                  |L1.500|
                          DCD      FlappyBird_Frame+0x25800
                  |L1.504|
                          DCD      FlappyBird_Frame+0x38400

                          AREA ||.data||, DATA, ALIGN=2

                  DMA1_MEM_LEN
                          DCD      0x00009600
                  DMA2_LCD_LEN
                          DCD      0x00025800
